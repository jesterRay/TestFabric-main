{"ast":null,"code":"'use strict';\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var selection = [];\n  var fullData = cd[0].trace;\n  var nodes = fullData._sankey.graph.nodes;\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.partOfGroup) continue; // Those are invisible\n\n    // Position of node's centroid\n    var pos = [(node.x0 + node.x1) / 2, (node.y0 + node.y1) / 2];\n\n    // Swap x and y if trace is vertical\n    if (fullData.orientation === 'v') pos.reverse();\n    if (selectionTester && selectionTester.contains(pos, false, i, searchInfo)) {\n      selection.push({\n        pointNumber: node.pointNumber\n        // TODO: add eventData\n      });\n    }\n  }\n  return selection;\n};","map":{"version":3,"names":["module","exports","selectPoints","searchInfo","selectionTester","cd","selection","fullData","trace","nodes","_sankey","graph","i","length","node","partOfGroup","pos","x0","x1","y0","y1","orientation","reverse","contains","push","pointNumber"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/sankey/select.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n    var cd = searchInfo.cd;\n    var selection = [];\n    var fullData = cd[0].trace;\n\n    var nodes = fullData._sankey.graph.nodes;\n\n    for(var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        if(node.partOfGroup) continue; // Those are invisible\n\n        // Position of node's centroid\n        var pos = [(node.x0 + node.x1) / 2, (node.y0 + node.y1) / 2];\n\n        // Swap x and y if trace is vertical\n        if(fullData.orientation === 'v') pos.reverse();\n\n        if(selectionTester && selectionTester.contains(pos, false, i, searchInfo)) {\n            selection.push({\n                pointNumber: node.pointNumber\n                // TODO: add eventData\n            });\n        }\n    }\n    return selection;\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAACC,UAAU,EAAEC,eAAe,EAAE;EAChE,IAAIC,EAAE,GAAGF,UAAU,CAACE,EAAE;EACtB,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,QAAQ,GAAGF,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK;EAE1B,IAAIC,KAAK,GAAGF,QAAQ,CAACG,OAAO,CAACC,KAAK,CAACF,KAAK;EAExC,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAClC,IAAIE,IAAI,GAAGL,KAAK,CAACG,CAAC,CAAC;IACnB,IAAGE,IAAI,CAACC,WAAW,EAAE,SAAS,CAAC;;IAE/B;IACA,IAAIC,GAAG,GAAG,CAAC,CAACF,IAAI,CAACG,EAAE,GAAGH,IAAI,CAACI,EAAE,IAAI,CAAC,EAAE,CAACJ,IAAI,CAACK,EAAE,GAAGL,IAAI,CAACM,EAAE,IAAI,CAAC,CAAC;;IAE5D;IACA,IAAGb,QAAQ,CAACc,WAAW,KAAK,GAAG,EAAEL,GAAG,CAACM,OAAO,CAAC,CAAC;IAE9C,IAAGlB,eAAe,IAAIA,eAAe,CAACmB,QAAQ,CAACP,GAAG,EAAE,KAAK,EAAEJ,CAAC,EAAET,UAAU,CAAC,EAAE;MACvEG,SAAS,CAACkB,IAAI,CAAC;QACXC,WAAW,EAAEX,IAAI,CAACW;QAClB;MACJ,CAAC,CAAC;IACN;EACJ;EACA,OAAOnB,SAAS;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}