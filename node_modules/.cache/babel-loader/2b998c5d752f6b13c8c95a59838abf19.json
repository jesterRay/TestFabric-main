{"ast":null,"code":"'use strict';\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar isosurfaceAttrs = require('../isosurface/attributes');\nvar surfaceAttrs = require('../surface/attributes');\nvar baseAttrs = require('../../plots/attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar attrs = module.exports = overrideAll(extendFlat({\n  x: isosurfaceAttrs.x,\n  y: isosurfaceAttrs.y,\n  z: isosurfaceAttrs.z,\n  value: isosurfaceAttrs.value,\n  isomin: isosurfaceAttrs.isomin,\n  isomax: isosurfaceAttrs.isomax,\n  surface: isosurfaceAttrs.surface,\n  spaceframe: {\n    show: {\n      valType: 'boolean',\n      dflt: false,\n      description: ['Displays/hides tetrahedron shapes between minimum and', 'maximum iso-values. Often useful when either caps or', 'surfaces are disabled or filled with values less than 1.'].join(' ')\n    },\n    fill: {\n      valType: 'number',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      description: ['Sets the fill ratio of the `spaceframe` elements. The default fill value', 'is 1 meaning that they are entirely shaded. Applying a `fill` ratio less', 'than one would allow the creation of openings parallel to the edges.'].join(' ')\n    }\n  },\n  slices: isosurfaceAttrs.slices,\n  caps: isosurfaceAttrs.caps,\n  text: isosurfaceAttrs.text,\n  hovertext: isosurfaceAttrs.hovertext,\n  xhoverformat: isosurfaceAttrs.xhoverformat,\n  yhoverformat: isosurfaceAttrs.yhoverformat,\n  zhoverformat: isosurfaceAttrs.zhoverformat,\n  valuehoverformat: isosurfaceAttrs.valuehoverformat,\n  hovertemplate: isosurfaceAttrs.hovertemplate\n}, colorScaleAttrs('', {\n  colorAttr: '`value`',\n  showScaleDflt: true,\n  editTypeOverride: 'calc'\n}), {\n  colorbar: isosurfaceAttrs.colorbar,\n  opacity: isosurfaceAttrs.opacity,\n  opacityscale: surfaceAttrs.opacityscale,\n  lightposition: isosurfaceAttrs.lightposition,\n  lighting: isosurfaceAttrs.lighting,\n  flatshading: isosurfaceAttrs.flatshading,\n  contour: isosurfaceAttrs.contour,\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo),\n  showlegend: extendFlat({}, baseAttrs.showlegend, {\n    dflt: false\n  })\n}), 'calc', 'nested');\nattrs.x.editType = attrs.y.editType = attrs.z.editType = attrs.value.editType = 'calc+clearAxisTypes';\nattrs.transforms = undefined;","map":{"version":3,"names":["colorScaleAttrs","require","isosurfaceAttrs","surfaceAttrs","baseAttrs","extendFlat","overrideAll","attrs","module","exports","x","y","z","value","isomin","isomax","surface","spaceframe","show","valType","dflt","description","join","fill","min","max","slices","caps","text","hovertext","xhoverformat","yhoverformat","zhoverformat","valuehoverformat","hovertemplate","colorAttr","showScaleDflt","editTypeOverride","colorbar","opacity","opacityscale","lightposition","lighting","flatshading","contour","hoverinfo","showlegend","editType","transforms","undefined"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/volume/attributes.js"],"sourcesContent":["'use strict';\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar isosurfaceAttrs = require('../isosurface/attributes');\nvar surfaceAttrs = require('../surface/attributes');\nvar baseAttrs = require('../../plots/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar attrs = module.exports = overrideAll(extendFlat({\n    x: isosurfaceAttrs.x,\n    y: isosurfaceAttrs.y,\n    z: isosurfaceAttrs.z,\n    value: isosurfaceAttrs.value,\n    isomin: isosurfaceAttrs.isomin,\n    isomax: isosurfaceAttrs.isomax,\n    surface: isosurfaceAttrs.surface,\n    spaceframe: {\n        show: {\n            valType: 'boolean',\n            dflt: false,\n            description: [\n                'Displays/hides tetrahedron shapes between minimum and',\n                'maximum iso-values. Often useful when either caps or',\n                'surfaces are disabled or filled with values less than 1.'\n            ].join(' ')\n        },\n        fill: {\n            valType: 'number',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            description: [\n                'Sets the fill ratio of the `spaceframe` elements. The default fill value',\n                'is 1 meaning that they are entirely shaded. Applying a `fill` ratio less',\n                'than one would allow the creation of openings parallel to the edges.'\n            ].join(' ')\n        }\n    },\n\n    slices: isosurfaceAttrs.slices,\n    caps: isosurfaceAttrs.caps,\n    text: isosurfaceAttrs.text,\n    hovertext: isosurfaceAttrs.hovertext,\n    xhoverformat: isosurfaceAttrs.xhoverformat,\n    yhoverformat: isosurfaceAttrs.yhoverformat,\n    zhoverformat: isosurfaceAttrs.zhoverformat,\n    valuehoverformat: isosurfaceAttrs.valuehoverformat,\n    hovertemplate: isosurfaceAttrs.hovertemplate\n},\n\ncolorScaleAttrs('', {\n    colorAttr: '`value`',\n    showScaleDflt: true,\n    editTypeOverride: 'calc'\n}), {\n\n    colorbar: isosurfaceAttrs.colorbar,\n    opacity: isosurfaceAttrs.opacity,\n    opacityscale: surfaceAttrs.opacityscale,\n\n    lightposition: isosurfaceAttrs.lightposition,\n    lighting: isosurfaceAttrs.lighting,\n    flatshading: isosurfaceAttrs.flatshading,\n    contour: isosurfaceAttrs.contour,\n\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo),\n    showlegend: extendFlat({}, baseAttrs.showlegend, {dflt: false})\n}), 'calc', 'nested');\n\nattrs.x.editType = attrs.y.editType = attrs.z.editType = attrs.value.editType = 'calc+clearAxisTypes';\nattrs.transforms = undefined;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}