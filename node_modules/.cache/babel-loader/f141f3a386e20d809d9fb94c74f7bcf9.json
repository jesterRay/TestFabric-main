{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians } from \"./math.js\";\nvar K = [[0.9986, -0.062], [1.0000, 0.0000], [0.9986, 0.0620], [0.9954, 0.1240], [0.9900, 0.1860], [0.9822, 0.2480], [0.9730, 0.3100], [0.9600, 0.3720], [0.9427, 0.4340], [0.9216, 0.4958], [0.8962, 0.5571], [0.8679, 0.6176], [0.8350, 0.6769], [0.7986, 0.7346], [0.7597, 0.7903], [0.7186, 0.8435], [0.6732, 0.8936], [0.6213, 0.9394], [0.5722, 0.9761], [0.5322, 1.0000]];\nK.forEach(function (d) {\n  d[1] *= 1.0144;\n});\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n    i0 = floor(i),\n    di = i - i0,\n    ax = (k = K[i0])[0],\n    ay = k[1],\n    bx = (k = K[++i0])[0],\n    by = k[1],\n    cx = (k = K[min(19, ++i0)])[0],\n    cy = k[1],\n    k;\n  return [lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)];\n}\nrobinsonRaw.invert = function (x, y) {\n  var yy = y / halfPi,\n    phi = yy * 90,\n    i = min(18, abs(phi / 5)),\n    i0 = max(0, floor(i));\n  do {\n    var ay = K[i0][1],\n      by = K[i0 + 1][1],\n      cy = K[min(19, i0 + 2)][1],\n      u = cy - ay,\n      v = cy - 2 * by + ay,\n      t = 2 * (abs(yy) - by) / u,\n      c = v / u,\n      di = t * (1 - c * t * (1 - 2 * c * t));\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50,\n        delta;\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n      break;\n    }\n  } while (--i0 >= 0);\n  var ax = K[i0][0],\n    bx = K[i0 + 1][0],\n    cx = K[min(19, i0 + 2)][0];\n  return [x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), phi * radians];\n};\nexport default function () {\n  return projection(robinsonRaw).scale(152.63);\n}","map":{"version":3,"names":["geoProjection","projection","abs","degrees","epsilon2","floor","halfPi","max","min","pi","radians","K","forEach","d","robinsonRaw","lambda","phi","i","i0","di","ax","k","ay","bx","by","cx","cy","invert","x","y","yy","u","v","t","c","j","delta","scale"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/d3-geo-projection/src/robinson.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians} from \"./math.js\";\n\nvar K = [\n  [0.9986, -0.062],\n  [1.0000, 0.0000],\n  [0.9986, 0.0620],\n  [0.9954, 0.1240],\n  [0.9900, 0.1860],\n  [0.9822, 0.2480],\n  [0.9730, 0.3100],\n  [0.9600, 0.3720],\n  [0.9427, 0.4340],\n  [0.9216, 0.4958],\n  [0.8962, 0.5571],\n  [0.8679, 0.6176],\n  [0.8350, 0.6769],\n  [0.7986, 0.7346],\n  [0.7597, 0.7903],\n  [0.7186, 0.8435],\n  [0.6732, 0.8936],\n  [0.6213, 0.9394],\n  [0.5722, 0.9761],\n  [0.5322, 1.0000]\n];\n\nK.forEach(function(d) {\n  d[1] *= 1.0144;\n});\n\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [\n    lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)\n  ];\n}\n\nrobinsonRaw.invert = function(x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50, delta;\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n      break;\n    }\n  } while (--i0 >= 0);\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [\n    x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    phi * radians\n  ];\n};\n\nexport default function() {\n  return projection(robinsonRaw)\n      .scale(152.63);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}