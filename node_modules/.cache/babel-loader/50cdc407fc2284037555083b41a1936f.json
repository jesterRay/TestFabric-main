{"ast":null,"code":"'use strict';\n\nvar tube2mesh = require('../../../stackgl_modules').gl_streamtube3d;\nvar createTubeMesh = tube2mesh.createTubeMesh;\nvar Lib = require('../../lib');\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\nvar axisName2scaleIndex = {\n  xaxis: 0,\n  yaxis: 1,\n  zaxis: 2\n};\nfunction Streamtube(scene, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.mesh = null;\n  this.data = null;\n}\nvar proto = Streamtube.prototype;\nproto.handlePick = function (selection) {\n  var sceneLayout = this.scene.fullSceneLayout;\n  var dataScale = this.scene.dataScale;\n  function fromDataScale(v, axisName) {\n    var ax = sceneLayout[axisName];\n    var scale = dataScale[axisName2scaleIndex[axisName]];\n    return ax.l2c(v) / scale;\n  }\n  if (selection.object === this.mesh) {\n    var pos = selection.data.position;\n    var uvx = selection.data.velocity;\n    selection.traceCoordinate = [fromDataScale(pos[0], 'xaxis'), fromDataScale(pos[1], 'yaxis'), fromDataScale(pos[2], 'zaxis'), fromDataScale(uvx[0], 'xaxis'), fromDataScale(uvx[1], 'yaxis'), fromDataScale(uvx[2], 'zaxis'),\n    // u/v/w norm\n    selection.data.intensity * this.data._normMax,\n    // divergence\n    selection.data.divergence];\n    selection.textLabel = this.data.hovertext || this.data.text;\n    return true;\n  }\n};\nfunction getDfltStartingPositions(vec) {\n  var len = vec.length;\n  var s;\n  if (len > 2) {\n    s = vec.slice(1, len - 1);\n  } else if (len === 2) {\n    s = [(vec[0] + vec[1]) / 2];\n  } else {\n    s = vec;\n  }\n  return s;\n}\nfunction getBoundPads(vec) {\n  var len = vec.length;\n  if (len === 1) {\n    return [0.5, 0.5];\n  } else {\n    return [vec[1] - vec[0], vec[len - 1] - vec[len - 2]];\n  }\n}\nfunction convert(scene, trace) {\n  var sceneLayout = scene.fullSceneLayout;\n  var dataScale = scene.dataScale;\n  var len = trace._len;\n  var tubeOpts = {};\n  function toDataCoords(arr, axisName) {\n    var ax = sceneLayout[axisName];\n    var scale = dataScale[axisName2scaleIndex[axisName]];\n    return Lib.simpleMap(arr, function (v) {\n      return ax.d2l(v) * scale;\n    });\n  }\n  tubeOpts.vectors = zip3(toDataCoords(trace._u, 'xaxis'), toDataCoords(trace._v, 'yaxis'), toDataCoords(trace._w, 'zaxis'), len);\n\n  // Over-specified mesh case, this would error in tube2mesh\n  if (!len) {\n    return {\n      positions: [],\n      cells: []\n    };\n  }\n  var meshx = toDataCoords(trace._Xs, 'xaxis');\n  var meshy = toDataCoords(trace._Ys, 'yaxis');\n  var meshz = toDataCoords(trace._Zs, 'zaxis');\n  tubeOpts.meshgrid = [meshx, meshy, meshz];\n  tubeOpts.gridFill = trace._gridFill;\n  var slen = trace._slen;\n  if (slen) {\n    tubeOpts.startingPositions = zip3(toDataCoords(trace._startsX, 'xaxis'), toDataCoords(trace._startsY, 'yaxis'), toDataCoords(trace._startsZ, 'zaxis'));\n  } else {\n    // Default starting positions:\n    //\n    // if len>2, cut xz plane at min-y,\n    // takes all x/y/z pts on that plane except those on the edges\n    // to generate \"well-defined\" tubes,\n    //\n    // if len=2, take position halfway between two the pts,\n    //\n    // if len=1, take that pt\n    var sy0 = meshy[0];\n    var sx = getDfltStartingPositions(meshx);\n    var sz = getDfltStartingPositions(meshz);\n    var startingPositions = new Array(sx.length * sz.length);\n    var m = 0;\n    for (var i = 0; i < sx.length; i++) {\n      for (var k = 0; k < sz.length; k++) {\n        startingPositions[m++] = [sx[i], sy0, sz[k]];\n      }\n    }\n    tubeOpts.startingPositions = startingPositions;\n  }\n  tubeOpts.colormap = parseColorScale(trace);\n  tubeOpts.tubeSize = trace.sizeref;\n  tubeOpts.maxLength = trace.maxdisplayed;\n\n  // add some padding around the bounds\n  // to e.g. allow tubes starting from a slice of the x/y/z mesh\n  // to go beyond bounds a little bit w/o getting clipped\n  var xbnds = toDataCoords(trace._xbnds, 'xaxis');\n  var ybnds = toDataCoords(trace._ybnds, 'yaxis');\n  var zbnds = toDataCoords(trace._zbnds, 'zaxis');\n  var xpads = getBoundPads(meshx);\n  var ypads = getBoundPads(meshy);\n  var zpads = getBoundPads(meshz);\n  var bounds = [[xbnds[0] - xpads[0], ybnds[0] - ypads[0], zbnds[0] - zpads[0]], [xbnds[1] + xpads[1], ybnds[1] + ypads[1], zbnds[1] + zpads[1]]];\n  var meshData = tube2mesh(tubeOpts, bounds);\n\n  // N.B. cmin/cmax correspond to the min/max vector norm\n  // in the u/v/w arrays, which in general is NOT equal to max\n  // intensity that colors the tubes.\n  var cOpts = extractOpts(trace);\n  meshData.vertexIntensityBounds = [cOpts.min / trace._normMax, cOpts.max / trace._normMax];\n\n  // pass gl-mesh3d lighting attributes\n  var lp = trace.lightposition;\n  meshData.lightPosition = [lp.x, lp.y, lp.z];\n  meshData.ambient = trace.lighting.ambient;\n  meshData.diffuse = trace.lighting.diffuse;\n  meshData.specular = trace.lighting.specular;\n  meshData.roughness = trace.lighting.roughness;\n  meshData.fresnel = trace.lighting.fresnel;\n  meshData.opacity = trace.opacity;\n\n  // stash autorange pad value\n  trace._pad = meshData.tubeScale * trace.sizeref * 2;\n  return meshData;\n}\nproto.update = function (data) {\n  this.data = data;\n  var meshData = convert(this.scene, data);\n  this.mesh.update(meshData);\n};\nproto.dispose = function () {\n  this.scene.glplot.remove(this.mesh);\n  this.mesh.dispose();\n};\nfunction createStreamtubeTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var meshData = convert(scene, data);\n  var mesh = createTubeMesh(gl, meshData);\n  var streamtube = new Streamtube(scene, data.uid);\n  streamtube.mesh = mesh;\n  streamtube.data = data;\n  mesh._trace = streamtube;\n  scene.glplot.add(mesh);\n  return streamtube;\n}\nmodule.exports = createStreamtubeTrace;","map":{"version":3,"names":["tube2mesh","require","gl_streamtube3d","createTubeMesh","Lib","parseColorScale","extractOpts","zip3","axisName2scaleIndex","xaxis","yaxis","zaxis","Streamtube","scene","uid","mesh","data","proto","prototype","handlePick","selection","sceneLayout","fullSceneLayout","dataScale","fromDataScale","v","axisName","ax","scale","l2c","object","pos","position","uvx","velocity","traceCoordinate","intensity","_normMax","divergence","textLabel","hovertext","text","getDfltStartingPositions","vec","len","length","s","slice","getBoundPads","convert","trace","_len","tubeOpts","toDataCoords","arr","simpleMap","d2l","vectors","_u","_v","_w","positions","cells","meshx","_Xs","meshy","_Ys","meshz","_Zs","meshgrid","gridFill","_gridFill","slen","_slen","startingPositions","_startsX","_startsY","_startsZ","sy0","sx","sz","Array","m","i","k","colormap","tubeSize","sizeref","maxLength","maxdisplayed","xbnds","_xbnds","ybnds","_ybnds","zbnds","_zbnds","xpads","ypads","zpads","bounds","meshData","cOpts","vertexIntensityBounds","min","max","lp","lightposition","lightPosition","x","y","z","ambient","lighting","diffuse","specular","roughness","fresnel","opacity","_pad","tubeScale","update","dispose","glplot","remove","createStreamtubeTrace","gl","streamtube","_trace","add","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/streamtube/convert.js"],"sourcesContent":["'use strict';\n\nvar tube2mesh = require('../../../stackgl_modules').gl_streamtube3d;\nvar createTubeMesh = tube2mesh.createTubeMesh;\n\nvar Lib = require('../../lib');\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar extractOpts = require('../../components/colorscale').extractOpts;\nvar zip3 = require('../../plots/gl3d/zip3');\n\nvar axisName2scaleIndex = {xaxis: 0, yaxis: 1, zaxis: 2};\n\nfunction Streamtube(scene, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.mesh = null;\n    this.data = null;\n}\n\nvar proto = Streamtube.prototype;\n\nproto.handlePick = function(selection) {\n    var sceneLayout = this.scene.fullSceneLayout;\n    var dataScale = this.scene.dataScale;\n\n    function fromDataScale(v, axisName) {\n        var ax = sceneLayout[axisName];\n        var scale = dataScale[axisName2scaleIndex[axisName]];\n        return ax.l2c(v) / scale;\n    }\n\n    if(selection.object === this.mesh) {\n        var pos = selection.data.position;\n        var uvx = selection.data.velocity;\n\n        selection.traceCoordinate = [\n            fromDataScale(pos[0], 'xaxis'),\n            fromDataScale(pos[1], 'yaxis'),\n            fromDataScale(pos[2], 'zaxis'),\n\n            fromDataScale(uvx[0], 'xaxis'),\n            fromDataScale(uvx[1], 'yaxis'),\n            fromDataScale(uvx[2], 'zaxis'),\n\n            // u/v/w norm\n            selection.data.intensity * this.data._normMax,\n            // divergence\n            selection.data.divergence\n        ];\n\n        selection.textLabel = this.data.hovertext || this.data.text;\n\n        return true;\n    }\n};\n\nfunction getDfltStartingPositions(vec) {\n    var len = vec.length;\n    var s;\n\n    if(len > 2) {\n        s = vec.slice(1, len - 1);\n    } else if(len === 2) {\n        s = [(vec[0] + vec[1]) / 2];\n    } else {\n        s = vec;\n    }\n    return s;\n}\n\nfunction getBoundPads(vec) {\n    var len = vec.length;\n    if(len === 1) {\n        return [0.5, 0.5];\n    } else {\n        return [vec[1] - vec[0], vec[len - 1] - vec[len - 2]];\n    }\n}\n\nfunction convert(scene, trace) {\n    var sceneLayout = scene.fullSceneLayout;\n    var dataScale = scene.dataScale;\n    var len = trace._len;\n    var tubeOpts = {};\n\n    function toDataCoords(arr, axisName) {\n        var ax = sceneLayout[axisName];\n        var scale = dataScale[axisName2scaleIndex[axisName]];\n        return Lib.simpleMap(arr, function(v) { return ax.d2l(v) * scale; });\n    }\n\n    tubeOpts.vectors = zip3(\n        toDataCoords(trace._u, 'xaxis'),\n        toDataCoords(trace._v, 'yaxis'),\n        toDataCoords(trace._w, 'zaxis'),\n        len\n    );\n\n    // Over-specified mesh case, this would error in tube2mesh\n    if(!len) {\n        return {\n            positions: [],\n            cells: []\n        };\n    }\n\n    var meshx = toDataCoords(trace._Xs, 'xaxis');\n    var meshy = toDataCoords(trace._Ys, 'yaxis');\n    var meshz = toDataCoords(trace._Zs, 'zaxis');\n\n    tubeOpts.meshgrid = [meshx, meshy, meshz];\n    tubeOpts.gridFill = trace._gridFill;\n\n    var slen = trace._slen;\n    if(slen) {\n        tubeOpts.startingPositions = zip3(\n            toDataCoords(trace._startsX, 'xaxis'),\n            toDataCoords(trace._startsY, 'yaxis'),\n            toDataCoords(trace._startsZ, 'zaxis')\n        );\n    } else {\n        // Default starting positions:\n        //\n        // if len>2, cut xz plane at min-y,\n        // takes all x/y/z pts on that plane except those on the edges\n        // to generate \"well-defined\" tubes,\n        //\n        // if len=2, take position halfway between two the pts,\n        //\n        // if len=1, take that pt\n        var sy0 = meshy[0];\n        var sx = getDfltStartingPositions(meshx);\n        var sz = getDfltStartingPositions(meshz);\n        var startingPositions = new Array(sx.length * sz.length);\n        var m = 0;\n\n        for(var i = 0; i < sx.length; i++) {\n            for(var k = 0; k < sz.length; k++) {\n                startingPositions[m++] = [sx[i], sy0, sz[k]];\n            }\n        }\n        tubeOpts.startingPositions = startingPositions;\n    }\n\n    tubeOpts.colormap = parseColorScale(trace);\n    tubeOpts.tubeSize = trace.sizeref;\n    tubeOpts.maxLength = trace.maxdisplayed;\n\n    // add some padding around the bounds\n    // to e.g. allow tubes starting from a slice of the x/y/z mesh\n    // to go beyond bounds a little bit w/o getting clipped\n    var xbnds = toDataCoords(trace._xbnds, 'xaxis');\n    var ybnds = toDataCoords(trace._ybnds, 'yaxis');\n    var zbnds = toDataCoords(trace._zbnds, 'zaxis');\n    var xpads = getBoundPads(meshx);\n    var ypads = getBoundPads(meshy);\n    var zpads = getBoundPads(meshz);\n\n    var bounds = [\n        [xbnds[0] - xpads[0], ybnds[0] - ypads[0], zbnds[0] - zpads[0]],\n        [xbnds[1] + xpads[1], ybnds[1] + ypads[1], zbnds[1] + zpads[1]]\n    ];\n\n    var meshData = tube2mesh(tubeOpts, bounds);\n\n    // N.B. cmin/cmax correspond to the min/max vector norm\n    // in the u/v/w arrays, which in general is NOT equal to max\n    // intensity that colors the tubes.\n    var cOpts = extractOpts(trace);\n    meshData.vertexIntensityBounds = [cOpts.min / trace._normMax, cOpts.max / trace._normMax];\n\n    // pass gl-mesh3d lighting attributes\n    var lp = trace.lightposition;\n    meshData.lightPosition = [lp.x, lp.y, lp.z];\n    meshData.ambient = trace.lighting.ambient;\n    meshData.diffuse = trace.lighting.diffuse;\n    meshData.specular = trace.lighting.specular;\n    meshData.roughness = trace.lighting.roughness;\n    meshData.fresnel = trace.lighting.fresnel;\n    meshData.opacity = trace.opacity;\n\n    // stash autorange pad value\n    trace._pad = meshData.tubeScale * trace.sizeref * 2;\n\n    return meshData;\n}\n\nproto.update = function(data) {\n    this.data = data;\n\n    var meshData = convert(this.scene, data);\n    this.mesh.update(meshData);\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.mesh);\n    this.mesh.dispose();\n};\n\nfunction createStreamtubeTrace(scene, data) {\n    var gl = scene.glplot.gl;\n\n    var meshData = convert(scene, data);\n    var mesh = createTubeMesh(gl, meshData);\n\n    var streamtube = new Streamtube(scene, data.uid);\n    streamtube.mesh = mesh;\n    streamtube.data = data;\n    mesh._trace = streamtube;\n\n    scene.glplot.add(mesh);\n\n    return streamtube;\n}\n\nmodule.exports = createStreamtubeTrace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}