{"ast":null,"code":"'use strict';\n\nvar traceIs = require('../../registry').traceIs;\nvar autoType = require('./axis_autotype');\n\n/*\n *  data: the plot data to use in choosing auto type\n *  name: axis object name (ie 'xaxis') if one should be stored\n */\nmodule.exports = function handleTypeDefaults(containerIn, containerOut, coerce, options) {\n  coerce('autotypenumbers', options.autotypenumbersDflt);\n  var axType = coerce('type', (options.splomStash || {}).type);\n  if (axType === '-') {\n    setAutoType(containerOut, options.data);\n    if (containerOut.type === '-') {\n      containerOut.type = 'linear';\n    } else {\n      // copy autoType back to input axis\n      // note that if this object didn't exist\n      // in the input layout, we have to put it in\n      // this happens in the main supplyDefaults function\n      containerIn.type = containerOut.type;\n    }\n  }\n};\nfunction setAutoType(ax, data) {\n  // new logic: let people specify any type they want,\n  // only autotype if type is '-'\n  if (ax.type !== '-') return;\n  var id = ax._id;\n  var axLetter = id.charAt(0);\n  var i;\n\n  // support 3d\n  if (id.indexOf('scene') !== -1) id = axLetter;\n  var d0 = getFirstNonEmptyTrace(data, id, axLetter);\n  if (!d0) return;\n\n  // first check for histograms, as the count direction\n  // should always default to a linear axis\n  if (d0.type === 'histogram' && axLetter === {\n    v: 'y',\n    h: 'x'\n  }[d0.orientation || 'v']) {\n    ax.type = 'linear';\n    return;\n  }\n  var calAttr = axLetter + 'calendar';\n  var calendar = d0[calAttr];\n  var opts = {\n    noMultiCategory: !traceIs(d0, 'cartesian') || traceIs(d0, 'noMultiCategory')\n  };\n\n  // To not confuse 2D x/y used for per-box sample points for multicategory coordinates\n  if (d0.type === 'box' && d0._hasPreCompStats && axLetter === {\n    h: 'x',\n    v: 'y'\n  }[d0.orientation || 'v']) {\n    opts.noMultiCategory = true;\n  }\n  opts.autotypenumbers = ax.autotypenumbers;\n\n  // check all boxes on this x axis to see\n  // if they're dates, numbers, or categories\n  if (isBoxWithoutPositionCoords(d0, axLetter)) {\n    var posLetter = getBoxPosLetter(d0);\n    var boxPositions = [];\n    for (i = 0; i < data.length; i++) {\n      var trace = data[i];\n      if (!traceIs(trace, 'box-violin') || (trace[axLetter + 'axis'] || axLetter) !== id) continue;\n      if (trace[posLetter] !== undefined) boxPositions.push(trace[posLetter][0]);else if (trace.name !== undefined) boxPositions.push(trace.name);else boxPositions.push('text');\n      if (trace[calAttr] !== calendar) calendar = undefined;\n    }\n    ax.type = autoType(boxPositions, calendar, opts);\n  } else if (d0.type === 'splom') {\n    var dimensions = d0.dimensions;\n    var dim = dimensions[d0._axesDim[id]];\n    if (dim.visible) ax.type = autoType(dim.values, calendar, opts);\n  } else {\n    ax.type = autoType(d0[axLetter] || [d0[axLetter + '0']], calendar, opts);\n  }\n}\nfunction getFirstNonEmptyTrace(data, id, axLetter) {\n  for (var i = 0; i < data.length; i++) {\n    var trace = data[i];\n    if (trace.type === 'splom' && trace._length > 0 && (trace['_' + axLetter + 'axes'] || {})[id]) {\n      return trace;\n    }\n    if ((trace[axLetter + 'axis'] || axLetter) === id) {\n      if (isBoxWithoutPositionCoords(trace, axLetter)) {\n        return trace;\n      } else if ((trace[axLetter] || []).length || trace[axLetter + '0']) {\n        return trace;\n      }\n    }\n  }\n}\nfunction getBoxPosLetter(trace) {\n  return {\n    v: 'x',\n    h: 'y'\n  }[trace.orientation || 'v'];\n}\nfunction isBoxWithoutPositionCoords(trace, axLetter) {\n  var posLetter = getBoxPosLetter(trace);\n  var isBox = traceIs(trace, 'box-violin');\n  var isCandlestick = traceIs(trace._fullInput || {}, 'candlestick');\n  return isBox && !isCandlestick && axLetter === posLetter && trace[posLetter] === undefined && trace[posLetter + '0'] === undefined;\n}","map":{"version":3,"names":["traceIs","require","autoType","module","exports","handleTypeDefaults","containerIn","containerOut","coerce","options","autotypenumbersDflt","axType","splomStash","type","setAutoType","data","ax","id","_id","axLetter","charAt","i","indexOf","d0","getFirstNonEmptyTrace","v","h","orientation","calAttr","calendar","opts","noMultiCategory","_hasPreCompStats","autotypenumbers","isBoxWithoutPositionCoords","posLetter","getBoxPosLetter","boxPositions","length","trace","undefined","push","name","dimensions","dim","_axesDim","visible","values","_length","isBox","isCandlestick","_fullInput"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/cartesian/type_defaults.js"],"sourcesContent":["'use strict';\n\nvar traceIs = require('../../registry').traceIs;\nvar autoType = require('./axis_autotype');\n\n/*\n *  data: the plot data to use in choosing auto type\n *  name: axis object name (ie 'xaxis') if one should be stored\n */\nmodule.exports = function handleTypeDefaults(containerIn, containerOut, coerce, options) {\n    coerce('autotypenumbers', options.autotypenumbersDflt);\n    var axType = coerce('type', (options.splomStash || {}).type);\n\n    if(axType === '-') {\n        setAutoType(containerOut, options.data);\n\n        if(containerOut.type === '-') {\n            containerOut.type = 'linear';\n        } else {\n            // copy autoType back to input axis\n            // note that if this object didn't exist\n            // in the input layout, we have to put it in\n            // this happens in the main supplyDefaults function\n            containerIn.type = containerOut.type;\n        }\n    }\n};\n\nfunction setAutoType(ax, data) {\n    // new logic: let people specify any type they want,\n    // only autotype if type is '-'\n    if(ax.type !== '-') return;\n\n    var id = ax._id;\n    var axLetter = id.charAt(0);\n    var i;\n\n    // support 3d\n    if(id.indexOf('scene') !== -1) id = axLetter;\n\n    var d0 = getFirstNonEmptyTrace(data, id, axLetter);\n    if(!d0) return;\n\n    // first check for histograms, as the count direction\n    // should always default to a linear axis\n    if(d0.type === 'histogram' &&\n        axLetter === {v: 'y', h: 'x'}[d0.orientation || 'v']\n    ) {\n        ax.type = 'linear';\n        return;\n    }\n\n    var calAttr = axLetter + 'calendar';\n    var calendar = d0[calAttr];\n    var opts = {noMultiCategory: !traceIs(d0, 'cartesian') || traceIs(d0, 'noMultiCategory')};\n\n    // To not confuse 2D x/y used for per-box sample points for multicategory coordinates\n    if(d0.type === 'box' && d0._hasPreCompStats &&\n        axLetter === {h: 'x', v: 'y'}[d0.orientation || 'v']\n    ) {\n        opts.noMultiCategory = true;\n    }\n\n    opts.autotypenumbers = ax.autotypenumbers;\n\n    // check all boxes on this x axis to see\n    // if they're dates, numbers, or categories\n    if(isBoxWithoutPositionCoords(d0, axLetter)) {\n        var posLetter = getBoxPosLetter(d0);\n        var boxPositions = [];\n\n        for(i = 0; i < data.length; i++) {\n            var trace = data[i];\n            if(!traceIs(trace, 'box-violin') || (trace[axLetter + 'axis'] || axLetter) !== id) continue;\n\n            if(trace[posLetter] !== undefined) boxPositions.push(trace[posLetter][0]);\n            else if(trace.name !== undefined) boxPositions.push(trace.name);\n            else boxPositions.push('text');\n\n            if(trace[calAttr] !== calendar) calendar = undefined;\n        }\n\n        ax.type = autoType(boxPositions, calendar, opts);\n    } else if(d0.type === 'splom') {\n        var dimensions = d0.dimensions;\n        var dim = dimensions[d0._axesDim[id]];\n        if(dim.visible) ax.type = autoType(dim.values, calendar, opts);\n    } else {\n        ax.type = autoType(d0[axLetter] || [d0[axLetter + '0']], calendar, opts);\n    }\n}\n\nfunction getFirstNonEmptyTrace(data, id, axLetter) {\n    for(var i = 0; i < data.length; i++) {\n        var trace = data[i];\n\n        if(trace.type === 'splom' &&\n                trace._length > 0 &&\n                (trace['_' + axLetter + 'axes'] || {})[id]\n        ) {\n            return trace;\n        }\n\n        if((trace[axLetter + 'axis'] || axLetter) === id) {\n            if(isBoxWithoutPositionCoords(trace, axLetter)) {\n                return trace;\n            } else if((trace[axLetter] || []).length || trace[axLetter + '0']) {\n                return trace;\n            }\n        }\n    }\n}\n\nfunction getBoxPosLetter(trace) {\n    return {v: 'x', h: 'y'}[trace.orientation || 'v'];\n}\n\nfunction isBoxWithoutPositionCoords(trace, axLetter) {\n    var posLetter = getBoxPosLetter(trace);\n    var isBox = traceIs(trace, 'box-violin');\n    var isCandlestick = traceIs(trace._fullInput || {}, 'candlestick');\n\n    return (\n        isBox &&\n        !isCandlestick &&\n        axLetter === posLetter &&\n        trace[posLetter] === undefined &&\n        trace[posLetter + '0'] === undefined\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}