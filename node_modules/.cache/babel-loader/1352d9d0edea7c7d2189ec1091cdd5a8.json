{"ast":null,"code":"'use strict';\n\nvar strTranslate = require('../../lib').strTranslate;\n\n// in v3 (once log ranges are fixed),\n// we'll be able to p2r here for all axis types\nfunction p2r(ax, v) {\n  switch (ax.type) {\n    case 'log':\n      return ax.p2d(v);\n    case 'date':\n      return ax.p2r(v, 0, ax.calendar);\n    default:\n      return ax.p2r(v);\n  }\n}\nfunction r2p(ax, v) {\n  switch (ax.type) {\n    case 'log':\n      return ax.d2p(v);\n    case 'date':\n      return ax.r2p(v, 0, ax.calendar);\n    default:\n      return ax.r2p(v);\n  }\n}\nfunction axValue(ax) {\n  var index = ax._id.charAt(0) === 'y' ? 1 : 0;\n  return function (v) {\n    return p2r(ax, v[index]);\n  };\n}\nfunction getTransform(plotinfo) {\n  return strTranslate(plotinfo.xaxis._offset, plotinfo.yaxis._offset);\n}\nmodule.exports = {\n  p2r: p2r,\n  r2p: r2p,\n  axValue: axValue,\n  getTransform: getTransform\n};","map":{"version":3,"names":["strTranslate","require","p2r","ax","v","type","p2d","calendar","r2p","d2p","axValue","index","_id","charAt","getTransform","plotinfo","xaxis","_offset","yaxis","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/selections/helpers.js"],"sourcesContent":["'use strict';\n\nvar strTranslate = require('../../lib').strTranslate;\n\n// in v3 (once log ranges are fixed),\n// we'll be able to p2r here for all axis types\nfunction p2r(ax, v) {\n    switch(ax.type) {\n        case 'log':\n            return ax.p2d(v);\n        case 'date':\n            return ax.p2r(v, 0, ax.calendar);\n        default:\n            return ax.p2r(v);\n    }\n}\n\nfunction r2p(ax, v) {\n    switch(ax.type) {\n        case 'log':\n            return ax.d2p(v);\n        case 'date':\n            return ax.r2p(v, 0, ax.calendar);\n        default:\n            return ax.r2p(v);\n    }\n}\n\nfunction axValue(ax) {\n    var index = (ax._id.charAt(0) === 'y') ? 1 : 0;\n    return function(v) { return p2r(ax, v[index]); };\n}\n\nfunction getTransform(plotinfo) {\n    return strTranslate(\n        plotinfo.xaxis._offset,\n        plotinfo.yaxis._offset\n    );\n}\n\nmodule.exports = {\n    p2r: p2r,\n    r2p: r2p,\n    axValue: axValue,\n    getTransform: getTransform\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,YAAY;;AAEpD;AACA;AACA,SAASE,GAAGA,CAACC,EAAE,EAAEC,CAAC,EAAE;EAChB,QAAOD,EAAE,CAACE,IAAI;IACV,KAAK,KAAK;MACN,OAAOF,EAAE,CAACG,GAAG,CAACF,CAAC,CAAC;IACpB,KAAK,MAAM;MACP,OAAOD,EAAE,CAACD,GAAG,CAACE,CAAC,EAAE,CAAC,EAAED,EAAE,CAACI,QAAQ,CAAC;IACpC;MACI,OAAOJ,EAAE,CAACD,GAAG,CAACE,CAAC,CAAC;EACxB;AACJ;AAEA,SAASI,GAAGA,CAACL,EAAE,EAAEC,CAAC,EAAE;EAChB,QAAOD,EAAE,CAACE,IAAI;IACV,KAAK,KAAK;MACN,OAAOF,EAAE,CAACM,GAAG,CAACL,CAAC,CAAC;IACpB,KAAK,MAAM;MACP,OAAOD,EAAE,CAACK,GAAG,CAACJ,CAAC,EAAE,CAAC,EAAED,EAAE,CAACI,QAAQ,CAAC;IACpC;MACI,OAAOJ,EAAE,CAACK,GAAG,CAACJ,CAAC,CAAC;EACxB;AACJ;AAEA,SAASM,OAAOA,CAACP,EAAE,EAAE;EACjB,IAAIQ,KAAK,GAAIR,EAAE,CAACS,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAI,CAAC,GAAG,CAAC;EAC9C,OAAO,UAAST,CAAC,EAAE;IAAE,OAAOF,GAAG,CAACC,EAAE,EAAEC,CAAC,CAACO,KAAK,CAAC,CAAC;EAAE,CAAC;AACpD;AAEA,SAASG,YAAYA,CAACC,QAAQ,EAAE;EAC5B,OAAOf,YAAY,CACfe,QAAQ,CAACC,KAAK,CAACC,OAAO,EACtBF,QAAQ,CAACG,KAAK,CAACD,OACnB,CAAC;AACL;AAEAE,MAAM,CAACC,OAAO,GAAG;EACblB,GAAG,EAAEA,GAAG;EACRM,GAAG,EAAEA,GAAG;EACRE,OAAO,EAAEA,OAAO;EAChBI,YAAY,EAAEA;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}