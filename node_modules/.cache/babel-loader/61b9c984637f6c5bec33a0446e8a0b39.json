{"ast":null,"code":"var _jsxFileName = \"E:\\\\tog_workspace\\\\TestFabric_main\\\\TestFabric-main\\\\src\\\\components\\\\Header3\\\\LocateCountry.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryFlag() {\n  _s();\n  const [countryCode, setCountryCode] = useState(null);\n  const getCountryCode = async (latitude, longitude) => {\n    try {\n      const response = await fetch(`https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=YOUR_API_KEY`);\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        const country = data.results[0].components.country_code;\n        setCountryCode(country.toUpperCase());\n        localStorage.setItem(\"userCountryCode\", country.toUpperCase());\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        getCountryCode(latitude, longitude);\n      }, err => {\n        console.error(err);\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  useEffect(() => {\n    const storedCountryCode = localStorage.getItem(\"userCountryCode\");\n    if (storedCountryCode) {\n      setCountryCode(storedCountryCode);\n    } else {\n      getLocation();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countryCode ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`,\n      alt: `Flag of ${countryCode}`,\n      style: {\n        width: \"100px\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this) : \"Locating...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryFlag, \"LXFp6d+HQV4OVsh7HRLipAH7rG4=\");\n_c = CountryFlag;\nexport default CountryFlag;\nvar _c;\n$RefreshReg$(_c, \"CountryFlag\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CountryFlag","_s","countryCode","setCountryCode","getCountryCode","latitude","longitude","response","fetch","data","json","results","length","country","components","country_code","toUpperCase","localStorage","setItem","err","console","error","getLocation","navigator","geolocation","getCurrentPosition","position","coords","alert","storedCountryCode","getItem","children","src","toLowerCase","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/components/Header3/LocateCountry.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CountryFlag() {\r\n  const [countryCode, setCountryCode] = useState(null);\r\n\r\n  const getCountryCode = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=YOUR_API_KEY`\r\n      );\r\n      const data = await response.json();\r\n      if (data.results && data.results.length > 0) {\r\n        const country = data.results[0].components.country_code;\r\n        setCountryCode(country.toUpperCase());\r\n        localStorage.setItem(\"userCountryCode\", country.toUpperCase());\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          getCountryCode(latitude, longitude);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedCountryCode = localStorage.getItem(\"userCountryCode\");\r\n    if (storedCountryCode) {\r\n      setCountryCode(storedCountryCode);\r\n    } else {\r\n      getLocation();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        countryCode ? \r\n          <img\r\n            src={`https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`}\r\n            alt={`Flag of ${countryCode}`}\r\n            style={{ width: \"100px\", height: \"auto\" }}\r\n          /> : \"Locating...\"\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryFlag;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMO,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kDAAkDH,QAAQ,IAAIC,SAAS,mBACzE,CAAC;MACD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3C,MAAMC,OAAO,GAAGJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACG,UAAU,CAACC,YAAY;QACvDZ,cAAc,CAACU,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC;QACrCC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEL,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC;MAChE;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZ,MAAM;UAAErB,QAAQ;UAAEC;QAAU,CAAC,GAAGoB,QAAQ,CAACC,MAAM;QAC/CvB,cAAc,CAACC,QAAQ,EAAEC,SAAS,CAAC;MACrC,CAAC,EACAa,GAAG,IAAK;QACPC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CACF,CAAC;IACH,CAAC,MAAM;MACLS,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACd,MAAMiC,iBAAiB,GAAGZ,YAAY,CAACa,OAAO,CAAC,iBAAiB,CAAC;IACjE,IAAID,iBAAiB,EAAE;MACrB1B,cAAc,CAAC0B,iBAAiB,CAAC;IACnC,CAAC,MAAM;MACLP,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAAgC,QAAA,EAEI7B,WAAW,gBACTH,OAAA;MACEiC,GAAG,EAAE,4BAA4B9B,WAAW,CAAC+B,WAAW,CAAC,CAAC,MAAO;MACjEC,GAAG,EAAE,WAAWhC,WAAW,EAAG;MAC9BiC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,GAAG;EAAa;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEV;AAACxC,EAAA,CAxDQD,WAAW;AAAA0C,EAAA,GAAX1C,WAAW;AA0DpB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}