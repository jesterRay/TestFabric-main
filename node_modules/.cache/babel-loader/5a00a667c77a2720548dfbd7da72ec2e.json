{"ast":null,"code":"'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar baseAttrs = require('../../plots/attributes');\nvar fontAttrs = require('../../plots/font_attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nmodule.exports = extendFlat({\n  z: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the z data.'\n  },\n  x: extendFlat({}, scatterAttrs.x, {\n    impliedEdits: {\n      xtype: 'array'\n    }\n  }),\n  x0: extendFlat({}, scatterAttrs.x0, {\n    impliedEdits: {\n      xtype: 'scaled'\n    }\n  }),\n  dx: extendFlat({}, scatterAttrs.dx, {\n    impliedEdits: {\n      xtype: 'scaled'\n    }\n  }),\n  y: extendFlat({}, scatterAttrs.y, {\n    impliedEdits: {\n      ytype: 'array'\n    }\n  }),\n  y0: extendFlat({}, scatterAttrs.y0, {\n    impliedEdits: {\n      ytype: 'scaled'\n    }\n  }),\n  dy: extendFlat({}, scatterAttrs.dy, {\n    impliedEdits: {\n      ytype: 'scaled'\n    }\n  }),\n  xperiod: extendFlat({}, scatterAttrs.xperiod, {\n    impliedEdits: {\n      xtype: 'scaled'\n    }\n  }),\n  yperiod: extendFlat({}, scatterAttrs.yperiod, {\n    impliedEdits: {\n      ytype: 'scaled'\n    }\n  }),\n  xperiod0: extendFlat({}, scatterAttrs.xperiod0, {\n    impliedEdits: {\n      xtype: 'scaled'\n    }\n  }),\n  yperiod0: extendFlat({}, scatterAttrs.yperiod0, {\n    impliedEdits: {\n      ytype: 'scaled'\n    }\n  }),\n  xperiodalignment: extendFlat({}, scatterAttrs.xperiodalignment, {\n    impliedEdits: {\n      xtype: 'scaled'\n    }\n  }),\n  yperiodalignment: extendFlat({}, scatterAttrs.yperiodalignment, {\n    impliedEdits: {\n      ytype: 'scaled'\n    }\n  }),\n  text: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the text elements associated with each z value.'\n  },\n  hovertext: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Same as `text`.'\n  },\n  transpose: {\n    valType: 'boolean',\n    dflt: false,\n    editType: 'calc',\n    description: 'Transposes the z data.'\n  },\n  xtype: {\n    valType: 'enumerated',\n    values: ['array', 'scaled'],\n    editType: 'calc+clearAxisTypes',\n    description: ['If *array*, the heatmap\\'s x coordinates are given by *x*', '(the default behavior when `x` is provided).', 'If *scaled*, the heatmap\\'s x coordinates are given by *x0* and *dx*', '(the default behavior when `x` is not provided).'].join(' ')\n  },\n  ytype: {\n    valType: 'enumerated',\n    values: ['array', 'scaled'],\n    editType: 'calc+clearAxisTypes',\n    description: ['If *array*, the heatmap\\'s y coordinates are given by *y*', '(the default behavior when `y` is provided)', 'If *scaled*, the heatmap\\'s y coordinates are given by *y0* and *dy*', '(the default behavior when `y` is not provided)'].join(' ')\n  },\n  zsmooth: {\n    valType: 'enumerated',\n    values: ['fast', 'best', false],\n    dflt: false,\n    editType: 'calc',\n    description: ['Picks a smoothing algorithm use to smooth `z` data.'].join(' ')\n  },\n  hoverongaps: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'none',\n    description: ['Determines whether or not gaps', '(i.e. {nan} or missing values)', 'in the `z` data have hover labels associated with them.'].join(' ')\n  },\n  connectgaps: {\n    valType: 'boolean',\n    editType: 'calc',\n    description: ['Determines whether or not gaps', '(i.e. {nan} or missing values)', 'in the `z` data are filled in.', 'It is defaulted to true if `z` is a', 'one dimensional array and `zsmooth` is not false;', 'otherwise it is defaulted to false.'].join(' ')\n  },\n  xgap: {\n    valType: 'number',\n    dflt: 0,\n    min: 0,\n    editType: 'plot',\n    description: 'Sets the horizontal gap (in pixels) between bricks.'\n  },\n  ygap: {\n    valType: 'number',\n    dflt: 0,\n    min: 0,\n    editType: 'plot',\n    description: 'Sets the vertical gap (in pixels) between bricks.'\n  },\n  xhoverformat: axisHoverFormat('x'),\n  yhoverformat: axisHoverFormat('y'),\n  zhoverformat: axisHoverFormat('z', 1),\n  hovertemplate: hovertemplateAttrs(),\n  texttemplate: texttemplateAttrs({\n    arrayOk: false,\n    editType: 'plot'\n  }, {\n    keys: ['x', 'y', 'z', 'text']\n  }),\n  textfont: fontAttrs({\n    editType: 'plot',\n    autoSize: true,\n    autoColor: true,\n    colorEditType: 'style',\n    description: 'Sets the text font.'\n  }),\n  showlegend: extendFlat({}, baseAttrs.showlegend, {\n    dflt: false\n  }),\n  zorder: scatterAttrs.zorder\n}, {\n  transforms: undefined\n}, colorScaleAttrs('', {\n  cLetter: 'z',\n  autoColorDflt: false\n}));","map":{"version":3,"names":["scatterAttrs","require","baseAttrs","fontAttrs","axisHoverFormat","hovertemplateAttrs","texttemplateAttrs","colorScaleAttrs","extendFlat","module","exports","z","valType","editType","description","x","impliedEdits","xtype","x0","dx","y","ytype","y0","dy","xperiod","yperiod","xperiod0","yperiod0","xperiodalignment","yperiodalignment","text","hovertext","transpose","dflt","values","join","zsmooth","hoverongaps","connectgaps","xgap","min","ygap","xhoverformat","yhoverformat","zhoverformat","hovertemplate","texttemplate","arrayOk","keys","textfont","autoSize","autoColor","colorEditType","showlegend","zorder","transforms","undefined","cLetter","autoColorDflt"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/heatmap/attributes.js"],"sourcesContent":["'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar baseAttrs = require('../../plots/attributes');\nvar fontAttrs = require('../../plots/font_attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nmodule.exports = extendFlat({\n    z: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the z data.'\n    },\n    x: extendFlat({}, scatterAttrs.x, {impliedEdits: {xtype: 'array'}}),\n    x0: extendFlat({}, scatterAttrs.x0, {impliedEdits: {xtype: 'scaled'}}),\n    dx: extendFlat({}, scatterAttrs.dx, {impliedEdits: {xtype: 'scaled'}}),\n    y: extendFlat({}, scatterAttrs.y, {impliedEdits: {ytype: 'array'}}),\n    y0: extendFlat({}, scatterAttrs.y0, {impliedEdits: {ytype: 'scaled'}}),\n    dy: extendFlat({}, scatterAttrs.dy, {impliedEdits: {ytype: 'scaled'}}),\n\n    xperiod: extendFlat({}, scatterAttrs.xperiod, {impliedEdits: {xtype: 'scaled'}}),\n    yperiod: extendFlat({}, scatterAttrs.yperiod, {impliedEdits: {ytype: 'scaled'}}),\n    xperiod0: extendFlat({}, scatterAttrs.xperiod0, {impliedEdits: {xtype: 'scaled'}}),\n    yperiod0: extendFlat({}, scatterAttrs.yperiod0, {impliedEdits: {ytype: 'scaled'}}),\n    xperiodalignment: extendFlat({}, scatterAttrs.xperiodalignment, {impliedEdits: {xtype: 'scaled'}}),\n    yperiodalignment: extendFlat({}, scatterAttrs.yperiodalignment, {impliedEdits: {ytype: 'scaled'}}),\n\n    text: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the text elements associated with each z value.'\n    },\n    hovertext: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Same as `text`.'\n    },\n    transpose: {\n        valType: 'boolean',\n        dflt: false,\n        editType: 'calc',\n        description: 'Transposes the z data.'\n    },\n    xtype: {\n        valType: 'enumerated',\n        values: ['array', 'scaled'],\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'If *array*, the heatmap\\'s x coordinates are given by *x*',\n            '(the default behavior when `x` is provided).',\n            'If *scaled*, the heatmap\\'s x coordinates are given by *x0* and *dx*',\n            '(the default behavior when `x` is not provided).'\n        ].join(' ')\n    },\n    ytype: {\n        valType: 'enumerated',\n        values: ['array', 'scaled'],\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'If *array*, the heatmap\\'s y coordinates are given by *y*',\n            '(the default behavior when `y` is provided)',\n            'If *scaled*, the heatmap\\'s y coordinates are given by *y0* and *dy*',\n            '(the default behavior when `y` is not provided)'\n        ].join(' ')\n    },\n    zsmooth: {\n        valType: 'enumerated',\n        values: ['fast', 'best', false],\n        dflt: false,\n        editType: 'calc',\n        description: [\n            'Picks a smoothing algorithm use to smooth `z` data.'\n        ].join(' ')\n    },\n    hoverongaps: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'none',\n        description: [\n            'Determines whether or not gaps',\n            '(i.e. {nan} or missing values)',\n            'in the `z` data have hover labels associated with them.'\n        ].join(' ')\n    },\n    connectgaps: {\n        valType: 'boolean',\n        editType: 'calc',\n        description: [\n            'Determines whether or not gaps',\n            '(i.e. {nan} or missing values)',\n            'in the `z` data are filled in.',\n            'It is defaulted to true if `z` is a',\n            'one dimensional array and `zsmooth` is not false;',\n            'otherwise it is defaulted to false.'\n        ].join(' ')\n    },\n    xgap: {\n        valType: 'number',\n        dflt: 0,\n        min: 0,\n        editType: 'plot',\n        description: 'Sets the horizontal gap (in pixels) between bricks.'\n    },\n    ygap: {\n        valType: 'number',\n        dflt: 0,\n        min: 0,\n        editType: 'plot',\n        description: 'Sets the vertical gap (in pixels) between bricks.'\n    },\n    xhoverformat: axisHoverFormat('x'),\n    yhoverformat: axisHoverFormat('y'),\n    zhoverformat: axisHoverFormat('z', 1),\n\n    hovertemplate: hovertemplateAttrs(),\n    texttemplate: texttemplateAttrs({\n        arrayOk: false,\n        editType: 'plot'\n    }, {\n        keys: ['x', 'y', 'z', 'text']\n    }),\n    textfont: fontAttrs({\n        editType: 'plot',\n        autoSize: true,\n        autoColor: true,\n        colorEditType: 'style',\n        description: 'Sets the text font.'\n    }),\n\n    showlegend: extendFlat({}, baseAttrs.showlegend, {dflt: false}),\n    zorder: scatterAttrs.zorder\n}, {\n    transforms: undefined\n},\n    colorScaleAttrs('', {cLetter: 'z', autoColorDflt: false})\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}