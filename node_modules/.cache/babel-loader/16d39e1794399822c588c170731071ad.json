{"ast":null,"code":"'use strict';\n\nvar createPointCloudRenderer = require('../../../stackgl_modules').gl_pointcloud2d;\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar str2RGBArray = require('../../lib/str2rgbarray');\nvar findExtremes = require('../../plots/cartesian/autorange').findExtremes;\nvar getTraceColor = require('../scatter/get_trace_color');\nfunction Pointcloud(scene, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.type = 'pointcloud';\n  this.pickXData = [];\n  this.pickYData = [];\n  this.xData = [];\n  this.yData = [];\n  this.textLabels = [];\n  this.color = 'rgb(0, 0, 0)';\n  this.name = '';\n  this.hoverinfo = 'all';\n  this.idToIndex = new Int32Array(0);\n  this.bounds = [0, 0, 0, 0];\n  this.pointcloudOptions = {\n    positions: new Float32Array(0),\n    idToIndex: this.idToIndex,\n    sizemin: 0.5,\n    sizemax: 12,\n    color: [0, 0, 0, 1],\n    areaRatio: 1,\n    borderColor: [0, 0, 0, 1]\n  };\n  this.pointcloud = createPointCloudRenderer(scene.glplot, this.pointcloudOptions);\n  this.pointcloud._trace = this; // scene2d requires this prop\n}\nvar proto = Pointcloud.prototype;\nproto.handlePick = function (pickResult) {\n  var index = this.idToIndex[pickResult.pointId];\n\n  // prefer the readout from XY, if present\n  return {\n    trace: this,\n    dataCoord: pickResult.dataCoord,\n    traceCoord: this.pickXYData ? [this.pickXYData[index * 2], this.pickXYData[index * 2 + 1]] : [this.pickXData[index], this.pickYData[index]],\n    textLabel: isArrayOrTypedArray(this.textLabels) ? this.textLabels[index] : this.textLabels,\n    color: this.color,\n    name: this.name,\n    pointIndex: index,\n    hoverinfo: this.hoverinfo\n  };\n};\nproto.update = function (options) {\n  this.index = options.index;\n  this.textLabels = options.text;\n  this.name = options.name;\n  this.hoverinfo = options.hoverinfo;\n  this.bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  this.updateFast(options);\n  this.color = getTraceColor(options, {});\n};\nproto.updateFast = function (options) {\n  var x = this.xData = this.pickXData = options.x;\n  var y = this.yData = this.pickYData = options.y;\n  var xy = this.pickXYData = options.xy;\n  var userBounds = options.xbounds && options.ybounds;\n  var index = options.indices;\n  var len;\n  var idToIndex;\n  var positions;\n  var bounds = this.bounds;\n  var xx, yy, i;\n  if (xy) {\n    positions = xy;\n\n    // dividing xy.length by 2 and truncating to integer if xy.length was not even\n    len = xy.length >>> 1;\n    if (userBounds) {\n      bounds[0] = options.xbounds[0];\n      bounds[2] = options.xbounds[1];\n      bounds[1] = options.ybounds[0];\n      bounds[3] = options.ybounds[1];\n    } else {\n      for (i = 0; i < len; i++) {\n        xx = positions[i * 2];\n        yy = positions[i * 2 + 1];\n        if (xx < bounds[0]) bounds[0] = xx;\n        if (xx > bounds[2]) bounds[2] = xx;\n        if (yy < bounds[1]) bounds[1] = yy;\n        if (yy > bounds[3]) bounds[3] = yy;\n      }\n    }\n    if (index) {\n      idToIndex = index;\n    } else {\n      idToIndex = new Int32Array(len);\n      for (i = 0; i < len; i++) {\n        idToIndex[i] = i;\n      }\n    }\n  } else {\n    len = x.length;\n    positions = new Float32Array(2 * len);\n    idToIndex = new Int32Array(len);\n    for (i = 0; i < len; i++) {\n      xx = x[i];\n      yy = y[i];\n      idToIndex[i] = i;\n      positions[i * 2] = xx;\n      positions[i * 2 + 1] = yy;\n      if (xx < bounds[0]) bounds[0] = xx;\n      if (xx > bounds[2]) bounds[2] = xx;\n      if (yy < bounds[1]) bounds[1] = yy;\n      if (yy > bounds[3]) bounds[3] = yy;\n    }\n  }\n  this.idToIndex = idToIndex;\n  this.pointcloudOptions.idToIndex = idToIndex;\n  this.pointcloudOptions.positions = positions;\n  var markerColor = str2RGBArray(options.marker.color);\n  var borderColor = str2RGBArray(options.marker.border.color);\n  var opacity = options.opacity * options.marker.opacity;\n  markerColor[3] *= opacity;\n  this.pointcloudOptions.color = markerColor;\n\n  // detect blending from the number of points, if undefined\n  // because large data with blending hits performance\n  var blend = options.marker.blend;\n  if (blend === null) {\n    var maxPoints = 100;\n    blend = x.length < maxPoints || y.length < maxPoints;\n  }\n  this.pointcloudOptions.blend = blend;\n  borderColor[3] *= opacity;\n  this.pointcloudOptions.borderColor = borderColor;\n  var markerSizeMin = options.marker.sizemin;\n  var markerSizeMax = Math.max(options.marker.sizemax, options.marker.sizemin);\n  this.pointcloudOptions.sizeMin = markerSizeMin;\n  this.pointcloudOptions.sizeMax = markerSizeMax;\n  this.pointcloudOptions.areaRatio = options.marker.border.arearatio;\n  this.pointcloud.update(this.pointcloudOptions);\n\n  // add item for autorange routine\n  var xa = this.scene.xaxis;\n  var ya = this.scene.yaxis;\n  var pad = markerSizeMax / 2 || 0.5;\n  options._extremes[xa._id] = findExtremes(xa, [bounds[0], bounds[2]], {\n    ppad: pad\n  });\n  options._extremes[ya._id] = findExtremes(ya, [bounds[1], bounds[3]], {\n    ppad: pad\n  });\n};\nproto.dispose = function () {\n  this.pointcloud.dispose();\n};\nfunction createPointcloud(scene, data) {\n  var plot = new Pointcloud(scene, data.uid);\n  plot.update(data);\n  return plot;\n}\nmodule.exports = createPointcloud;","map":{"version":3,"names":["createPointCloudRenderer","require","gl_pointcloud2d","isArrayOrTypedArray","str2RGBArray","findExtremes","getTraceColor","Pointcloud","scene","uid","type","pickXData","pickYData","xData","yData","textLabels","color","name","hoverinfo","idToIndex","Int32Array","bounds","pointcloudOptions","positions","Float32Array","sizemin","sizemax","areaRatio","borderColor","pointcloud","glplot","_trace","proto","prototype","handlePick","pickResult","index","pointId","trace","dataCoord","traceCoord","pickXYData","textLabel","pointIndex","update","options","text","Infinity","updateFast","x","y","xy","userBounds","xbounds","ybounds","indices","len","xx","yy","i","length","markerColor","marker","border","opacity","blend","maxPoints","markerSizeMin","markerSizeMax","Math","max","sizeMin","sizeMax","arearatio","xa","xaxis","ya","yaxis","pad","_extremes","_id","ppad","dispose","createPointcloud","data","plot","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/pointcloud/convert.js"],"sourcesContent":["'use strict';\n\nvar createPointCloudRenderer = require('../../../stackgl_modules').gl_pointcloud2d;\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar str2RGBArray = require('../../lib/str2rgbarray');\nvar findExtremes = require('../../plots/cartesian/autorange').findExtremes;\nvar getTraceColor = require('../scatter/get_trace_color');\n\nfunction Pointcloud(scene, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.type = 'pointcloud';\n\n    this.pickXData = [];\n    this.pickYData = [];\n    this.xData = [];\n    this.yData = [];\n    this.textLabels = [];\n    this.color = 'rgb(0, 0, 0)';\n    this.name = '';\n    this.hoverinfo = 'all';\n\n    this.idToIndex = new Int32Array(0);\n    this.bounds = [0, 0, 0, 0];\n\n    this.pointcloudOptions = {\n        positions: new Float32Array(0),\n        idToIndex: this.idToIndex,\n        sizemin: 0.5,\n        sizemax: 12,\n        color: [0, 0, 0, 1],\n        areaRatio: 1,\n        borderColor: [0, 0, 0, 1]\n    };\n    this.pointcloud = createPointCloudRenderer(scene.glplot, this.pointcloudOptions);\n    this.pointcloud._trace = this; // scene2d requires this prop\n}\n\nvar proto = Pointcloud.prototype;\n\nproto.handlePick = function(pickResult) {\n    var index = this.idToIndex[pickResult.pointId];\n\n    // prefer the readout from XY, if present\n    return {\n        trace: this,\n        dataCoord: pickResult.dataCoord,\n        traceCoord: this.pickXYData ?\n            [this.pickXYData[index * 2], this.pickXYData[index * 2 + 1]] :\n            [this.pickXData[index], this.pickYData[index]],\n        textLabel: isArrayOrTypedArray(this.textLabels) ?\n            this.textLabels[index] :\n            this.textLabels,\n        color: this.color,\n        name: this.name,\n        pointIndex: index,\n        hoverinfo: this.hoverinfo\n    };\n};\n\nproto.update = function(options) {\n    this.index = options.index;\n    this.textLabels = options.text;\n    this.name = options.name;\n    this.hoverinfo = options.hoverinfo;\n    this.bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n    this.updateFast(options);\n\n    this.color = getTraceColor(options, {});\n};\n\nproto.updateFast = function(options) {\n    var x = this.xData = this.pickXData = options.x;\n    var y = this.yData = this.pickYData = options.y;\n    var xy = this.pickXYData = options.xy;\n\n    var userBounds = options.xbounds && options.ybounds;\n    var index = options.indices;\n\n    var len;\n    var idToIndex;\n    var positions;\n    var bounds = this.bounds;\n\n    var xx, yy, i;\n\n    if(xy) {\n        positions = xy;\n\n        // dividing xy.length by 2 and truncating to integer if xy.length was not even\n        len = xy.length >>> 1;\n\n        if(userBounds) {\n            bounds[0] = options.xbounds[0];\n            bounds[2] = options.xbounds[1];\n            bounds[1] = options.ybounds[0];\n            bounds[3] = options.ybounds[1];\n        } else {\n            for(i = 0; i < len; i++) {\n                xx = positions[i * 2];\n                yy = positions[i * 2 + 1];\n\n                if(xx < bounds[0]) bounds[0] = xx;\n                if(xx > bounds[2]) bounds[2] = xx;\n                if(yy < bounds[1]) bounds[1] = yy;\n                if(yy > bounds[3]) bounds[3] = yy;\n            }\n        }\n\n        if(index) {\n            idToIndex = index;\n        } else {\n            idToIndex = new Int32Array(len);\n\n            for(i = 0; i < len; i++) {\n                idToIndex[i] = i;\n            }\n        }\n    } else {\n        len = x.length;\n\n        positions = new Float32Array(2 * len);\n        idToIndex = new Int32Array(len);\n\n        for(i = 0; i < len; i++) {\n            xx = x[i];\n            yy = y[i];\n\n            idToIndex[i] = i;\n\n            positions[i * 2] = xx;\n            positions[i * 2 + 1] = yy;\n\n            if(xx < bounds[0]) bounds[0] = xx;\n            if(xx > bounds[2]) bounds[2] = xx;\n            if(yy < bounds[1]) bounds[1] = yy;\n            if(yy > bounds[3]) bounds[3] = yy;\n        }\n    }\n\n    this.idToIndex = idToIndex;\n    this.pointcloudOptions.idToIndex = idToIndex;\n\n    this.pointcloudOptions.positions = positions;\n\n    var markerColor = str2RGBArray(options.marker.color);\n    var borderColor = str2RGBArray(options.marker.border.color);\n    var opacity = options.opacity * options.marker.opacity;\n\n    markerColor[3] *= opacity;\n    this.pointcloudOptions.color = markerColor;\n\n    // detect blending from the number of points, if undefined\n    // because large data with blending hits performance\n    var blend = options.marker.blend;\n    if(blend === null) {\n        var maxPoints = 100;\n        blend = x.length < maxPoints || y.length < maxPoints;\n    }\n    this.pointcloudOptions.blend = blend;\n\n    borderColor[3] *= opacity;\n    this.pointcloudOptions.borderColor = borderColor;\n\n    var markerSizeMin = options.marker.sizemin;\n    var markerSizeMax = Math.max(options.marker.sizemax, options.marker.sizemin);\n    this.pointcloudOptions.sizeMin = markerSizeMin;\n    this.pointcloudOptions.sizeMax = markerSizeMax;\n    this.pointcloudOptions.areaRatio = options.marker.border.arearatio;\n\n    this.pointcloud.update(this.pointcloudOptions);\n\n    // add item for autorange routine\n    var xa = this.scene.xaxis;\n    var ya = this.scene.yaxis;\n    var pad = markerSizeMax / 2 || 0.5;\n    options._extremes[xa._id] = findExtremes(xa, [bounds[0], bounds[2]], {ppad: pad});\n    options._extremes[ya._id] = findExtremes(ya, [bounds[1], bounds[3]], {ppad: pad});\n};\n\nproto.dispose = function() {\n    this.pointcloud.dispose();\n};\n\nfunction createPointcloud(scene, data) {\n    var plot = new Pointcloud(scene, data.uid);\n    plot.update(data);\n    return plot;\n}\n\nmodule.exports = createPointcloud;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}