{"ast":null,"code":"'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar makeFillcolorAttr = require('../scatter/fillcolor_attribute');\nvar scatterAttrs = require('../scatter/attributes');\nvar baseAttrs = require('../../plots/attributes');\nvar lineAttrs = scatterAttrs.line;\nmodule.exports = {\n  mode: scatterAttrs.mode,\n  real: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: ['Sets the real component of the data, in units of normalized impedance', 'such that real=1, imag=0 is the center of the chart.'].join(' ')\n  },\n  imag: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: ['Sets the imaginary component of the data, in units of normalized impedance', 'such that real=1, imag=0 is the center of the chart.'].join(' ')\n  },\n  text: scatterAttrs.text,\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: ['real', 'imag', 'text']\n  }),\n  hovertext: scatterAttrs.hovertext,\n  line: {\n    color: lineAttrs.color,\n    width: lineAttrs.width,\n    dash: lineAttrs.dash,\n    backoff: lineAttrs.backoff,\n    shape: extendFlat({}, lineAttrs.shape, {\n      values: ['linear', 'spline']\n    }),\n    smoothing: lineAttrs.smoothing,\n    editType: 'calc'\n  },\n  connectgaps: scatterAttrs.connectgaps,\n  marker: scatterAttrs.marker,\n  cliponaxis: extendFlat({}, scatterAttrs.cliponaxis, {\n    dflt: false\n  }),\n  textposition: scatterAttrs.textposition,\n  textfont: scatterAttrs.textfont,\n  fill: extendFlat({}, scatterAttrs.fill, {\n    values: ['none', 'toself', 'tonext'],\n    dflt: 'none',\n    description: ['Sets the area to fill with a solid color.', 'Use with `fillcolor` if not *none*.', 'scattersmith has a subset of the options available to scatter.', '*toself* connects the endpoints of the trace (or each segment', 'of the trace if it has gaps) into a closed shape.', '*tonext* fills the space between two traces if one completely', 'encloses the other (eg consecutive contour lines), and behaves like', '*toself* if there is no trace before it. *tonext* should not be', 'used if one trace does not enclose the other.'].join(' ')\n  }),\n  fillcolor: makeFillcolorAttr(),\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    flags: ['real', 'imag', 'text', 'name']\n  }),\n  hoveron: scatterAttrs.hoveron,\n  hovertemplate: hovertemplateAttrs(),\n  selected: scatterAttrs.selected,\n  unselected: scatterAttrs.unselected\n};","map":{"version":3,"names":["hovertemplateAttrs","require","texttemplateAttrs","extendFlat","makeFillcolorAttr","scatterAttrs","baseAttrs","lineAttrs","line","module","exports","mode","real","valType","editType","description","join","imag","text","texttemplate","keys","hovertext","color","width","dash","backoff","shape","values","smoothing","connectgaps","marker","cliponaxis","dflt","textposition","textfont","fill","fillcolor","hoverinfo","flags","hoveron","hovertemplate","selected","unselected"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scattersmith/attributes.js"],"sourcesContent":["'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar makeFillcolorAttr = require('../scatter/fillcolor_attribute');\nvar scatterAttrs = require('../scatter/attributes');\nvar baseAttrs = require('../../plots/attributes');\nvar lineAttrs = scatterAttrs.line;\n\nmodule.exports = {\n    mode: scatterAttrs.mode,\n\n    real: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets the real component of the data, in units of normalized impedance',\n            'such that real=1, imag=0 is the center of the chart.'\n        ].join(' ')\n    },\n\n    imag: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets the imaginary component of the data, in units of normalized impedance',\n            'such that real=1, imag=0 is the center of the chart.'\n        ].join(' ')\n    },\n\n    text: scatterAttrs.text,\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\n        keys: ['real', 'imag', 'text']\n    }),\n    hovertext: scatterAttrs.hovertext,\n\n    line: {\n        color: lineAttrs.color,\n        width: lineAttrs.width,\n        dash: lineAttrs.dash,\n        backoff: lineAttrs.backoff,\n        shape: extendFlat({}, lineAttrs.shape, {\n            values: ['linear', 'spline']\n        }),\n        smoothing: lineAttrs.smoothing,\n        editType: 'calc'\n    },\n    connectgaps: scatterAttrs.connectgaps,\n\n    marker: scatterAttrs.marker,\n    cliponaxis: extendFlat({}, scatterAttrs.cliponaxis, {dflt: false}),\n\n    textposition: scatterAttrs.textposition,\n    textfont: scatterAttrs.textfont,\n\n    fill: extendFlat({}, scatterAttrs.fill, {\n        values: ['none', 'toself', 'tonext'],\n        dflt: 'none',\n        description: [\n            'Sets the area to fill with a solid color.',\n            'Use with `fillcolor` if not *none*.',\n            'scattersmith has a subset of the options available to scatter.',\n            '*toself* connects the endpoints of the trace (or each segment',\n            'of the trace if it has gaps) into a closed shape.',\n            '*tonext* fills the space between two traces if one completely',\n            'encloses the other (eg consecutive contour lines), and behaves like',\n            '*toself* if there is no trace before it. *tonext* should not be',\n            'used if one trace does not enclose the other.'\n        ].join(' ')\n    }),\n    fillcolor: makeFillcolorAttr(),\n\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n        flags: ['real', 'imag', 'text', 'name']\n    }),\n    hoveron: scatterAttrs.hoveron,\n    hovertemplate: hovertemplateAttrs(),\n\n    selected: scatterAttrs.selected,\n    unselected: scatterAttrs.unselected\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}