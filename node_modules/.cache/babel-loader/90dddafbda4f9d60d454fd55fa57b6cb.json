{"ast":null,"code":"'use strict';\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar getModuleCalcData = require('../../plots/get_data').getModuleCalcData;\nvar plot = require('./plot');\nvar fxAttrs = require('../../components/fx/layout_attributes');\nvar setCursor = require('../../lib/setcursor');\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../../components/selections').prepSelect;\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\nvar SANKEY = 'sankey';\nexports.name = SANKEY;\nexports.baseLayoutAttrOverrides = overrideAll({\n  hoverlabel: fxAttrs.hoverlabel\n}, 'plot', 'nested');\nexports.plot = function (gd) {\n  var calcData = getModuleCalcData(gd.calcdata, SANKEY)[0];\n  plot(gd, calcData);\n  exports.updateFx(gd);\n};\nexports.clean = function (newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var hadPlot = oldFullLayout._has && oldFullLayout._has(SANKEY);\n  var hasPlot = newFullLayout._has && newFullLayout._has(SANKEY);\n  if (hadPlot && !hasPlot) {\n    oldFullLayout._paperdiv.selectAll('.sankey').remove();\n    oldFullLayout._paperdiv.selectAll('.bgsankey').remove();\n  }\n};\nexports.updateFx = function (gd) {\n  for (var i = 0; i < gd._fullData.length; i++) {\n    subplotUpdateFx(gd, i);\n  }\n};\nfunction subplotUpdateFx(gd, index) {\n  var trace = gd._fullData[index];\n  var fullLayout = gd._fullLayout;\n  var dragMode = fullLayout.dragmode;\n  var cursor = fullLayout.dragmode === 'pan' ? 'move' : 'crosshair';\n  var bgRect = trace._bgRect;\n  if (!bgRect) return;\n  if (dragMode === 'pan' || dragMode === 'zoom') return;\n  setCursor(bgRect, cursor);\n  var xaxis = {\n    _id: 'x',\n    c2p: Lib.identity,\n    _offset: trace._sankey.translateX,\n    _length: trace._sankey.width\n  };\n  var yaxis = {\n    _id: 'y',\n    c2p: Lib.identity,\n    _offset: trace._sankey.translateY,\n    _length: trace._sankey.height\n  };\n\n  // Note: dragOptions is needed to be declared for all dragmodes because\n  // it's the object that holds persistent selection state.\n  var dragOptions = {\n    gd: gd,\n    element: bgRect.node(),\n    plotinfo: {\n      id: index,\n      xaxis: xaxis,\n      yaxis: yaxis,\n      fillRangeItems: Lib.noop\n    },\n    subplot: index,\n    // create mock x/y axes for hover routine\n    xaxes: [xaxis],\n    yaxes: [yaxis],\n    doneFnCompleted: function (selection) {\n      var traceNow = gd._fullData[index];\n      var newGroups;\n      var oldGroups = traceNow.node.groups.slice();\n      var newGroup = [];\n      function findNode(pt) {\n        var nodes = traceNow._sankey.graph.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n          if (nodes[i].pointNumber === pt) return nodes[i];\n        }\n      }\n      for (var j = 0; j < selection.length; j++) {\n        var node = findNode(selection[j].pointNumber);\n        if (!node) continue;\n\n        // If the node represents a group\n        if (node.group) {\n          // Add all its children to the current selection\n          for (var k = 0; k < node.childrenNodes.length; k++) {\n            newGroup.push(node.childrenNodes[k].pointNumber);\n          }\n          // Flag group for removal from existing list of groups\n          oldGroups[node.pointNumber - traceNow.node._count] = false;\n        } else {\n          newGroup.push(node.pointNumber);\n        }\n      }\n      newGroups = oldGroups.filter(Boolean).concat([newGroup]);\n      Registry.call('_guiRestyle', gd, {\n        'node.groups': [newGroups]\n      }, index);\n    }\n  };\n  dragOptions.prepFn = function (e, startX, startY) {\n    prepSelect(e, startX, startY, dragOptions, dragMode);\n  };\n  dragElement.init(dragOptions);\n}","map":{"version":3,"names":["overrideAll","require","getModuleCalcData","plot","fxAttrs","setCursor","dragElement","prepSelect","Lib","Registry","SANKEY","exports","name","baseLayoutAttrOverrides","hoverlabel","gd","calcData","calcdata","updateFx","clean","newFullData","newFullLayout","oldFullData","oldFullLayout","hadPlot","_has","hasPlot","_paperdiv","selectAll","remove","i","_fullData","length","subplotUpdateFx","index","trace","fullLayout","_fullLayout","dragMode","dragmode","cursor","bgRect","_bgRect","xaxis","_id","c2p","identity","_offset","_sankey","translateX","_length","width","yaxis","translateY","height","dragOptions","element","node","plotinfo","id","fillRangeItems","noop","subplot","xaxes","yaxes","doneFnCompleted","selection","traceNow","newGroups","oldGroups","groups","slice","newGroup","findNode","pt","nodes","graph","pointNumber","j","group","k","childrenNodes","push","_count","filter","Boolean","concat","call","prepFn","e","startX","startY","init"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/sankey/base_plot.js"],"sourcesContent":["'use strict';\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar getModuleCalcData = require('../../plots/get_data').getModuleCalcData;\nvar plot = require('./plot');\nvar fxAttrs = require('../../components/fx/layout_attributes');\n\nvar setCursor = require('../../lib/setcursor');\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../../components/selections').prepSelect;\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\n\nvar SANKEY = 'sankey';\n\nexports.name = SANKEY;\n\nexports.baseLayoutAttrOverrides = overrideAll({\n    hoverlabel: fxAttrs.hoverlabel\n}, 'plot', 'nested');\n\nexports.plot = function(gd) {\n    var calcData = getModuleCalcData(gd.calcdata, SANKEY)[0];\n    plot(gd, calcData);\n    exports.updateFx(gd);\n};\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var hadPlot = (oldFullLayout._has && oldFullLayout._has(SANKEY));\n    var hasPlot = (newFullLayout._has && newFullLayout._has(SANKEY));\n\n    if(hadPlot && !hasPlot) {\n        oldFullLayout._paperdiv.selectAll('.sankey').remove();\n        oldFullLayout._paperdiv.selectAll('.bgsankey').remove();\n    }\n};\n\nexports.updateFx = function(gd) {\n    for(var i = 0; i < gd._fullData.length; i++) {\n        subplotUpdateFx(gd, i);\n    }\n};\n\nfunction subplotUpdateFx(gd, index) {\n    var trace = gd._fullData[index];\n    var fullLayout = gd._fullLayout;\n\n    var dragMode = fullLayout.dragmode;\n    var cursor = fullLayout.dragmode === 'pan' ? 'move' : 'crosshair';\n    var bgRect = trace._bgRect;\n    if(!bgRect) return;\n\n    if(dragMode === 'pan' || dragMode === 'zoom') return;\n\n    setCursor(bgRect, cursor);\n\n    var xaxis = {\n        _id: 'x',\n        c2p: Lib.identity,\n        _offset: trace._sankey.translateX,\n        _length: trace._sankey.width\n    };\n    var yaxis = {\n        _id: 'y',\n        c2p: Lib.identity,\n        _offset: trace._sankey.translateY,\n        _length: trace._sankey.height\n    };\n\n    // Note: dragOptions is needed to be declared for all dragmodes because\n    // it's the object that holds persistent selection state.\n    var dragOptions = {\n        gd: gd,\n        element: bgRect.node(),\n        plotinfo: {\n            id: index,\n            xaxis: xaxis,\n            yaxis: yaxis,\n            fillRangeItems: Lib.noop\n        },\n        subplot: index,\n        // create mock x/y axes for hover routine\n        xaxes: [xaxis],\n        yaxes: [yaxis],\n        doneFnCompleted: function(selection) {\n            var traceNow = gd._fullData[index];\n            var newGroups;\n            var oldGroups = traceNow.node.groups.slice();\n            var newGroup = [];\n\n            function findNode(pt) {\n                var nodes = traceNow._sankey.graph.nodes;\n                for(var i = 0; i < nodes.length; i++) {\n                    if(nodes[i].pointNumber === pt) return nodes[i];\n                }\n            }\n\n            for(var j = 0; j < selection.length; j++) {\n                var node = findNode(selection[j].pointNumber);\n                if(!node) continue;\n\n                // If the node represents a group\n                if(node.group) {\n                    // Add all its children to the current selection\n                    for(var k = 0; k < node.childrenNodes.length; k++) {\n                        newGroup.push(node.childrenNodes[k].pointNumber);\n                    }\n                    // Flag group for removal from existing list of groups\n                    oldGroups[node.pointNumber - traceNow.node._count] = false;\n                } else {\n                    newGroup.push(node.pointNumber);\n                }\n            }\n\n            newGroups = oldGroups\n                .filter(Boolean)\n                .concat([newGroup]);\n\n            Registry.call('_guiRestyle', gd, {\n                'node.groups': [ newGroups ]\n            }, index);\n        }\n    };\n\n    dragOptions.prepFn = function(e, startX, startY) {\n        prepSelect(e, startX, startY, dragOptions, dragMode);\n    };\n\n    dragElement.init(dragOptions);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}