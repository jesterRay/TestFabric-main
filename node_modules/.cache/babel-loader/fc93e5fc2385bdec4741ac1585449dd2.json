{"ast":null,"code":"'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\nmodule.exports = templatedArray('image', {\n  visible: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'arraydraw',\n    description: ['Determines whether or not this image is visible.'].join(' ')\n  },\n  source: {\n    valType: 'string',\n    editType: 'arraydraw',\n    description: ['Specifies the URL of the image to be used.', 'The URL must be accessible from the domain where the', 'plot code is run, and can be either relative or absolute.'].join(' ')\n  },\n  layer: {\n    valType: 'enumerated',\n    values: ['below', 'above'],\n    dflt: 'above',\n    editType: 'arraydraw',\n    description: ['Specifies whether images are drawn below or above traces.', 'When `xref` and `yref` are both set to `paper`,', 'image is drawn below the entire plot area.'].join(' ')\n  },\n  sizex: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size horizontally.', 'The image will be sized based on the `position` value.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot width.', 'When `xref` ends with ` domain`, units are sized relative', 'to the axis width.'].join(' ')\n  },\n  sizey: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size vertically.', 'The image will be sized based on the `position` value.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'When `yref` ends with ` domain`, units are sized relative', 'to the axis height.'].join(' ')\n  },\n  sizing: {\n    valType: 'enumerated',\n    values: ['fill', 'contain', 'stretch'],\n    dflt: 'contain',\n    editType: 'arraydraw',\n    description: ['Specifies which dimension of the image to constrain.'].join(' ')\n  },\n  opacity: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 1,\n    editType: 'arraydraw',\n    description: 'Sets the opacity of the image.'\n  },\n  x: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s x position.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `xref` for more info'].join(' ')\n  },\n  y: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s y position.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `yref` for more info'].join(' ')\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['left', 'center', 'right'],\n    dflt: 'left',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the x position'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['top', 'middle', 'bottom'],\n    dflt: 'top',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the y position.'\n  },\n  xref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.x.toString()],\n    dflt: 'paper',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s x coordinate axis.', axisPlaceableObjs.axisRefDescription('x', 'left', 'right')].join(' ')\n  },\n  yref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.y.toString()],\n    dflt: 'paper',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s y coordinate axis.', axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top')].join(' ')\n  },\n  editType: 'arraydraw'\n});","map":{"version":3,"names":["cartesianConstants","require","templatedArray","axisPlaceableObjs","module","exports","visible","valType","dflt","editType","description","join","source","layer","values","sizex","sizey","sizing","opacity","min","max","x","y","xanchor","yanchor","xref","idRegex","toString","axisRefDescription","yref"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/images/attributes.js"],"sourcesContent":["'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\n\n\nmodule.exports = templatedArray('image', {\n    visible: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'arraydraw',\n        description: [\n            'Determines whether or not this image is visible.'\n        ].join(' ')\n    },\n\n    source: {\n        valType: 'string',\n        editType: 'arraydraw',\n        description: [\n            'Specifies the URL of the image to be used.',\n            'The URL must be accessible from the domain where the',\n            'plot code is run, and can be either relative or absolute.'\n\n        ].join(' ')\n    },\n\n    layer: {\n        valType: 'enumerated',\n        values: ['below', 'above'],\n        dflt: 'above',\n        editType: 'arraydraw',\n        description: [\n            'Specifies whether images are drawn below or above traces.',\n            'When `xref` and `yref` are both set to `paper`,',\n            'image is drawn below the entire plot area.'\n        ].join(' ')\n    },\n\n    sizex: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size horizontally.',\n            'The image will be sized based on the `position` value.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot width.',\n            'When `xref` ends with ` domain`, units are sized relative',\n            'to the axis width.',\n        ].join(' ')\n    },\n\n    sizey: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size vertically.',\n            'The image will be sized based on the `position` value.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'When `yref` ends with ` domain`, units are sized relative',\n            'to the axis height.'\n        ].join(' ')\n    },\n\n    sizing: {\n        valType: 'enumerated',\n        values: ['fill', 'contain', 'stretch'],\n        dflt: 'contain',\n        editType: 'arraydraw',\n        description: [\n            'Specifies which dimension of the image to constrain.'\n        ].join(' ')\n    },\n\n    opacity: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        editType: 'arraydraw',\n        description: 'Sets the opacity of the image.'\n    },\n\n    x: {\n        valType: 'any',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s x position.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `xref` for more info'\n        ].join(' ')\n    },\n\n    y: {\n        valType: 'any',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s y position.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `yref` for more info'\n        ].join(' ')\n    },\n\n    xanchor: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right'],\n        dflt: 'left',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the x position'\n    },\n\n    yanchor: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        dflt: 'top',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the y position.'\n    },\n\n    xref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.x.toString()\n        ],\n        dflt: 'paper',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s x coordinate axis.',\n            axisPlaceableObjs.axisRefDescription('x', 'left', 'right'),\n        ].join(' ')\n    },\n\n    yref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.y.toString()\n        ],\n        dflt: 'paper',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s y coordinate axis.',\n            axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top'),\n        ].join(' ')\n    },\n    editType: 'arraydraw'\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}