{"ast":null,"code":"/* @module to-float32 */\n\n'use strict';\n\nmodule.exports = float32;\nmodule.exports.float32 = module.exports.float = float32;\nmodule.exports.fract32 = module.exports.fract = fract32;\nvar narr = new Float32Array(1);\n\n// Returns fractional part of float32 array\nfunction fract32(arr, fract) {\n  if (arr.length) {\n    if (arr instanceof Float32Array) return new Float32Array(arr.length);\n    if (!(fract instanceof Float32Array)) fract = float32(arr);\n    for (var i = 0, l = fract.length; i < l; i++) {\n      fract[i] = arr[i] - fract[i];\n    }\n    return fract;\n  }\n\n  // number\n  return float32(arr - float32(arr));\n}\n\n// Make sure data is float32 array\nfunction float32(arr) {\n  if (arr.length) {\n    if (arr instanceof Float32Array) return arr;\n    return new Float32Array(arr);\n  }\n\n  // number\n  narr[0] = arr;\n  return narr[0];\n}","map":{"version":3,"names":["module","exports","float32","float","fract32","fract","narr","Float32Array","arr","length","i","l"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/to-float32/index.js"],"sourcesContent":["/* @module to-float32 */\r\n\r\n'use strict'\r\n\r\nmodule.exports = float32\r\nmodule.exports.float32 =\r\nmodule.exports.float = float32\r\nmodule.exports.fract32 =\r\nmodule.exports.fract = fract32\r\n\r\nvar narr = new Float32Array(1)\r\n\r\n// Returns fractional part of float32 array\r\nfunction fract32 (arr, fract) {\r\n\tif (arr.length) {\r\n\t\tif (arr instanceof Float32Array) return new Float32Array(arr.length);\r\n\t\tif (!(fract instanceof Float32Array)) fract = float32(arr)\r\n\t\tfor (var i = 0, l = fract.length; i < l; i++) {\r\n\t\t\tfract[i] = arr[i] - fract[i]\r\n\t\t}\r\n\t\treturn fract\r\n\t}\r\n\r\n\t// number\r\n\treturn float32(arr - float32(arr))\r\n}\r\n\r\n// Make sure data is float32 array\r\nfunction float32 (arr) {\r\n\tif (arr.length) {\r\n\t\tif (arr instanceof Float32Array) return arr\r\n\t\treturn new Float32Array(arr);\r\n\t}\r\n\r\n\t// number\r\n\tnarr[0] = arr\r\n\treturn narr[0]\r\n}\r\n"],"mappings":"AAAA;;AAEA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,OAAO;AACxBF,MAAM,CAACC,OAAO,CAACC,OAAO,GACtBF,MAAM,CAACC,OAAO,CAACE,KAAK,GAAGD,OAAO;AAC9BF,MAAM,CAACC,OAAO,CAACG,OAAO,GACtBJ,MAAM,CAACC,OAAO,CAACI,KAAK,GAAGD,OAAO;AAE9B,IAAIE,IAAI,GAAG,IAAIC,YAAY,CAAC,CAAC,CAAC;;AAE9B;AACA,SAASH,OAAOA,CAAEI,GAAG,EAAEH,KAAK,EAAE;EAC7B,IAAIG,GAAG,CAACC,MAAM,EAAE;IACf,IAAID,GAAG,YAAYD,YAAY,EAAE,OAAO,IAAIA,YAAY,CAACC,GAAG,CAACC,MAAM,CAAC;IACpE,IAAI,EAAEJ,KAAK,YAAYE,YAAY,CAAC,EAAEF,KAAK,GAAGH,OAAO,CAACM,GAAG,CAAC;IAC1D,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGN,KAAK,CAACI,MAAM,EAAEC,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MAC7CL,KAAK,CAACK,CAAC,CAAC,GAAGF,GAAG,CAACE,CAAC,CAAC,GAAGL,KAAK,CAACK,CAAC,CAAC;IAC7B;IACA,OAAOL,KAAK;EACb;;EAEA;EACA,OAAOH,OAAO,CAACM,GAAG,GAAGN,OAAO,CAACM,GAAG,CAAC,CAAC;AACnC;;AAEA;AACA,SAASN,OAAOA,CAAEM,GAAG,EAAE;EACtB,IAAIA,GAAG,CAACC,MAAM,EAAE;IACf,IAAID,GAAG,YAAYD,YAAY,EAAE,OAAOC,GAAG;IAC3C,OAAO,IAAID,YAAY,CAACC,GAAG,CAAC;EAC7B;;EAEA;EACAF,IAAI,CAAC,CAAC,CAAC,GAAGE,GAAG;EACb,OAAOF,IAAI,CAAC,CAAC,CAAC;AACf","ignoreList":[]},"metadata":{},"sourceType":"script"}