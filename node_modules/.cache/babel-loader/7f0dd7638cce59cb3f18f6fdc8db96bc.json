{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('./helpers').hasColorscale;\nvar extractOpts = require('./helpers').extractOpts;\nmodule.exports = function crossTraceDefaults(fullData, fullLayout) {\n  function replace(cont, k) {\n    var val = cont['_' + k];\n    if (val !== undefined) {\n      cont[k] = val;\n    }\n  }\n  function relinkColorAttrs(outerCont, cbOpt) {\n    var cont = cbOpt.container ? Lib.nestedProperty(outerCont, cbOpt.container).get() : outerCont;\n    if (cont) {\n      if (cont.coloraxis) {\n        // stash ref to color axis\n        cont._colorAx = fullLayout[cont.coloraxis];\n      } else {\n        var cOpts = extractOpts(cont);\n        var isAuto = cOpts.auto;\n        if (isAuto || cOpts.min === undefined) {\n          replace(cont, cbOpt.min);\n        }\n        if (isAuto || cOpts.max === undefined) {\n          replace(cont, cbOpt.max);\n        }\n        if (cOpts.autocolorscale) {\n          replace(cont, 'colorscale');\n        }\n      }\n    }\n  }\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    var cbOpts = trace._module.colorbar;\n    if (cbOpts) {\n      if (Array.isArray(cbOpts)) {\n        for (var j = 0; j < cbOpts.length; j++) {\n          relinkColorAttrs(trace, cbOpts[j]);\n        }\n      } else {\n        relinkColorAttrs(trace, cbOpts);\n      }\n    }\n    if (hasColorscale(trace, 'marker.line')) {\n      relinkColorAttrs(trace, {\n        container: 'marker.line',\n        min: 'cmin',\n        max: 'cmax'\n      });\n    }\n  }\n  for (var k in fullLayout._colorAxes) {\n    relinkColorAttrs(fullLayout[k], {\n      min: 'cmin',\n      max: 'cmax'\n    });\n  }\n};","map":{"version":3,"names":["Lib","require","hasColorscale","extractOpts","module","exports","crossTraceDefaults","fullData","fullLayout","replace","cont","k","val","undefined","relinkColorAttrs","outerCont","cbOpt","container","nestedProperty","get","coloraxis","_colorAx","cOpts","isAuto","auto","min","max","autocolorscale","i","length","trace","cbOpts","_module","colorbar","Array","isArray","j","_colorAxes"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/colorscale/cross_trace_defaults.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('./helpers').hasColorscale;\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function crossTraceDefaults(fullData, fullLayout) {\n    function replace(cont, k) {\n        var val = cont['_' + k];\n        if(val !== undefined) {\n            cont[k] = val;\n        }\n    }\n\n    function relinkColorAttrs(outerCont, cbOpt) {\n        var cont = cbOpt.container ?\n            Lib.nestedProperty(outerCont, cbOpt.container).get() :\n            outerCont;\n\n        if(cont) {\n            if(cont.coloraxis) {\n                // stash ref to color axis\n                cont._colorAx = fullLayout[cont.coloraxis];\n            } else {\n                var cOpts = extractOpts(cont);\n                var isAuto = cOpts.auto;\n\n                if(isAuto || cOpts.min === undefined) {\n                    replace(cont, cbOpt.min);\n                }\n                if(isAuto || cOpts.max === undefined) {\n                    replace(cont, cbOpt.max);\n                }\n                if(cOpts.autocolorscale) {\n                    replace(cont, 'colorscale');\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        var cbOpts = trace._module.colorbar;\n\n        if(cbOpts) {\n            if(Array.isArray(cbOpts)) {\n                for(var j = 0; j < cbOpts.length; j++) {\n                    relinkColorAttrs(trace, cbOpts[j]);\n                }\n            } else {\n                relinkColorAttrs(trace, cbOpts);\n            }\n        }\n\n        if(hasColorscale(trace, 'marker.line')) {\n            relinkColorAttrs(trace, {\n                container: 'marker.line',\n                min: 'cmin',\n                max: 'cmax'\n            });\n        }\n    }\n\n    for(var k in fullLayout._colorAxes) {\n        relinkColorAttrs(fullLayout[k], {min: 'cmin', max: 'cmax'});\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIC,aAAa,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,aAAa;AACtD,IAAIC,WAAW,GAAGF,OAAO,CAAC,WAAW,CAAC,CAACE,WAAW;AAElDC,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAC/D,SAASC,OAAOA,CAACC,IAAI,EAAEC,CAAC,EAAE;IACtB,IAAIC,GAAG,GAAGF,IAAI,CAAC,GAAG,GAAGC,CAAC,CAAC;IACvB,IAAGC,GAAG,KAAKC,SAAS,EAAE;MAClBH,IAAI,CAACC,CAAC,CAAC,GAAGC,GAAG;IACjB;EACJ;EAEA,SAASE,gBAAgBA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACxC,IAAIN,IAAI,GAAGM,KAAK,CAACC,SAAS,GACtBjB,GAAG,CAACkB,cAAc,CAACH,SAAS,EAAEC,KAAK,CAACC,SAAS,CAAC,CAACE,GAAG,CAAC,CAAC,GACpDJ,SAAS;IAEb,IAAGL,IAAI,EAAE;MACL,IAAGA,IAAI,CAACU,SAAS,EAAE;QACf;QACAV,IAAI,CAACW,QAAQ,GAAGb,UAAU,CAACE,IAAI,CAACU,SAAS,CAAC;MAC9C,CAAC,MAAM;QACH,IAAIE,KAAK,GAAGnB,WAAW,CAACO,IAAI,CAAC;QAC7B,IAAIa,MAAM,GAAGD,KAAK,CAACE,IAAI;QAEvB,IAAGD,MAAM,IAAID,KAAK,CAACG,GAAG,KAAKZ,SAAS,EAAE;UAClCJ,OAAO,CAACC,IAAI,EAAEM,KAAK,CAACS,GAAG,CAAC;QAC5B;QACA,IAAGF,MAAM,IAAID,KAAK,CAACI,GAAG,KAAKb,SAAS,EAAE;UAClCJ,OAAO,CAACC,IAAI,EAAEM,KAAK,CAACU,GAAG,CAAC;QAC5B;QACA,IAAGJ,KAAK,CAACK,cAAc,EAAE;UACrBlB,OAAO,CAACC,IAAI,EAAE,YAAY,CAAC;QAC/B;MACJ;IACJ;EACJ;EAEA,KAAI,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,QAAQ,CAACsB,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIE,KAAK,GAAGvB,QAAQ,CAACqB,CAAC,CAAC;IACvB,IAAIG,MAAM,GAAGD,KAAK,CAACE,OAAO,CAACC,QAAQ;IAEnC,IAAGF,MAAM,EAAE;MACP,IAAGG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;QACtB,KAAI,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACF,MAAM,EAAEO,CAAC,EAAE,EAAE;UACnCtB,gBAAgB,CAACgB,KAAK,EAAEC,MAAM,CAACK,CAAC,CAAC,CAAC;QACtC;MACJ,CAAC,MAAM;QACHtB,gBAAgB,CAACgB,KAAK,EAAEC,MAAM,CAAC;MACnC;IACJ;IAEA,IAAG7B,aAAa,CAAC4B,KAAK,EAAE,aAAa,CAAC,EAAE;MACpChB,gBAAgB,CAACgB,KAAK,EAAE;QACpBb,SAAS,EAAE,aAAa;QACxBQ,GAAG,EAAE,MAAM;QACXC,GAAG,EAAE;MACT,CAAC,CAAC;IACN;EACJ;EAEA,KAAI,IAAIf,CAAC,IAAIH,UAAU,CAAC6B,UAAU,EAAE;IAChCvB,gBAAgB,CAACN,UAAU,CAACG,CAAC,CAAC,EAAE;MAACc,GAAG,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAM,CAAC,CAAC;EAC/D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}