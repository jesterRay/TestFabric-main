{"ast":null,"code":"'use strict';\n\n/* eslint-disable consistent-return */\nvar str2arr = require('../common').str2arr;\nvar sliceEq = require('../common').sliceEq;\nvar readUInt16LE = require('../common').readUInt16LE;\nvar readUInt16BE = require('../common').readUInt16BE;\nvar readUInt32LE = require('../common').readUInt32LE;\nvar readUInt32BE = require('../common').readUInt32BE;\nvar SIG_1 = str2arr('II\\x2A\\0');\nvar SIG_2 = str2arr('MM\\0\\x2A');\nfunction readUInt16(buffer, offset, is_big_endian) {\n  return is_big_endian ? readUInt16BE(buffer, offset) : readUInt16LE(buffer, offset);\n}\nfunction readUInt32(buffer, offset, is_big_endian) {\n  return is_big_endian ? readUInt32BE(buffer, offset) : readUInt32LE(buffer, offset);\n}\nfunction readIFDValue(data, data_offset, is_big_endian) {\n  var type = readUInt16(data, data_offset + 2, is_big_endian);\n  var values = readUInt32(data, data_offset + 4, is_big_endian);\n  if (values !== 1 || type !== 3 && type !== 4) return null;\n  if (type === 3) {\n    return readUInt16(data, data_offset + 8, is_big_endian);\n  }\n  return readUInt32(data, data_offset + 8, is_big_endian);\n}\nmodule.exports = function (data) {\n  if (data.length < 8) return;\n\n  // check TIFF signature\n  if (!sliceEq(data, 0, SIG_1) && !sliceEq(data, 0, SIG_2)) return;\n  var is_big_endian = data[0] === 77 /* 'MM' */;\n  var count = readUInt32(data, 4, is_big_endian) - 8;\n  if (count < 0) return;\n\n  // skip until IFD\n  var offset = count + 8;\n  if (data.length - offset < 2) return;\n\n  // read number of IFD entries\n  var ifd_size = readUInt16(data, offset + 0, is_big_endian) * 12;\n  if (ifd_size <= 0) return;\n  offset += 2;\n\n  // read all IFD entries\n  if (data.length - offset < ifd_size) return;\n  var i, width, height, tag;\n  for (i = 0; i < ifd_size; i += 12) {\n    tag = readUInt16(data, offset + i, is_big_endian);\n    if (tag === 256) {\n      width = readIFDValue(data, offset + i, is_big_endian);\n    } else if (tag === 257) {\n      height = readIFDValue(data, offset + i, is_big_endian);\n    }\n  }\n  if (width && height) {\n    return {\n      width: width,\n      height: height,\n      type: 'tiff',\n      mime: 'image/tiff',\n      wUnits: 'px',\n      hUnits: 'px'\n    };\n  }\n};","map":{"version":3,"names":["str2arr","require","sliceEq","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","SIG_1","SIG_2","readUInt16","buffer","offset","is_big_endian","readUInt32","readIFDValue","data","data_offset","type","values","module","exports","length","count","ifd_size","i","width","height","tag","mime","wUnits","hUnits"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/probe-image-size/lib/parse_sync/tiff.js"],"sourcesContent":["'use strict';\n\n/* eslint-disable consistent-return */\n\nvar str2arr = require('../common').str2arr;\nvar sliceEq = require('../common').sliceEq;\nvar readUInt16LE = require('../common').readUInt16LE;\nvar readUInt16BE = require('../common').readUInt16BE;\nvar readUInt32LE = require('../common').readUInt32LE;\nvar readUInt32BE = require('../common').readUInt32BE;\n\n\nvar SIG_1 = str2arr('II\\x2A\\0');\nvar SIG_2 = str2arr('MM\\0\\x2A');\n\n\nfunction readUInt16(buffer, offset, is_big_endian) {\n  return is_big_endian ? readUInt16BE(buffer, offset) : readUInt16LE(buffer, offset);\n}\n\nfunction readUInt32(buffer, offset, is_big_endian) {\n  return is_big_endian ? readUInt32BE(buffer, offset) : readUInt32LE(buffer, offset);\n}\n\nfunction readIFDValue(data, data_offset, is_big_endian) {\n  var type       = readUInt16(data, data_offset + 2, is_big_endian);\n  var values     = readUInt32(data, data_offset + 4, is_big_endian);\n\n  if (values !== 1 || (type !== 3 && type !== 4)) return null;\n\n  if (type === 3) {\n    return readUInt16(data, data_offset + 8, is_big_endian);\n  }\n\n  return readUInt32(data, data_offset + 8, is_big_endian);\n}\n\nmodule.exports = function (data) {\n  if (data.length < 8) return;\n\n  // check TIFF signature\n  if (!sliceEq(data, 0, SIG_1) && !sliceEq(data, 0, SIG_2)) return;\n\n  var is_big_endian = (data[0] === 77 /* 'MM' */);\n  var count = readUInt32(data, 4, is_big_endian) - 8;\n\n  if (count < 0) return;\n\n  // skip until IFD\n  var offset = count + 8;\n\n  if (data.length - offset < 2) return;\n\n  // read number of IFD entries\n  var ifd_size = readUInt16(data, offset + 0, is_big_endian) * 12;\n\n  if (ifd_size <= 0) return;\n\n  offset += 2;\n\n  // read all IFD entries\n  if (data.length - offset < ifd_size) return;\n\n  var i, width, height, tag;\n\n  for (i = 0; i < ifd_size; i += 12) {\n    tag = readUInt16(data, offset + i, is_big_endian);\n\n    if (tag === 256) {\n      width = readIFDValue(data, offset + i, is_big_endian);\n    } else if (tag === 257) {\n      height = readIFDValue(data, offset + i, is_big_endian);\n    }\n  }\n\n  if (width && height) {\n    return {\n      width:  width,\n      height: height,\n      type:   'tiff',\n      mime:   'image/tiff',\n      wUnits: 'px',\n      hUnits: 'px'\n    };\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,OAAO;AAC1C,IAAIE,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,OAAO;AAC1C,IAAIC,YAAY,GAAGF,OAAO,CAAC,WAAW,CAAC,CAACE,YAAY;AACpD,IAAIC,YAAY,GAAGH,OAAO,CAAC,WAAW,CAAC,CAACG,YAAY;AACpD,IAAIC,YAAY,GAAGJ,OAAO,CAAC,WAAW,CAAC,CAACI,YAAY;AACpD,IAAIC,YAAY,GAAGL,OAAO,CAAC,WAAW,CAAC,CAACK,YAAY;AAGpD,IAAIC,KAAK,GAAGP,OAAO,CAAC,UAAU,CAAC;AAC/B,IAAIQ,KAAK,GAAGR,OAAO,CAAC,UAAU,CAAC;AAG/B,SAASS,UAAUA,CAACC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAE;EACjD,OAAOA,aAAa,GAAGR,YAAY,CAACM,MAAM,EAAEC,MAAM,CAAC,GAAGR,YAAY,CAACO,MAAM,EAAEC,MAAM,CAAC;AACpF;AAEA,SAASE,UAAUA,CAACH,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAE;EACjD,OAAOA,aAAa,GAAGN,YAAY,CAACI,MAAM,EAAEC,MAAM,CAAC,GAAGN,YAAY,CAACK,MAAM,EAAEC,MAAM,CAAC;AACpF;AAEA,SAASG,YAAYA,CAACC,IAAI,EAAEC,WAAW,EAAEJ,aAAa,EAAE;EACtD,IAAIK,IAAI,GAASR,UAAU,CAACM,IAAI,EAAEC,WAAW,GAAG,CAAC,EAAEJ,aAAa,CAAC;EACjE,IAAIM,MAAM,GAAOL,UAAU,CAACE,IAAI,EAAEC,WAAW,GAAG,CAAC,EAAEJ,aAAa,CAAC;EAEjE,IAAIM,MAAM,KAAK,CAAC,IAAKD,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,CAAE,EAAE,OAAO,IAAI;EAE3D,IAAIA,IAAI,KAAK,CAAC,EAAE;IACd,OAAOR,UAAU,CAACM,IAAI,EAAEC,WAAW,GAAG,CAAC,EAAEJ,aAAa,CAAC;EACzD;EAEA,OAAOC,UAAU,CAACE,IAAI,EAAEC,WAAW,GAAG,CAAC,EAAEJ,aAAa,CAAC;AACzD;AAEAO,MAAM,CAACC,OAAO,GAAG,UAAUL,IAAI,EAAE;EAC/B,IAAIA,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;;EAErB;EACA,IAAI,CAACnB,OAAO,CAACa,IAAI,EAAE,CAAC,EAAER,KAAK,CAAC,IAAI,CAACL,OAAO,CAACa,IAAI,EAAE,CAAC,EAAEP,KAAK,CAAC,EAAE;EAE1D,IAAII,aAAa,GAAIG,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,UAAW;EAC/C,IAAIO,KAAK,GAAGT,UAAU,CAACE,IAAI,EAAE,CAAC,EAAEH,aAAa,CAAC,GAAG,CAAC;EAElD,IAAIU,KAAK,GAAG,CAAC,EAAE;;EAEf;EACA,IAAIX,MAAM,GAAGW,KAAK,GAAG,CAAC;EAEtB,IAAIP,IAAI,CAACM,MAAM,GAAGV,MAAM,GAAG,CAAC,EAAE;;EAE9B;EACA,IAAIY,QAAQ,GAAGd,UAAU,CAACM,IAAI,EAAEJ,MAAM,GAAG,CAAC,EAAEC,aAAa,CAAC,GAAG,EAAE;EAE/D,IAAIW,QAAQ,IAAI,CAAC,EAAE;EAEnBZ,MAAM,IAAI,CAAC;;EAEX;EACA,IAAII,IAAI,CAACM,MAAM,GAAGV,MAAM,GAAGY,QAAQ,EAAE;EAErC,IAAIC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAEC,GAAG;EAEzB,KAAKH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,IAAI,EAAE,EAAE;IACjCG,GAAG,GAAGlB,UAAU,CAACM,IAAI,EAAEJ,MAAM,GAAGa,CAAC,EAAEZ,aAAa,CAAC;IAEjD,IAAIe,GAAG,KAAK,GAAG,EAAE;MACfF,KAAK,GAAGX,YAAY,CAACC,IAAI,EAAEJ,MAAM,GAAGa,CAAC,EAAEZ,aAAa,CAAC;IACvD,CAAC,MAAM,IAAIe,GAAG,KAAK,GAAG,EAAE;MACtBD,MAAM,GAAGZ,YAAY,CAACC,IAAI,EAAEJ,MAAM,GAAGa,CAAC,EAAEZ,aAAa,CAAC;IACxD;EACF;EAEA,IAAIa,KAAK,IAAIC,MAAM,EAAE;IACnB,OAAO;MACLD,KAAK,EAAGA,KAAK;MACbC,MAAM,EAAEA,MAAM;MACdT,IAAI,EAAI,MAAM;MACdW,IAAI,EAAI,YAAY;MACpBC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACV,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}