{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar hasColorbar = require('../colorbar/has_colorbar');\nvar colorbarDefaults = require('../colorbar/defaults');\nvar isValidScale = require('./scales').isValid;\nvar traceIs = require('../../registry').traceIs;\nfunction npMaybe(parentCont, prefix) {\n  var containerStr = prefix.slice(0, prefix.length - 1);\n  return prefix ? Lib.nestedProperty(parentCont, containerStr).get() || {} : parentCont;\n}\n\n/**\n * Colorscale / colorbar default handler\n *\n * @param {object} parentContIn : user (input) parent container (e.g. trace or layout coloraxis object)\n * @param {object} parentContOut : full parent container\n * @param {object} layout : (full) layout object\n * @param {fn} coerce : Lib.coerce wrapper\n * @param {object} opts :\n * - prefix {string} : attr string prefix to colorscale container from parent root\n * - cLetter {string} : 'c or 'z' color letter\n */\nmodule.exports = function colorScaleDefaults(parentContIn, parentContOut, layout, coerce, opts) {\n  var prefix = opts.prefix;\n  var cLetter = opts.cLetter;\n  var inTrace = '_module' in parentContOut;\n  var containerIn = npMaybe(parentContIn, prefix);\n  var containerOut = npMaybe(parentContOut, prefix);\n  var template = npMaybe(parentContOut._template || {}, prefix) || {};\n\n  // colorScaleDefaults wrapper called if-ever we need to reset the colorscale\n  // attributes for containers that were linked to invalid color axes\n  var thisFn = function () {\n    delete parentContIn.coloraxis;\n    delete parentContOut.coloraxis;\n    return colorScaleDefaults(parentContIn, parentContOut, layout, coerce, opts);\n  };\n  if (inTrace) {\n    var colorAxes = layout._colorAxes || {};\n    var colorAx = coerce(prefix + 'coloraxis');\n    if (colorAx) {\n      var colorbarVisuals = traceIs(parentContOut, 'contour') && Lib.nestedProperty(parentContOut, 'contours.coloring').get() || 'heatmap';\n      var stash = colorAxes[colorAx];\n      if (stash) {\n        stash[2].push(thisFn);\n        if (stash[0] !== colorbarVisuals) {\n          stash[0] = false;\n          Lib.warn(['Ignoring coloraxis:', colorAx, 'setting', 'as it is linked to incompatible colorscales.'].join(' '));\n        }\n      } else {\n        // stash:\n        // - colorbar visual 'type'\n        // - colorbar options to help in Colorbar.draw\n        // - list of colorScaleDefaults wrapper functions\n        colorAxes[colorAx] = [colorbarVisuals, parentContOut, [thisFn]];\n      }\n      return;\n    }\n  }\n  var minIn = containerIn[cLetter + 'min'];\n  var maxIn = containerIn[cLetter + 'max'];\n  var validMinMax = isNumeric(minIn) && isNumeric(maxIn) && minIn < maxIn;\n  var auto = coerce(prefix + cLetter + 'auto', !validMinMax);\n  if (auto) {\n    coerce(prefix + cLetter + 'mid');\n  } else {\n    coerce(prefix + cLetter + 'min');\n    coerce(prefix + cLetter + 'max');\n  }\n\n  // handles both the trace case (autocolorscale is false by default) and\n  // the marker and marker.line case (autocolorscale is true by default)\n  var sclIn = containerIn.colorscale;\n  var sclTemplate = template.colorscale;\n  var autoColorscaleDflt;\n  if (sclIn !== undefined) autoColorscaleDflt = !isValidScale(sclIn);\n  if (sclTemplate !== undefined) autoColorscaleDflt = !isValidScale(sclTemplate);\n  coerce(prefix + 'autocolorscale', autoColorscaleDflt);\n  coerce(prefix + 'colorscale');\n  coerce(prefix + 'reversescale');\n  if (prefix !== 'marker.line.') {\n    // handles both the trace case where the dflt is listed in attributes and\n    // the marker case where the dflt is determined by hasColorbar\n    var showScaleDflt;\n    if (prefix && inTrace) showScaleDflt = hasColorbar(containerIn);\n    var showScale = coerce(prefix + 'showscale', showScaleDflt);\n    if (showScale) {\n      if (prefix && template) containerOut._template = template;\n      colorbarDefaults(containerIn, containerOut, layout);\n    }\n  }\n};","map":{"version":3,"names":["isNumeric","require","Lib","hasColorbar","colorbarDefaults","isValidScale","isValid","traceIs","npMaybe","parentCont","prefix","containerStr","slice","length","nestedProperty","get","module","exports","colorScaleDefaults","parentContIn","parentContOut","layout","coerce","opts","cLetter","inTrace","containerIn","containerOut","template","_template","thisFn","coloraxis","colorAxes","_colorAxes","colorAx","colorbarVisuals","stash","push","warn","join","minIn","maxIn","validMinMax","auto","sclIn","colorscale","sclTemplate","autoColorscaleDflt","undefined","showScaleDflt","showScale"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/colorscale/defaults.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar hasColorbar = require('../colorbar/has_colorbar');\nvar colorbarDefaults = require('../colorbar/defaults');\n\nvar isValidScale = require('./scales').isValid;\nvar traceIs = require('../../registry').traceIs;\n\nfunction npMaybe(parentCont, prefix) {\n    var containerStr = prefix.slice(0, prefix.length - 1);\n    return prefix ?\n        Lib.nestedProperty(parentCont, containerStr).get() || {} :\n        parentCont;\n}\n\n/**\n * Colorscale / colorbar default handler\n *\n * @param {object} parentContIn : user (input) parent container (e.g. trace or layout coloraxis object)\n * @param {object} parentContOut : full parent container\n * @param {object} layout : (full) layout object\n * @param {fn} coerce : Lib.coerce wrapper\n * @param {object} opts :\n * - prefix {string} : attr string prefix to colorscale container from parent root\n * - cLetter {string} : 'c or 'z' color letter\n */\nmodule.exports = function colorScaleDefaults(parentContIn, parentContOut, layout, coerce, opts) {\n    var prefix = opts.prefix;\n    var cLetter = opts.cLetter;\n    var inTrace = '_module' in parentContOut;\n    var containerIn = npMaybe(parentContIn, prefix);\n    var containerOut = npMaybe(parentContOut, prefix);\n    var template = npMaybe(parentContOut._template || {}, prefix) || {};\n\n    // colorScaleDefaults wrapper called if-ever we need to reset the colorscale\n    // attributes for containers that were linked to invalid color axes\n    var thisFn = function() {\n        delete parentContIn.coloraxis;\n        delete parentContOut.coloraxis;\n        return colorScaleDefaults(parentContIn, parentContOut, layout, coerce, opts);\n    };\n\n    if(inTrace) {\n        var colorAxes = layout._colorAxes || {};\n        var colorAx = coerce(prefix + 'coloraxis');\n\n        if(colorAx) {\n            var colorbarVisuals = (\n                traceIs(parentContOut, 'contour') &&\n                Lib.nestedProperty(parentContOut, 'contours.coloring').get()\n            ) || 'heatmap';\n\n            var stash = colorAxes[colorAx];\n\n            if(stash) {\n                stash[2].push(thisFn);\n\n                if(stash[0] !== colorbarVisuals) {\n                    stash[0] = false;\n                    Lib.warn([\n                        'Ignoring coloraxis:', colorAx, 'setting',\n                        'as it is linked to incompatible colorscales.'\n                    ].join(' '));\n                }\n            } else {\n                // stash:\n                // - colorbar visual 'type'\n                // - colorbar options to help in Colorbar.draw\n                // - list of colorScaleDefaults wrapper functions\n                colorAxes[colorAx] = [colorbarVisuals, parentContOut, [thisFn]];\n            }\n            return;\n        }\n    }\n\n    var minIn = containerIn[cLetter + 'min'];\n    var maxIn = containerIn[cLetter + 'max'];\n    var validMinMax = isNumeric(minIn) && isNumeric(maxIn) && (minIn < maxIn);\n    var auto = coerce(prefix + cLetter + 'auto', !validMinMax);\n\n    if(auto) {\n        coerce(prefix + cLetter + 'mid');\n    } else {\n        coerce(prefix + cLetter + 'min');\n        coerce(prefix + cLetter + 'max');\n    }\n\n    // handles both the trace case (autocolorscale is false by default) and\n    // the marker and marker.line case (autocolorscale is true by default)\n    var sclIn = containerIn.colorscale;\n    var sclTemplate = template.colorscale;\n    var autoColorscaleDflt;\n    if(sclIn !== undefined) autoColorscaleDflt = !isValidScale(sclIn);\n    if(sclTemplate !== undefined) autoColorscaleDflt = !isValidScale(sclTemplate);\n    coerce(prefix + 'autocolorscale', autoColorscaleDflt);\n\n    coerce(prefix + 'colorscale');\n    coerce(prefix + 'reversescale');\n\n    if(prefix !== 'marker.line.') {\n        // handles both the trace case where the dflt is listed in attributes and\n        // the marker case where the dflt is determined by hasColorbar\n        var showScaleDflt;\n        if(prefix && inTrace) showScaleDflt = hasColorbar(containerIn);\n\n        var showScale = coerce(prefix + 'showscale', showScaleDflt);\n        if(showScale) {\n            if(prefix && template) containerOut._template = template;\n            colorbarDefaults(containerIn, containerOut, layout);\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}