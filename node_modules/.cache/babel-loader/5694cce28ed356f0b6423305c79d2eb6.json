{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\n// used in the drawing step for 'scatter' and 'scattegeo' and\n// in the convert step for 'scatter3d'\nmodule.exports = function makeBubbleSizeFn(trace, factor) {\n  if (!factor) {\n    factor = 2;\n  }\n  var marker = trace.marker;\n  var sizeRef = marker.sizeref || 1;\n  var sizeMin = marker.sizemin || 0;\n\n  // for bubble charts, allow scaling the provided value linearly\n  // and by area or diameter.\n  // Note this only applies to the array-value sizes\n\n  var baseFn = marker.sizemode === 'area' ? function (v) {\n    return Math.sqrt(v / sizeRef);\n  } : function (v) {\n    return v / sizeRef;\n  };\n\n  // TODO add support for position/negative bubbles?\n  // TODO add 'sizeoffset' attribute?\n  return function (v) {\n    var baseSize = baseFn(v / factor);\n\n    // don't show non-numeric and negative sizes\n    return isNumeric(baseSize) && baseSize > 0 ? Math.max(baseSize, sizeMin) : 0;\n  };\n};","map":{"version":3,"names":["isNumeric","require","module","exports","makeBubbleSizeFn","trace","factor","marker","sizeRef","sizeref","sizeMin","sizemin","baseFn","sizemode","v","Math","sqrt","baseSize","max"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scatter/make_bubble_size_func.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\n\n// used in the drawing step for 'scatter' and 'scattegeo' and\n// in the convert step for 'scatter3d'\nmodule.exports = function makeBubbleSizeFn(trace, factor) {\n    if(!factor) {\n        factor = 2;\n    }\n    var marker = trace.marker;\n    var sizeRef = marker.sizeref || 1;\n    var sizeMin = marker.sizemin || 0;\n\n    // for bubble charts, allow scaling the provided value linearly\n    // and by area or diameter.\n    // Note this only applies to the array-value sizes\n\n    var baseFn = (marker.sizemode === 'area') ?\n        function(v) { return Math.sqrt(v / sizeRef); } :\n        function(v) { return v / sizeRef; };\n\n    // TODO add support for position/negative bubbles?\n    // TODO add 'sizeoffset' attribute?\n    return function(v) {\n        var baseSize = baseFn(v / factor);\n\n        // don't show non-numeric and negative sizes\n        return (isNumeric(baseSize) && (baseSize > 0)) ?\n            Math.max(baseSize, sizeMin) :\n            0;\n    };\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAGzC;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACtD,IAAG,CAACA,MAAM,EAAE;IACRA,MAAM,GAAG,CAAC;EACd;EACA,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;EACzB,IAAIC,OAAO,GAAGD,MAAM,CAACE,OAAO,IAAI,CAAC;EACjC,IAAIC,OAAO,GAAGH,MAAM,CAACI,OAAO,IAAI,CAAC;;EAEjC;EACA;EACA;;EAEA,IAAIC,MAAM,GAAIL,MAAM,CAACM,QAAQ,KAAK,MAAM,GACpC,UAASC,CAAC,EAAE;IAAE,OAAOC,IAAI,CAACC,IAAI,CAACF,CAAC,GAAGN,OAAO,CAAC;EAAE,CAAC,GAC9C,UAASM,CAAC,EAAE;IAAE,OAAOA,CAAC,GAAGN,OAAO;EAAE,CAAC;;EAEvC;EACA;EACA,OAAO,UAASM,CAAC,EAAE;IACf,IAAIG,QAAQ,GAAGL,MAAM,CAACE,CAAC,GAAGR,MAAM,CAAC;;IAEjC;IACA,OAAQN,SAAS,CAACiB,QAAQ,CAAC,IAAKA,QAAQ,GAAG,CAAE,GACzCF,IAAI,CAACG,GAAG,CAACD,QAAQ,EAAEP,OAAO,CAAC,GAC3B,CAAC;EACT,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}