{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";function CountryFlag(){const[countryCode,setCountryCode]=useState(null);const getCountryCode=async(latitude,longitude)=>{try{const response=await fetch(\"https://api.opencagedata.com/geocode/v1/json?q=\".concat(latitude,\"+\").concat(longitude,\"&key=YOUR_API_KEY\"));const data=await response.json();if(data.results&&data.results.length>0){const country=data.results[0].components.country_code;setCountryCode(country.toUpperCase());localStorage.setItem(\"userCountryCode\",country.toUpperCase());}}catch(err){console.error(err);}};const getLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;getCountryCode(latitude,longitude);},err=>{console.error(err);});}else{alert(\"Geolocation is not supported by your browser.\");}};useEffect(()=>{const storedCountryCode=localStorage.getItem(\"userCountryCode\");if(storedCountryCode){setCountryCode(storedCountryCode);}else{getLocation();}},[]);return/*#__PURE__*/_jsx(\"div\",{children:countryCode?/*#__PURE__*/_jsx(\"img\",{src:\"https://flagcdn.com/w320/\".concat(countryCode.toLowerCase(),\".png\"),alt:\"Flag of \".concat(countryCode),style:{width:\"100px\",height:\"auto\"}}):\"Locating...\"});}export default CountryFlag;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","CountryFlag","countryCode","setCountryCode","getCountryCode","latitude","longitude","response","fetch","concat","data","json","results","length","country","components","country_code","toUpperCase","localStorage","setItem","err","console","error","getLocation","navigator","geolocation","getCurrentPosition","position","coords","alert","storedCountryCode","getItem","children","src","toLowerCase","alt","style","width","height"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/components/Header3/LocateCountry.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CountryFlag() {\r\n  const [countryCode, setCountryCode] = useState(null);\r\n\r\n  const getCountryCode = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=YOUR_API_KEY`\r\n      );\r\n      const data = await response.json();\r\n      if (data.results && data.results.length > 0) {\r\n        const country = data.results[0].components.country_code;\r\n        setCountryCode(country.toUpperCase());\r\n        localStorage.setItem(\"userCountryCode\", country.toUpperCase());\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          getCountryCode(latitude, longitude);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedCountryCode = localStorage.getItem(\"userCountryCode\");\r\n    if (storedCountryCode) {\r\n      setCountryCode(storedCountryCode);\r\n    } else {\r\n      getLocation();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        countryCode ? \r\n          <img\r\n            src={`https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`}\r\n            alt={`Flag of ${countryCode}`}\r\n            style={{ width: \"100px\", height: \"auto\" }}\r\n          /> : \"Locating...\"\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryFlag;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGL,QAAQ,CAAC,IAAI,CAAC,CAEpD,KAAM,CAAAM,cAAc,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,SAAS,GAAK,CACpD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,mDAAAC,MAAA,CACwBJ,QAAQ,MAAAI,MAAA,CAAIH,SAAS,qBACzE,CAAC,CACD,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACE,OAAO,EAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CAC3C,KAAM,CAAAC,OAAO,CAAGJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACG,UAAU,CAACC,YAAY,CACvDb,cAAc,CAACW,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC,CACrCC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAEL,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC,CAChE,CACF,CAAE,MAAOG,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAG,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIC,SAAS,CAACC,WAAW,CAAE,CACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,EAAK,CACZ,KAAM,CAAEtB,QAAQ,CAAEC,SAAU,CAAC,CAAGqB,QAAQ,CAACC,MAAM,CAC/CxB,cAAc,CAACC,QAAQ,CAAEC,SAAS,CAAC,CACrC,CAAC,CACAc,GAAG,EAAK,CACPC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CACF,CAAC,CACH,CAAC,IAAM,CACLS,KAAK,CAAC,+CAA+C,CAAC,CACxD,CACF,CAAC,CAEDhC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiC,iBAAiB,CAAGZ,YAAY,CAACa,OAAO,CAAC,iBAAiB,CAAC,CACjE,GAAID,iBAAiB,CAAE,CACrB3B,cAAc,CAAC2B,iBAAiB,CAAC,CACnC,CAAC,IAAM,CACLP,WAAW,CAAC,CAAC,CACf,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEvB,IAAA,QAAAgC,QAAA,CAEI9B,WAAW,cACTF,IAAA,QACEiC,GAAG,6BAAAxB,MAAA,CAA8BP,WAAW,CAACgC,WAAW,CAAC,CAAC,QAAO,CACjEC,GAAG,YAAA1B,MAAA,CAAaP,WAAW,CAAG,CAC9BkC,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAC3C,CAAC,CAAG,aAAa,CAEnB,CAAC,CAEV,CAEA,cAAe,CAAArC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}