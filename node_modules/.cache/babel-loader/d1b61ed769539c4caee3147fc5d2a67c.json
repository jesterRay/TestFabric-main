{"ast":null,"code":"'use strict';\n\nvar handleAutorangeOptionsDefaults = require('./autorange_options_defaults');\nmodule.exports = function handleRangeDefaults(containerIn, containerOut, coerce, options) {\n  var axTemplate = containerOut._template || {};\n  var axType = containerOut.type || axTemplate.type || '-';\n  coerce('minallowed');\n  coerce('maxallowed');\n  var range = coerce('range');\n  if (!range) {\n    var insiderange;\n    if (!options.noInsiderange && axType !== 'log') {\n      insiderange = coerce('insiderange');\n\n      // We may support partial insideranges in future\n      // For now it is out of scope\n      if (insiderange && (insiderange[0] === null || insiderange[1] === null)) {\n        containerOut.insiderange = false;\n        insiderange = undefined;\n      }\n      if (insiderange) range = coerce('range', insiderange);\n    }\n  }\n  var autorangeDflt = containerOut.getAutorangeDflt(range, options);\n  var autorange = coerce('autorange', autorangeDflt);\n  var shouldAutorange;\n\n  // validate range and set autorange true for invalid partial ranges\n  if (range && (range[0] === null && range[1] === null || (range[0] === null || range[1] === null) && (autorange === 'reversed' || autorange === true) || range[0] !== null && (autorange === 'min' || autorange === 'max reversed') || range[1] !== null && (autorange === 'max' || autorange === 'min reversed'))) {\n    range = undefined;\n    delete containerOut.range;\n    containerOut.autorange = true;\n    shouldAutorange = true;\n  }\n  if (!shouldAutorange) {\n    autorangeDflt = containerOut.getAutorangeDflt(range, options);\n    autorange = coerce('autorange', autorangeDflt);\n  }\n  if (autorange) {\n    handleAutorangeOptionsDefaults(coerce, autorange, range);\n    if (axType === 'linear' || axType === '-') coerce('rangemode');\n  }\n  containerOut.cleanRange();\n};","map":{"version":3,"names":["handleAutorangeOptionsDefaults","require","module","exports","handleRangeDefaults","containerIn","containerOut","coerce","options","axTemplate","_template","axType","type","range","insiderange","noInsiderange","undefined","autorangeDflt","getAutorangeDflt","autorange","shouldAutorange","cleanRange"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/cartesian/range_defaults.js"],"sourcesContent":["'use strict';\n\nvar handleAutorangeOptionsDefaults = require('./autorange_options_defaults');\n\nmodule.exports = function handleRangeDefaults(containerIn, containerOut, coerce, options) {\n    var axTemplate = containerOut._template || {};\n    var axType = containerOut.type || axTemplate.type || '-';\n\n    coerce('minallowed');\n    coerce('maxallowed');\n\n    var range = coerce('range');\n    if(!range) {\n        var insiderange;\n        if(!options.noInsiderange && axType !== 'log') {\n            insiderange = coerce('insiderange');\n\n            // We may support partial insideranges in future\n            // For now it is out of scope\n            if(insiderange && (\n                    insiderange[0] === null ||\n                    insiderange[1] === null\n            )) {\n                containerOut.insiderange = false;\n                insiderange = undefined;\n            }\n\n            if(insiderange) range = coerce('range', insiderange);\n        }\n    }\n\n    var autorangeDflt = containerOut.getAutorangeDflt(range, options);\n    var autorange = coerce('autorange', autorangeDflt);\n\n    var shouldAutorange;\n\n    // validate range and set autorange true for invalid partial ranges\n    if(range && (\n        (range[0] === null && range[1] === null) ||\n        ((range[0] === null || range[1] === null) && (autorange === 'reversed' || autorange === true)) ||\n        (range[0] !== null && (autorange === 'min' || autorange === 'max reversed')) ||\n        (range[1] !== null && (autorange === 'max' || autorange === 'min reversed'))\n    )) {\n        range = undefined;\n        delete containerOut.range;\n        containerOut.autorange = true;\n        shouldAutorange = true;\n    }\n\n    if(!shouldAutorange) {\n        autorangeDflt = containerOut.getAutorangeDflt(range, options);\n        autorange = coerce('autorange', autorangeDflt);\n    }\n\n    if(autorange) {\n        handleAutorangeOptionsDefaults(coerce, autorange, range);\n        if(axType === 'linear' || axType === '-') coerce('rangemode');\n    }\n\n    containerOut.cleanRange();\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,8BAA8B,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AAE5EC,MAAM,CAACC,OAAO,GAAG,SAASC,mBAAmBA,CAACC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACtF,IAAIC,UAAU,GAAGH,YAAY,CAACI,SAAS,IAAI,CAAC,CAAC;EAC7C,IAAIC,MAAM,GAAGL,YAAY,CAACM,IAAI,IAAIH,UAAU,CAACG,IAAI,IAAI,GAAG;EAExDL,MAAM,CAAC,YAAY,CAAC;EACpBA,MAAM,CAAC,YAAY,CAAC;EAEpB,IAAIM,KAAK,GAAGN,MAAM,CAAC,OAAO,CAAC;EAC3B,IAAG,CAACM,KAAK,EAAE;IACP,IAAIC,WAAW;IACf,IAAG,CAACN,OAAO,CAACO,aAAa,IAAIJ,MAAM,KAAK,KAAK,EAAE;MAC3CG,WAAW,GAAGP,MAAM,CAAC,aAAa,CAAC;;MAEnC;MACA;MACA,IAAGO,WAAW,KACNA,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,IACvBA,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,CAC9B,EAAE;QACCR,YAAY,CAACQ,WAAW,GAAG,KAAK;QAChCA,WAAW,GAAGE,SAAS;MAC3B;MAEA,IAAGF,WAAW,EAAED,KAAK,GAAGN,MAAM,CAAC,OAAO,EAAEO,WAAW,CAAC;IACxD;EACJ;EAEA,IAAIG,aAAa,GAAGX,YAAY,CAACY,gBAAgB,CAACL,KAAK,EAAEL,OAAO,CAAC;EACjE,IAAIW,SAAS,GAAGZ,MAAM,CAAC,WAAW,EAAEU,aAAa,CAAC;EAElD,IAAIG,eAAe;;EAEnB;EACA,IAAGP,KAAK,KACHA,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,IACtC,CAACA,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,MAAMM,SAAS,KAAK,UAAU,IAAIA,SAAS,KAAK,IAAI,CAAE,IAC7FN,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,KAAKM,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,cAAc,CAAE,IAC3EN,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,KAAKM,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,cAAc,CAAE,CAC/E,EAAE;IACCN,KAAK,GAAGG,SAAS;IACjB,OAAOV,YAAY,CAACO,KAAK;IACzBP,YAAY,CAACa,SAAS,GAAG,IAAI;IAC7BC,eAAe,GAAG,IAAI;EAC1B;EAEA,IAAG,CAACA,eAAe,EAAE;IACjBH,aAAa,GAAGX,YAAY,CAACY,gBAAgB,CAACL,KAAK,EAAEL,OAAO,CAAC;IAC7DW,SAAS,GAAGZ,MAAM,CAAC,WAAW,EAAEU,aAAa,CAAC;EAClD;EAEA,IAAGE,SAAS,EAAE;IACVnB,8BAA8B,CAACO,MAAM,EAAEY,SAAS,EAAEN,KAAK,CAAC;IACxD,IAAGF,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,GAAG,EAAEJ,MAAM,CAAC,WAAW,CAAC;EACjE;EAEAD,YAAY,CAACe,UAAU,CAAC,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}