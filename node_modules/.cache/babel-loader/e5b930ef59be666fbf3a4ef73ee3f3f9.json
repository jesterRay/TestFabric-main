{"ast":null,"code":"'use strict';\n\nvar colorAttrs = require('../../components/color/attributes');\nvar axesAttrs = require('../cartesian/layout_attributes');\nvar domainAttrs = require('../domain').attributes;\nvar extendFlat = require('../../lib').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar axisLineGridAttr = overrideAll({\n  color: axesAttrs.color,\n  showline: extendFlat({}, axesAttrs.showline, {\n    dflt: true\n  }),\n  linecolor: axesAttrs.linecolor,\n  linewidth: axesAttrs.linewidth,\n  showgrid: extendFlat({}, axesAttrs.showgrid, {\n    dflt: true\n  }),\n  gridcolor: axesAttrs.gridcolor,\n  gridwidth: axesAttrs.gridwidth,\n  griddash: axesAttrs.griddash\n}, 'plot', 'from-root');\nvar axisTickAttrs = overrideAll({\n  ticklen: axesAttrs.ticklen,\n  tickwidth: extendFlat({}, axesAttrs.tickwidth, {\n    dflt: 2\n  }),\n  tickcolor: axesAttrs.tickcolor,\n  showticklabels: axesAttrs.showticklabels,\n  labelalias: axesAttrs.labelalias,\n  showtickprefix: axesAttrs.showtickprefix,\n  tickprefix: axesAttrs.tickprefix,\n  showticksuffix: axesAttrs.showticksuffix,\n  ticksuffix: axesAttrs.ticksuffix,\n  tickfont: axesAttrs.tickfont,\n  tickformat: axesAttrs.tickformat,\n  hoverformat: axesAttrs.hoverformat,\n  layer: axesAttrs.layer\n}, 'plot', 'from-root');\nvar realAxisAttrs = extendFlat({\n  visible: extendFlat({}, axesAttrs.visible, {\n    dflt: true\n  }),\n  tickvals: {\n    dflt: [0.2, 0.5, 1, 2, 5],\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Sets the values at which ticks on this axis appear.'\n  },\n  tickangle: extendFlat({}, axesAttrs.tickangle, {\n    dflt: 90\n  }),\n  ticks: {\n    valType: 'enumerated',\n    values: ['top', 'bottom', ''],\n    editType: 'ticks',\n    description: ['Determines whether ticks are drawn or not.', 'If **, this axis\\' ticks are not drawn.', 'If *top* (*bottom*), this axis\\' are drawn above (below)', 'the axis line.'].join(' ')\n  },\n  side: {\n    valType: 'enumerated',\n    values: ['top', 'bottom'],\n    dflt: 'top',\n    editType: 'plot',\n    description: ['Determines on which side of real axis line', 'the tick and tick labels appear.'].join(' ')\n  },\n  editType: 'calc'\n}, axisLineGridAttr, axisTickAttrs);\nvar imaginaryAxisAttrs = extendFlat({\n  visible: extendFlat({}, axesAttrs.visible, {\n    dflt: true\n  }),\n  tickvals: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: ['Sets the values at which ticks on this axis appear.', 'Defaults to `realaxis.tickvals` plus the same as negatives and zero.'].join(' ')\n  },\n  ticks: axesAttrs.ticks,\n  editType: 'calc'\n}, axisLineGridAttr, axisTickAttrs);\nmodule.exports = {\n  domain: domainAttrs({\n    name: 'smith',\n    editType: 'plot'\n  }),\n  bgcolor: {\n    valType: 'color',\n    editType: 'plot',\n    dflt: colorAttrs.background,\n    description: 'Set the background color of the subplot'\n  },\n  realaxis: realAxisAttrs,\n  imaginaryaxis: imaginaryAxisAttrs,\n  editType: 'calc'\n};","map":{"version":3,"names":["colorAttrs","require","axesAttrs","domainAttrs","attributes","extendFlat","overrideAll","axisLineGridAttr","color","showline","dflt","linecolor","linewidth","showgrid","gridcolor","gridwidth","griddash","axisTickAttrs","ticklen","tickwidth","tickcolor","showticklabels","labelalias","showtickprefix","tickprefix","showticksuffix","ticksuffix","tickfont","tickformat","hoverformat","layer","realAxisAttrs","visible","tickvals","valType","editType","description","tickangle","ticks","values","join","side","imaginaryAxisAttrs","module","exports","domain","name","bgcolor","background","realaxis","imaginaryaxis"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/smith/layout_attributes.js"],"sourcesContent":["'use strict';\n\nvar colorAttrs = require('../../components/color/attributes');\nvar axesAttrs = require('../cartesian/layout_attributes');\nvar domainAttrs = require('../domain').attributes;\nvar extendFlat = require('../../lib').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar axisLineGridAttr = overrideAll({\n    color: axesAttrs.color,\n    showline: extendFlat({}, axesAttrs.showline, {dflt: true}),\n    linecolor: axesAttrs.linecolor,\n    linewidth: axesAttrs.linewidth,\n    showgrid: extendFlat({}, axesAttrs.showgrid, {dflt: true}),\n    gridcolor: axesAttrs.gridcolor,\n    gridwidth: axesAttrs.gridwidth,\n    griddash: axesAttrs.griddash\n}, 'plot', 'from-root');\n\nvar axisTickAttrs = overrideAll({\n    ticklen: axesAttrs.ticklen,\n    tickwidth: extendFlat({}, axesAttrs.tickwidth, {dflt: 2}),\n    tickcolor: axesAttrs.tickcolor,\n    showticklabels: axesAttrs.showticklabels,\n    labelalias: axesAttrs.labelalias,\n    showtickprefix: axesAttrs.showtickprefix,\n    tickprefix: axesAttrs.tickprefix,\n    showticksuffix: axesAttrs.showticksuffix,\n    ticksuffix: axesAttrs.ticksuffix,\n    tickfont: axesAttrs.tickfont,\n    tickformat: axesAttrs.tickformat,\n    hoverformat: axesAttrs.hoverformat,\n    layer: axesAttrs.layer\n}, 'plot', 'from-root');\n\nvar realAxisAttrs = extendFlat({\n    visible: extendFlat({}, axesAttrs.visible, {dflt: true}),\n\n    tickvals: {\n        dflt: [0.2, 0.5, 1, 2, 5],\n        valType: 'data_array',\n        editType: 'plot',\n        description: 'Sets the values at which ticks on this axis appear.'\n    },\n\n    tickangle: extendFlat({}, axesAttrs.tickangle, {dflt: 90}),\n\n    ticks: {\n        valType: 'enumerated',\n        values: ['top', 'bottom', ''],\n        editType: 'ticks',\n        description: [\n            'Determines whether ticks are drawn or not.',\n            'If **, this axis\\' ticks are not drawn.',\n            'If *top* (*bottom*), this axis\\' are drawn above (below)',\n            'the axis line.'\n        ].join(' ')\n    },\n\n    side: {\n        valType: 'enumerated',\n        values: ['top', 'bottom'],\n        dflt: 'top',\n        editType: 'plot',\n        description: [\n            'Determines on which side of real axis line',\n            'the tick and tick labels appear.'\n        ].join(' ')\n    },\n\n    editType: 'calc',\n}, axisLineGridAttr, axisTickAttrs);\n\nvar imaginaryAxisAttrs = extendFlat({\n    visible: extendFlat({}, axesAttrs.visible, {dflt: true}),\n\n    tickvals: {\n        valType: 'data_array',\n        editType: 'plot',\n        description: [\n            'Sets the values at which ticks on this axis appear.',\n            'Defaults to `realaxis.tickvals` plus the same as negatives and zero.'\n        ].join(' ')\n    },\n\n    ticks: axesAttrs.ticks,\n\n    editType: 'calc'\n}, axisLineGridAttr, axisTickAttrs);\n\nmodule.exports = {\n    domain: domainAttrs({name: 'smith', editType: 'plot'}),\n\n    bgcolor: {\n        valType: 'color',\n        editType: 'plot',\n        dflt: colorAttrs.background,\n        description: 'Set the background color of the subplot'\n    },\n\n    realaxis: realAxisAttrs,\n    imaginaryaxis: imaginaryAxisAttrs,\n\n    editType: 'calc'\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAC7D,IAAIC,SAAS,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACzD,IAAIE,WAAW,GAAGF,OAAO,CAAC,WAAW,CAAC,CAACG,UAAU;AACjD,IAAIC,UAAU,GAAGJ,OAAO,CAAC,WAAW,CAAC,CAACI,UAAU;AAChD,IAAIC,WAAW,GAAGL,OAAO,CAAC,2BAA2B,CAAC,CAACK,WAAW;AAElE,IAAIC,gBAAgB,GAAGD,WAAW,CAAC;EAC/BE,KAAK,EAAEN,SAAS,CAACM,KAAK;EACtBC,QAAQ,EAAEJ,UAAU,CAAC,CAAC,CAAC,EAAEH,SAAS,CAACO,QAAQ,EAAE;IAACC,IAAI,EAAE;EAAI,CAAC,CAAC;EAC1DC,SAAS,EAAET,SAAS,CAACS,SAAS;EAC9BC,SAAS,EAAEV,SAAS,CAACU,SAAS;EAC9BC,QAAQ,EAAER,UAAU,CAAC,CAAC,CAAC,EAAEH,SAAS,CAACW,QAAQ,EAAE;IAACH,IAAI,EAAE;EAAI,CAAC,CAAC;EAC1DI,SAAS,EAAEZ,SAAS,CAACY,SAAS;EAC9BC,SAAS,EAAEb,SAAS,CAACa,SAAS;EAC9BC,QAAQ,EAAEd,SAAS,CAACc;AACxB,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC;AAEvB,IAAIC,aAAa,GAAGX,WAAW,CAAC;EAC5BY,OAAO,EAAEhB,SAAS,CAACgB,OAAO;EAC1BC,SAAS,EAAEd,UAAU,CAAC,CAAC,CAAC,EAAEH,SAAS,CAACiB,SAAS,EAAE;IAACT,IAAI,EAAE;EAAC,CAAC,CAAC;EACzDU,SAAS,EAAElB,SAAS,CAACkB,SAAS;EAC9BC,cAAc,EAAEnB,SAAS,CAACmB,cAAc;EACxCC,UAAU,EAAEpB,SAAS,CAACoB,UAAU;EAChCC,cAAc,EAAErB,SAAS,CAACqB,cAAc;EACxCC,UAAU,EAAEtB,SAAS,CAACsB,UAAU;EAChCC,cAAc,EAAEvB,SAAS,CAACuB,cAAc;EACxCC,UAAU,EAAExB,SAAS,CAACwB,UAAU;EAChCC,QAAQ,EAAEzB,SAAS,CAACyB,QAAQ;EAC5BC,UAAU,EAAE1B,SAAS,CAAC0B,UAAU;EAChCC,WAAW,EAAE3B,SAAS,CAAC2B,WAAW;EAClCC,KAAK,EAAE5B,SAAS,CAAC4B;AACrB,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC;AAEvB,IAAIC,aAAa,GAAG1B,UAAU,CAAC;EAC3B2B,OAAO,EAAE3B,UAAU,CAAC,CAAC,CAAC,EAAEH,SAAS,CAAC8B,OAAO,EAAE;IAACtB,IAAI,EAAE;EAAI,CAAC,CAAC;EAExDuB,QAAQ,EAAE;IACNvB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzBwB,OAAO,EAAE,YAAY;IACrBC,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE;EACjB,CAAC;EAEDC,SAAS,EAAEhC,UAAU,CAAC,CAAC,CAAC,EAAEH,SAAS,CAACmC,SAAS,EAAE;IAAC3B,IAAI,EAAE;EAAE,CAAC,CAAC;EAE1D4B,KAAK,EAAE;IACHJ,OAAO,EAAE,YAAY;IACrBK,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC;IAC7BJ,QAAQ,EAAE,OAAO;IACjBC,WAAW,EAAE,CACT,4CAA4C,EAC5C,yCAAyC,EACzC,0DAA0D,EAC1D,gBAAgB,CACnB,CAACI,IAAI,CAAC,GAAG;EACd,CAAC;EAEDC,IAAI,EAAE;IACFP,OAAO,EAAE,YAAY;IACrBK,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;IACzB7B,IAAI,EAAE,KAAK;IACXyB,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE,CACT,4CAA4C,EAC5C,kCAAkC,CACrC,CAACI,IAAI,CAAC,GAAG;EACd,CAAC;EAEDL,QAAQ,EAAE;AACd,CAAC,EAAE5B,gBAAgB,EAAEU,aAAa,CAAC;AAEnC,IAAIyB,kBAAkB,GAAGrC,UAAU,CAAC;EAChC2B,OAAO,EAAE3B,UAAU,CAAC,CAAC,CAAC,EAAEH,SAAS,CAAC8B,OAAO,EAAE;IAACtB,IAAI,EAAE;EAAI,CAAC,CAAC;EAExDuB,QAAQ,EAAE;IACNC,OAAO,EAAE,YAAY;IACrBC,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE,CACT,qDAAqD,EACrD,sEAAsE,CACzE,CAACI,IAAI,CAAC,GAAG;EACd,CAAC;EAEDF,KAAK,EAAEpC,SAAS,CAACoC,KAAK;EAEtBH,QAAQ,EAAE;AACd,CAAC,EAAE5B,gBAAgB,EAAEU,aAAa,CAAC;AAEnC0B,MAAM,CAACC,OAAO,GAAG;EACbC,MAAM,EAAE1C,WAAW,CAAC;IAAC2C,IAAI,EAAE,OAAO;IAAEX,QAAQ,EAAE;EAAM,CAAC,CAAC;EAEtDY,OAAO,EAAE;IACLb,OAAO,EAAE,OAAO;IAChBC,QAAQ,EAAE,MAAM;IAChBzB,IAAI,EAAEV,UAAU,CAACgD,UAAU;IAC3BZ,WAAW,EAAE;EACjB,CAAC;EAEDa,QAAQ,EAAElB,aAAa;EACvBmB,aAAa,EAAER,kBAAkB;EAEjCP,QAAQ,EAAE;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}