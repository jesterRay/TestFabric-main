{"ast":null,"code":"'use strict';\n\n/* global PlotlyGeoAssets:false */\nvar d3 = require('@plotly/d3');\nvar geo = require('d3-geo');\nvar geoPath = geo.geoPath;\nvar geoDistance = geo.geoDistance;\nvar geoProjection = require('d3-geo-projection');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar Plots = require('../plots');\nvar Axes = require('../cartesian/axes');\nvar getAutoRange = require('../cartesian/autorange').getAutoRange;\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../../components/selections').prepSelect;\nvar clearOutline = require('../../components/selections').clearOutline;\nvar selectOnClick = require('../../components/selections').selectOnClick;\nvar createGeoZoom = require('./zoom');\nvar constants = require('./constants');\nvar geoUtils = require('../../lib/geo_location_utils');\nvar topojsonUtils = require('../../lib/topojson_utils');\nvar topojsonFeature = require('topojson-client').feature;\nfunction Geo(opts) {\n  this.id = opts.id;\n  this.graphDiv = opts.graphDiv;\n  this.container = opts.container;\n  this.topojsonURL = opts.topojsonURL;\n  this.isStatic = opts.staticPlot;\n  this.topojsonName = null;\n  this.topojson = null;\n  this.projection = null;\n  this.scope = null;\n  this.viewInitial = null;\n  this.fitScale = null;\n  this.bounds = null;\n  this.midPt = null;\n  this.hasChoropleth = false;\n  this.traceHash = {};\n  this.layers = {};\n  this.basePaths = {};\n  this.dataPaths = {};\n  this.dataPoints = {};\n  this.clipDef = null;\n  this.clipRect = null;\n  this.bgRect = null;\n  this.makeFramework();\n}\nvar proto = Geo.prototype;\nmodule.exports = function createGeo(opts) {\n  return new Geo(opts);\n};\nproto.plot = function (geoCalcData, fullLayout, promises, replot) {\n  var _this = this;\n  if (replot) return _this.update(geoCalcData, fullLayout, true);\n  _this._geoCalcData = geoCalcData;\n  _this._fullLayout = fullLayout;\n  var geoLayout = fullLayout[this.id];\n  var geoPromises = [];\n  var needsTopojson = false;\n  for (var k in constants.layerNameToAdjective) {\n    if (k !== 'frame' && geoLayout['show' + k]) {\n      needsTopojson = true;\n      break;\n    }\n  }\n  var hasMarkerAngles = false;\n  for (var i = 0; i < geoCalcData.length; i++) {\n    var trace = geoCalcData[0][0].trace;\n    trace._geo = _this;\n    if (trace.locationmode) {\n      needsTopojson = true;\n    }\n    var marker = trace.marker;\n    if (marker) {\n      var angle = marker.angle;\n      var angleref = marker.angleref;\n      if (angle || angleref === 'north' || angleref === 'previous') hasMarkerAngles = true;\n    }\n  }\n  this._hasMarkerAngles = hasMarkerAngles;\n  if (needsTopojson) {\n    var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n    if (_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n      _this.topojsonName = topojsonNameNew;\n      if (PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n        geoPromises.push(_this.fetchTopojson());\n      }\n    }\n  }\n  geoPromises = geoPromises.concat(geoUtils.fetchTraceGeoData(geoCalcData));\n  promises.push(new Promise(function (resolve, reject) {\n    Promise.all(geoPromises).then(function () {\n      _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n      _this.update(geoCalcData, fullLayout);\n      resolve();\n    }).catch(reject);\n  }));\n};\nproto.fetchTopojson = function () {\n  var _this = this;\n  var topojsonPath = topojsonUtils.getTopojsonPath(_this.topojsonURL, _this.topojsonName);\n  return new Promise(function (resolve, reject) {\n    d3.json(topojsonPath, function (err, topojson) {\n      if (err) {\n        if (err.status === 404) {\n          return reject(new Error(['plotly.js could not find topojson file at', topojsonPath + '.', 'Make sure the *topojsonURL* plot config option', 'is set properly.'].join(' ')));\n        } else {\n          return reject(new Error(['unexpected error while fetching topojson file at', topojsonPath].join(' ')));\n        }\n      }\n      PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n      resolve();\n    });\n  });\n};\nproto.update = function (geoCalcData, fullLayout, replot) {\n  var geoLayout = fullLayout[this.id];\n\n  // important: maps with choropleth traces have a different layer order\n  this.hasChoropleth = false;\n  for (var i = 0; i < geoCalcData.length; i++) {\n    var calcTrace = geoCalcData[i];\n    var trace = calcTrace[0].trace;\n    if (trace.type === 'choropleth') {\n      this.hasChoropleth = true;\n    }\n    if (trace.visible === true && trace._length > 0) {\n      trace._module.calcGeoJSON(calcTrace, fullLayout);\n    }\n  }\n  if (!replot) {\n    var hasInvalidBounds = this.updateProjection(geoCalcData, fullLayout);\n    if (hasInvalidBounds) return;\n    if (!this.viewInitial || this.scope !== geoLayout.scope) {\n      this.saveViewInitial(geoLayout);\n    }\n  }\n  this.scope = geoLayout.scope;\n  this.updateBaseLayers(fullLayout, geoLayout);\n  this.updateDims(fullLayout, geoLayout);\n  this.updateFx(fullLayout, geoLayout);\n  Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n  var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n  this.dataPoints.point = scatterLayer.selectAll('.point');\n  this.dataPoints.text = scatterLayer.selectAll('text');\n  this.dataPaths.line = scatterLayer.selectAll('.js-line');\n  var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n  this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n  this._render();\n};\nproto.updateProjection = function (geoCalcData, fullLayout) {\n  var gd = this.graphDiv;\n  var geoLayout = fullLayout[this.id];\n  var gs = fullLayout._size;\n  var domain = geoLayout.domain;\n  var projLayout = geoLayout.projection;\n  var lonaxis = geoLayout.lonaxis;\n  var lataxis = geoLayout.lataxis;\n  var axLon = lonaxis._ax;\n  var axLat = lataxis._ax;\n  var projection = this.projection = getProjection(geoLayout);\n\n  // setup subplot extent [[x0,y0], [x1,y1]]\n  var extent = [[gs.l + gs.w * domain.x[0], gs.t + gs.h * (1 - domain.y[1])], [gs.l + gs.w * domain.x[1], gs.t + gs.h * (1 - domain.y[0])]];\n  var center = geoLayout.center || {};\n  var rotation = projLayout.rotation || {};\n  var lonaxisRange = lonaxis.range || [];\n  var lataxisRange = lataxis.range || [];\n  if (geoLayout.fitbounds) {\n    axLon._length = extent[1][0] - extent[0][0];\n    axLat._length = extent[1][1] - extent[0][1];\n    axLon.range = getAutoRange(gd, axLon);\n    axLat.range = getAutoRange(gd, axLat);\n    var midLon = (axLon.range[0] + axLon.range[1]) / 2;\n    var midLat = (axLat.range[0] + axLat.range[1]) / 2;\n    if (geoLayout._isScoped) {\n      center = {\n        lon: midLon,\n        lat: midLat\n      };\n    } else if (geoLayout._isClipped) {\n      center = {\n        lon: midLon,\n        lat: midLat\n      };\n      rotation = {\n        lon: midLon,\n        lat: midLat,\n        roll: rotation.roll\n      };\n      var projType = projLayout.type;\n      var lonHalfSpan = constants.lonaxisSpan[projType] / 2 || 180;\n      var latHalfSpan = constants.lataxisSpan[projType] / 2 || 90;\n      lonaxisRange = [midLon - lonHalfSpan, midLon + lonHalfSpan];\n      lataxisRange = [midLat - latHalfSpan, midLat + latHalfSpan];\n    } else {\n      center = {\n        lon: midLon,\n        lat: midLat\n      };\n      rotation = {\n        lon: midLon,\n        lat: rotation.lat,\n        roll: rotation.roll\n      };\n    }\n  }\n\n  // set 'pre-fit' projection\n  projection.center([center.lon - rotation.lon, center.lat - rotation.lat]).rotate([-rotation.lon, -rotation.lat, rotation.roll]).parallels(projLayout.parallels);\n\n  // fit projection 'scale' and 'translate' to set lon/lat ranges\n  var rangeBox = makeRangeBox(lonaxisRange, lataxisRange);\n  projection.fitExtent(extent, rangeBox);\n  var b = this.bounds = projection.getBounds(rangeBox);\n  var s = this.fitScale = projection.scale();\n  var t = projection.translate();\n  if (geoLayout.fitbounds) {\n    var b2 = projection.getBounds(makeRangeBox(axLon.range, axLat.range));\n    var k2 = Math.min((b[1][0] - b[0][0]) / (b2[1][0] - b2[0][0]), (b[1][1] - b[0][1]) / (b2[1][1] - b2[0][1]));\n    if (isFinite(k2)) {\n      projection.scale(k2 * s);\n    } else {\n      Lib.warn('Something went wrong during' + this.id + 'fitbounds computations.');\n    }\n  } else {\n    // adjust projection to user setting\n    projection.scale(projLayout.scale * s);\n  }\n\n  // px coordinates of view mid-point,\n  // useful to update `geo.center` after interactions\n  var midPt = this.midPt = [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2];\n  projection.translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])]).clipExtent(b);\n\n  // the 'albers usa' projection does not expose a 'center' method\n  // so here's this hack to make it respond to 'geoLayout.center'\n  if (geoLayout._isAlbersUsa) {\n    var centerPx = projection([center.lon, center.lat]);\n    var tt = projection.translate();\n    projection.translate([tt[0] - (centerPx[0] - tt[0]), tt[1] - (centerPx[1] - tt[1])]);\n  }\n};\nproto.updateBaseLayers = function (fullLayout, geoLayout) {\n  var _this = this;\n  var topojson = _this.topojson;\n  var layers = _this.layers;\n  var basePaths = _this.basePaths;\n  function isAxisLayer(d) {\n    return d === 'lonaxis' || d === 'lataxis';\n  }\n  function isLineLayer(d) {\n    return Boolean(constants.lineLayers[d]);\n  }\n  function isFillLayer(d) {\n    return Boolean(constants.fillLayers[d]);\n  }\n  var allLayers = this.hasChoropleth ? constants.layersForChoropleth : constants.layers;\n  var layerData = allLayers.filter(function (d) {\n    return isLineLayer(d) || isFillLayer(d) ? geoLayout['show' + d] : isAxisLayer(d) ? geoLayout[d].showgrid : true;\n  });\n  var join = _this.framework.selectAll('.layer').data(layerData, String);\n  join.exit().each(function (d) {\n    delete layers[d];\n    delete basePaths[d];\n    d3.select(this).remove();\n  });\n  join.enter().append('g').attr('class', function (d) {\n    return 'layer ' + d;\n  }).each(function (d) {\n    var layer = layers[d] = d3.select(this);\n    if (d === 'bg') {\n      _this.bgRect = layer.append('rect').style('pointer-events', 'all');\n    } else if (isAxisLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none');\n    } else if (d === 'backplot') {\n      layer.append('g').classed('choroplethlayer', true);\n    } else if (d === 'frontplot') {\n      layer.append('g').classed('scatterlayer', true);\n    } else if (isLineLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none').style('stroke-miterlimit', 2);\n    } else if (isFillLayer(d)) {\n      basePaths[d] = layer.append('path').style('stroke', 'none');\n    }\n  });\n  join.order();\n  join.each(function (d) {\n    var path = basePaths[d];\n    var adj = constants.layerNameToAdjective[d];\n    if (d === 'frame') {\n      path.datum(constants.sphereSVG);\n    } else if (isLineLayer(d) || isFillLayer(d)) {\n      path.datum(topojsonFeature(topojson, topojson.objects[d]));\n    } else if (isAxisLayer(d)) {\n      path.datum(makeGraticule(d, geoLayout, fullLayout)).call(Color.stroke, geoLayout[d].gridcolor).call(Drawing.dashLine, geoLayout[d].griddash, geoLayout[d].gridwidth);\n    }\n    if (isLineLayer(d)) {\n      path.call(Color.stroke, geoLayout[adj + 'color']).call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n    } else if (isFillLayer(d)) {\n      path.call(Color.fill, geoLayout[adj + 'color']);\n    }\n  });\n};\nproto.updateDims = function (fullLayout, geoLayout) {\n  var b = this.bounds;\n  var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n  var l = b[0][0] - hFrameWidth;\n  var t = b[0][1] - hFrameWidth;\n  var w = b[1][0] - l + hFrameWidth;\n  var h = b[1][1] - t + hFrameWidth;\n  Drawing.setRect(this.clipRect, l, t, w, h);\n  this.bgRect.call(Drawing.setRect, l, t, w, h).call(Color.fill, geoLayout.bgcolor);\n  this.xaxis._offset = l;\n  this.xaxis._length = w;\n  this.yaxis._offset = t;\n  this.yaxis._length = h;\n};\nproto.updateFx = function (fullLayout, geoLayout) {\n  var _this = this;\n  var gd = _this.graphDiv;\n  var bgRect = _this.bgRect;\n  var dragMode = fullLayout.dragmode;\n  var clickMode = fullLayout.clickmode;\n  if (_this.isStatic) return;\n  function zoomReset() {\n    var viewInitial = _this.viewInitial;\n    var updateObj = {};\n    for (var k in viewInitial) {\n      updateObj[_this.id + '.' + k] = viewInitial[k];\n    }\n    Registry.call('_guiRelayout', gd, updateObj);\n    gd.emit('plotly_doubleclick', null);\n  }\n  function invert(lonlat) {\n    return _this.projection.invert([lonlat[0] + _this.xaxis._offset, lonlat[1] + _this.yaxis._offset]);\n  }\n  var fillRangeItems = function (eventData, poly) {\n    if (poly.isRect) {\n      var ranges = eventData.range = {};\n      ranges[_this.id] = [invert([poly.xmin, poly.ymin]), invert([poly.xmax, poly.ymax])];\n    } else {\n      var dataPts = eventData.lassoPoints = {};\n      dataPts[_this.id] = poly.map(invert);\n    }\n  };\n\n  // Note: dragOptions is needed to be declared for all dragmodes because\n  // it's the object that holds persistent selection state.\n  var dragOptions = {\n    element: _this.bgRect.node(),\n    gd: gd,\n    plotinfo: {\n      id: _this.id,\n      xaxis: _this.xaxis,\n      yaxis: _this.yaxis,\n      fillRangeItems: fillRangeItems\n    },\n    xaxes: [_this.xaxis],\n    yaxes: [_this.yaxis],\n    subplot: _this.id,\n    clickFn: function (numClicks) {\n      if (numClicks === 2) {\n        clearOutline(gd);\n      }\n    }\n  };\n  if (dragMode === 'pan') {\n    bgRect.node().onmousedown = null;\n    bgRect.call(createGeoZoom(_this, geoLayout));\n    bgRect.on('dblclick.zoom', zoomReset);\n    if (!gd._context._scrollZoom.geo) {\n      bgRect.on('wheel.zoom', null);\n    }\n  } else if (dragMode === 'select' || dragMode === 'lasso') {\n    bgRect.on('.zoom', null);\n    dragOptions.prepFn = function (e, startX, startY) {\n      prepSelect(e, startX, startY, dragOptions, dragMode);\n    };\n    dragElement.init(dragOptions);\n  }\n  bgRect.on('mousemove', function () {\n    var lonlat = _this.projection.invert(Lib.getPositionFromD3Event());\n    if (!lonlat) {\n      return dragElement.unhover(gd, d3.event);\n    }\n    _this.xaxis.p2c = function () {\n      return lonlat[0];\n    };\n    _this.yaxis.p2c = function () {\n      return lonlat[1];\n    };\n    Fx.hover(gd, d3.event, _this.id);\n  });\n  bgRect.on('mouseout', function () {\n    if (gd._dragging) return;\n    dragElement.unhover(gd, d3.event);\n  });\n  bgRect.on('click', function () {\n    // For select and lasso the dragElement is handling clicks\n    if (dragMode !== 'select' && dragMode !== 'lasso') {\n      if (clickMode.indexOf('select') > -1) {\n        selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis], _this.id, dragOptions);\n      }\n      if (clickMode.indexOf('event') > -1) {\n        // TODO: like pie and maps, this doesn't support right-click\n        // actually this one is worse, as right-click starts a pan, or leaves\n        // select in a weird state.\n        // Also, only tangentially related, we should cancel hover during pan\n        Fx.click(gd, d3.event);\n      }\n    }\n  });\n};\nproto.makeFramework = function () {\n  var _this = this;\n  var gd = _this.graphDiv;\n  var fullLayout = gd._fullLayout;\n  var clipId = 'clip' + fullLayout._uid + _this.id;\n  _this.clipDef = fullLayout._clips.append('clipPath').attr('id', clipId);\n  _this.clipRect = _this.clipDef.append('rect');\n  _this.framework = d3.select(_this.container).append('g').attr('class', 'geo ' + _this.id).call(Drawing.setClipUrl, clipId, gd);\n\n  // sane lonlat to px\n  _this.project = function (v) {\n    var px = _this.projection(v);\n    return px ? [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] : [null, null];\n  };\n  _this.xaxis = {\n    _id: 'x',\n    c2p: function (v) {\n      return _this.project(v)[0];\n    }\n  };\n  _this.yaxis = {\n    _id: 'y',\n    c2p: function (v) {\n      return _this.project(v)[1];\n    }\n  };\n\n  // mock axis for hover formatting\n  _this.mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(_this.mockAxis, fullLayout);\n};\nproto.saveViewInitial = function (geoLayout) {\n  var center = geoLayout.center || {};\n  var projLayout = geoLayout.projection;\n  var rotation = projLayout.rotation || {};\n  this.viewInitial = {\n    fitbounds: geoLayout.fitbounds,\n    'projection.scale': projLayout.scale\n  };\n  var extra;\n  if (geoLayout._isScoped) {\n    extra = {\n      'center.lon': center.lon,\n      'center.lat': center.lat\n    };\n  } else if (geoLayout._isClipped) {\n    extra = {\n      'projection.rotation.lon': rotation.lon,\n      'projection.rotation.lat': rotation.lat\n    };\n  } else {\n    extra = {\n      'center.lon': center.lon,\n      'center.lat': center.lat,\n      'projection.rotation.lon': rotation.lon\n    };\n  }\n  Lib.extendFlat(this.viewInitial, extra);\n};\nproto.render = function (mayRedrawOnUpdates) {\n  if (this._hasMarkerAngles && mayRedrawOnUpdates) {\n    this.plot(this._geoCalcData, this._fullLayout, [], true);\n  } else {\n    this._render();\n  }\n};\n\n// [hot code path] (re)draw all paths which depend on the projection\nproto._render = function () {\n  var projection = this.projection;\n  var pathFn = projection.getPath();\n  var k;\n  function translatePoints(d) {\n    var lonlatPx = projection(d.lonlat);\n    return lonlatPx ? strTranslate(lonlatPx[0], lonlatPx[1]) : null;\n  }\n  function hideShowPoints(d) {\n    return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n  }\n  for (k in this.basePaths) {\n    this.basePaths[k].attr('d', pathFn);\n  }\n  for (k in this.dataPaths) {\n    this.dataPaths[k].attr('d', function (d) {\n      return pathFn(d.geojson);\n    });\n  }\n  for (k in this.dataPoints) {\n    this.dataPoints[k].attr('display', hideShowPoints).attr('transform', translatePoints); // TODO: need to redraw points with marker angle instead of calling translatePoints\n  }\n};\n\n// Helper that wraps d3[geo + /* Projection name /*]() which:\n//\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\nfunction getProjection(geoLayout) {\n  var projLayout = geoLayout.projection;\n  var projType = projLayout.type;\n  var projName = constants.projNames[projType];\n  // uppercase the first letter and add geo to the start of method name\n  projName = 'geo' + Lib.titleCase(projName);\n  var projFn = geo[projName] || geoProjection[projName];\n  var projection = projFn();\n  var clipAngle = geoLayout._isSatellite ? Math.acos(1 / projLayout.distance) * 180 / Math.PI : geoLayout._isClipped ? constants.lonaxisSpan[projType] / 2 : null;\n  var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n  var dummyFn = function (_) {\n    return _ ? projection : [];\n  };\n  for (var i = 0; i < methods.length; i++) {\n    var m = methods[i];\n    if (typeof projection[m] !== 'function') {\n      projection[m] = dummyFn;\n    }\n  }\n  projection.isLonLatOverEdges = function (lonlat) {\n    if (projection(lonlat) === null) {\n      return true;\n    }\n    if (clipAngle) {\n      var r = projection.rotate();\n      var angle = geoDistance(lonlat, [-r[0], -r[1]]);\n      var maxAngle = clipAngle * Math.PI / 180;\n      return angle > maxAngle;\n    } else {\n      return false;\n    }\n  };\n  projection.getPath = function () {\n    return geoPath().projection(projection);\n  };\n  projection.getBounds = function (object) {\n    return projection.getPath().bounds(object);\n  };\n  projection.precision(constants.precision);\n  if (geoLayout._isSatellite) {\n    projection.tilt(projLayout.tilt).distance(projLayout.distance);\n  }\n  if (clipAngle) {\n    projection.clipAngle(clipAngle - constants.clipPad);\n  }\n  return projection;\n}\nfunction makeGraticule(axisName, geoLayout, fullLayout) {\n  // equivalent to the d3 \"ε\"\n  var epsilon = 1e-6;\n  // same as the geoGraticule default\n  var precision = 2.5;\n  var axLayout = geoLayout[axisName];\n  var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n  var rng;\n  var oppRng;\n  var coordFn;\n  if (axisName === 'lonaxis') {\n    rng = scopeDefaults.lonaxisRange;\n    oppRng = scopeDefaults.lataxisRange;\n    coordFn = function (v, l) {\n      return [v, l];\n    };\n  } else if (axisName === 'lataxis') {\n    rng = scopeDefaults.lataxisRange;\n    oppRng = scopeDefaults.lonaxisRange;\n    coordFn = function (v, l) {\n      return [l, v];\n    };\n  }\n  var dummyAx = {\n    type: 'linear',\n    range: [rng[0], rng[1] - epsilon],\n    tick0: axLayout.tick0,\n    dtick: axLayout.dtick\n  };\n  Axes.setConvert(dummyAx, fullLayout);\n  var vals = Axes.calcTicks(dummyAx);\n\n  // remove duplicate on antimeridian\n  if (!geoLayout.isScoped && axisName === 'lonaxis') {\n    vals.pop();\n  }\n  var len = vals.length;\n  var coords = new Array(len);\n  for (var i = 0; i < len; i++) {\n    var v = vals[i].x;\n    var line = coords[i] = [];\n    for (var l = oppRng[0]; l < oppRng[1] + precision; l += precision) {\n      line.push(coordFn(v, l));\n    }\n  }\n  return {\n    type: 'MultiLineString',\n    coordinates: coords\n  };\n}\n\n// Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\nfunction makeRangeBox(lon, lat) {\n  var clipPad = constants.clipPad;\n  var lon0 = lon[0] + clipPad;\n  var lon1 = lon[1] - clipPad;\n  var lat0 = lat[0] + clipPad;\n  var lat1 = lat[1] - clipPad;\n\n  // to cross antimeridian w/o ambiguity\n  if (lon0 > 0 && lon1 < 0) lon1 += 360;\n  var dlon4 = (lon1 - lon0) / 4;\n  return {\n    type: 'Polygon',\n    coordinates: [[[lon0, lat0], [lon0, lat1], [lon0 + dlon4, lat1], [lon0 + 2 * dlon4, lat1], [lon0 + 3 * dlon4, lat1], [lon1, lat1], [lon1, lat0], [lon1 - dlon4, lat0], [lon1 - 2 * dlon4, lat0], [lon1 - 3 * dlon4, lat0], [lon0, lat0]]]\n  };\n}","map":{"version":3,"names":["d3","require","geo","geoPath","geoDistance","geoProjection","Registry","Lib","strTranslate","Color","Drawing","Fx","Plots","Axes","getAutoRange","dragElement","prepSelect","clearOutline","selectOnClick","createGeoZoom","constants","geoUtils","topojsonUtils","topojsonFeature","feature","Geo","opts","id","graphDiv","container","topojsonURL","isStatic","staticPlot","topojsonName","topojson","projection","scope","viewInitial","fitScale","bounds","midPt","hasChoropleth","traceHash","layers","basePaths","dataPaths","dataPoints","clipDef","clipRect","bgRect","makeFramework","proto","prototype","module","exports","createGeo","plot","geoCalcData","fullLayout","promises","replot","_this","update","_geoCalcData","_fullLayout","geoLayout","geoPromises","needsTopojson","k","layerNameToAdjective","hasMarkerAngles","i","length","trace","_geo","locationmode","marker","angle","angleref","_hasMarkerAngles","topojsonNameNew","getTopojsonName","PlotlyGeoAssets","undefined","push","fetchTopojson","concat","fetchTraceGeoData","Promise","resolve","reject","all","then","catch","topojsonPath","getTopojsonPath","json","err","status","Error","join","calcTrace","type","visible","_length","_module","calcGeoJSON","hasInvalidBounds","updateProjection","saveViewInitial","updateBaseLayers","updateDims","updateFx","generalUpdatePerTraceModule","scatterLayer","frontplot","select","point","selectAll","text","line","choroplethLayer","backplot","choropleth","_render","gd","gs","_size","domain","projLayout","lonaxis","lataxis","axLon","_ax","axLat","getProjection","extent","l","w","x","t","h","y","center","rotation","lonaxisRange","range","lataxisRange","fitbounds","midLon","midLat","_isScoped","lon","lat","_isClipped","roll","projType","lonHalfSpan","lonaxisSpan","latHalfSpan","lataxisSpan","rotate","parallels","rangeBox","makeRangeBox","fitExtent","b","getBounds","s","scale","translate","b2","k2","Math","min","isFinite","warn","clipExtent","_isAlbersUsa","centerPx","tt","isAxisLayer","d","isLineLayer","Boolean","lineLayers","isFillLayer","fillLayers","allLayers","layersForChoropleth","layerData","filter","showgrid","framework","data","String","exit","each","remove","enter","append","attr","layer","style","classed","order","path","adj","datum","sphereSVG","objects","makeGraticule","call","stroke","gridcolor","dashLine","griddash","gridwidth","fill","hFrameWidth","framewidth","setRect","bgcolor","xaxis","_offset","yaxis","dragMode","dragmode","clickMode","clickmode","zoomReset","updateObj","emit","invert","lonlat","fillRangeItems","eventData","poly","isRect","ranges","xmin","ymin","xmax","ymax","dataPts","lassoPoints","map","dragOptions","element","node","plotinfo","xaxes","yaxes","subplot","clickFn","numClicks","onmousedown","on","_context","_scrollZoom","prepFn","e","startX","startY","init","getPositionFromD3Event","unhover","event","p2c","hover","_dragging","indexOf","click","clipId","_uid","_clips","setClipUrl","project","v","px","_id","c2p","mockAxis","showexponent","exponentformat","setConvert","extra","extendFlat","render","mayRedrawOnUpdates","pathFn","getPath","translatePoints","lonlatPx","hideShowPoints","isLonLatOverEdges","geojson","projName","projNames","titleCase","projFn","clipAngle","_isSatellite","acos","distance","PI","methods","dummyFn","_","m","r","maxAngle","object","precision","tilt","clipPad","axisName","epsilon","axLayout","scopeDefaults","rng","oppRng","coordFn","dummyAx","tick0","dtick","vals","calcTicks","isScoped","pop","len","coords","Array","coordinates","lon0","lon1","lat0","lat1","dlon4"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/geo/geo.js"],"sourcesContent":["'use strict';\n\n/* global PlotlyGeoAssets:false */\n\nvar d3 = require('@plotly/d3');\nvar geo = require('d3-geo');\nvar geoPath = geo.geoPath;\nvar geoDistance = geo.geoDistance;\nvar geoProjection = require('d3-geo-projection');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar Plots = require('../plots');\nvar Axes = require('../cartesian/axes');\nvar getAutoRange = require('../cartesian/autorange').getAutoRange;\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../../components/selections').prepSelect;\nvar clearOutline = require('../../components/selections').clearOutline;\nvar selectOnClick = require('../../components/selections').selectOnClick;\n\nvar createGeoZoom = require('./zoom');\nvar constants = require('./constants');\n\nvar geoUtils = require('../../lib/geo_location_utils');\nvar topojsonUtils = require('../../lib/topojson_utils');\nvar topojsonFeature = require('topojson-client').feature;\n\nfunction Geo(opts) {\n    this.id = opts.id;\n    this.graphDiv = opts.graphDiv;\n    this.container = opts.container;\n    this.topojsonURL = opts.topojsonURL;\n    this.isStatic = opts.staticPlot;\n\n    this.topojsonName = null;\n    this.topojson = null;\n\n    this.projection = null;\n    this.scope = null;\n    this.viewInitial = null;\n    this.fitScale = null;\n    this.bounds = null;\n    this.midPt = null;\n\n    this.hasChoropleth = false;\n    this.traceHash = {};\n\n    this.layers = {};\n    this.basePaths = {};\n    this.dataPaths = {};\n    this.dataPoints = {};\n\n    this.clipDef = null;\n    this.clipRect = null;\n    this.bgRect = null;\n\n    this.makeFramework();\n}\n\nvar proto = Geo.prototype;\n\nmodule.exports = function createGeo(opts) {\n    return new Geo(opts);\n};\n\nproto.plot = function(geoCalcData, fullLayout, promises, replot) {\n    var _this = this;\n    if(replot) return _this.update(geoCalcData, fullLayout, true);\n\n    _this._geoCalcData = geoCalcData;\n    _this._fullLayout = fullLayout;\n\n    var geoLayout = fullLayout[this.id];\n    var geoPromises = [];\n\n    var needsTopojson = false;\n    for(var k in constants.layerNameToAdjective) {\n        if(k !== 'frame' && geoLayout['show' + k]) {\n            needsTopojson = true;\n            break;\n        }\n    }\n\n    var hasMarkerAngles = false;\n    for(var i = 0; i < geoCalcData.length; i++) {\n        var trace = geoCalcData[0][0].trace;\n        trace._geo = _this;\n\n        if(trace.locationmode) {\n            needsTopojson = true;\n        }\n\n        var marker = trace.marker;\n        if(marker) {\n            var angle = marker.angle;\n            var angleref = marker.angleref;\n            if(angle || angleref === 'north' || angleref === 'previous') hasMarkerAngles = true;\n        }\n    }\n    this._hasMarkerAngles = hasMarkerAngles;\n\n    if(needsTopojson) {\n        var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n        if(_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n            _this.topojsonName = topojsonNameNew;\n\n            if(PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n                geoPromises.push(_this.fetchTopojson());\n            }\n        }\n    }\n\n    geoPromises = geoPromises.concat(geoUtils.fetchTraceGeoData(geoCalcData));\n\n    promises.push(new Promise(function(resolve, reject) {\n        Promise.all(geoPromises).then(function() {\n            _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n            _this.update(geoCalcData, fullLayout);\n            resolve();\n        })\n        .catch(reject);\n    }));\n};\n\nproto.fetchTopojson = function() {\n    var _this = this;\n    var topojsonPath = topojsonUtils.getTopojsonPath(_this.topojsonURL, _this.topojsonName);\n\n    return new Promise(function(resolve, reject) {\n        d3.json(topojsonPath, function(err, topojson) {\n            if(err) {\n                if(err.status === 404) {\n                    return reject(new Error([\n                        'plotly.js could not find topojson file at',\n                        topojsonPath + '.',\n                        'Make sure the *topojsonURL* plot config option',\n                        'is set properly.'\n                    ].join(' ')));\n                } else {\n                    return reject(new Error([\n                        'unexpected error while fetching topojson file at',\n                        topojsonPath\n                    ].join(' ')));\n                }\n            }\n\n            PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n            resolve();\n        });\n    });\n};\n\nproto.update = function(geoCalcData, fullLayout, replot) {\n    var geoLayout = fullLayout[this.id];\n\n    // important: maps with choropleth traces have a different layer order\n    this.hasChoropleth = false;\n\n    for(var i = 0; i < geoCalcData.length; i++) {\n        var calcTrace = geoCalcData[i];\n        var trace = calcTrace[0].trace;\n\n        if(trace.type === 'choropleth') {\n            this.hasChoropleth = true;\n        }\n        if(trace.visible === true && trace._length > 0) {\n            trace._module.calcGeoJSON(calcTrace, fullLayout);\n        }\n    }\n\n    if(!replot) {\n        var hasInvalidBounds = this.updateProjection(geoCalcData, fullLayout);\n        if(hasInvalidBounds) return;\n\n        if(!this.viewInitial || this.scope !== geoLayout.scope) {\n            this.saveViewInitial(geoLayout);\n        }\n    }\n    this.scope = geoLayout.scope;\n\n    this.updateBaseLayers(fullLayout, geoLayout);\n    this.updateDims(fullLayout, geoLayout);\n    this.updateFx(fullLayout, geoLayout);\n\n    Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n\n    var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n    this.dataPoints.point = scatterLayer.selectAll('.point');\n    this.dataPoints.text = scatterLayer.selectAll('text');\n    this.dataPaths.line = scatterLayer.selectAll('.js-line');\n\n    var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n    this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n\n    this._render();\n};\n\nproto.updateProjection = function(geoCalcData, fullLayout) {\n    var gd = this.graphDiv;\n    var geoLayout = fullLayout[this.id];\n    var gs = fullLayout._size;\n    var domain = geoLayout.domain;\n    var projLayout = geoLayout.projection;\n\n    var lonaxis = geoLayout.lonaxis;\n    var lataxis = geoLayout.lataxis;\n    var axLon = lonaxis._ax;\n    var axLat = lataxis._ax;\n\n    var projection = this.projection = getProjection(geoLayout);\n\n    // setup subplot extent [[x0,y0], [x1,y1]]\n    var extent = [[\n        gs.l + gs.w * domain.x[0],\n        gs.t + gs.h * (1 - domain.y[1])\n    ], [\n        gs.l + gs.w * domain.x[1],\n        gs.t + gs.h * (1 - domain.y[0])\n    ]];\n\n    var center = geoLayout.center || {};\n    var rotation = projLayout.rotation || {};\n    var lonaxisRange = lonaxis.range || [];\n    var lataxisRange = lataxis.range || [];\n\n    if(geoLayout.fitbounds) {\n        axLon._length = extent[1][0] - extent[0][0];\n        axLat._length = extent[1][1] - extent[0][1];\n        axLon.range = getAutoRange(gd, axLon);\n        axLat.range = getAutoRange(gd, axLat);\n\n        var midLon = (axLon.range[0] + axLon.range[1]) / 2;\n        var midLat = (axLat.range[0] + axLat.range[1]) / 2;\n\n        if(geoLayout._isScoped) {\n            center = {lon: midLon, lat: midLat};\n        } else if(geoLayout._isClipped) {\n            center = {lon: midLon, lat: midLat};\n            rotation = {lon: midLon, lat: midLat, roll: rotation.roll};\n\n            var projType = projLayout.type;\n            var lonHalfSpan = (constants.lonaxisSpan[projType] / 2) || 180;\n            var latHalfSpan = (constants.lataxisSpan[projType] / 2) || 90;\n\n            lonaxisRange = [midLon - lonHalfSpan, midLon + lonHalfSpan];\n            lataxisRange = [midLat - latHalfSpan, midLat + latHalfSpan];\n        } else {\n            center = {lon: midLon, lat: midLat};\n            rotation = {lon: midLon, lat: rotation.lat, roll: rotation.roll};\n        }\n    }\n\n    // set 'pre-fit' projection\n    projection\n        .center([center.lon - rotation.lon, center.lat - rotation.lat])\n        .rotate([-rotation.lon, -rotation.lat, rotation.roll])\n        .parallels(projLayout.parallels);\n\n    // fit projection 'scale' and 'translate' to set lon/lat ranges\n    var rangeBox = makeRangeBox(lonaxisRange, lataxisRange);\n    projection.fitExtent(extent, rangeBox);\n\n    var b = this.bounds = projection.getBounds(rangeBox);\n    var s = this.fitScale = projection.scale();\n    var t = projection.translate();\n\n    if(geoLayout.fitbounds) {\n        var b2 = projection.getBounds(makeRangeBox(axLon.range, axLat.range));\n        var k2 = Math.min(\n            (b[1][0] - b[0][0]) / (b2[1][0] - b2[0][0]),\n            (b[1][1] - b[0][1]) / (b2[1][1] - b2[0][1])\n        );\n\n        if(isFinite(k2)) {\n            projection.scale(k2 * s);\n        } else {\n            Lib.warn('Something went wrong during' + this.id + 'fitbounds computations.');\n        }\n    } else {\n        // adjust projection to user setting\n        projection.scale(projLayout.scale * s);\n    }\n\n    // px coordinates of view mid-point,\n    // useful to update `geo.center` after interactions\n    var midPt = this.midPt = [\n        (b[0][0] + b[1][0]) / 2,\n        (b[0][1] + b[1][1]) / 2\n    ];\n\n    projection\n        .translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])])\n        .clipExtent(b);\n\n    // the 'albers usa' projection does not expose a 'center' method\n    // so here's this hack to make it respond to 'geoLayout.center'\n    if(geoLayout._isAlbersUsa) {\n        var centerPx = projection([center.lon, center.lat]);\n        var tt = projection.translate();\n\n        projection.translate([\n            tt[0] - (centerPx[0] - tt[0]),\n            tt[1] - (centerPx[1] - tt[1])\n        ]);\n    }\n};\n\nproto.updateBaseLayers = function(fullLayout, geoLayout) {\n    var _this = this;\n    var topojson = _this.topojson;\n    var layers = _this.layers;\n    var basePaths = _this.basePaths;\n\n    function isAxisLayer(d) {\n        return (d === 'lonaxis' || d === 'lataxis');\n    }\n\n    function isLineLayer(d) {\n        return Boolean(constants.lineLayers[d]);\n    }\n\n    function isFillLayer(d) {\n        return Boolean(constants.fillLayers[d]);\n    }\n\n    var allLayers = this.hasChoropleth ?\n        constants.layersForChoropleth :\n        constants.layers;\n\n    var layerData = allLayers.filter(function(d) {\n        return (isLineLayer(d) || isFillLayer(d)) ? geoLayout['show' + d] :\n            isAxisLayer(d) ? geoLayout[d].showgrid :\n            true;\n    });\n\n    var join = _this.framework.selectAll('.layer')\n        .data(layerData, String);\n\n    join.exit().each(function(d) {\n        delete layers[d];\n        delete basePaths[d];\n        d3.select(this).remove();\n    });\n\n    join.enter().append('g')\n        .attr('class', function(d) { return 'layer ' + d; })\n        .each(function(d) {\n            var layer = layers[d] = d3.select(this);\n\n            if(d === 'bg') {\n                _this.bgRect = layer.append('rect')\n                    .style('pointer-events', 'all');\n            } else if(isAxisLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none');\n            } else if(d === 'backplot') {\n                layer.append('g')\n                    .classed('choroplethlayer', true);\n            } else if(d === 'frontplot') {\n                layer.append('g')\n                    .classed('scatterlayer', true);\n            } else if(isLineLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none')\n                    .style('stroke-miterlimit', 2);\n            } else if(isFillLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('stroke', 'none');\n            }\n        });\n\n    join.order();\n\n    join.each(function(d) {\n        var path = basePaths[d];\n        var adj = constants.layerNameToAdjective[d];\n\n        if(d === 'frame') {\n            path.datum(constants.sphereSVG);\n        } else if(isLineLayer(d) || isFillLayer(d)) {\n            path.datum(topojsonFeature(topojson, topojson.objects[d]));\n        } else if(isAxisLayer(d)) {\n            path.datum(makeGraticule(d, geoLayout, fullLayout))\n                .call(Color.stroke, geoLayout[d].gridcolor)\n                .call(Drawing.dashLine, geoLayout[d].griddash, geoLayout[d].gridwidth);\n        }\n\n        if(isLineLayer(d)) {\n            path.call(Color.stroke, geoLayout[adj + 'color'])\n                .call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n        } else if(isFillLayer(d)) {\n            path.call(Color.fill, geoLayout[adj + 'color']);\n        }\n    });\n};\n\nproto.updateDims = function(fullLayout, geoLayout) {\n    var b = this.bounds;\n    var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n\n    var l = b[0][0] - hFrameWidth;\n    var t = b[0][1] - hFrameWidth;\n    var w = b[1][0] - l + hFrameWidth;\n    var h = b[1][1] - t + hFrameWidth;\n\n    Drawing.setRect(this.clipRect, l, t, w, h);\n\n    this.bgRect\n        .call(Drawing.setRect, l, t, w, h)\n        .call(Color.fill, geoLayout.bgcolor);\n\n    this.xaxis._offset = l;\n    this.xaxis._length = w;\n\n    this.yaxis._offset = t;\n    this.yaxis._length = h;\n};\n\nproto.updateFx = function(fullLayout, geoLayout) {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var bgRect = _this.bgRect;\n    var dragMode = fullLayout.dragmode;\n    var clickMode = fullLayout.clickmode;\n\n    if(_this.isStatic) return;\n\n    function zoomReset() {\n        var viewInitial = _this.viewInitial;\n        var updateObj = {};\n\n        for(var k in viewInitial) {\n            updateObj[_this.id + '.' + k] = viewInitial[k];\n        }\n\n        Registry.call('_guiRelayout', gd, updateObj);\n        gd.emit('plotly_doubleclick', null);\n    }\n\n    function invert(lonlat) {\n        return _this.projection.invert([\n            lonlat[0] + _this.xaxis._offset,\n            lonlat[1] + _this.yaxis._offset\n        ]);\n    }\n\n    var fillRangeItems = function(eventData, poly) {\n        if(poly.isRect) {\n            var ranges = eventData.range = {};\n            ranges[_this.id] = [\n                invert([poly.xmin, poly.ymin]),\n                invert([poly.xmax, poly.ymax])\n            ];\n        } else {\n            var dataPts = eventData.lassoPoints = {};\n            dataPts[_this.id] = poly.map(invert);\n        }\n    };\n\n    // Note: dragOptions is needed to be declared for all dragmodes because\n    // it's the object that holds persistent selection state.\n    var dragOptions = {\n        element: _this.bgRect.node(),\n        gd: gd,\n        plotinfo: {\n            id: _this.id,\n            xaxis: _this.xaxis,\n            yaxis: _this.yaxis,\n            fillRangeItems: fillRangeItems\n        },\n        xaxes: [_this.xaxis],\n        yaxes: [_this.yaxis],\n        subplot: _this.id,\n        clickFn: function(numClicks) {\n            if(numClicks === 2) {\n                clearOutline(gd);\n            }\n        }\n    };\n\n    if(dragMode === 'pan') {\n        bgRect.node().onmousedown = null;\n        bgRect.call(createGeoZoom(_this, geoLayout));\n        bgRect.on('dblclick.zoom', zoomReset);\n        if(!gd._context._scrollZoom.geo) {\n            bgRect.on('wheel.zoom', null);\n        }\n    } else if(dragMode === 'select' || dragMode === 'lasso') {\n        bgRect.on('.zoom', null);\n\n        dragOptions.prepFn = function(e, startX, startY) {\n            prepSelect(e, startX, startY, dragOptions, dragMode);\n        };\n\n        dragElement.init(dragOptions);\n    }\n\n    bgRect.on('mousemove', function() {\n        var lonlat = _this.projection.invert(Lib.getPositionFromD3Event());\n\n        if(!lonlat) {\n            return dragElement.unhover(gd, d3.event);\n        }\n\n        _this.xaxis.p2c = function() { return lonlat[0]; };\n        _this.yaxis.p2c = function() { return lonlat[1]; };\n\n        Fx.hover(gd, d3.event, _this.id);\n    });\n\n    bgRect.on('mouseout', function() {\n        if(gd._dragging) return;\n        dragElement.unhover(gd, d3.event);\n    });\n\n    bgRect.on('click', function() {\n        // For select and lasso the dragElement is handling clicks\n        if(dragMode !== 'select' && dragMode !== 'lasso') {\n            if(clickMode.indexOf('select') > -1) {\n                selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis],\n                  _this.id, dragOptions);\n            }\n\n            if(clickMode.indexOf('event') > -1) {\n                // TODO: like pie and maps, this doesn't support right-click\n                // actually this one is worse, as right-click starts a pan, or leaves\n                // select in a weird state.\n                // Also, only tangentially related, we should cancel hover during pan\n                Fx.click(gd, d3.event);\n            }\n        }\n    });\n};\n\nproto.makeFramework = function() {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var fullLayout = gd._fullLayout;\n    var clipId = 'clip' + fullLayout._uid + _this.id;\n\n    _this.clipDef = fullLayout._clips.append('clipPath')\n        .attr('id', clipId);\n\n    _this.clipRect = _this.clipDef.append('rect');\n\n    _this.framework = d3.select(_this.container).append('g')\n        .attr('class', 'geo ' + _this.id)\n        .call(Drawing.setClipUrl, clipId, gd);\n\n    // sane lonlat to px\n    _this.project = function(v) {\n        var px = _this.projection(v);\n        return px ?\n            [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] :\n            [null, null];\n    };\n\n    _this.xaxis = {\n        _id: 'x',\n        c2p: function(v) { return _this.project(v)[0]; }\n    };\n\n    _this.yaxis = {\n        _id: 'y',\n        c2p: function(v) { return _this.project(v)[1]; }\n    };\n\n    // mock axis for hover formatting\n    _this.mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nproto.saveViewInitial = function(geoLayout) {\n    var center = geoLayout.center || {};\n    var projLayout = geoLayout.projection;\n    var rotation = projLayout.rotation || {};\n\n    this.viewInitial = {\n        fitbounds: geoLayout.fitbounds,\n        'projection.scale': projLayout.scale\n    };\n\n    var extra;\n    if(geoLayout._isScoped) {\n        extra = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n        };\n    } else if(geoLayout._isClipped) {\n        extra = {\n            'projection.rotation.lon': rotation.lon,\n            'projection.rotation.lat': rotation.lat\n        };\n    } else {\n        extra = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n            'projection.rotation.lon': rotation.lon\n        };\n    }\n\n    Lib.extendFlat(this.viewInitial, extra);\n};\n\nproto.render = function(mayRedrawOnUpdates) {\n    if(this._hasMarkerAngles && mayRedrawOnUpdates) {\n        this.plot(this._geoCalcData, this._fullLayout, [], true);\n    } else {\n        this._render();\n    }\n};\n\n// [hot code path] (re)draw all paths which depend on the projection\nproto._render = function() {\n    var projection = this.projection;\n    var pathFn = projection.getPath();\n    var k;\n\n    function translatePoints(d) {\n        var lonlatPx = projection(d.lonlat);\n        return lonlatPx ?\n            strTranslate(lonlatPx[0], lonlatPx[1]) :\n             null;\n    }\n\n    function hideShowPoints(d) {\n        return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n    }\n\n    for(k in this.basePaths) {\n        this.basePaths[k].attr('d', pathFn);\n    }\n\n    for(k in this.dataPaths) {\n        this.dataPaths[k].attr('d', function(d) { return pathFn(d.geojson); });\n    }\n\n    for(k in this.dataPoints) {\n        this.dataPoints[k]\n            .attr('display', hideShowPoints)\n            .attr('transform', translatePoints); // TODO: need to redraw points with marker angle instead of calling translatePoints\n    }\n};\n\n// Helper that wraps d3[geo + /* Projection name /*]() which:\n//\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\nfunction getProjection(geoLayout) {\n    var projLayout = geoLayout.projection;\n    var projType = projLayout.type;\n\n    var projName = constants.projNames[projType];\n    // uppercase the first letter and add geo to the start of method name\n    projName = 'geo' + Lib.titleCase(projName);\n    var projFn = geo[projName] || geoProjection[projName];\n    var projection = projFn();\n\n    var clipAngle =\n        geoLayout._isSatellite ? Math.acos(1 / projLayout.distance) * 180 / Math.PI :\n        geoLayout._isClipped ? constants.lonaxisSpan[projType] / 2 : null;\n\n    var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n    var dummyFn = function(_) { return _ ? projection : []; };\n\n    for(var i = 0; i < methods.length; i++) {\n        var m = methods[i];\n        if(typeof projection[m] !== 'function') {\n            projection[m] = dummyFn;\n        }\n    }\n\n    projection.isLonLatOverEdges = function(lonlat) {\n        if(projection(lonlat) === null) {\n            return true;\n        }\n\n        if(clipAngle) {\n            var r = projection.rotate();\n            var angle = geoDistance(lonlat, [-r[0], -r[1]]);\n            var maxAngle = clipAngle * Math.PI / 180;\n            return angle > maxAngle;\n        } else {\n            return false;\n        }\n    };\n\n    projection.getPath = function() {\n        return geoPath().projection(projection);\n    };\n\n    projection.getBounds = function(object) {\n        return projection.getPath().bounds(object);\n    };\n\n    projection.precision(constants.precision);\n\n    if(geoLayout._isSatellite) {\n        projection.tilt(projLayout.tilt).distance(projLayout.distance);\n    }\n\n    if(clipAngle) {\n        projection.clipAngle(clipAngle - constants.clipPad);\n    }\n\n    return projection;\n}\n\nfunction makeGraticule(axisName, geoLayout, fullLayout) {\n    // equivalent to the d3 \"ε\"\n    var epsilon = 1e-6;\n    // same as the geoGraticule default\n    var precision = 2.5;\n\n    var axLayout = geoLayout[axisName];\n    var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n    var rng;\n    var oppRng;\n    var coordFn;\n\n    if(axisName === 'lonaxis') {\n        rng = scopeDefaults.lonaxisRange;\n        oppRng = scopeDefaults.lataxisRange;\n        coordFn = function(v, l) { return [v, l]; };\n    } else if(axisName === 'lataxis') {\n        rng = scopeDefaults.lataxisRange;\n        oppRng = scopeDefaults.lonaxisRange;\n        coordFn = function(v, l) { return [l, v]; };\n    }\n\n    var dummyAx = {\n        type: 'linear',\n        range: [rng[0], rng[1] - epsilon],\n        tick0: axLayout.tick0,\n        dtick: axLayout.dtick\n    };\n\n    Axes.setConvert(dummyAx, fullLayout);\n    var vals = Axes.calcTicks(dummyAx);\n\n    // remove duplicate on antimeridian\n    if(!geoLayout.isScoped && axisName === 'lonaxis') {\n        vals.pop();\n    }\n\n    var len = vals.length;\n    var coords = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var v = vals[i].x;\n        var line = coords[i] = [];\n        for(var l = oppRng[0]; l < oppRng[1] + precision; l += precision) {\n            line.push(coordFn(v, l));\n        }\n    }\n\n    return {\n        type: 'MultiLineString',\n        coordinates: coords\n    };\n}\n\n// Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\nfunction makeRangeBox(lon, lat) {\n    var clipPad = constants.clipPad;\n    var lon0 = lon[0] + clipPad;\n    var lon1 = lon[1] - clipPad;\n    var lat0 = lat[0] + clipPad;\n    var lat1 = lat[1] - clipPad;\n\n    // to cross antimeridian w/o ambiguity\n    if(lon0 > 0 && lon1 < 0) lon1 += 360;\n\n    var dlon4 = (lon1 - lon0) / 4;\n\n    return {\n        type: 'Polygon',\n        coordinates: [[\n            [lon0, lat0],\n            [lon0, lat1],\n            [lon0 + dlon4, lat1],\n            [lon0 + 2 * dlon4, lat1],\n            [lon0 + 3 * dlon4, lat1],\n            [lon1, lat1],\n            [lon1, lat0],\n            [lon1 - dlon4, lat0],\n            [lon1 - 2 * dlon4, lat0],\n            [lon1 - 3 * dlon4, lat0],\n            [lon0, lat0]\n        ]]\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}