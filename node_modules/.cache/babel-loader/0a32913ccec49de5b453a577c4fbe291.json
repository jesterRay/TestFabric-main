{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults').supplyDefaults,\n  colorbar: {\n    min: 'cmin',\n    max: 'cmax'\n  },\n  calc: require('./calc'),\n  plot: require('./convert'),\n  moduleType: 'trace',\n  name: 'surface',\n  basePlotModule: require('../../plots/gl3d'),\n  categories: ['gl3d', '2dMap', 'showLegend'],\n  meta: {\n    description: ['The data the describes the coordinates of the surface is set in `z`.', 'Data in `z` should be a {2D array}.', 'Coordinates in `x` and `y` can either be 1D {arrays}', 'or {2D arrays} (e.g. to graph parametric surfaces).', 'If not provided in `x` and `y`, the x and y coordinates are assumed', 'to be linear starting at 0 with a unit step.', 'The color scale corresponds to the `z` values by default.', 'For custom color scales, use `surfacecolor` which should be a {2D array},', 'where its bounds can be controlled using `cmin` and `cmax`.'].join(' ')\n  }\n};","map":{"version":3,"names":["module","exports","attributes","require","supplyDefaults","colorbar","min","max","calc","plot","moduleType","name","basePlotModule","categories","meta","description","join"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/surface/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    attributes: require('./attributes'),\n    supplyDefaults: require('./defaults').supplyDefaults,\n    colorbar: {\n        min: 'cmin',\n        max: 'cmax'\n    },\n    calc: require('./calc'),\n    plot: require('./convert'),\n\n    moduleType: 'trace',\n    name: 'surface',\n    basePlotModule: require('../../plots/gl3d'),\n    categories: ['gl3d', '2dMap', 'showLegend'],\n    meta: {\n        description: [\n            'The data the describes the coordinates of the surface is set in `z`.',\n            'Data in `z` should be a {2D array}.',\n\n            'Coordinates in `x` and `y` can either be 1D {arrays}',\n            'or {2D arrays} (e.g. to graph parametric surfaces).',\n\n            'If not provided in `x` and `y`, the x and y coordinates are assumed',\n            'to be linear starting at 0 with a unit step.',\n\n            'The color scale corresponds to the `z` values by default.',\n            'For custom color scales, use `surfacecolor` which should be a {2D array},',\n            'where its bounds can be controlled using `cmin` and `cmax`.'\n        ].join(' ')\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG;EACbC,UAAU,EAAEC,OAAO,CAAC,cAAc,CAAC;EACnCC,cAAc,EAAED,OAAO,CAAC,YAAY,CAAC,CAACC,cAAc;EACpDC,QAAQ,EAAE;IACNC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE;EACT,CAAC;EACDC,IAAI,EAAEL,OAAO,CAAC,QAAQ,CAAC;EACvBM,IAAI,EAAEN,OAAO,CAAC,WAAW,CAAC;EAE1BO,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE,SAAS;EACfC,cAAc,EAAET,OAAO,CAAC,kBAAkB,CAAC;EAC3CU,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC;EAC3CC,IAAI,EAAE;IACFC,WAAW,EAAE,CACT,sEAAsE,EACtE,qCAAqC,EAErC,sDAAsD,EACtD,qDAAqD,EAErD,qEAAqE,EACrE,8CAA8C,EAE9C,2DAA2D,EAC3D,2EAA2E,EAC3E,6DAA6D,CAChE,CAACC,IAAI,CAAC,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}