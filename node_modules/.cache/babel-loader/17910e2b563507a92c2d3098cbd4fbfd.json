{"ast":null,"code":"module.exports = adjoint;\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3],\n    a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7],\n    a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11],\n    a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n;","map":{"version":3,"names":["module","exports","adjoint","out","a","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/gl-mat4/adjoint.js"],"sourcesContent":["module.exports = adjoint;\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}