{"ast":null,"code":"import React,{useState,useEffect}from'react';import ChatBot from'react-simple-chatbot';import axios from'axios';import{BrowserRouter as Router,Route,Link}from'react-router-dom';// Custom component to fetch and display services\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FetchServices=_ref=>{let{triggerNextStep}=_ref;const[services,setServices]=useState('');const[loading,setLoading]=useState(true);useEffect(()=>{const fetchServices=async()=>{try{const response=await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"services_list\"));console.log('API Response:',response.data);if(response.data.success){//const servicesNames = response.data.data.map(service => service.associations_and_partners__Name).join(', ');\n//setServices(servicesNames);\nconst servicesNames=response.data.data.map(service=>service.associations_and_partners__Name);setServices(servicesNames);}else{setServices('No services available.');}}catch(error){console.error('Error fetching services:',error);setServices('Error fetching services.');}finally{setLoading(false);triggerNextStep();}};fetchServices();},[triggerNextStep]);return(/*#__PURE__*///<div>\n//    {loading ? 'Loading services...' : `Here are our services: ${services}`}\n//</div>\n_jsx(\"div\",{children:loading?'Loading services...':/*#__PURE__*/_jsxs(\"div\",{children:[\"Here are our services:\",/*#__PURE__*/_jsx(\"ul\",{children:services.map((service,index)=>/*#__PURE__*///<li key={index}>{service}</li>\n_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/#/services/\".concat(encodeURIComponent(service.replace(/ /g,'_'))),children:service})},index))})]})}));};const Chatbot=()=>{const steps=[{id:'0',message:'Welcome to Testfabrics!',trigger:'1'},{id:'1',message:'Please enter your name!',trigger:'2'},{id:'2',user:true,trigger:'3'},{id:'3',message:'Hi {previousValue}, how may I help you?',trigger:'4'},{id:'4',options:[{value:\"Products\",label:\"Products\",trigger:'Products'},{value:\"Services\",label:\"Services\",trigger:'Services'}]},{id:'Products',message:'These are our products.',end:true},{id:'Services',component:/*#__PURE__*/_jsx(FetchServices,{}),waitAction:true,trigger:'5'},{id:'5',message:'Is there anything else I can help you with?',end:true}];return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChatBot,{steps:steps,floating:true})});};export default Chatbot;//import React, { useState, useEffect } from 'react';\n//import ChatBot from 'react-simple-chatbot';\n//import axios from 'axios';\n//import { HashRouter as Router, Route, Link } from 'react-router-dom';\n//const FetchServices = ({ triggerNextStep }) => {\n//    const [services, setServices] = useState([]);\n//    const [loading, setLoading] = useState(true);\n//    useEffect(() => {\n//        const fetchServices = async () => {\n//            try {\n//                const response = await axios.get('${process.env.REACT_APP_API_URL}services_list');\n//                console.log('API Response:', response.data);\n//                if (response.data.success) {\n//                    const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n//                    setServices(servicesNames);\n//                } else {\n//                    setServices(['No services available.']);\n//                }\n//            } catch (error) {\n//                console.error('Error fetching services:', error);\n//                setServices(['Error fetching services.']);\n//            } finally {\n//                setLoading(false);\n//                triggerNextStep(); // Trigger next step after fetching the data\n//            }\n//        };\n//        fetchServices();\n//    }, [triggerNextStep]);\n//    return (\n//        <div>\n//            {loading ? 'Loading services...' : (\n//                <div>\n//                    Here are our services:\n//                    <ul>\n//                        {services.map((service, index) => (\n//                            <li key={index}>\n//                                <Link to={`/services/${encodeURIComponent(service)}`}>{service}</Link>\n//                            </li>\n//                        ))}\n//                    </ul>\n//                </div>\n//            )}\n//        </div>\n//    );\n//};\n//const Chatbot = () => {\n//    const steps = [\n//        {\n//            id: '0',\n//            message: 'Welcome to Testfabrics!',\n//            trigger: '1',\n//        },\n//        {\n//            id: '1',\n//            message: 'Please enter your name!',\n//            trigger: '2',\n//        },\n//        {\n//            id: '2',\n//            user: true,\n//            trigger: '3',\n//        },\n//        {\n//            id: '3',\n//            message: 'Hi {previousValue}, how may I help you?',\n//            trigger: '4',\n//        },\n//        {\n//            id: '4',\n//            options: [\n//                { value: \"Products\", label: \"Products\", trigger: 'Products' },\n//                { value: \"Services\", label: \"Services\", trigger: 'Services' },\n//            ],\n//        },\n//        {\n//            id: 'Products',\n//            message: 'These are our products.',\n//            end: true,\n//        },\n//        {\n//            id: 'Services',\n//            component: <FetchServices />,\n//            waitAction: true,\n//            trigger: '5',\n//        },\n//        {\n//            id: '5',\n//            message: 'Is there anything else I can help you with?',\n//            end: true,\n//        },\n//    ];\n//    return (\n//        <div>\n//            <ChatBot\n//                steps={steps}\n//                floating={true}\n//            />\n//        </div>\n//    );\n//}\n//export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","ChatBot","axios","BrowserRouter","Router","Route","Link","jsx","_jsx","jsxs","_jsxs","FetchServices","_ref","triggerNextStep","services","setServices","loading","setLoading","fetchServices","response","get","concat","process","env","REACT_APP_API_URL","console","log","data","success","servicesNames","map","service","associations_and_partners__Name","error","children","index","href","encodeURIComponent","replace","Chatbot","steps","id","message","trigger","user","options","value","label","end","component","waitAction","floating"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/pages/chatbotfile.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n// Custom component to fetch and display services\nconst FetchServices = ({ triggerNextStep }) => {\n    const [services, setServices] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchServices = async () => {\n            try {\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}services_list`);\n                console.log('API Response:', response.data);\n\n                if (response.data.success) {\n                    //const servicesNames = response.data.data.map(service => service.associations_and_partners__Name).join(', ');\n                    //setServices(servicesNames);\n                    const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n                    setServices(servicesNames);\n                } else {\n                    setServices('No services available.');\n                }\n            } catch (error) {\n                console.error('Error fetching services:', error);\n                setServices('Error fetching services.');\n            } finally {\n                setLoading(false);\n                triggerNextStep(); \n            }\n        };\n\n        fetchServices();\n    }, [triggerNextStep]);\n\n    return (\n        //<div>\n        //    {loading ? 'Loading services...' : `Here are our services: ${services}`}\n        //</div>\n        <div>\n            {loading ? 'Loading services...' : (\n                <div>\n                    Here are our services:\n                    <ul>\n                        {services.map((service, index) => (\n                            //<li key={index}>{service}</li>\n                            <li key={index}>\n                                <a href={`/#/services/${encodeURIComponent(service.replace(/ /g, '_'))}`}>{service}</a>\n                            </li>\n                           \n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst Chatbot = () => {\n    const steps = [\n        {\n            id: '0',\n            message: 'Welcome to Testfabrics!',\n            trigger: '1',\n        },\n        {\n            id: '1',\n            message: 'Please enter your name!',\n            trigger: '2',\n        },\n        {\n            id: '2',\n            user: true,\n            trigger: '3',\n        },\n        {\n            id: '3',\n            message: 'Hi {previousValue}, how may I help you?',\n            trigger: '4',\n        },\n        {\n            id: '4',\n            options: [\n                { value: \"Products\", label: \"Products\", trigger: 'Products' },\n                { value: \"Services\", label: \"Services\", trigger: 'Services' },\n            ],\n        },\n        {\n            id: 'Products',\n            message: 'These are our products.',\n            end: true,\n        },\n        {\n            id: 'Services',\n            component: <FetchServices />,\n            waitAction: true,\n            trigger: '5',\n        },\n        {\n            id: '5',\n            message: 'Is there anything else I can help you with?',\n            end: true,\n        },\n    ];\n\n    return (\n        <div>\n            <ChatBot\n                steps={steps}\n                floating={true}\n            />\n        </div>\n    );\n}\n\nexport default Chatbot;\n\n\n//import React, { useState, useEffect } from 'react';\n//import ChatBot from 'react-simple-chatbot';\n//import axios from 'axios';\n//import { HashRouter as Router, Route, Link } from 'react-router-dom';\n\n//const FetchServices = ({ triggerNextStep }) => {\n//    const [services, setServices] = useState([]);\n//    const [loading, setLoading] = useState(true);\n\n//    useEffect(() => {\n//        const fetchServices = async () => {\n//            try {\n//                const response = await axios.get('${process.env.REACT_APP_API_URL}services_list');\n//                console.log('API Response:', response.data);\n\n//                if (response.data.success) {\n//                    const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n//                    setServices(servicesNames);\n//                } else {\n//                    setServices(['No services available.']);\n//                }\n//            } catch (error) {\n//                console.error('Error fetching services:', error);\n//                setServices(['Error fetching services.']);\n//            } finally {\n//                setLoading(false);\n//                triggerNextStep(); // Trigger next step after fetching the data\n//            }\n//        };\n\n//        fetchServices();\n//    }, [triggerNextStep]);\n\n//    return (\n//        <div>\n//            {loading ? 'Loading services...' : (\n//                <div>\n//                    Here are our services:\n//                    <ul>\n//                        {services.map((service, index) => (\n//                            <li key={index}>\n//                                <Link to={`/services/${encodeURIComponent(service)}`}>{service}</Link>\n//                            </li>\n//                        ))}\n//                    </ul>\n//                </div>\n//            )}\n//        </div>\n//    );\n//};\n\n//const Chatbot = () => {\n//    const steps = [\n//        {\n//            id: '0',\n//            message: 'Welcome to Testfabrics!',\n//            trigger: '1',\n//        },\n//        {\n//            id: '1',\n//            message: 'Please enter your name!',\n//            trigger: '2',\n//        },\n//        {\n//            id: '2',\n//            user: true,\n//            trigger: '3',\n//        },\n//        {\n//            id: '3',\n//            message: 'Hi {previousValue}, how may I help you?',\n//            trigger: '4',\n//        },\n//        {\n//            id: '4',\n//            options: [\n//                { value: \"Products\", label: \"Products\", trigger: 'Products' },\n//                { value: \"Services\", label: \"Services\", trigger: 'Services' },\n//            ],\n//        },\n//        {\n//            id: 'Products',\n//            message: 'These are our products.',\n//            end: true,\n//        },\n//        {\n//            id: 'Services',\n//            component: <FetchServices />,\n//            waitAction: true,\n//            trigger: '5',\n//        },\n//        {\n//            id: '5',\n//            message: 'Is there anything else I can help you with?',\n//            end: true,\n//        },\n//    ];\n\n//    return (\n//        <div>\n//            <ChatBot\n//                steps={steps}\n//                floating={true}\n//            />\n//        </div>\n//    );\n//}\n\n//export default Chatbot;\n\n\n\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}