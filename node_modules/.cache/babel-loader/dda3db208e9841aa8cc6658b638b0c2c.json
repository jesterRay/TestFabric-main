{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar barPlot = require('../bar/plot');\nvar clearMinTextSize = require('../bar/uniform_text').clearMinTextSize;\nmodule.exports = function plot(gd, plotinfo, cdModule, traceLayer) {\n  var fullLayout = gd._fullLayout;\n  clearMinTextSize('funnel', fullLayout);\n  plotConnectorRegions(gd, plotinfo, cdModule, traceLayer);\n  plotConnectorLines(gd, plotinfo, cdModule, traceLayer);\n  barPlot.plot(gd, plotinfo, cdModule, traceLayer, {\n    mode: fullLayout.funnelmode,\n    norm: fullLayout.funnelmode,\n    gap: fullLayout.funnelgap,\n    groupgap: fullLayout.funnelgroupgap\n  });\n};\nfunction plotConnectorRegions(gd, plotinfo, cdModule, traceLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  Lib.makeTraceGroups(traceLayer, cdModule, 'trace bars').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var trace = cd[0].trace;\n    var group = Lib.ensureSingle(plotGroup, 'g', 'regions');\n    if (!trace.connector || !trace.connector.visible) {\n      group.remove();\n      return;\n    }\n    var isHorizontal = trace.orientation === 'h';\n    var connectors = group.selectAll('g.region').data(Lib.identity);\n    connectors.enter().append('g').classed('region', true);\n    connectors.exit().remove();\n    var len = connectors.size();\n    connectors.each(function (di, i) {\n      // don't draw lines between nulls\n      if (i !== len - 1 && !di.cNext) return;\n      var xy = getXY(di, xa, ya, isHorizontal);\n      var x = xy[0];\n      var y = xy[1];\n      var shape = '';\n      if (x[0] !== BADNUM && y[0] !== BADNUM && x[1] !== BADNUM && y[1] !== BADNUM && x[2] !== BADNUM && y[2] !== BADNUM && x[3] !== BADNUM && y[3] !== BADNUM) {\n        if (isHorizontal) {\n          shape += 'M' + x[0] + ',' + y[1] + 'L' + x[2] + ',' + y[2] + 'H' + x[3] + 'L' + x[1] + ',' + y[1] + 'Z';\n        } else {\n          shape += 'M' + x[1] + ',' + y[1] + 'L' + x[2] + ',' + y[3] + 'V' + y[2] + 'L' + x[1] + ',' + y[0] + 'Z';\n        }\n      }\n      if (shape === '') shape = 'M0,0Z';\n      Lib.ensureSingle(d3.select(this), 'path').attr('d', shape).call(Drawing.setClipUrl, plotinfo.layerClipId, gd);\n    });\n  });\n}\nfunction plotConnectorLines(gd, plotinfo, cdModule, traceLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  Lib.makeTraceGroups(traceLayer, cdModule, 'trace bars').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var trace = cd[0].trace;\n    var group = Lib.ensureSingle(plotGroup, 'g', 'lines');\n    if (!trace.connector || !trace.connector.visible || !trace.connector.line.width) {\n      group.remove();\n      return;\n    }\n    var isHorizontal = trace.orientation === 'h';\n    var connectors = group.selectAll('g.line').data(Lib.identity);\n    connectors.enter().append('g').classed('line', true);\n    connectors.exit().remove();\n    var len = connectors.size();\n    connectors.each(function (di, i) {\n      // don't draw lines between nulls\n      if (i !== len - 1 && !di.cNext) return;\n      var xy = getXY(di, xa, ya, isHorizontal);\n      var x = xy[0];\n      var y = xy[1];\n      var shape = '';\n      if (x[3] !== undefined && y[3] !== undefined) {\n        if (isHorizontal) {\n          shape += 'M' + x[0] + ',' + y[1] + 'L' + x[2] + ',' + y[2];\n          shape += 'M' + x[1] + ',' + y[1] + 'L' + x[3] + ',' + y[2];\n        } else {\n          shape += 'M' + x[1] + ',' + y[1] + 'L' + x[2] + ',' + y[3];\n          shape += 'M' + x[1] + ',' + y[0] + 'L' + x[2] + ',' + y[2];\n        }\n      }\n      if (shape === '') shape = 'M0,0Z';\n      Lib.ensureSingle(d3.select(this), 'path').attr('d', shape).call(Drawing.setClipUrl, plotinfo.layerClipId, gd);\n    });\n  });\n}\nfunction getXY(di, xa, ya, isHorizontal) {\n  var s = [];\n  var p = [];\n  var sAxis = isHorizontal ? xa : ya;\n  var pAxis = isHorizontal ? ya : xa;\n  s[0] = sAxis.c2p(di.s0, true);\n  p[0] = pAxis.c2p(di.p0, true);\n  s[1] = sAxis.c2p(di.s1, true);\n  p[1] = pAxis.c2p(di.p1, true);\n  s[2] = sAxis.c2p(di.nextS0, true);\n  p[2] = pAxis.c2p(di.nextP0, true);\n  s[3] = sAxis.c2p(di.nextS1, true);\n  p[3] = pAxis.c2p(di.nextP1, true);\n  return isHorizontal ? [s, p] : [p, s];\n}","map":{"version":3,"names":["d3","require","Lib","Drawing","BADNUM","barPlot","clearMinTextSize","module","exports","plot","gd","plotinfo","cdModule","traceLayer","fullLayout","_fullLayout","plotConnectorRegions","plotConnectorLines","mode","funnelmode","norm","gap","funnelgap","groupgap","funnelgroupgap","xa","xaxis","ya","yaxis","makeTraceGroups","each","cd","plotGroup","select","trace","group","ensureSingle","connector","visible","remove","isHorizontal","orientation","connectors","selectAll","data","identity","enter","append","classed","exit","len","size","di","i","cNext","xy","getXY","x","y","shape","attr","call","setClipUrl","layerClipId","line","width","undefined","s","p","sAxis","pAxis","c2p","s0","p0","s1","p1","nextS0","nextP0","nextS1","nextP1"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/funnel/plot.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar barPlot = require('../bar/plot');\nvar clearMinTextSize = require('../bar/uniform_text').clearMinTextSize;\n\nmodule.exports = function plot(gd, plotinfo, cdModule, traceLayer) {\n    var fullLayout = gd._fullLayout;\n\n    clearMinTextSize('funnel', fullLayout);\n\n    plotConnectorRegions(gd, plotinfo, cdModule, traceLayer);\n    plotConnectorLines(gd, plotinfo, cdModule, traceLayer);\n\n    barPlot.plot(gd, plotinfo, cdModule, traceLayer, {\n        mode: fullLayout.funnelmode,\n        norm: fullLayout.funnelmode,\n        gap: fullLayout.funnelgap,\n        groupgap: fullLayout.funnelgroupgap\n    });\n};\n\nfunction plotConnectorRegions(gd, plotinfo, cdModule, traceLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    Lib.makeTraceGroups(traceLayer, cdModule, 'trace bars').each(function(cd) {\n        var plotGroup = d3.select(this);\n        var trace = cd[0].trace;\n\n        var group = Lib.ensureSingle(plotGroup, 'g', 'regions');\n\n        if(!trace.connector || !trace.connector.visible) {\n            group.remove();\n            return;\n        }\n\n        var isHorizontal = (trace.orientation === 'h');\n\n        var connectors = group.selectAll('g.region').data(Lib.identity);\n\n        connectors.enter().append('g')\n            .classed('region', true);\n\n        connectors.exit().remove();\n\n        var len = connectors.size();\n\n        connectors.each(function(di, i) {\n            // don't draw lines between nulls\n            if(i !== len - 1 && !di.cNext) return;\n\n            var xy = getXY(di, xa, ya, isHorizontal);\n            var x = xy[0];\n            var y = xy[1];\n\n            var shape = '';\n\n            if(\n                x[0] !== BADNUM && y[0] !== BADNUM &&\n                x[1] !== BADNUM && y[1] !== BADNUM &&\n                x[2] !== BADNUM && y[2] !== BADNUM &&\n                x[3] !== BADNUM && y[3] !== BADNUM\n            ) {\n                if(isHorizontal) {\n                    shape += 'M' + x[0] + ',' + y[1] + 'L' + x[2] + ',' + y[2] + 'H' + x[3] + 'L' + x[1] + ',' + y[1] + 'Z';\n                } else {\n                    shape += 'M' + x[1] + ',' + y[1] + 'L' + x[2] + ',' + y[3] + 'V' + y[2] + 'L' + x[1] + ',' + y[0] + 'Z';\n                }\n            }\n\n            if(shape === '') shape = 'M0,0Z';\n\n            Lib.ensureSingle(d3.select(this), 'path')\n                .attr('d', shape)\n                .call(Drawing.setClipUrl, plotinfo.layerClipId, gd);\n        });\n    });\n}\n\nfunction plotConnectorLines(gd, plotinfo, cdModule, traceLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    Lib.makeTraceGroups(traceLayer, cdModule, 'trace bars').each(function(cd) {\n        var plotGroup = d3.select(this);\n        var trace = cd[0].trace;\n\n        var group = Lib.ensureSingle(plotGroup, 'g', 'lines');\n\n        if(!trace.connector || !trace.connector.visible || !trace.connector.line.width) {\n            group.remove();\n            return;\n        }\n\n        var isHorizontal = (trace.orientation === 'h');\n\n        var connectors = group.selectAll('g.line').data(Lib.identity);\n\n        connectors.enter().append('g')\n            .classed('line', true);\n\n        connectors.exit().remove();\n\n        var len = connectors.size();\n\n        connectors.each(function(di, i) {\n            // don't draw lines between nulls\n            if(i !== len - 1 && !di.cNext) return;\n\n            var xy = getXY(di, xa, ya, isHorizontal);\n            var x = xy[0];\n            var y = xy[1];\n\n            var shape = '';\n\n            if(x[3] !== undefined && y[3] !== undefined) {\n                if(isHorizontal) {\n                    shape += 'M' + x[0] + ',' + y[1] + 'L' + x[2] + ',' + y[2];\n                    shape += 'M' + x[1] + ',' + y[1] + 'L' + x[3] + ',' + y[2];\n                } else {\n                    shape += 'M' + x[1] + ',' + y[1] + 'L' + x[2] + ',' + y[3];\n                    shape += 'M' + x[1] + ',' + y[0] + 'L' + x[2] + ',' + y[2];\n                }\n            }\n\n            if(shape === '') shape = 'M0,0Z';\n\n            Lib.ensureSingle(d3.select(this), 'path')\n                .attr('d', shape)\n                .call(Drawing.setClipUrl, plotinfo.layerClipId, gd);\n        });\n    });\n}\n\nfunction getXY(di, xa, ya, isHorizontal) {\n    var s = [];\n    var p = [];\n\n    var sAxis = isHorizontal ? xa : ya;\n    var pAxis = isHorizontal ? ya : xa;\n\n    s[0] = sAxis.c2p(di.s0, true);\n    p[0] = pAxis.c2p(di.p0, true);\n\n    s[1] = sAxis.c2p(di.s1, true);\n    p[1] = pAxis.c2p(di.p1, true);\n\n    s[2] = sAxis.c2p(di.nextS0, true);\n    p[2] = pAxis.c2p(di.nextP0, true);\n\n    s[3] = sAxis.c2p(di.nextS1, true);\n    p[3] = pAxis.c2p(di.nextP1, true);\n\n    return isHorizontal ? [s, p] : [p, s];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}