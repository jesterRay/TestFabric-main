{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nexport function useApi(baseUrl, params) {\n  _s();\n  const history = useHistory();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useLayoutEffect(() => {\n    setIsLoading(true);\n\n    // console.log('Calling API:', baseUrl, params);\n    axios.get(process.env.REACT_APP_API_URL + baseUrl, {\n      params\n    }).then(response => {\n      var _response$data;\n      setData(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data);\n      setIsLoading(false);\n      // console.log('Calling Response Data:',baseUrl,\"_____\",response?.data?.data);\n    }).catch(error => {\n      setError(error);\n      // console.log('Calling Response Error:',baseUrl,\"_____\", error);\n      setIsLoading(false);\n      // history.push('/')\n    });\n    return () => {\n      setData(null);\n      setError(null);\n      setIsLoading(false);\n    };\n  }, []);\n  return {\n    data,\n    error,\n    isLoading\n  };\n}\n_s(useApi, \"2nZ5k/zbH1sJNGYDqAiepVg9tNo=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"names":["useState","useEffect","useLayoutEffect","useHistory","axios","useApi","baseUrl","params","_s","history","data","setData","error","setError","isLoading","setIsLoading","get","process","env","REACT_APP_API_URL","then","response","_response$data","catch"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/middleware/middleware.js"],"sourcesContent":["import { useState, useEffect, useLayoutEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport function useApi(baseUrl, params) {\n    const history = useHistory()\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useLayoutEffect(() => {\n        setIsLoading(true);\n\n        // console.log('Calling API:', baseUrl, params);\n        axios\n            .get(process.env.REACT_APP_API_URL + baseUrl, { params })\n            .then(response => {\n                setData(response?.data?.data);\n                setIsLoading(false);\n                // console.log('Calling Response Data:',baseUrl,\"_____\",response?.data?.data);\n            })\n            .catch(error => {\n                setError(error);\n                // console.log('Calling Response Error:',baseUrl,\"_____\", error);\n                setIsLoading(false);\n                // history.push('/')\n            });\n            return(()=>{\n                setData(null)\n                setError(null)\n                setIsLoading(false)\n            })\n    }, []);\n\n    return { data, error, isLoading };\n}\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAC5D,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,MAAMA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAAAC,EAAA;EACpC,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDE,eAAe,CAAC,MAAM;IAClBa,YAAY,CAAC,IAAI,CAAC;;IAElB;IACAX,KAAK,CACAY,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAGb,OAAO,EAAE;MAAEC;IAAO,CAAC,CAAC,CACxDa,IAAI,CAACC,QAAQ,IAAI;MAAA,IAAAC,cAAA;MACdX,OAAO,CAACU,QAAQ,aAARA,QAAQ,wBAAAC,cAAA,GAARD,QAAQ,CAAEX,IAAI,cAAAY,cAAA,uBAAdA,cAAA,CAAgBZ,IAAI,CAAC;MAC7BK,YAAY,CAAC,KAAK,CAAC;MACnB;IACJ,CAAC,CAAC,CACDQ,KAAK,CAACX,KAAK,IAAI;MACZC,QAAQ,CAACD,KAAK,CAAC;MACf;MACAG,YAAY,CAAC,KAAK,CAAC;MACnB;IACJ,CAAC,CAAC;IACF,OAAO,MAAI;MACPJ,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,IAAI,CAAC;MACdE,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEL,IAAI;IAAEE,KAAK;IAAEE;EAAU,CAAC;AACrC;AAACN,EAAA,CA/BeH,MAAM;EAAA,QACFF,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}