{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar strScale = Lib.strScale;\nvar getSubplotCalcData = require('../get_data').getSubplotCalcData;\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../../components/drawing');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar Map = require('./map');\nvar MAP = 'map';\nexports.name = MAP;\nexports.attr = 'subplot';\nexports.idRoot = MAP;\nexports.idRegex = exports.attrRegex = Lib.counterRegex(MAP);\nexports.attributes = {\n  subplot: {\n    valType: 'subplotid',\n    dflt: 'map',\n    editType: 'calc',\n    description: ['Sets a reference between this trace\\'s data coordinates and', 'a map subplot.', 'If *map* (the default value), the data refer to `layout.map`.', 'If *map2*, the data refer to `layout.map2`, and so on.'].join(' ')\n  }\n};\nexports.layoutAttributes = require('./layout_attributes');\nexports.supplyLayoutDefaults = require('./layout_defaults');\nexports.plot = function plot(gd) {\n  var fullLayout = gd._fullLayout;\n  var calcData = gd.calcdata;\n  var mapIds = fullLayout._subplots[MAP];\n  for (var i = 0; i < mapIds.length; i++) {\n    var id = mapIds[i];\n    var subplotCalcData = getSubplotCalcData(calcData, MAP, id);\n    var opts = fullLayout[id];\n    var map = opts._subplot;\n    if (!map) {\n      map = new Map(gd, id);\n      fullLayout[id]._subplot = map;\n    }\n    if (!map.viewInitial) {\n      map.viewInitial = {\n        center: Lib.extendFlat({}, opts.center),\n        zoom: opts.zoom,\n        bearing: opts.bearing,\n        pitch: opts.pitch\n      };\n    }\n    map.plot(subplotCalcData, fullLayout, gd._promises);\n  }\n};\nexports.clean = function (newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldMapKeys = oldFullLayout._subplots[MAP] || [];\n  for (var i = 0; i < oldMapKeys.length; i++) {\n    var oldMapKey = oldMapKeys[i];\n    if (!newFullLayout[oldMapKey] && !!oldFullLayout[oldMapKey]._subplot) {\n      oldFullLayout[oldMapKey]._subplot.destroy();\n    }\n  }\n};\nexports.toSVG = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[MAP];\n  var size = fullLayout._size;\n  for (var i = 0; i < subplotIds.length; i++) {\n    var opts = fullLayout[subplotIds[i]];\n    var domain = opts.domain;\n    var map = opts._subplot;\n    var imageData = map.toImage('png');\n    var image = fullLayout._glimages.append('svg:image');\n    image.attr({\n      xmlns: xmlnsNamespaces.svg,\n      'xlink:href': imageData,\n      x: size.l + size.w * domain.x[0],\n      y: size.t + size.h * (1 - domain.y[1]),\n      width: size.w * (domain.x[1] - domain.x[0]),\n      height: size.h * (domain.y[1] - domain.y[0]),\n      preserveAspectRatio: 'none'\n    });\n    var subplotDiv = d3.select(opts._subplot.div);\n\n    // Add attributions\n    var attributions = subplotDiv.select('.maplibregl-ctrl-attrib').text().replace('Improve this map', '');\n    var attributionGroup = fullLayout._glimages.append('g');\n    var attributionText = attributionGroup.append('text');\n    attributionText.text(attributions).classed('static-attribution', true).attr({\n      'font-size': 12,\n      'font-family': 'Arial',\n      color: 'rgba(0, 0, 0, 0.75)',\n      'text-anchor': 'end',\n      'data-unformatted': attributions\n    });\n    var bBox = Drawing.bBox(attributionText.node());\n\n    // Break into multiple lines twice larger than domain\n    var maxWidth = size.w * (domain.x[1] - domain.x[0]);\n    if (bBox.width > maxWidth / 2) {\n      var multilineAttributions = attributions.split('|').join('<br>');\n      attributionText.text(multilineAttributions).attr('data-unformatted', multilineAttributions).call(svgTextUtils.convertToTspans, gd);\n      bBox = Drawing.bBox(attributionText.node());\n    }\n    attributionText.attr('transform', strTranslate(-3, -bBox.height + 8));\n\n    // Draw white rectangle behind text\n    attributionGroup.insert('rect', '.static-attribution').attr({\n      x: -bBox.width - 6,\n      y: -bBox.height - 3,\n      width: bBox.width + 6,\n      height: bBox.height + 3,\n      fill: 'rgba(255, 255, 255, 0.75)'\n    });\n\n    // Scale down if larger than domain\n    var scaleRatio = 1;\n    if (bBox.width + 6 > maxWidth) scaleRatio = maxWidth / (bBox.width + 6);\n    var offset = [size.l + size.w * domain.x[1], size.t + size.h * (1 - domain.y[0])];\n    attributionGroup.attr('transform', strTranslate(offset[0], offset[1]) + strScale(scaleRatio));\n  }\n};\nexports.updateFx = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[MAP];\n  for (var i = 0; i < subplotIds.length; i++) {\n    var subplotObj = fullLayout[subplotIds[i]]._subplot;\n    subplotObj.updateFx(fullLayout);\n  }\n};","map":{"version":3,"names":["Lib","require","strTranslate","strScale","getSubplotCalcData","xmlnsNamespaces","d3","Drawing","svgTextUtils","Map","MAP","exports","name","attr","idRoot","idRegex","attrRegex","counterRegex","attributes","subplot","valType","dflt","editType","description","join","layoutAttributes","supplyLayoutDefaults","plot","gd","fullLayout","_fullLayout","calcData","calcdata","mapIds","_subplots","i","length","id","subplotCalcData","opts","map","_subplot","viewInitial","center","extendFlat","zoom","bearing","pitch","_promises","clean","newFullData","newFullLayout","oldFullData","oldFullLayout","oldMapKeys","oldMapKey","destroy","toSVG","subplotIds","size","_size","domain","imageData","toImage","image","_glimages","append","xmlns","svg","x","l","w","y","t","h","width","height","preserveAspectRatio","subplotDiv","select","div","attributions","text","replace","attributionGroup","attributionText","classed","color","bBox","node","maxWidth","multilineAttributions","split","call","convertToTspans","insert","fill","scaleRatio","offset","updateFx","subplotObj"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/map/index.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar strScale = Lib.strScale;\nvar getSubplotCalcData = require('../get_data').getSubplotCalcData;\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../../components/drawing');\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Map = require('./map');\n\nvar MAP = 'map';\n\nexports.name = MAP;\n\nexports.attr = 'subplot';\n\nexports.idRoot = MAP;\n\nexports.idRegex = exports.attrRegex = Lib.counterRegex(MAP);\n\nexports.attributes = {\n    subplot: {\n        valType: 'subplotid',\n        dflt: 'map',\n        editType: 'calc',\n        description: [\n            'Sets a reference between this trace\\'s data coordinates and',\n            'a map subplot.',\n            'If *map* (the default value), the data refer to `layout.map`.',\n            'If *map2*, the data refer to `layout.map2`, and so on.'\n        ].join(' ')\n    }\n};\n\nexports.layoutAttributes = require('./layout_attributes');\n\nexports.supplyLayoutDefaults = require('./layout_defaults');\n\nexports.plot = function plot(gd) {\n    var fullLayout = gd._fullLayout;\n    var calcData = gd.calcdata;\n    var mapIds = fullLayout._subplots[MAP];\n\n    for(var i = 0; i < mapIds.length; i++) {\n        var id = mapIds[i];\n        var subplotCalcData = getSubplotCalcData(calcData, MAP, id);\n        var opts = fullLayout[id];\n        var map = opts._subplot;\n\n        if(!map) {\n            map = new Map(gd, id);\n            fullLayout[id]._subplot = map;\n        }\n\n        if(!map.viewInitial) {\n            map.viewInitial = {\n                center: Lib.extendFlat({}, opts.center),\n                zoom: opts.zoom,\n                bearing: opts.bearing,\n                pitch: opts.pitch\n            };\n        }\n\n        map.plot(subplotCalcData, fullLayout, gd._promises);\n    }\n};\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldMapKeys = oldFullLayout._subplots[MAP] || [];\n\n    for(var i = 0; i < oldMapKeys.length; i++) {\n        var oldMapKey = oldMapKeys[i];\n\n        if(!newFullLayout[oldMapKey] && !!oldFullLayout[oldMapKey]._subplot) {\n            oldFullLayout[oldMapKey]._subplot.destroy();\n        }\n    }\n};\n\nexports.toSVG = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[MAP];\n    var size = fullLayout._size;\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var opts = fullLayout[subplotIds[i]];\n        var domain = opts.domain;\n        var map = opts._subplot;\n\n        var imageData = map.toImage('png');\n        var image = fullLayout._glimages.append('svg:image');\n\n        image.attr({\n            xmlns: xmlnsNamespaces.svg,\n            'xlink:href': imageData,\n            x: size.l + size.w * domain.x[0],\n            y: size.t + size.h * (1 - domain.y[1]),\n            width: size.w * (domain.x[1] - domain.x[0]),\n            height: size.h * (domain.y[1] - domain.y[0]),\n            preserveAspectRatio: 'none'\n        });\n\n        var subplotDiv = d3.select(opts._subplot.div);\n\n        // Add attributions\n        var attributions = subplotDiv\n                              .select('.maplibregl-ctrl-attrib').text()\n                              .replace('Improve this map', '');\n\n        var attributionGroup = fullLayout._glimages.append('g');\n\n        var attributionText = attributionGroup.append('text');\n        attributionText\n          .text(attributions)\n          .classed('static-attribution', true)\n          .attr({\n              'font-size': 12,\n              'font-family': 'Arial',\n              color: 'rgba(0, 0, 0, 0.75)',\n              'text-anchor': 'end',\n              'data-unformatted': attributions\n          });\n\n        var bBox = Drawing.bBox(attributionText.node());\n\n        // Break into multiple lines twice larger than domain\n        var maxWidth = size.w * (domain.x[1] - domain.x[0]);\n        if((bBox.width > maxWidth / 2)) {\n            var multilineAttributions = attributions.split('|').join('<br>');\n            attributionText\n              .text(multilineAttributions)\n              .attr('data-unformatted', multilineAttributions)\n              .call(svgTextUtils.convertToTspans, gd);\n\n            bBox = Drawing.bBox(attributionText.node());\n        }\n        attributionText.attr('transform', strTranslate(-3, -bBox.height + 8));\n\n        // Draw white rectangle behind text\n        attributionGroup\n          .insert('rect', '.static-attribution')\n          .attr({\n              x: -bBox.width - 6,\n              y: -bBox.height - 3,\n              width: bBox.width + 6,\n              height: bBox.height + 3,\n              fill: 'rgba(255, 255, 255, 0.75)'\n          });\n\n        // Scale down if larger than domain\n        var scaleRatio = 1;\n        if((bBox.width + 6) > maxWidth) scaleRatio = maxWidth / (bBox.width + 6);\n\n        var offset = [(size.l + size.w * domain.x[1]), (size.t + size.h * (1 - domain.y[0]))];\n        attributionGroup.attr('transform', strTranslate(offset[0], offset[1]) + strScale(scaleRatio));\n    }\n};\n\nexports.updateFx = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[MAP];\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var subplotObj = fullLayout[subplotIds[i]]._subplot;\n        subplotObj.updateFx(fullLayout);\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}