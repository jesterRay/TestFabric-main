{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  colorbar: require('../heatmap/colorbar'),\n  calc: require('../choropleth/calc'),\n  plot: require('./plot'),\n  hoverPoints: require('../choropleth/hover'),\n  eventData: require('../choropleth/event_data'),\n  selectPoints: require('../choropleth/select'),\n  styleOnSelect: function (_, cd) {\n    if (cd) {\n      var trace = cd[0].trace;\n      trace._glTrace.updateOnSelect(cd);\n    }\n  },\n  getBelow: function (trace, subplot) {\n    var mapLayers = subplot.getMapLayers();\n\n    // find layer just above top-most \"water\" layer\n    // that is not a plotly layer\n    for (var i = mapLayers.length - 2; i >= 0; i--) {\n      var layerId = mapLayers[i].id;\n      if (typeof layerId === 'string' && layerId.indexOf('water') === 0) {\n        for (var j = i + 1; j < mapLayers.length; j++) {\n          layerId = mapLayers[j].id;\n          if (typeof layerId === 'string' && layerId.indexOf('plotly-') === -1) {\n            return layerId;\n          }\n        }\n      }\n    }\n  },\n  moduleType: 'trace',\n  name: 'choroplethmap',\n  basePlotModule: require('../../plots/map'),\n  categories: ['map', 'gl', 'noOpacity', 'showLegend'],\n  meta: {\n    hr_name: 'choropleth_map',\n    description: ['GeoJSON features to be filled are set in `geojson`', 'The data that describes the choropleth value-to-color mapping', 'is set in `locations` and `z`.'].join(' ')\n  }\n};","map":{"version":3,"names":["module","exports","attributes","require","supplyDefaults","colorbar","calc","plot","hoverPoints","eventData","selectPoints","styleOnSelect","_","cd","trace","_glTrace","updateOnSelect","getBelow","subplot","mapLayers","getMapLayers","i","length","layerId","id","indexOf","j","moduleType","name","basePlotModule","categories","meta","hr_name","description","join"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/choroplethmap/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    attributes: require('./attributes'),\n    supplyDefaults: require('./defaults'),\n    colorbar: require('../heatmap/colorbar'),\n    calc: require('../choropleth/calc'),\n    plot: require('./plot'),\n    hoverPoints: require('../choropleth/hover'),\n    eventData: require('../choropleth/event_data'),\n    selectPoints: require('../choropleth/select'),\n\n    styleOnSelect: function(_, cd) {\n        if(cd) {\n            var trace = cd[0].trace;\n            trace._glTrace.updateOnSelect(cd);\n        }\n    },\n\n    getBelow: function(trace, subplot) {\n        var mapLayers = subplot.getMapLayers();\n\n        // find layer just above top-most \"water\" layer\n        // that is not a plotly layer\n        for(var i = mapLayers.length - 2; i >= 0; i--) {\n            var layerId = mapLayers[i].id;\n\n            if(typeof layerId === 'string' &&\n                layerId.indexOf('water') === 0\n             ) {\n                for(var j = i + 1; j < mapLayers.length; j++) {\n                    layerId = mapLayers[j].id;\n\n                    if(typeof layerId === 'string' &&\n                        layerId.indexOf('plotly-') === -1\n                    ) {\n                        return layerId;\n                    }\n                }\n            }\n        }\n    },\n\n    moduleType: 'trace',\n    name: 'choroplethmap',\n    basePlotModule: require('../../plots/map'),\n    categories: ['map', 'gl', 'noOpacity', 'showLegend'],\n    meta: {\n        hr_name: 'choropleth_map',\n        description: [\n            'GeoJSON features to be filled are set in `geojson`',\n            'The data that describes the choropleth value-to-color mapping',\n            'is set in `locations` and `z`.'\n        ].join(' ')\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG;EACbC,UAAU,EAAEC,OAAO,CAAC,cAAc,CAAC;EACnCC,cAAc,EAAED,OAAO,CAAC,YAAY,CAAC;EACrCE,QAAQ,EAAEF,OAAO,CAAC,qBAAqB,CAAC;EACxCG,IAAI,EAAEH,OAAO,CAAC,oBAAoB,CAAC;EACnCI,IAAI,EAAEJ,OAAO,CAAC,QAAQ,CAAC;EACvBK,WAAW,EAAEL,OAAO,CAAC,qBAAqB,CAAC;EAC3CM,SAAS,EAAEN,OAAO,CAAC,0BAA0B,CAAC;EAC9CO,YAAY,EAAEP,OAAO,CAAC,sBAAsB,CAAC;EAE7CQ,aAAa,EAAE,SAAAA,CAASC,CAAC,EAAEC,EAAE,EAAE;IAC3B,IAAGA,EAAE,EAAE;MACH,IAAIC,KAAK,GAAGD,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK;MACvBA,KAAK,CAACC,QAAQ,CAACC,cAAc,CAACH,EAAE,CAAC;IACrC;EACJ,CAAC;EAEDI,QAAQ,EAAE,SAAAA,CAASH,KAAK,EAAEI,OAAO,EAAE;IAC/B,IAAIC,SAAS,GAAGD,OAAO,CAACE,YAAY,CAAC,CAAC;;IAEtC;IACA;IACA,KAAI,IAAIC,CAAC,GAAGF,SAAS,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3C,IAAIE,OAAO,GAAGJ,SAAS,CAACE,CAAC,CAAC,CAACG,EAAE;MAE7B,IAAG,OAAOD,OAAO,KAAK,QAAQ,IAC1BA,OAAO,CAACE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAC/B;QACC,KAAI,IAAIC,CAAC,GAAGL,CAAC,GAAG,CAAC,EAAEK,CAAC,GAAGP,SAAS,CAACG,MAAM,EAAEI,CAAC,EAAE,EAAE;UAC1CH,OAAO,GAAGJ,SAAS,CAACO,CAAC,CAAC,CAACF,EAAE;UAEzB,IAAG,OAAOD,OAAO,KAAK,QAAQ,IAC1BA,OAAO,CAACE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EACnC;YACE,OAAOF,OAAO;UAClB;QACJ;MACJ;IACJ;EACJ,CAAC;EAEDI,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE,eAAe;EACrBC,cAAc,EAAE1B,OAAO,CAAC,iBAAiB,CAAC;EAC1C2B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,CAAC;EACpDC,IAAI,EAAE;IACFC,OAAO,EAAE,gBAAgB;IACzBC,WAAW,EAAE,CACT,oDAAoD,EACpD,+DAA+D,EAC/D,gCAAgC,CACnC,CAACC,IAAI,CAAC,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}