{"ast":null,"code":"//import { useState, useEffect } from 'react';\n//import { useHistory } from 'react-router-dom';\n//import axios from 'axios';\n//import React from 'react';\n//export function PostApi(baseUrl, data) {\n//    // const [response, setresponse] = useState(null);\n//    // const [error, setError] = useState(null);\n//    // const [isLoading, setIsLoading] = useState(false);\n//    // useEffect(() => {\n//    //     setIsLoading(true);\n//        // console.log('Calling API:', baseUrl, data);\n//        var querystring = require('querystring');\n//        axios.post(process.env.REACT_APP_API_URL+ baseUrl, querystring.stringify(\n//          data\n//        )\n//      )\n//          .then((response) => {\n//            // console.log(response);\n//            return \"200\"\n//          })\n//          .catch(error => {\n//            // setresponse(400)\n//            // console.log(error);\n//            return \"400\";\n//          });\n//          return \"200\"\n//    // }, []);\n//    // return { response, error, isLoading };\n//}\nimport axios from'axios';import querystring from'querystring';export async function PostApi(baseUrl,data){try{const response=await axios.post(\"\".concat(process.env.REACT_APP_API_URL).concat(baseUrl),querystring.stringify(data));return response.status;}catch(error){console.error(error);return 400;// Use the numeric status code directly\n}}","map":{"version":3,"names":["axios","querystring","PostApi","baseUrl","data","response","post","concat","process","env","REACT_APP_API_URL","stringify","status","error","console"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/middleware/postMiddleware.js"],"sourcesContent":["//import { useState, useEffect } from 'react';\n//import { useHistory } from 'react-router-dom';\n//import axios from 'axios';\n//import React from 'react';\n\n//export function PostApi(baseUrl, data) {\n//    // const [response, setresponse] = useState(null);\n//    // const [error, setError] = useState(null);\n//    // const [isLoading, setIsLoading] = useState(false);\n\n//    // useEffect(() => {\n//    //     setIsLoading(true);\n\n//        // console.log('Calling API:', baseUrl, data);\n//        var querystring = require('querystring');\n\n//        axios.post(process.env.REACT_APP_API_URL+ baseUrl, querystring.stringify(\n//          data\n//        )\n//      )\n//          .then((response) => {\n//            // console.log(response);\n//            return \"200\"\n//          })\n//          .catch(error => {\n//            // setresponse(400)\n//            // console.log(error);\n//            return \"400\";\n//          });\n//          return \"200\"\n//    // }, []);\n\n//    // return { response, error, isLoading };\n//}\n\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nexport async function PostApi(baseUrl, data) {\n    try {\n        const response = await axios.post(\n            `${process.env.REACT_APP_API_URL}${baseUrl}`,\n            querystring.stringify(data)\n        );\n        return response.status;\n    } catch (error) {\n        console.error(error);\n        return 400; // Use the numeric status code directly\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,aAAa,CAErC,MAAO,eAAe,CAAAC,OAAOA,CAACC,OAAO,CAAEC,IAAI,CAAE,CACzC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,IAAAC,MAAA,CAC1BC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAAH,MAAA,CAAGJ,OAAO,EAC1CF,WAAW,CAACU,SAAS,CAACP,IAAI,CAC9B,CAAC,CACD,MAAO,CAAAC,QAAQ,CAACO,MAAM,CAC1B,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACpB,MAAO,IAAG,CAAE;AAChB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}