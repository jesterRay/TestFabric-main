{"ast":null,"code":"'use strict';\n\nvar scatterHover = require('../scatter/hover');\nvar fillText = require('../../lib').fillText;\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode) {\n  var scatterPointData = scatterHover(pointData, xval, yval, hovermode);\n  if (!scatterPointData || scatterPointData[0].index === false) return;\n  var newPointData = scatterPointData[0];\n\n  // if hovering on a fill, we don't show any point data so the label is\n  // unchanged from what scatter gives us - except that it needs to\n  // be constrained to the trianglular plot area, not just the rectangular\n  // area defined by the synthetic x and y axes\n  // TODO: in some cases the vertical middle of the shape is not within\n  // the triangular viewport at all, so the label can become disconnected\n  // from the shape entirely. But calculating what portion of the shape\n  // is actually visible, as constrained by the diagonal axis lines, is not\n  // so easy and anyway we lost the information we would have needed to do\n  // this inside scatterHover.\n  if (newPointData.index === undefined) {\n    var yFracUp = 1 - newPointData.y0 / pointData.ya._length;\n    var xLen = pointData.xa._length;\n    var xMin = xLen * yFracUp / 2;\n    var xMax = xLen - xMin;\n    newPointData.x0 = Math.max(Math.min(newPointData.x0, xMax), xMin);\n    newPointData.x1 = Math.max(Math.min(newPointData.x1, xMax), xMin);\n    return scatterPointData;\n  }\n  var cdi = newPointData.cd[newPointData.index];\n  newPointData.a = cdi.a;\n  newPointData.b = cdi.b;\n  newPointData.xLabelVal = undefined;\n  newPointData.yLabelVal = undefined;\n  // TODO: nice formatting, and label by axis title, for a, b, and c?\n\n  var trace = newPointData.trace;\n  var carpet = trace._carpet;\n  var labels = trace._module.formatLabels(cdi, trace);\n  newPointData.yLabel = labels.yLabel;\n  delete newPointData.text;\n  var text = [];\n  function textPart(ax, val) {\n    var prefix;\n    if (ax.labelprefix && ax.labelprefix.length > 0) {\n      prefix = ax.labelprefix.replace(/ = $/, '');\n    } else {\n      prefix = ax._hovertitle;\n    }\n    text.push(prefix + ': ' + val.toFixed(3) + ax.labelsuffix);\n  }\n  if (!trace.hovertemplate) {\n    var hoverinfo = cdi.hi || trace.hoverinfo;\n    var parts = hoverinfo.split('+');\n    if (parts.indexOf('all') !== -1) parts = ['a', 'b', 'text'];\n    if (parts.indexOf('a') !== -1) textPart(carpet.aaxis, cdi.a);\n    if (parts.indexOf('b') !== -1) textPart(carpet.baxis, cdi.b);\n    text.push('y: ' + newPointData.yLabel);\n    if (parts.indexOf('text') !== -1) {\n      fillText(cdi, trace, text);\n    }\n    newPointData.extraText = text.join('<br>');\n  }\n  return scatterPointData;\n};","map":{"version":3,"names":["scatterHover","require","fillText","module","exports","hoverPoints","pointData","xval","yval","hovermode","scatterPointData","index","newPointData","undefined","yFracUp","y0","ya","_length","xLen","xa","xMin","xMax","x0","Math","max","min","x1","cdi","cd","a","b","xLabelVal","yLabelVal","trace","carpet","_carpet","labels","_module","formatLabels","yLabel","text","textPart","ax","val","prefix","labelprefix","length","replace","_hovertitle","push","toFixed","labelsuffix","hovertemplate","hoverinfo","hi","parts","split","indexOf","aaxis","baxis","extraText","join"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scattercarpet/hover.js"],"sourcesContent":["'use strict';\n\nvar scatterHover = require('../scatter/hover');\nvar fillText = require('../../lib').fillText;\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode) {\n    var scatterPointData = scatterHover(pointData, xval, yval, hovermode);\n    if(!scatterPointData || scatterPointData[0].index === false) return;\n\n    var newPointData = scatterPointData[0];\n\n    // if hovering on a fill, we don't show any point data so the label is\n    // unchanged from what scatter gives us - except that it needs to\n    // be constrained to the trianglular plot area, not just the rectangular\n    // area defined by the synthetic x and y axes\n    // TODO: in some cases the vertical middle of the shape is not within\n    // the triangular viewport at all, so the label can become disconnected\n    // from the shape entirely. But calculating what portion of the shape\n    // is actually visible, as constrained by the diagonal axis lines, is not\n    // so easy and anyway we lost the information we would have needed to do\n    // this inside scatterHover.\n    if(newPointData.index === undefined) {\n        var yFracUp = 1 - (newPointData.y0 / pointData.ya._length);\n        var xLen = pointData.xa._length;\n        var xMin = xLen * yFracUp / 2;\n        var xMax = xLen - xMin;\n        newPointData.x0 = Math.max(Math.min(newPointData.x0, xMax), xMin);\n        newPointData.x1 = Math.max(Math.min(newPointData.x1, xMax), xMin);\n        return scatterPointData;\n    }\n\n    var cdi = newPointData.cd[newPointData.index];\n\n    newPointData.a = cdi.a;\n    newPointData.b = cdi.b;\n\n    newPointData.xLabelVal = undefined;\n    newPointData.yLabelVal = undefined;\n    // TODO: nice formatting, and label by axis title, for a, b, and c?\n\n    var trace = newPointData.trace;\n    var carpet = trace._carpet;\n\n    var labels = trace._module.formatLabels(cdi, trace);\n    newPointData.yLabel = labels.yLabel;\n\n    delete newPointData.text;\n    var text = [];\n\n    function textPart(ax, val) {\n        var prefix;\n\n        if(ax.labelprefix && ax.labelprefix.length > 0) {\n            prefix = ax.labelprefix.replace(/ = $/, '');\n        } else {\n            prefix = ax._hovertitle;\n        }\n\n        text.push(prefix + ': ' + val.toFixed(3) + ax.labelsuffix);\n    }\n\n\n    if(!trace.hovertemplate) {\n        var hoverinfo = cdi.hi || trace.hoverinfo;\n        var parts = hoverinfo.split('+');\n\n        if(parts.indexOf('all') !== -1) parts = ['a', 'b', 'text'];\n        if(parts.indexOf('a') !== -1) textPart(carpet.aaxis, cdi.a);\n        if(parts.indexOf('b') !== -1) textPart(carpet.baxis, cdi.b);\n\n        text.push('y: ' + newPointData.yLabel);\n\n        if(parts.indexOf('text') !== -1) {\n            fillText(cdi, trace, text);\n        }\n\n        newPointData.extraText = text.join('<br>');\n    }\n\n    return scatterPointData;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}