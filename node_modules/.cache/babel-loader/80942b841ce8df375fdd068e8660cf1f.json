{"ast":null,"code":"import{useState,useEffect,useRef,useMemo}from'react';import{useHistory}from'react-router-dom';import axios from'axios';export function useApi(baseUrl,params){const history=useHistory();const[data,setData]=useState(null);const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);// Memoize params object using stable references\nconst memoizedParams=useMemo(()=>params,[...Object.keys(params||{}),...Object.values(params||{})]);const isMounted=useRef(true);useEffect(()=>{isMounted.current=true;if(!baseUrl)return;const controller=new AbortController();setIsLoading(true);axios.get(\"\".concat(process.env.REACT_APP_API_URL).concat(baseUrl),{params:memoizedParams,signal:controller.signal}).then(response=>{if(isMounted.current){var _response$data;setData((response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.data)||null);}}).catch(error=>{if(error.name==='AbortError')return;if(isMounted.current){var _error$response;setError(error);if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===404){history.push(\"/\");}}}).finally(()=>{if(isMounted.current){setIsLoading(false);}});return()=>{controller.abort();isMounted.current=false;};},[baseUrl,memoizedParams,history]);return{data,error,isLoading};}","map":{"version":3,"names":["useState","useEffect","useRef","useMemo","useHistory","axios","useApi","baseUrl","params","history","data","setData","error","setError","isLoading","setIsLoading","memoizedParams","Object","keys","values","isMounted","current","controller","AbortController","get","concat","process","env","REACT_APP_API_URL","signal","then","response","_response$data","catch","name","_error$response","status","push","finally","abort"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/middleware/middleware.js"],"sourcesContent":["import { useState, useEffect, useRef, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport function useApi(baseUrl, params) {\n    const history = useHistory();\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Memoize params object using stable references\n    const memoizedParams = useMemo(() => params, [\n        ...Object.keys(params || {}),\n        ...Object.values(params || {})\n    ]);\n    \n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        isMounted.current = true;\n        \n        if (!baseUrl) return;\n\n        const controller = new AbortController();\n        setIsLoading(true);\n\n        axios\n            .get(`${process.env.REACT_APP_API_URL}${baseUrl}`, { \n                params: memoizedParams,\n                signal: controller.signal \n            })\n            .then(response => {\n                if (isMounted.current) {\n                    setData(response?.data?.data || null);\n                }\n            })\n            .catch(error => {\n                if (error.name === 'AbortError') return;\n                \n                if (isMounted.current) {\n                    setError(error);\n                    if (error.response?.status === 404) {\n                        history.push(\"/\");\n                    }\n                }\n            })\n            .finally(() => {\n                if (isMounted.current) {\n                    setIsLoading(false);\n                }\n            });\n\n        return () => {\n            controller.abort();\n            isMounted.current = false;\n        };\n    }, [baseUrl, memoizedParams, history]);\n\n    return { data, error, isLoading };\n}"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,CAAEC,OAAO,KAAQ,OAAO,CAC5D,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,SAAS,CAAAC,MAAMA,CAACC,OAAO,CAAEC,MAAM,CAAE,CACpC,KAAM,CAAAC,OAAO,CAAGL,UAAU,CAAC,CAAC,CAC5B,KAAM,CAACM,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACA,KAAM,CAAAgB,cAAc,CAAGb,OAAO,CAAC,IAAMK,MAAM,CAAE,CACzC,GAAGS,MAAM,CAACC,IAAI,CAACV,MAAM,EAAI,CAAC,CAAC,CAAC,CAC5B,GAAGS,MAAM,CAACE,MAAM,CAACX,MAAM,EAAI,CAAC,CAAC,CAAC,CACjC,CAAC,CAEF,KAAM,CAAAY,SAAS,CAAGlB,MAAM,CAAC,IAAI,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACZmB,SAAS,CAACC,OAAO,CAAG,IAAI,CAExB,GAAI,CAACd,OAAO,CAAE,OAEd,KAAM,CAAAe,UAAU,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACxCR,YAAY,CAAC,IAAI,CAAC,CAElBV,KAAK,CACAmB,GAAG,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAAH,MAAA,CAAGlB,OAAO,EAAI,CAC/CC,MAAM,CAAEQ,cAAc,CACtBa,MAAM,CAAEP,UAAU,CAACO,MACvB,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,EAAI,CACd,GAAIX,SAAS,CAACC,OAAO,CAAE,KAAAW,cAAA,CACnBrB,OAAO,CAAC,CAAAoB,QAAQ,SAARA,QAAQ,kBAAAC,cAAA,CAARD,QAAQ,CAAErB,IAAI,UAAAsB,cAAA,iBAAdA,cAAA,CAAgBtB,IAAI,GAAI,IAAI,CAAC,CACzC,CACJ,CAAC,CAAC,CACDuB,KAAK,CAACrB,KAAK,EAAI,CACZ,GAAIA,KAAK,CAACsB,IAAI,GAAK,YAAY,CAAE,OAEjC,GAAId,SAAS,CAACC,OAAO,CAAE,KAAAc,eAAA,CACnBtB,QAAQ,CAACD,KAAK,CAAC,CACf,GAAI,EAAAuB,eAAA,CAAAvB,KAAK,CAACmB,QAAQ,UAAAI,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAChC3B,OAAO,CAAC4B,IAAI,CAAC,GAAG,CAAC,CACrB,CACJ,CACJ,CAAC,CAAC,CACDC,OAAO,CAAC,IAAM,CACX,GAAIlB,SAAS,CAACC,OAAO,CAAE,CACnBN,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAAC,CAEN,MAAO,IAAM,CACTO,UAAU,CAACiB,KAAK,CAAC,CAAC,CAClBnB,SAAS,CAACC,OAAO,CAAG,KAAK,CAC7B,CAAC,CACL,CAAC,CAAE,CAACd,OAAO,CAAES,cAAc,CAAEP,OAAO,CAAC,CAAC,CAEtC,MAAO,CAAEC,IAAI,CAAEE,KAAK,CAAEE,SAAU,CAAC,CACrC","ignoreList":[]},"metadata":{},"sourceType":"module"}