{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar axisIds = require('./axis_ids');\n\n/**\n * Factory function for checking component arrays for subplot references.\n *\n * @param {string} containerArrayName: the top-level array in gd.layout to check\n *   If an item in this container is found that references a cartesian x and/or y axis,\n *   ensure cartesian is marked as a base plot module and record the axes (and subplot\n *   if both refs are axes) in gd._fullLayout\n *\n * @return {function}: with args layoutIn (gd.layout) and layoutOut (gd._fullLayout)\n * as expected of a component includeBasePlot method\n */\nmodule.exports = function makeIncludeComponents(containerArrayName) {\n  return function includeComponents(layoutIn, layoutOut) {\n    var array = layoutIn[containerArrayName];\n    if (!Array.isArray(array)) return;\n    var Cartesian = Registry.subplotsRegistry.cartesian;\n    var idRegex = Cartesian.idRegex;\n    var subplots = layoutOut._subplots;\n    var xaList = subplots.xaxis;\n    var yaList = subplots.yaxis;\n    var cartesianList = subplots.cartesian;\n    var hasCartesianOrGL2D = layoutOut._has('cartesian') || layoutOut._has('gl2d');\n    for (var i = 0; i < array.length; i++) {\n      var itemi = array[i];\n      if (!Lib.isPlainObject(itemi)) continue;\n\n      // call cleanId because if xref, or yref has something appended\n      // (e.g., ' domain') this will get removed.\n      var xref = axisIds.cleanId(itemi.xref, 'x', false);\n      var yref = axisIds.cleanId(itemi.yref, 'y', false);\n      var hasXref = idRegex.x.test(xref);\n      var hasYref = idRegex.y.test(yref);\n      if (hasXref || hasYref) {\n        if (!hasCartesianOrGL2D) Lib.pushUnique(layoutOut._basePlotModules, Cartesian);\n        var newAxis = false;\n        if (hasXref && xaList.indexOf(xref) === -1) {\n          xaList.push(xref);\n          newAxis = true;\n        }\n        if (hasYref && yaList.indexOf(yref) === -1) {\n          yaList.push(yref);\n          newAxis = true;\n        }\n\n        /*\n         * Notice the logic here: only add a subplot for a component if\n         * it's referencing both x and y axes AND it's creating a new axis\n         * so for example if your plot already has xy and x2y2, an annotation\n         * on x2y or xy2 will not create a new subplot.\n         */\n        if (newAxis && hasXref && hasYref) {\n          cartesianList.push(xref + yref);\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["Registry","require","Lib","axisIds","module","exports","makeIncludeComponents","containerArrayName","includeComponents","layoutIn","layoutOut","array","Array","isArray","Cartesian","subplotsRegistry","cartesian","idRegex","subplots","_subplots","xaList","xaxis","yaList","yaxis","cartesianList","hasCartesianOrGL2D","_has","i","length","itemi","isPlainObject","xref","cleanId","yref","hasXref","x","test","hasYref","y","pushUnique","_basePlotModules","newAxis","indexOf","push"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/cartesian/include_components.js"],"sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar axisIds = require('./axis_ids');\n\n/**\n * Factory function for checking component arrays for subplot references.\n *\n * @param {string} containerArrayName: the top-level array in gd.layout to check\n *   If an item in this container is found that references a cartesian x and/or y axis,\n *   ensure cartesian is marked as a base plot module and record the axes (and subplot\n *   if both refs are axes) in gd._fullLayout\n *\n * @return {function}: with args layoutIn (gd.layout) and layoutOut (gd._fullLayout)\n * as expected of a component includeBasePlot method\n */\nmodule.exports = function makeIncludeComponents(containerArrayName) {\n    return function includeComponents(layoutIn, layoutOut) {\n        var array = layoutIn[containerArrayName];\n        if(!Array.isArray(array)) return;\n\n        var Cartesian = Registry.subplotsRegistry.cartesian;\n        var idRegex = Cartesian.idRegex;\n        var subplots = layoutOut._subplots;\n        var xaList = subplots.xaxis;\n        var yaList = subplots.yaxis;\n        var cartesianList = subplots.cartesian;\n        var hasCartesianOrGL2D = layoutOut._has('cartesian') || layoutOut._has('gl2d');\n\n        for(var i = 0; i < array.length; i++) {\n            var itemi = array[i];\n            if(!Lib.isPlainObject(itemi)) continue;\n\n            // call cleanId because if xref, or yref has something appended\n            // (e.g., ' domain') this will get removed.\n            var xref = axisIds.cleanId(itemi.xref, 'x', false);\n            var yref = axisIds.cleanId(itemi.yref, 'y', false);\n\n            var hasXref = idRegex.x.test(xref);\n            var hasYref = idRegex.y.test(yref);\n            if(hasXref || hasYref) {\n                if(!hasCartesianOrGL2D) Lib.pushUnique(layoutOut._basePlotModules, Cartesian);\n\n                var newAxis = false;\n                if(hasXref && xaList.indexOf(xref) === -1) {\n                    xaList.push(xref);\n                    newAxis = true;\n                }\n                if(hasYref && yaList.indexOf(yref) === -1) {\n                    yaList.push(yref);\n                    newAxis = true;\n                }\n\n                /*\n                 * Notice the logic here: only add a subplot for a component if\n                 * it's referencing both x and y axes AND it's creating a new axis\n                 * so for example if your plot already has xy and x2y2, an annotation\n                 * on x2y or xy2 will not create a new subplot.\n                 */\n                if(newAxis && hasXref && hasYref) {\n                    cartesianList.push(xref + yref);\n                }\n            }\n        }\n    };\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIE,OAAO,GAAGF,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAG,SAASC,qBAAqBA,CAACC,kBAAkB,EAAE;EAChE,OAAO,SAASC,iBAAiBA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IACnD,IAAIC,KAAK,GAAGF,QAAQ,CAACF,kBAAkB,CAAC;IACxC,IAAG,CAACK,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IAE1B,IAAIG,SAAS,GAAGd,QAAQ,CAACe,gBAAgB,CAACC,SAAS;IACnD,IAAIC,OAAO,GAAGH,SAAS,CAACG,OAAO;IAC/B,IAAIC,QAAQ,GAAGR,SAAS,CAACS,SAAS;IAClC,IAAIC,MAAM,GAAGF,QAAQ,CAACG,KAAK;IAC3B,IAAIC,MAAM,GAAGJ,QAAQ,CAACK,KAAK;IAC3B,IAAIC,aAAa,GAAGN,QAAQ,CAACF,SAAS;IACtC,IAAIS,kBAAkB,GAAGf,SAAS,CAACgB,IAAI,CAAC,WAAW,CAAC,IAAIhB,SAAS,CAACgB,IAAI,CAAC,MAAM,CAAC;IAE9E,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,KAAK,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;MAClC,IAAIE,KAAK,GAAGlB,KAAK,CAACgB,CAAC,CAAC;MACpB,IAAG,CAACzB,GAAG,CAAC4B,aAAa,CAACD,KAAK,CAAC,EAAE;;MAE9B;MACA;MACA,IAAIE,IAAI,GAAG5B,OAAO,CAAC6B,OAAO,CAACH,KAAK,CAACE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;MAClD,IAAIE,IAAI,GAAG9B,OAAO,CAAC6B,OAAO,CAACH,KAAK,CAACI,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;MAElD,IAAIC,OAAO,GAAGjB,OAAO,CAACkB,CAAC,CAACC,IAAI,CAACL,IAAI,CAAC;MAClC,IAAIM,OAAO,GAAGpB,OAAO,CAACqB,CAAC,CAACF,IAAI,CAACH,IAAI,CAAC;MAClC,IAAGC,OAAO,IAAIG,OAAO,EAAE;QACnB,IAAG,CAACZ,kBAAkB,EAAEvB,GAAG,CAACqC,UAAU,CAAC7B,SAAS,CAAC8B,gBAAgB,EAAE1B,SAAS,CAAC;QAE7E,IAAI2B,OAAO,GAAG,KAAK;QACnB,IAAGP,OAAO,IAAId,MAAM,CAACsB,OAAO,CAACX,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;UACvCX,MAAM,CAACuB,IAAI,CAACZ,IAAI,CAAC;UACjBU,OAAO,GAAG,IAAI;QAClB;QACA,IAAGJ,OAAO,IAAIf,MAAM,CAACoB,OAAO,CAACT,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;UACvCX,MAAM,CAACqB,IAAI,CAACV,IAAI,CAAC;UACjBQ,OAAO,GAAG,IAAI;QAClB;;QAEA;AAChB;AACA;AACA;AACA;AACA;QACgB,IAAGA,OAAO,IAAIP,OAAO,IAAIG,OAAO,EAAE;UAC9Bb,aAAa,CAACmB,IAAI,CAACZ,IAAI,GAAGE,IAAI,CAAC;QACnC;MACJ;IACJ;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}