{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  colorbar: require('../heatmap/colorbar'),\n  calc: require('./calc'),\n  calcGeoJSON: require('./plot').calcGeoJSON,\n  plot: require('./plot').plot,\n  style: require('./style').style,\n  styleOnSelect: require('./style').styleOnSelect,\n  hoverPoints: require('./hover'),\n  eventData: require('./event_data'),\n  selectPoints: require('./select'),\n  moduleType: 'trace',\n  name: 'choropleth',\n  basePlotModule: require('../../plots/geo'),\n  categories: ['geo', 'noOpacity', 'showLegend'],\n  meta: {\n    description: ['The data that describes the choropleth value-to-color mapping', 'is set in `z`.', 'The geographic locations corresponding to each value in `z`', 'are set in `locations`.'].join(' ')\n  }\n};","map":{"version":3,"names":["module","exports","attributes","require","supplyDefaults","colorbar","calc","calcGeoJSON","plot","style","styleOnSelect","hoverPoints","eventData","selectPoints","moduleType","name","basePlotModule","categories","meta","description","join"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/choropleth/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    attributes: require('./attributes'),\n    supplyDefaults: require('./defaults'),\n    colorbar: require('../heatmap/colorbar'),\n    calc: require('./calc'),\n    calcGeoJSON: require('./plot').calcGeoJSON,\n    plot: require('./plot').plot,\n    style: require('./style').style,\n    styleOnSelect: require('./style').styleOnSelect,\n    hoverPoints: require('./hover'),\n    eventData: require('./event_data'),\n    selectPoints: require('./select'),\n\n    moduleType: 'trace',\n    name: 'choropleth',\n    basePlotModule: require('../../plots/geo'),\n    categories: ['geo', 'noOpacity', 'showLegend'],\n    meta: {\n        description: [\n            'The data that describes the choropleth value-to-color mapping',\n            'is set in `z`.',\n            'The geographic locations corresponding to each value in `z`',\n            'are set in `locations`.'\n        ].join(' ')\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG;EACbC,UAAU,EAAEC,OAAO,CAAC,cAAc,CAAC;EACnCC,cAAc,EAAED,OAAO,CAAC,YAAY,CAAC;EACrCE,QAAQ,EAAEF,OAAO,CAAC,qBAAqB,CAAC;EACxCG,IAAI,EAAEH,OAAO,CAAC,QAAQ,CAAC;EACvBI,WAAW,EAAEJ,OAAO,CAAC,QAAQ,CAAC,CAACI,WAAW;EAC1CC,IAAI,EAAEL,OAAO,CAAC,QAAQ,CAAC,CAACK,IAAI;EAC5BC,KAAK,EAAEN,OAAO,CAAC,SAAS,CAAC,CAACM,KAAK;EAC/BC,aAAa,EAAEP,OAAO,CAAC,SAAS,CAAC,CAACO,aAAa;EAC/CC,WAAW,EAAER,OAAO,CAAC,SAAS,CAAC;EAC/BS,SAAS,EAAET,OAAO,CAAC,cAAc,CAAC;EAClCU,YAAY,EAAEV,OAAO,CAAC,UAAU,CAAC;EAEjCW,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE,YAAY;EAClBC,cAAc,EAAEb,OAAO,CAAC,iBAAiB,CAAC;EAC1Cc,UAAU,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,CAAC;EAC9CC,IAAI,EAAE;IACFC,WAAW,EAAE,CACT,+DAA+D,EAC/D,gBAAgB,EAChB,6DAA6D,EAC7D,yBAAyB,CAC5B,CAACC,IAAI,CAAC,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}