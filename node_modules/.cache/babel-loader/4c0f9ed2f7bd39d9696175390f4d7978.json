{"ast":null,"code":"'use strict';\n\nexports.version = require('./version').version;\n\n// inject promise polyfill\nrequire('native-promise-only');\n\n// inject plot css\nrequire('../build/plotcss');\n\n// include registry module and expose register method\nvar Registry = require('./registry');\nvar register = exports.register = Registry.register;\n\n// expose plot api methods\nvar plotApi = require('./plot_api');\nvar methodNames = Object.keys(plotApi);\nfor (var i = 0; i < methodNames.length; i++) {\n  var name = methodNames[i];\n  // _ -> private API methods, but still registered for internal use\n  if (name.charAt(0) !== '_') exports[name] = plotApi[name];\n  register({\n    moduleType: 'apiMethod',\n    name: name,\n    fn: plotApi[name]\n  });\n}\n\n// scatter is the only trace included by default\nregister(require('./traces/scatter'));\n\n// register all registrable components modules\nregister([require('./components/annotations'), require('./components/annotations3d'), require('./components/selections'), require('./components/shapes'), require('./components/images'), require('./components/updatemenus'), require('./components/sliders'), require('./components/rangeslider'), require('./components/rangeselector'), require('./components/grid'), require('./components/errorbars'), require('./components/colorscale'), require('./components/colorbar'), require('./components/legend'),\n// legend needs to come after shape | legend defaults depends on shapes\nrequire('./components/fx'),\n// fx needs to come after legend | unified hover defaults depends on legends\nrequire('./components/modebar')]);\n\n// locales en and en-US are required for default behavior\nregister([require('./locale-en'), require('./locale-en-us')]);\n\n// locales that are present in the window should be loaded\nif (window.PlotlyLocales && Array.isArray(window.PlotlyLocales)) {\n  register(window.PlotlyLocales);\n  delete window.PlotlyLocales;\n}\n\n// plot icons\nexports.Icons = require('./fonts/ploticon');\n\n// unofficial 'beta' plot methods, use at your own risk\nvar Fx = require('./components/fx');\nvar Plots = require('./plots/plots');\nexports.Plots = {\n  resize: Plots.resize,\n  graphJson: Plots.graphJson,\n  sendDataToCloud: Plots.sendDataToCloud\n};\nexports.Fx = {\n  hover: Fx.hover,\n  unhover: Fx.unhover,\n  loneHover: Fx.loneHover,\n  loneUnhover: Fx.loneUnhover\n};\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');","map":{"version":3,"names":["exports","version","require","Registry","register","plotApi","methodNames","Object","keys","i","length","name","charAt","moduleType","fn","window","PlotlyLocales","Array","isArray","Icons","Fx","Plots","resize","graphJson","sendDataToCloud","hover","unhover","loneHover","loneUnhover","Snapshot","PlotSchema"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/core.js"],"sourcesContent":["'use strict';\n\nexports.version = require('./version').version;\n\n// inject promise polyfill\nrequire('native-promise-only');\n\n// inject plot css\nrequire('../build/plotcss');\n\n// include registry module and expose register method\nvar Registry = require('./registry');\nvar register = exports.register = Registry.register;\n\n// expose plot api methods\nvar plotApi = require('./plot_api');\nvar methodNames = Object.keys(plotApi);\nfor(var i = 0; i < methodNames.length; i++) {\n    var name = methodNames[i];\n    // _ -> private API methods, but still registered for internal use\n    if(name.charAt(0) !== '_') exports[name] = plotApi[name];\n    register({\n        moduleType: 'apiMethod',\n        name: name,\n        fn: plotApi[name]\n    });\n}\n\n// scatter is the only trace included by default\nregister(require('./traces/scatter'));\n\n// register all registrable components modules\nregister([\n    require('./components/annotations'),\n    require('./components/annotations3d'),\n    require('./components/selections'),\n    require('./components/shapes'),\n    require('./components/images'),\n    require('./components/updatemenus'),\n    require('./components/sliders'),\n    require('./components/rangeslider'),\n    require('./components/rangeselector'),\n    require('./components/grid'),\n    require('./components/errorbars'),\n    require('./components/colorscale'),\n    require('./components/colorbar'),\n    require('./components/legend'), // legend needs to come after shape | legend defaults depends on shapes\n    require('./components/fx'), // fx needs to come after legend | unified hover defaults depends on legends\n    require('./components/modebar')\n]);\n\n// locales en and en-US are required for default behavior\nregister([\n    require('./locale-en'),\n    require('./locale-en-us')\n]);\n\n// locales that are present in the window should be loaded\nif(window.PlotlyLocales && Array.isArray(window.PlotlyLocales)) {\n    register(window.PlotlyLocales);\n    delete window.PlotlyLocales;\n}\n\n// plot icons\nexports.Icons = require('./fonts/ploticon');\n\n// unofficial 'beta' plot methods, use at your own risk\nvar Fx = require('./components/fx');\nvar Plots = require('./plots/plots');\n\nexports.Plots = {\n    resize: Plots.resize,\n    graphJson: Plots.graphJson,\n    sendDataToCloud: Plots.sendDataToCloud\n};\nexports.Fx = {\n    hover: Fx.hover,\n    unhover: Fx.unhover,\n    loneHover: Fx.loneHover,\n    loneUnhover: Fx.loneUnhover\n};\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}