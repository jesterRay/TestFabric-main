{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar isArrayOrTypedArray = require('./array').isArrayOrTypedArray;\n\n/**\n * convert a string s (such as 'xaxis.range[0]')\n * representing a property of nested object into set and get methods\n * also return the string and object so we don't have to keep track of them\n * allows [-1] for an array index, to set a property inside all elements\n * of an array\n * eg if obj = {arr: [{a: 1}, {a: 2}]}\n * you can do p = nestedProperty(obj, 'arr[-1].a')\n * but you cannot set the array itself this way, to do that\n * just set the whole array.\n * eg if obj = {arr: [1, 2, 3]}\n * you can't do nestedProperty(obj, 'arr[-1]').set(5)\n * but you can do nestedProperty(obj, 'arr').set([5, 5, 5])\n */\nmodule.exports = function nestedProperty(container, propStr) {\n  if (isNumeric(propStr)) propStr = String(propStr);else if (typeof propStr !== 'string' || propStr.substr(propStr.length - 4) === '[-1]') {\n    throw 'bad property string';\n  }\n  var propParts = propStr.split('.');\n  var indexed;\n  var indices;\n  var i, j;\n  for (j = 0; j < propParts.length; j++) {\n    // guard against polluting __proto__ and other internals\n    if (String(propParts[j]).slice(0, 2) === '__') {\n      throw 'bad property string';\n    }\n  }\n\n  // check for parts of the nesting hierarchy that are numbers (ie array elements)\n  j = 0;\n  while (j < propParts.length) {\n    // look for non-bracket chars, then any number of [##] blocks\n    indexed = String(propParts[j]).match(/^([^\\[\\]]*)((\\[\\-?[0-9]*\\])+)$/);\n    if (indexed) {\n      if (indexed[1]) propParts[j] = indexed[1];\n      // allow propStr to start with bracketed array indices\n      else if (j === 0) propParts.splice(0, 1);else throw 'bad property string';\n      indices = indexed[2].substr(1, indexed[2].length - 2).split('][');\n      for (i = 0; i < indices.length; i++) {\n        j++;\n        propParts.splice(j, 0, Number(indices[i]));\n      }\n    }\n    j++;\n  }\n  if (typeof container !== 'object') {\n    return badContainer(container, propStr, propParts);\n  }\n  return {\n    set: npSet(container, propParts, propStr),\n    get: npGet(container, propParts),\n    astr: propStr,\n    parts: propParts,\n    obj: container\n  };\n};\nfunction npGet(cont, parts) {\n  return function () {\n    var curCont = cont;\n    var curPart;\n    var allSame;\n    var out;\n    var i;\n    var j;\n    for (i = 0; i < parts.length - 1; i++) {\n      curPart = parts[i];\n      if (curPart === -1) {\n        allSame = true;\n        out = [];\n        for (j = 0; j < curCont.length; j++) {\n          out[j] = npGet(curCont[j], parts.slice(i + 1))();\n          if (out[j] !== out[0]) allSame = false;\n        }\n        return allSame ? out[0] : out;\n      }\n      if (typeof curPart === 'number' && !isArrayOrTypedArray(curCont)) {\n        return undefined;\n      }\n      curCont = curCont[curPart];\n      if (typeof curCont !== 'object' || curCont === null) {\n        return undefined;\n      }\n    }\n\n    // only hit this if parts.length === 1\n    if (typeof curCont !== 'object' || curCont === null) return undefined;\n    out = curCont[parts[i]];\n    if (out === null) return undefined;\n    return out;\n  };\n}\n\n/*\n * Can this value be deleted? We can delete `undefined`, and `null` except INSIDE an\n * *args* array.\n *\n * Previously we also deleted some `{}` and `[]`, in order to try and make set/unset\n * a net noop; but this causes far more complication than it's worth, and still had\n * lots of exceptions. See https://github.com/plotly/plotly.js/issues/1410\n *\n * *args* arrays get passed directly to API methods and we should respect null if\n * the user put it there, but otherwise null is deleted as we use it as code\n * in restyle/relayout/update for \"delete this value\" whereas undefined means\n * \"ignore this edit\"\n */\nvar ARGS_PATTERN = /(^|\\.)args\\[/;\nfunction isDeletable(val, propStr) {\n  return val === undefined || val === null && !propStr.match(ARGS_PATTERN);\n}\nfunction npSet(cont, parts, propStr) {\n  return function (val) {\n    var curCont = cont;\n    var propPart = '';\n    var containerLevels = [[cont, propPart]];\n    var toDelete = isDeletable(val, propStr);\n    var curPart;\n    var i;\n    for (i = 0; i < parts.length - 1; i++) {\n      curPart = parts[i];\n      if (typeof curPart === 'number' && !isArrayOrTypedArray(curCont)) {\n        throw 'array index but container is not an array';\n      }\n\n      // handle special -1 array index\n      if (curPart === -1) {\n        toDelete = !setArrayAll(curCont, parts.slice(i + 1), val, propStr);\n        if (toDelete) break;else return;\n      }\n      if (!checkNewContainer(curCont, curPart, parts[i + 1], toDelete)) {\n        break;\n      }\n      curCont = curCont[curPart];\n      if (typeof curCont !== 'object' || curCont === null) {\n        throw 'container is not an object';\n      }\n      propPart = joinPropStr(propPart, curPart);\n      containerLevels.push([curCont, propPart]);\n    }\n    if (toDelete) {\n      if (i === parts.length - 1) {\n        delete curCont[parts[i]];\n\n        // The one bit of pruning we still do: drop `undefined` from the end of arrays.\n        // In case someone has already unset previous items, continue until we hit a\n        // non-undefined value.\n        if (Array.isArray(curCont) && +parts[i] === curCont.length - 1) {\n          while (curCont.length && curCont[curCont.length - 1] === undefined) {\n            curCont.pop();\n          }\n        }\n      }\n    } else curCont[parts[i]] = val;\n  };\n}\nfunction joinPropStr(propStr, newPart) {\n  var toAdd = newPart;\n  if (isNumeric(newPart)) toAdd = '[' + newPart + ']';else if (propStr) toAdd = '.' + newPart;\n  return propStr + toAdd;\n}\n\n// handle special -1 array index\nfunction setArrayAll(containerArray, innerParts, val, propStr) {\n  var arrayVal = isArrayOrTypedArray(val);\n  var allSet = true;\n  var thisVal = val;\n  var thisPropStr = propStr.replace('-1', 0);\n  var deleteThis = arrayVal ? false : isDeletable(val, thisPropStr);\n  var firstPart = innerParts[0];\n  var i;\n  for (i = 0; i < containerArray.length; i++) {\n    thisPropStr = propStr.replace('-1', i);\n    if (arrayVal) {\n      thisVal = val[i % val.length];\n      deleteThis = isDeletable(thisVal, thisPropStr);\n    }\n    if (deleteThis) allSet = false;\n    if (!checkNewContainer(containerArray, i, firstPart, deleteThis)) {\n      continue;\n    }\n    npSet(containerArray[i], innerParts, propStr.replace('-1', i))(thisVal);\n  }\n  return allSet;\n}\n\n/**\n * make new sub-container as needed.\n * returns false if there's no container and none is needed\n * because we're only deleting an attribute\n */\nfunction checkNewContainer(container, part, nextPart, toDelete) {\n  if (container[part] === undefined) {\n    if (toDelete) return false;\n    if (typeof nextPart === 'number') container[part] = [];else container[part] = {};\n  }\n  return true;\n}\nfunction badContainer(container, propStr, propParts) {\n  return {\n    set: function () {\n      throw 'bad container';\n    },\n    get: function () {},\n    astr: propStr,\n    parts: propParts,\n    obj: container\n  };\n}","map":{"version":3,"names":["isNumeric","require","isArrayOrTypedArray","module","exports","nestedProperty","container","propStr","String","substr","length","propParts","split","indexed","indices","i","j","slice","match","splice","Number","badContainer","set","npSet","get","npGet","astr","parts","obj","cont","curCont","curPart","allSame","out","undefined","ARGS_PATTERN","isDeletable","val","propPart","containerLevels","toDelete","setArrayAll","checkNewContainer","joinPropStr","push","Array","isArray","pop","newPart","toAdd","containerArray","innerParts","arrayVal","allSet","thisVal","thisPropStr","replace","deleteThis","firstPart","part","nextPart"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/lib/nested_property.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar isArrayOrTypedArray = require('./array').isArrayOrTypedArray;\n\n/**\n * convert a string s (such as 'xaxis.range[0]')\n * representing a property of nested object into set and get methods\n * also return the string and object so we don't have to keep track of them\n * allows [-1] for an array index, to set a property inside all elements\n * of an array\n * eg if obj = {arr: [{a: 1}, {a: 2}]}\n * you can do p = nestedProperty(obj, 'arr[-1].a')\n * but you cannot set the array itself this way, to do that\n * just set the whole array.\n * eg if obj = {arr: [1, 2, 3]}\n * you can't do nestedProperty(obj, 'arr[-1]').set(5)\n * but you can do nestedProperty(obj, 'arr').set([5, 5, 5])\n */\nmodule.exports = function nestedProperty(container, propStr) {\n    if(isNumeric(propStr)) propStr = String(propStr);\n    else if(typeof propStr !== 'string' ||\n            propStr.substr(propStr.length - 4) === '[-1]') {\n        throw 'bad property string';\n    }\n\n    var propParts = propStr.split('.');\n    var indexed;\n    var indices;\n    var i, j;\n\n    for(j = 0; j < propParts.length; j++) {\n        // guard against polluting __proto__ and other internals\n        if(String(propParts[j]).slice(0, 2) === '__') {\n            throw 'bad property string';\n        }\n    }\n\n    // check for parts of the nesting hierarchy that are numbers (ie array elements)\n    j = 0;\n    while(j < propParts.length) {\n        // look for non-bracket chars, then any number of [##] blocks\n        indexed = String(propParts[j]).match(/^([^\\[\\]]*)((\\[\\-?[0-9]*\\])+)$/);\n        if(indexed) {\n            if(indexed[1]) propParts[j] = indexed[1];\n            // allow propStr to start with bracketed array indices\n            else if(j === 0) propParts.splice(0, 1);\n            else throw 'bad property string';\n\n            indices = indexed[2]\n                .substr(1, indexed[2].length - 2)\n                .split('][');\n\n            for(i = 0; i < indices.length; i++) {\n                j++;\n                propParts.splice(j, 0, Number(indices[i]));\n            }\n        }\n        j++;\n    }\n\n    if(typeof container !== 'object') {\n        return badContainer(container, propStr, propParts);\n    }\n\n    return {\n        set: npSet(container, propParts, propStr),\n        get: npGet(container, propParts),\n        astr: propStr,\n        parts: propParts,\n        obj: container\n    };\n};\n\nfunction npGet(cont, parts) {\n    return function() {\n        var curCont = cont;\n        var curPart;\n        var allSame;\n        var out;\n        var i;\n        var j;\n\n        for(i = 0; i < parts.length - 1; i++) {\n            curPart = parts[i];\n            if(curPart === -1) {\n                allSame = true;\n                out = [];\n                for(j = 0; j < curCont.length; j++) {\n                    out[j] = npGet(curCont[j], parts.slice(i + 1))();\n                    if(out[j] !== out[0]) allSame = false;\n                }\n                return allSame ? out[0] : out;\n            }\n            if(typeof curPart === 'number' && !isArrayOrTypedArray(curCont)) {\n                return undefined;\n            }\n            curCont = curCont[curPart];\n            if(typeof curCont !== 'object' || curCont === null) {\n                return undefined;\n            }\n        }\n\n        // only hit this if parts.length === 1\n        if(typeof curCont !== 'object' || curCont === null) return undefined;\n\n        out = curCont[parts[i]];\n        if(out === null) return undefined;\n        return out;\n    };\n}\n\n/*\n * Can this value be deleted? We can delete `undefined`, and `null` except INSIDE an\n * *args* array.\n *\n * Previously we also deleted some `{}` and `[]`, in order to try and make set/unset\n * a net noop; but this causes far more complication than it's worth, and still had\n * lots of exceptions. See https://github.com/plotly/plotly.js/issues/1410\n *\n * *args* arrays get passed directly to API methods and we should respect null if\n * the user put it there, but otherwise null is deleted as we use it as code\n * in restyle/relayout/update for \"delete this value\" whereas undefined means\n * \"ignore this edit\"\n */\nvar ARGS_PATTERN = /(^|\\.)args\\[/;\nfunction isDeletable(val, propStr) {\n    return (val === undefined) || (val === null && !propStr.match(ARGS_PATTERN));\n}\n\nfunction npSet(cont, parts, propStr) {\n    return function(val) {\n        var curCont = cont;\n        var propPart = '';\n        var containerLevels = [[cont, propPart]];\n        var toDelete = isDeletable(val, propStr);\n        var curPart;\n        var i;\n\n        for(i = 0; i < parts.length - 1; i++) {\n            curPart = parts[i];\n\n            if(typeof curPart === 'number' && !isArrayOrTypedArray(curCont)) {\n                throw 'array index but container is not an array';\n            }\n\n            // handle special -1 array index\n            if(curPart === -1) {\n                toDelete = !setArrayAll(curCont, parts.slice(i + 1), val, propStr);\n                if(toDelete) break;\n                else return;\n            }\n\n            if(!checkNewContainer(curCont, curPart, parts[i + 1], toDelete)) {\n                break;\n            }\n\n            curCont = curCont[curPart];\n\n            if(typeof curCont !== 'object' || curCont === null) {\n                throw 'container is not an object';\n            }\n\n            propPart = joinPropStr(propPart, curPart);\n\n            containerLevels.push([curCont, propPart]);\n        }\n\n        if(toDelete) {\n            if(i === parts.length - 1) {\n                delete curCont[parts[i]];\n\n                // The one bit of pruning we still do: drop `undefined` from the end of arrays.\n                // In case someone has already unset previous items, continue until we hit a\n                // non-undefined value.\n                if(Array.isArray(curCont) && +parts[i] === curCont.length - 1) {\n                    while(curCont.length && curCont[curCont.length - 1] === undefined) {\n                        curCont.pop();\n                    }\n                }\n            }\n        } else curCont[parts[i]] = val;\n    };\n}\n\nfunction joinPropStr(propStr, newPart) {\n    var toAdd = newPart;\n    if(isNumeric(newPart)) toAdd = '[' + newPart + ']';\n    else if(propStr) toAdd = '.' + newPart;\n\n    return propStr + toAdd;\n}\n\n// handle special -1 array index\nfunction setArrayAll(containerArray, innerParts, val, propStr) {\n    var arrayVal = isArrayOrTypedArray(val);\n    var allSet = true;\n    var thisVal = val;\n    var thisPropStr = propStr.replace('-1', 0);\n    var deleteThis = arrayVal ? false : isDeletable(val, thisPropStr);\n    var firstPart = innerParts[0];\n    var i;\n\n    for(i = 0; i < containerArray.length; i++) {\n        thisPropStr = propStr.replace('-1', i);\n        if(arrayVal) {\n            thisVal = val[i % val.length];\n            deleteThis = isDeletable(thisVal, thisPropStr);\n        }\n        if(deleteThis) allSet = false;\n        if(!checkNewContainer(containerArray, i, firstPart, deleteThis)) {\n            continue;\n        }\n        npSet(containerArray[i], innerParts, propStr.replace('-1', i))(thisVal);\n    }\n    return allSet;\n}\n\n/**\n * make new sub-container as needed.\n * returns false if there's no container and none is needed\n * because we're only deleting an attribute\n */\nfunction checkNewContainer(container, part, nextPart, toDelete) {\n    if(container[part] === undefined) {\n        if(toDelete) return false;\n\n        if(typeof nextPart === 'number') container[part] = [];\n        else container[part] = {};\n    }\n    return true;\n}\n\nfunction badContainer(container, propStr, propParts) {\n    return {\n        set: function() { throw 'bad container'; },\n        get: function() {},\n        astr: propStr,\n        parts: propParts,\n        obj: container\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}