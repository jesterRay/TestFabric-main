{"ast":null,"code":"'use strict';\n\nvar createMatrix = require('regl-splom');\nvar Lib = require('../../lib');\nvar AxisIDs = require('../../plots/cartesian/axis_ids');\nvar selectMode = require('../../components/dragelement/helpers').selectMode;\nmodule.exports = function plot(gd, _, splomCalcData) {\n  if (!splomCalcData.length) return;\n  for (var i = 0; i < splomCalcData.length; i++) {\n    plotOne(gd, splomCalcData[i][0]);\n  }\n};\nfunction plotOne(gd, cd0) {\n  var fullLayout = gd._fullLayout;\n  var gs = fullLayout._size;\n  var trace = cd0.trace;\n  var stash = cd0.t;\n  var scene = fullLayout._splomScenes[trace.uid];\n  var matrixOpts = scene.matrixOptions;\n  var cdata = matrixOpts.cdata;\n  var regl = fullLayout._glcanvas.data()[0].regl;\n  var dragmode = fullLayout.dragmode;\n  var xa, ya;\n  var i, j, k;\n  if (cdata.length === 0) return;\n\n  // augment options with proper upper/lower halves\n  // regl-splom's default grid starts from bottom-left\n  matrixOpts.lower = trace.showupperhalf;\n  matrixOpts.upper = trace.showlowerhalf;\n  matrixOpts.diagonal = trace.diagonal.visible;\n  var visibleDims = trace._visibleDims;\n  var visibleLength = cdata.length;\n  var viewOpts = scene.viewOpts = {};\n  viewOpts.ranges = new Array(visibleLength);\n  viewOpts.domains = new Array(visibleLength);\n  for (k = 0; k < visibleDims.length; k++) {\n    i = visibleDims[k];\n    var rng = viewOpts.ranges[k] = new Array(4);\n    var dmn = viewOpts.domains[k] = new Array(4);\n    xa = AxisIDs.getFromId(gd, trace._diag[i][0]);\n    if (xa) {\n      rng[0] = xa._rl[0];\n      rng[2] = xa._rl[1];\n      dmn[0] = xa.domain[0];\n      dmn[2] = xa.domain[1];\n    }\n    ya = AxisIDs.getFromId(gd, trace._diag[i][1]);\n    if (ya) {\n      rng[1] = ya._rl[0];\n      rng[3] = ya._rl[1];\n      dmn[1] = ya.domain[0];\n      dmn[3] = ya.domain[1];\n    }\n  }\n  var plotGlPixelRatio = gd._context.plotGlPixelRatio;\n  var l = gs.l * plotGlPixelRatio;\n  var b = gs.b * plotGlPixelRatio;\n  var w = gs.w * plotGlPixelRatio;\n  var h = gs.h * plotGlPixelRatio;\n  viewOpts.viewport = [l, b, w + l, h + b];\n  if (scene.matrix === true) {\n    scene.matrix = createMatrix(regl);\n  }\n  var clickSelectEnabled = fullLayout.clickmode.indexOf('select') > -1;\n  var isSelectMode = selectMode(dragmode) || !!trace.selectedpoints || clickSelectEnabled;\n  var needsBaseUpdate = true;\n  if (isSelectMode) {\n    var commonLength = trace._length;\n\n    // regenerate scene batch, if traces number changed during selection\n    if (trace.selectedpoints) {\n      scene.selectBatch = trace.selectedpoints;\n      var selPts = trace.selectedpoints;\n      var selDict = {};\n      for (i = 0; i < selPts.length; i++) {\n        selDict[selPts[i]] = true;\n      }\n      var unselPts = [];\n      for (i = 0; i < commonLength; i++) {\n        if (!selDict[i]) unselPts.push(i);\n      }\n      scene.unselectBatch = unselPts;\n    }\n\n    // precalculate px coords since we are not going to pan during select\n    var xpx = stash.xpx = new Array(visibleLength);\n    var ypx = stash.ypx = new Array(visibleLength);\n    for (k = 0; k < visibleDims.length; k++) {\n      i = visibleDims[k];\n      xa = AxisIDs.getFromId(gd, trace._diag[i][0]);\n      if (xa) {\n        xpx[k] = new Array(commonLength);\n        for (j = 0; j < commonLength; j++) {\n          xpx[k][j] = xa.c2p(cdata[k][j]);\n        }\n      }\n      ya = AxisIDs.getFromId(gd, trace._diag[i][1]);\n      if (ya) {\n        ypx[k] = new Array(commonLength);\n        for (j = 0; j < commonLength; j++) {\n          ypx[k][j] = ya.c2p(cdata[k][j]);\n        }\n      }\n    }\n    if (scene.selectBatch.length || scene.unselectBatch.length) {\n      var unselOpts = Lib.extendFlat({}, matrixOpts, scene.unselectedOptions, viewOpts);\n      var selOpts = Lib.extendFlat({}, matrixOpts, scene.selectedOptions, viewOpts);\n      scene.matrix.update(unselOpts, selOpts);\n      needsBaseUpdate = false;\n    }\n  } else {\n    stash.xpx = stash.ypx = null;\n  }\n  if (needsBaseUpdate) {\n    var opts = Lib.extendFlat({}, matrixOpts, viewOpts);\n    scene.matrix.update(opts, null);\n  }\n}","map":{"version":3,"names":["createMatrix","require","Lib","AxisIDs","selectMode","module","exports","plot","gd","_","splomCalcData","length","i","plotOne","cd0","fullLayout","_fullLayout","gs","_size","trace","stash","t","scene","_splomScenes","uid","matrixOpts","matrixOptions","cdata","regl","_glcanvas","data","dragmode","xa","ya","j","k","lower","showupperhalf","upper","showlowerhalf","diagonal","visible","visibleDims","_visibleDims","visibleLength","viewOpts","ranges","Array","domains","rng","dmn","getFromId","_diag","_rl","domain","plotGlPixelRatio","_context","l","b","w","h","viewport","matrix","clickSelectEnabled","clickmode","indexOf","isSelectMode","selectedpoints","needsBaseUpdate","commonLength","_length","selectBatch","selPts","selDict","unselPts","push","unselectBatch","xpx","ypx","c2p","unselOpts","extendFlat","unselectedOptions","selOpts","selectedOptions","update","opts"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/splom/plot.js"],"sourcesContent":["'use strict';\n\nvar createMatrix = require('regl-splom');\n\nvar Lib = require('../../lib');\nvar AxisIDs = require('../../plots/cartesian/axis_ids');\nvar selectMode = require('../../components/dragelement/helpers').selectMode;\n\nmodule.exports = function plot(gd, _, splomCalcData) {\n    if(!splomCalcData.length) return;\n\n    for(var i = 0; i < splomCalcData.length; i++) {\n        plotOne(gd, splomCalcData[i][0]);\n    }\n};\n\nfunction plotOne(gd, cd0) {\n    var fullLayout = gd._fullLayout;\n    var gs = fullLayout._size;\n    var trace = cd0.trace;\n    var stash = cd0.t;\n    var scene = fullLayout._splomScenes[trace.uid];\n    var matrixOpts = scene.matrixOptions;\n    var cdata = matrixOpts.cdata;\n    var regl = fullLayout._glcanvas.data()[0].regl;\n    var dragmode = fullLayout.dragmode;\n    var xa, ya;\n    var i, j, k;\n\n    if(cdata.length === 0) return;\n\n    // augment options with proper upper/lower halves\n    // regl-splom's default grid starts from bottom-left\n    matrixOpts.lower = trace.showupperhalf;\n    matrixOpts.upper = trace.showlowerhalf;\n    matrixOpts.diagonal = trace.diagonal.visible;\n\n    var visibleDims = trace._visibleDims;\n    var visibleLength = cdata.length;\n    var viewOpts = scene.viewOpts = {};\n    viewOpts.ranges = new Array(visibleLength);\n    viewOpts.domains = new Array(visibleLength);\n\n    for(k = 0; k < visibleDims.length; k++) {\n        i = visibleDims[k];\n\n        var rng = viewOpts.ranges[k] = new Array(4);\n        var dmn = viewOpts.domains[k] = new Array(4);\n\n        xa = AxisIDs.getFromId(gd, trace._diag[i][0]);\n        if(xa) {\n            rng[0] = xa._rl[0];\n            rng[2] = xa._rl[1];\n            dmn[0] = xa.domain[0];\n            dmn[2] = xa.domain[1];\n        }\n\n        ya = AxisIDs.getFromId(gd, trace._diag[i][1]);\n        if(ya) {\n            rng[1] = ya._rl[0];\n            rng[3] = ya._rl[1];\n            dmn[1] = ya.domain[0];\n            dmn[3] = ya.domain[1];\n        }\n    }\n\n    var plotGlPixelRatio = gd._context.plotGlPixelRatio;\n    var l = gs.l * plotGlPixelRatio;\n    var b = gs.b * plotGlPixelRatio;\n    var w = gs.w * plotGlPixelRatio;\n    var h = gs.h * plotGlPixelRatio;\n\n    viewOpts.viewport = [l, b, w + l, h + b];\n\n    if(scene.matrix === true) {\n        scene.matrix = createMatrix(regl);\n    }\n\n    var clickSelectEnabled = fullLayout.clickmode.indexOf('select') > -1;\n    var isSelectMode = selectMode(dragmode) ||\n      !!trace.selectedpoints || clickSelectEnabled;\n    var needsBaseUpdate = true;\n\n    if(isSelectMode) {\n        var commonLength = trace._length;\n\n        // regenerate scene batch, if traces number changed during selection\n        if(trace.selectedpoints) {\n            scene.selectBatch = trace.selectedpoints;\n\n            var selPts = trace.selectedpoints;\n            var selDict = {};\n            for(i = 0; i < selPts.length; i++) {\n                selDict[selPts[i]] = true;\n            }\n            var unselPts = [];\n            for(i = 0; i < commonLength; i++) {\n                if(!selDict[i]) unselPts.push(i);\n            }\n            scene.unselectBatch = unselPts;\n        }\n\n        // precalculate px coords since we are not going to pan during select\n        var xpx = stash.xpx = new Array(visibleLength);\n        var ypx = stash.ypx = new Array(visibleLength);\n\n        for(k = 0; k < visibleDims.length; k++) {\n            i = visibleDims[k];\n\n            xa = AxisIDs.getFromId(gd, trace._diag[i][0]);\n            if(xa) {\n                xpx[k] = new Array(commonLength);\n                for(j = 0; j < commonLength; j++) {\n                    xpx[k][j] = xa.c2p(cdata[k][j]);\n                }\n            }\n\n            ya = AxisIDs.getFromId(gd, trace._diag[i][1]);\n            if(ya) {\n                ypx[k] = new Array(commonLength);\n                for(j = 0; j < commonLength; j++) {\n                    ypx[k][j] = ya.c2p(cdata[k][j]);\n                }\n            }\n        }\n\n        if(scene.selectBatch.length || scene.unselectBatch.length) {\n            var unselOpts = Lib.extendFlat({}, matrixOpts, scene.unselectedOptions, viewOpts);\n            var selOpts = Lib.extendFlat({}, matrixOpts, scene.selectedOptions, viewOpts);\n            scene.matrix.update(unselOpts, selOpts);\n            needsBaseUpdate = false;\n        }\n    } else {\n        stash.xpx = stash.ypx = null;\n    }\n\n    if(needsBaseUpdate) {\n        var opts = Lib.extendFlat({}, matrixOpts, viewOpts);\n        scene.matrix.update(opts, null);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}