{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\n\n// constants for dynamic jitter (ie less jitter for sparser points)\nvar JITTERCOUNT = 5; // points either side of this to include\nvar JITTERSPREAD = 0.01; // fraction of IQR to count as \"dense\"\n\nfunction plot(gd, plotinfo, cdbox, boxLayer) {\n  var isStatic = gd._context.staticPlot;\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  Lib.makeTraceGroups(boxLayer, cdbox, 'trace boxes').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var cd0 = cd[0];\n    var t = cd0.t;\n    var trace = cd0.trace;\n\n    // whisker width\n    t.wdPos = t.bdPos * trace.whiskerwidth;\n    if (trace.visible !== true || t.empty) {\n      plotGroup.remove();\n      return;\n    }\n    var posAxis, valAxis;\n    if (trace.orientation === 'h') {\n      posAxis = ya;\n      valAxis = xa;\n    } else {\n      posAxis = xa;\n      valAxis = ya;\n    }\n    plotBoxAndWhiskers(plotGroup, {\n      pos: posAxis,\n      val: valAxis\n    }, trace, t, isStatic);\n    plotPoints(plotGroup, {\n      x: xa,\n      y: ya\n    }, trace, t);\n    plotBoxMean(plotGroup, {\n      pos: posAxis,\n      val: valAxis\n    }, trace, t);\n  });\n}\nfunction plotBoxAndWhiskers(sel, axes, trace, t, isStatic) {\n  var isHorizontal = trace.orientation === 'h';\n  var valAxis = axes.val;\n  var posAxis = axes.pos;\n  var posHasRangeBreaks = !!posAxis.rangebreaks;\n  var bPos = t.bPos;\n  var wdPos = t.wdPos || 0;\n  var bPosPxOffset = t.bPosPxOffset || 0;\n  var whiskerWidth = trace.whiskerwidth || 0;\n  var showWhiskers = trace.showwhiskers !== false;\n  var notched = trace.notched || false;\n  var nw = notched ? 1 - 2 * trace.notchwidth : 1;\n\n  // to support for one-sided box\n  var bdPos0;\n  var bdPos1;\n  if (Array.isArray(t.bdPos)) {\n    bdPos0 = t.bdPos[0];\n    bdPos1 = t.bdPos[1];\n  } else {\n    bdPos0 = t.bdPos;\n    bdPos1 = t.bdPos;\n  }\n  var paths = sel.selectAll('path.box').data(trace.type !== 'violin' || trace.box.visible ? Lib.identity : []);\n  paths.enter().append('path').style('vector-effect', isStatic ? 'none' : 'non-scaling-stroke').attr('class', 'box');\n  paths.exit().remove();\n  paths.each(function (d) {\n    if (d.empty) return d3.select(this).attr('d', 'M0,0Z');\n    var lcenter = posAxis.c2l(d.pos + bPos, true);\n    var pos0 = posAxis.l2p(lcenter - bdPos0) + bPosPxOffset;\n    var pos1 = posAxis.l2p(lcenter + bdPos1) + bPosPxOffset;\n    var posc = posHasRangeBreaks ? (pos0 + pos1) / 2 : posAxis.l2p(lcenter) + bPosPxOffset;\n    var r = trace.whiskerwidth;\n    var posw0 = posHasRangeBreaks ? pos0 * r + (1 - r) * posc : posAxis.l2p(lcenter - wdPos) + bPosPxOffset;\n    var posw1 = posHasRangeBreaks ? pos1 * r + (1 - r) * posc : posAxis.l2p(lcenter + wdPos) + bPosPxOffset;\n    var posm0 = posAxis.l2p(lcenter - bdPos0 * nw) + bPosPxOffset;\n    var posm1 = posAxis.l2p(lcenter + bdPos1 * nw) + bPosPxOffset;\n    var sdmode = trace.sizemode === 'sd';\n    var q1 = valAxis.c2p(sdmode ? d.mean - d.sd : d.q1, true);\n    var q3 = sdmode ? valAxis.c2p(d.mean + d.sd, true) : valAxis.c2p(d.q3, true);\n    // make sure median isn't identical to either of the\n    // quartiles, so we can see it\n    var m = Lib.constrain(sdmode ? valAxis.c2p(d.mean, true) : valAxis.c2p(d.med, true), Math.min(q1, q3) + 1, Math.max(q1, q3) - 1);\n\n    // for compatibility with box, violin, and candlestick\n    // perhaps we should put this into cd0.t instead so it's more explicit,\n    // but what we have now is:\n    // - box always has d.lf, but boxpoints can be anything\n    // - violin has d.lf and should always use it (boxpoints is undefined)\n    // - candlestick has only min/max\n    var useExtremes = d.lf === undefined || trace.boxpoints === false || sdmode;\n    var lf = valAxis.c2p(useExtremes ? d.min : d.lf, true);\n    var uf = valAxis.c2p(useExtremes ? d.max : d.uf, true);\n    var ln = valAxis.c2p(d.ln, true);\n    var un = valAxis.c2p(d.un, true);\n    if (isHorizontal) {\n      d3.select(this).attr('d', 'M' + m + ',' + posm0 + 'V' + posm1 +\n      // median line\n      'M' + q1 + ',' + pos0 + 'V' + pos1 + (\n      // left edge\n      notched ? 'H' + ln + 'L' + m + ',' + posm1 + 'L' + un + ',' + pos1 : '') +\n      // top notched edge\n      'H' + q3 +\n      // end of the top edge\n      'V' + pos0 + (\n      // right edge\n      notched ? 'H' + un + 'L' + m + ',' + posm0 + 'L' + ln + ',' + pos0 : '') +\n      // bottom notched edge\n      'Z' + (\n      // end of the box\n      showWhiskers ? 'M' + q1 + ',' + posc + 'H' + lf + 'M' + q3 + ',' + posc + 'H' + uf + (\n      // whiskers\n      whiskerWidth === 0 ? '' :\n      // whisker caps\n      'M' + lf + ',' + posw0 + 'V' + posw1 + 'M' + uf + ',' + posw0 + 'V' + posw1) : ''));\n    } else {\n      d3.select(this).attr('d', 'M' + posm0 + ',' + m + 'H' + posm1 +\n      // median line\n      'M' + pos0 + ',' + q1 + 'H' + pos1 + (\n      // top of the box\n      notched ? 'V' + ln + 'L' + posm1 + ',' + m + 'L' + pos1 + ',' + un : '') +\n      // notched right edge\n      'V' + q3 +\n      // end of the right edge\n      'H' + pos0 + (\n      // bottom of the box\n      notched ? 'V' + un + 'L' + posm0 + ',' + m + 'L' + pos0 + ',' + ln : '') +\n      // notched left edge\n      'Z' + (\n      // end of the box\n      showWhiskers ? 'M' + posc + ',' + q1 + 'V' + lf + 'M' + posc + ',' + q3 + 'V' + uf + (\n      // whiskers\n      whiskerWidth === 0 ? '' :\n      // whisker caps\n      'M' + posw0 + ',' + lf + 'H' + posw1 + 'M' + posw0 + ',' + uf + 'H' + posw1) : ''));\n    }\n  });\n}\nfunction plotPoints(sel, axes, trace, t) {\n  var xa = axes.x;\n  var ya = axes.y;\n  var bdPos = t.bdPos;\n  var bPos = t.bPos;\n\n  // to support violin points\n  var mode = trace.boxpoints || trace.points;\n\n  // repeatable pseudo-random number generator\n  Lib.seedPseudoRandom();\n\n  // since box plot points get an extra level of nesting, each\n  // box needs the trace styling info\n  var fn = function (d) {\n    d.forEach(function (v) {\n      v.t = t;\n      v.trace = trace;\n    });\n    return d;\n  };\n  var gPoints = sel.selectAll('g.points').data(mode ? fn : []);\n  gPoints.enter().append('g').attr('class', 'points');\n  gPoints.exit().remove();\n  var paths = gPoints.selectAll('path').data(function (d) {\n    var i;\n    var pts = d.pts2;\n\n    // normally use IQR, but if this is 0 or too small, use max-min\n    var typicalSpread = Math.max((d.max - d.min) / 10, d.q3 - d.q1);\n    var minSpread = typicalSpread * 1e-9;\n    var spreadLimit = typicalSpread * JITTERSPREAD;\n    var jitterFactors = [];\n    var maxJitterFactor = 0;\n    var newJitter;\n\n    // dynamic jitter\n    if (trace.jitter) {\n      if (typicalSpread === 0) {\n        // edge case of no spread at all: fall back to max jitter\n        maxJitterFactor = 1;\n        jitterFactors = new Array(pts.length);\n        for (i = 0; i < pts.length; i++) {\n          jitterFactors[i] = 1;\n        }\n      } else {\n        for (i = 0; i < pts.length; i++) {\n          var i0 = Math.max(0, i - JITTERCOUNT);\n          var pmin = pts[i0].v;\n          var i1 = Math.min(pts.length - 1, i + JITTERCOUNT);\n          var pmax = pts[i1].v;\n          if (mode !== 'all') {\n            if (pts[i].v < d.lf) pmax = Math.min(pmax, d.lf);else pmin = Math.max(pmin, d.uf);\n          }\n          var jitterFactor = Math.sqrt(spreadLimit * (i1 - i0) / (pmax - pmin + minSpread)) || 0;\n          jitterFactor = Lib.constrain(Math.abs(jitterFactor), 0, 1);\n          jitterFactors.push(jitterFactor);\n          maxJitterFactor = Math.max(jitterFactor, maxJitterFactor);\n        }\n      }\n      newJitter = trace.jitter * 2 / (maxJitterFactor || 1);\n    }\n\n    // fills in 'x' and 'y' in calcdata 'pts' item\n    for (i = 0; i < pts.length; i++) {\n      var pt = pts[i];\n      var v = pt.v;\n      var jitterOffset = trace.jitter ? newJitter * jitterFactors[i] * (Lib.pseudoRandom() - 0.5) : 0;\n      var posPx = d.pos + bPos + bdPos * (trace.pointpos + jitterOffset);\n      if (trace.orientation === 'h') {\n        pt.y = posPx;\n        pt.x = v;\n      } else {\n        pt.x = posPx;\n        pt.y = v;\n      }\n\n      // tag suspected outliers\n      if (mode === 'suspectedoutliers' && v < d.uo && v > d.lo) {\n        pt.so = true;\n      }\n    }\n    return pts;\n  });\n  paths.enter().append('path').classed('point', true);\n  paths.exit().remove();\n  paths.call(Drawing.translatePoints, xa, ya);\n}\nfunction plotBoxMean(sel, axes, trace, t) {\n  var valAxis = axes.val;\n  var posAxis = axes.pos;\n  var posHasRangeBreaks = !!posAxis.rangebreaks;\n  var bPos = t.bPos;\n  var bPosPxOffset = t.bPosPxOffset || 0;\n\n  // to support violin mean lines\n  var mode = trace.boxmean || (trace.meanline || {}).visible;\n\n  // to support for one-sided box\n  var bdPos0;\n  var bdPos1;\n  if (Array.isArray(t.bdPos)) {\n    bdPos0 = t.bdPos[0];\n    bdPos1 = t.bdPos[1];\n  } else {\n    bdPos0 = t.bdPos;\n    bdPos1 = t.bdPos;\n  }\n  var paths = sel.selectAll('path.mean').data(trace.type === 'box' && trace.boxmean || trace.type === 'violin' && trace.box.visible && trace.meanline.visible ? Lib.identity : []);\n  paths.enter().append('path').attr('class', 'mean').style({\n    fill: 'none',\n    'vector-effect': 'non-scaling-stroke'\n  });\n  paths.exit().remove();\n  paths.each(function (d) {\n    var lcenter = posAxis.c2l(d.pos + bPos, true);\n    var pos0 = posAxis.l2p(lcenter - bdPos0) + bPosPxOffset;\n    var pos1 = posAxis.l2p(lcenter + bdPos1) + bPosPxOffset;\n    var posc = posHasRangeBreaks ? (pos0 + pos1) / 2 : posAxis.l2p(lcenter) + bPosPxOffset;\n    var m = valAxis.c2p(d.mean, true);\n    var sl = valAxis.c2p(d.mean - d.sd, true);\n    var sh = valAxis.c2p(d.mean + d.sd, true);\n    if (trace.orientation === 'h') {\n      d3.select(this).attr('d', 'M' + m + ',' + pos0 + 'V' + pos1 + (mode === 'sd' ? 'm0,0L' + sl + ',' + posc + 'L' + m + ',' + pos0 + 'L' + sh + ',' + posc + 'Z' : ''));\n    } else {\n      d3.select(this).attr('d', 'M' + pos0 + ',' + m + 'H' + pos1 + (mode === 'sd' ? 'm0,0L' + posc + ',' + sl + 'L' + pos0 + ',' + m + 'L' + posc + ',' + sh + 'Z' : ''));\n    }\n  });\n}\nmodule.exports = {\n  plot: plot,\n  plotBoxAndWhiskers: plotBoxAndWhiskers,\n  plotPoints: plotPoints,\n  plotBoxMean: plotBoxMean\n};","map":{"version":3,"names":["d3","require","Lib","Drawing","JITTERCOUNT","JITTERSPREAD","plot","gd","plotinfo","cdbox","boxLayer","isStatic","_context","staticPlot","xa","xaxis","ya","yaxis","makeTraceGroups","each","cd","plotGroup","select","cd0","t","trace","wdPos","bdPos","whiskerwidth","visible","empty","remove","posAxis","valAxis","orientation","plotBoxAndWhiskers","pos","val","plotPoints","x","y","plotBoxMean","sel","axes","isHorizontal","posHasRangeBreaks","rangebreaks","bPos","bPosPxOffset","whiskerWidth","showWhiskers","showwhiskers","notched","nw","notchwidth","bdPos0","bdPos1","Array","isArray","paths","selectAll","data","type","box","identity","enter","append","style","attr","exit","d","lcenter","c2l","pos0","l2p","pos1","posc","r","posw0","posw1","posm0","posm1","sdmode","sizemode","q1","c2p","mean","sd","q3","m","constrain","med","Math","min","max","useExtremes","lf","undefined","boxpoints","uf","ln","un","mode","points","seedPseudoRandom","fn","forEach","v","gPoints","i","pts","pts2","typicalSpread","minSpread","spreadLimit","jitterFactors","maxJitterFactor","newJitter","jitter","length","i0","pmin","i1","pmax","jitterFactor","sqrt","abs","push","pt","jitterOffset","pseudoRandom","posPx","pointpos","uo","lo","so","classed","call","translatePoints","boxmean","meanline","fill","sl","sh","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/box/plot.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\n\n// constants for dynamic jitter (ie less jitter for sparser points)\nvar JITTERCOUNT = 5; // points either side of this to include\nvar JITTERSPREAD = 0.01; // fraction of IQR to count as \"dense\"\n\nfunction plot(gd, plotinfo, cdbox, boxLayer) {\n    var isStatic = gd._context.staticPlot;\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    Lib.makeTraceGroups(boxLayer, cdbox, 'trace boxes').each(function(cd) {\n        var plotGroup = d3.select(this);\n        var cd0 = cd[0];\n        var t = cd0.t;\n        var trace = cd0.trace;\n\n        // whisker width\n        t.wdPos = t.bdPos * trace.whiskerwidth;\n\n        if(trace.visible !== true || t.empty) {\n            plotGroup.remove();\n            return;\n        }\n\n        var posAxis, valAxis;\n\n        if(trace.orientation === 'h') {\n            posAxis = ya;\n            valAxis = xa;\n        } else {\n            posAxis = xa;\n            valAxis = ya;\n        }\n\n        plotBoxAndWhiskers(plotGroup, {pos: posAxis, val: valAxis}, trace, t, isStatic);\n        plotPoints(plotGroup, {x: xa, y: ya}, trace, t);\n        plotBoxMean(plotGroup, {pos: posAxis, val: valAxis}, trace, t);\n    });\n}\n\nfunction plotBoxAndWhiskers(sel, axes, trace, t, isStatic) {\n    var isHorizontal = trace.orientation === 'h';\n    var valAxis = axes.val;\n    var posAxis = axes.pos;\n    var posHasRangeBreaks = !!posAxis.rangebreaks;\n\n    var bPos = t.bPos;\n    var wdPos = t.wdPos || 0;\n    var bPosPxOffset = t.bPosPxOffset || 0;\n    var whiskerWidth = trace.whiskerwidth || 0;\n    var showWhiskers = (trace.showwhiskers !== false);\n    var notched = trace.notched || false;\n    var nw = notched ? 1 - 2 * trace.notchwidth : 1;\n\n    // to support for one-sided box\n    var bdPos0;\n    var bdPos1;\n    if(Array.isArray(t.bdPos)) {\n        bdPos0 = t.bdPos[0];\n        bdPos1 = t.bdPos[1];\n    } else {\n        bdPos0 = t.bdPos;\n        bdPos1 = t.bdPos;\n    }\n\n    var paths = sel.selectAll('path.box').data((\n        trace.type !== 'violin' ||\n        trace.box.visible\n    ) ? Lib.identity : []);\n\n    paths.enter().append('path')\n        .style('vector-effect', isStatic ? 'none' : 'non-scaling-stroke')\n        .attr('class', 'box');\n\n    paths.exit().remove();\n\n    paths.each(function(d) {\n        if(d.empty) return d3.select(this).attr('d', 'M0,0Z');\n\n        var lcenter = posAxis.c2l(d.pos + bPos, true);\n\n        var pos0 = posAxis.l2p(lcenter - bdPos0) + bPosPxOffset;\n        var pos1 = posAxis.l2p(lcenter + bdPos1) + bPosPxOffset;\n        var posc = posHasRangeBreaks ? (pos0 + pos1) / 2 : posAxis.l2p(lcenter) + bPosPxOffset;\n\n        var r = trace.whiskerwidth;\n        var posw0 = posHasRangeBreaks ? pos0 * r + (1 - r) * posc : posAxis.l2p(lcenter - wdPos) + bPosPxOffset;\n        var posw1 = posHasRangeBreaks ? pos1 * r + (1 - r) * posc : posAxis.l2p(lcenter + wdPos) + bPosPxOffset;\n\n        var posm0 = posAxis.l2p(lcenter - bdPos0 * nw) + bPosPxOffset;\n        var posm1 = posAxis.l2p(lcenter + bdPos1 * nw) + bPosPxOffset;\n        var sdmode = trace.sizemode === 'sd';\n        var q1 = valAxis.c2p(sdmode ? d.mean - d.sd : d.q1, true);\n        var q3 = sdmode ? valAxis.c2p(d.mean + d.sd, true) :\n                          valAxis.c2p(d.q3, true);\n        // make sure median isn't identical to either of the\n        // quartiles, so we can see it\n        var m = Lib.constrain(\n            sdmode ? valAxis.c2p(d.mean, true) :\n                     valAxis.c2p(d.med, true),\n            Math.min(q1, q3) + 1, Math.max(q1, q3) - 1\n        );\n\n        // for compatibility with box, violin, and candlestick\n        // perhaps we should put this into cd0.t instead so it's more explicit,\n        // but what we have now is:\n        // - box always has d.lf, but boxpoints can be anything\n        // - violin has d.lf and should always use it (boxpoints is undefined)\n        // - candlestick has only min/max\n        var useExtremes = (d.lf === undefined) || (trace.boxpoints === false) || sdmode;\n        var lf = valAxis.c2p(useExtremes ? d.min : d.lf, true);\n        var uf = valAxis.c2p(useExtremes ? d.max : d.uf, true);\n        var ln = valAxis.c2p(d.ln, true);\n        var un = valAxis.c2p(d.un, true);\n\n        if(isHorizontal) {\n            d3.select(this).attr('d',\n                'M' + m + ',' + posm0 + 'V' + posm1 + // median line\n                'M' + q1 + ',' + pos0 + 'V' + pos1 + // left edge\n                (notched ?\n                    'H' + ln + 'L' + m + ',' + posm1 + 'L' + un + ',' + pos1 :\n                    ''\n                ) + // top notched edge\n                'H' + q3 + // end of the top edge\n                'V' + pos0 + // right edge\n                (notched ? 'H' + un + 'L' + m + ',' + posm0 + 'L' + ln + ',' + pos0 : '') + // bottom notched edge\n                'Z' + // end of the box\n                (showWhiskers ?\n                    'M' + q1 + ',' + posc + 'H' + lf + 'M' + q3 + ',' + posc + 'H' + uf + // whiskers\n                    (whiskerWidth === 0 ?\n                        '' : // whisker caps\n                        'M' + lf + ',' + posw0 + 'V' + posw1 + 'M' + uf + ',' + posw0 + 'V' + posw1\n                    ) :\n                    ''\n                )\n            );\n        } else {\n            d3.select(this).attr('d',\n                'M' + posm0 + ',' + m + 'H' + posm1 + // median line\n                'M' + pos0 + ',' + q1 + 'H' + pos1 + // top of the box\n                (notched ?\n                    'V' + ln + 'L' + posm1 + ',' + m + 'L' + pos1 + ',' + un :\n                    ''\n                ) + // notched right edge\n                'V' + q3 + // end of the right edge\n                'H' + pos0 + // bottom of the box\n                (notched ?\n                    'V' + un + 'L' + posm0 + ',' + m + 'L' + pos0 + ',' + ln :\n                    ''\n                ) + // notched left edge\n                'Z' + // end of the box\n                (showWhiskers ?\n                    'M' + posc + ',' + q1 + 'V' + lf + 'M' + posc + ',' + q3 + 'V' + uf + // whiskers\n                    (whiskerWidth === 0 ?\n                        '' : // whisker caps\n                        'M' + posw0 + ',' + lf + 'H' + posw1 + 'M' + posw0 + ',' + uf + 'H' + posw1\n                    ) :\n                    ''\n                )\n            );\n        }\n    });\n}\n\nfunction plotPoints(sel, axes, trace, t) {\n    var xa = axes.x;\n    var ya = axes.y;\n    var bdPos = t.bdPos;\n    var bPos = t.bPos;\n\n    // to support violin points\n    var mode = trace.boxpoints || trace.points;\n\n    // repeatable pseudo-random number generator\n    Lib.seedPseudoRandom();\n\n    // since box plot points get an extra level of nesting, each\n    // box needs the trace styling info\n    var fn = function(d) {\n        d.forEach(function(v) {\n            v.t = t;\n            v.trace = trace;\n        });\n        return d;\n    };\n\n    var gPoints = sel.selectAll('g.points')\n        .data(mode ? fn : []);\n\n    gPoints.enter().append('g')\n        .attr('class', 'points');\n\n    gPoints.exit().remove();\n\n    var paths = gPoints.selectAll('path')\n        .data(function(d) {\n            var i;\n            var pts = d.pts2;\n\n            // normally use IQR, but if this is 0 or too small, use max-min\n            var typicalSpread = Math.max((d.max - d.min) / 10, d.q3 - d.q1);\n            var minSpread = typicalSpread * 1e-9;\n            var spreadLimit = typicalSpread * JITTERSPREAD;\n            var jitterFactors = [];\n            var maxJitterFactor = 0;\n            var newJitter;\n\n            // dynamic jitter\n            if(trace.jitter) {\n                if(typicalSpread === 0) {\n                    // edge case of no spread at all: fall back to max jitter\n                    maxJitterFactor = 1;\n                    jitterFactors = new Array(pts.length);\n                    for(i = 0; i < pts.length; i++) {\n                        jitterFactors[i] = 1;\n                    }\n                } else {\n                    for(i = 0; i < pts.length; i++) {\n                        var i0 = Math.max(0, i - JITTERCOUNT);\n                        var pmin = pts[i0].v;\n                        var i1 = Math.min(pts.length - 1, i + JITTERCOUNT);\n                        var pmax = pts[i1].v;\n\n                        if(mode !== 'all') {\n                            if(pts[i].v < d.lf) pmax = Math.min(pmax, d.lf);\n                            else pmin = Math.max(pmin, d.uf);\n                        }\n\n                        var jitterFactor = Math.sqrt(spreadLimit * (i1 - i0) / (pmax - pmin + minSpread)) || 0;\n                        jitterFactor = Lib.constrain(Math.abs(jitterFactor), 0, 1);\n\n                        jitterFactors.push(jitterFactor);\n                        maxJitterFactor = Math.max(jitterFactor, maxJitterFactor);\n                    }\n                }\n                newJitter = trace.jitter * 2 / (maxJitterFactor || 1);\n            }\n\n            // fills in 'x' and 'y' in calcdata 'pts' item\n            for(i = 0; i < pts.length; i++) {\n                var pt = pts[i];\n                var v = pt.v;\n\n                var jitterOffset = trace.jitter ?\n                    (newJitter * jitterFactors[i] * (Lib.pseudoRandom() - 0.5)) :\n                    0;\n\n                var posPx = d.pos + bPos + bdPos * (trace.pointpos + jitterOffset);\n\n                if(trace.orientation === 'h') {\n                    pt.y = posPx;\n                    pt.x = v;\n                } else {\n                    pt.x = posPx;\n                    pt.y = v;\n                }\n\n                // tag suspected outliers\n                if(mode === 'suspectedoutliers' && v < d.uo && v > d.lo) {\n                    pt.so = true;\n                }\n            }\n\n            return pts;\n        });\n\n    paths.enter().append('path')\n        .classed('point', true);\n\n    paths.exit().remove();\n\n    paths.call(Drawing.translatePoints, xa, ya);\n}\n\nfunction plotBoxMean(sel, axes, trace, t) {\n    var valAxis = axes.val;\n    var posAxis = axes.pos;\n    var posHasRangeBreaks = !!posAxis.rangebreaks;\n\n    var bPos = t.bPos;\n    var bPosPxOffset = t.bPosPxOffset || 0;\n\n    // to support violin mean lines\n    var mode = trace.boxmean || (trace.meanline || {}).visible;\n\n    // to support for one-sided box\n    var bdPos0;\n    var bdPos1;\n    if(Array.isArray(t.bdPos)) {\n        bdPos0 = t.bdPos[0];\n        bdPos1 = t.bdPos[1];\n    } else {\n        bdPos0 = t.bdPos;\n        bdPos1 = t.bdPos;\n    }\n\n    var paths = sel.selectAll('path.mean').data((\n        (trace.type === 'box' && trace.boxmean) ||\n        (trace.type === 'violin' && trace.box.visible && trace.meanline.visible)\n    ) ? Lib.identity : []);\n\n    paths.enter().append('path')\n        .attr('class', 'mean')\n        .style({\n            fill: 'none',\n            'vector-effect': 'non-scaling-stroke'\n        });\n\n    paths.exit().remove();\n\n    paths.each(function(d) {\n        var lcenter = posAxis.c2l(d.pos + bPos, true);\n\n        var pos0 = posAxis.l2p(lcenter - bdPos0) + bPosPxOffset;\n        var pos1 = posAxis.l2p(lcenter + bdPos1) + bPosPxOffset;\n        var posc = posHasRangeBreaks ? (pos0 + pos1) / 2 : posAxis.l2p(lcenter) + bPosPxOffset;\n\n        var m = valAxis.c2p(d.mean, true);\n        var sl = valAxis.c2p(d.mean - d.sd, true);\n        var sh = valAxis.c2p(d.mean + d.sd, true);\n\n        if(trace.orientation === 'h') {\n            d3.select(this).attr('d',\n                'M' + m + ',' + pos0 + 'V' + pos1 +\n                (mode === 'sd' ?\n                    'm0,0L' + sl + ',' + posc + 'L' + m + ',' + pos0 + 'L' + sh + ',' + posc + 'Z' :\n                    '')\n            );\n        } else {\n            d3.select(this).attr('d',\n                'M' + pos0 + ',' + m + 'H' + pos1 +\n                (mode === 'sd' ?\n                    'm0,0L' + posc + ',' + sl + 'L' + pos0 + ',' + m + 'L' + posc + ',' + sh + 'Z' :\n                    '')\n            );\n        }\n    });\n}\n\nmodule.exports = {\n    plot: plot,\n    plotBoxAndWhiskers: plotBoxAndWhiskers,\n    plotPoints: plotPoints,\n    plotBoxMean: plotBoxMean\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}