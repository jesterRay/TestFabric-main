{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nexport function useApi(baseUrl, params) {\n  _s();\n  const history = useHistory();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ðŸ”¥ Memoize `params` to prevent re-fetching on every render\n  const memoizedParams = useMemo(() => params, [JSON.stringify(params)]);\n  useEffect(() => {\n    if (!baseUrl) return;\n    setIsLoading(true);\n    axios.get(`${process.env.REACT_APP_API_URL}${baseUrl}`, {\n      params: memoizedParams\n    }).then(response => {\n      var _response$data;\n      setData((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || null);\n    }).catch(error => {\n      var _error$response;\n      setError(error);\n      console.error(`API Error (${baseUrl}):`, error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        history.push(\"/\"); // Redirect if 404\n      }\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, [baseUrl, memoizedParams]); // âœ… Triggers only when `baseUrl` or `params` change\n\n  return {\n    data,\n    error,\n    isLoading\n  };\n}\n_s(useApi, \"x/XiKUqHOzMwIC1tcNt1k6Y0Ah8=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"names":["useState","useEffect","useMemo","axios","useHistory","useApi","baseUrl","params","_s","history","data","setData","error","setError","isLoading","setIsLoading","memoizedParams","JSON","stringify","get","process","env","REACT_APP_API_URL","then","response","_response$data","catch","_error$response","console","status","push","finally"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/middleware/middleware.js"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function useApi(baseUrl, params) {\n    const history = useHistory();\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    // ðŸ”¥ Memoize `params` to prevent re-fetching on every render\n    const memoizedParams = useMemo(() => params, [JSON.stringify(params)]);\n\n    useEffect(() => {\n        if (!baseUrl) return;\n\n        setIsLoading(true);\n\n        axios\n            .get(`${process.env.REACT_APP_API_URL}${baseUrl}`, { params: memoizedParams })\n            .then(response => {\n                setData(response?.data?.data || null);\n            })\n            .catch(error => {\n                setError(error);\n                console.error(`API Error (${baseUrl}):`, error);\n\n                if (error.response?.status === 404) {\n                    history.push(\"/\"); // Redirect if 404\n                }\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n\n    }, [baseUrl, memoizedParams]); // âœ… Triggers only when `baseUrl` or `params` change\n\n    return { data, error, isLoading };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,SAASC,MAAMA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAAAC,EAAA;EACpC,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMgB,cAAc,GAAGd,OAAO,CAAC,MAAMK,MAAM,EAAE,CAACU,IAAI,CAACC,SAAS,CAACX,MAAM,CAAC,CAAC,CAAC;EAEtEN,SAAS,CAAC,MAAM;IACZ,IAAI,CAACK,OAAO,EAAE;IAEdS,YAAY,CAAC,IAAI,CAAC;IAElBZ,KAAK,CACAgB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAGhB,OAAO,EAAE,EAAE;MAAEC,MAAM,EAAES;IAAe,CAAC,CAAC,CAC7EO,IAAI,CAACC,QAAQ,IAAI;MAAA,IAAAC,cAAA;MACdd,OAAO,CAAC,CAAAa,QAAQ,aAARA,QAAQ,wBAAAC,cAAA,GAARD,QAAQ,CAAEd,IAAI,cAAAe,cAAA,uBAAdA,cAAA,CAAgBf,IAAI,KAAI,IAAI,CAAC;IACzC,CAAC,CAAC,CACDgB,KAAK,CAACd,KAAK,IAAI;MAAA,IAAAe,eAAA;MACZd,QAAQ,CAACD,KAAK,CAAC;MACfgB,OAAO,CAAChB,KAAK,CAAC,cAAcN,OAAO,IAAI,EAAEM,KAAK,CAAC;MAE/C,IAAI,EAAAe,eAAA,GAAAf,KAAK,CAACY,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;QAChCpB,OAAO,CAACqB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACXhB,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EAEV,CAAC,EAAE,CAACT,OAAO,EAAEU,cAAc,CAAC,CAAC,CAAC,CAAC;;EAE/B,OAAO;IAAEN,IAAI;IAAEE,KAAK;IAAEE;EAAU,CAAC;AACrC;AAACN,EAAA,CAlCeH,MAAM;EAAA,QACFD,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}