{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar calcMarkerColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar _ = require('../../lib')._;\nfunction isNonBlankString(v) {\n  return v && typeof v === 'string';\n}\nmodule.exports = function calc(gd, trace) {\n  var hasLocationData = isArrayOrTypedArray(trace.locations);\n  var len = hasLocationData ? trace.locations.length : trace._length;\n  var calcTrace = new Array(len);\n  var isValidLoc;\n  if (trace.geojson) {\n    isValidLoc = function (v) {\n      return isNonBlankString(v) || isNumeric(v);\n    };\n  } else {\n    isValidLoc = isNonBlankString;\n  }\n  for (var i = 0; i < len; i++) {\n    var calcPt = calcTrace[i] = {};\n    if (hasLocationData) {\n      var loc = trace.locations[i];\n      calcPt.loc = isValidLoc(loc) ? loc : null;\n    } else {\n      var lon = trace.lon[i];\n      var lat = trace.lat[i];\n      if (isNumeric(lon) && isNumeric(lat)) calcPt.lonlat = [+lon, +lat];else calcPt.lonlat = [BADNUM, BADNUM];\n    }\n  }\n  arraysToCalcdata(calcTrace, trace);\n  calcMarkerColorscale(gd, trace);\n  calcSelection(calcTrace, trace);\n  if (len) {\n    calcTrace[0].t = {\n      labels: {\n        lat: _(gd, 'lat:') + ' ',\n        lon: _(gd, 'lon:') + ' '\n      }\n    };\n  }\n  return calcTrace;\n};","map":{"version":3,"names":["isNumeric","require","BADNUM","calcMarkerColorscale","arraysToCalcdata","calcSelection","isArrayOrTypedArray","_","isNonBlankString","v","module","exports","calc","gd","trace","hasLocationData","locations","len","length","_length","calcTrace","Array","isValidLoc","geojson","i","calcPt","loc","lon","lat","lonlat","t","labels"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scattergeo/calc.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar calcMarkerColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nvar _ = require('../../lib')._;\n\nfunction isNonBlankString(v) {\n    return v && typeof v === 'string';\n}\n\nmodule.exports = function calc(gd, trace) {\n    var hasLocationData = isArrayOrTypedArray(trace.locations);\n    var len = hasLocationData ? trace.locations.length : trace._length;\n    var calcTrace = new Array(len);\n\n    var isValidLoc;\n    if(trace.geojson) {\n        isValidLoc = function(v) { return isNonBlankString(v) || isNumeric(v); };\n    } else {\n        isValidLoc = isNonBlankString;\n    }\n\n    for(var i = 0; i < len; i++) {\n        var calcPt = calcTrace[i] = {};\n\n        if(hasLocationData) {\n            var loc = trace.locations[i];\n            calcPt.loc = isValidLoc(loc) ? loc : null;\n        } else {\n            var lon = trace.lon[i];\n            var lat = trace.lat[i];\n\n            if(isNumeric(lon) && isNumeric(lat)) calcPt.lonlat = [+lon, +lat];\n            else calcPt.lonlat = [BADNUM, BADNUM];\n        }\n    }\n\n    arraysToCalcdata(calcTrace, trace);\n    calcMarkerColorscale(gd, trace);\n    calcSelection(calcTrace, trace);\n\n    if(len) {\n        calcTrace[0].t = {\n            labels: {\n                lat: _(gd, 'lat:') + ' ',\n                lon: _(gd, 'lon:') + ' '\n            }\n        };\n    }\n\n    return calcTrace;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAA2B,CAAC,CAACC,MAAM;AAExD,IAAIC,oBAAoB,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAChE,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,+BAA+B,CAAC;AAC/D,IAAII,aAAa,GAAGJ,OAAO,CAAC,2BAA2B,CAAC;AACxD,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,WAAW,CAAC,CAACK,mBAAmB;AAElE,IAAIC,CAAC,GAAGN,OAAO,CAAC,WAAW,CAAC,CAACM,CAAC;AAE9B,SAASC,gBAAgBA,CAACC,CAAC,EAAE;EACzB,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ;AACrC;AAEAC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,eAAe,GAAGT,mBAAmB,CAACQ,KAAK,CAACE,SAAS,CAAC;EAC1D,IAAIC,GAAG,GAAGF,eAAe,GAAGD,KAAK,CAACE,SAAS,CAACE,MAAM,GAAGJ,KAAK,CAACK,OAAO;EAClE,IAAIC,SAAS,GAAG,IAAIC,KAAK,CAACJ,GAAG,CAAC;EAE9B,IAAIK,UAAU;EACd,IAAGR,KAAK,CAACS,OAAO,EAAE;IACdD,UAAU,GAAG,SAAAA,CAASb,CAAC,EAAE;MAAE,OAAOD,gBAAgB,CAACC,CAAC,CAAC,IAAIT,SAAS,CAACS,CAAC,CAAC;IAAE,CAAC;EAC5E,CAAC,MAAM;IACHa,UAAU,GAAGd,gBAAgB;EACjC;EAEA,KAAI,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,GAAG,EAAEO,CAAC,EAAE,EAAE;IACzB,IAAIC,MAAM,GAAGL,SAAS,CAACI,CAAC,CAAC,GAAG,CAAC,CAAC;IAE9B,IAAGT,eAAe,EAAE;MAChB,IAAIW,GAAG,GAAGZ,KAAK,CAACE,SAAS,CAACQ,CAAC,CAAC;MAC5BC,MAAM,CAACC,GAAG,GAAGJ,UAAU,CAACI,GAAG,CAAC,GAAGA,GAAG,GAAG,IAAI;IAC7C,CAAC,MAAM;MACH,IAAIC,GAAG,GAAGb,KAAK,CAACa,GAAG,CAACH,CAAC,CAAC;MACtB,IAAII,GAAG,GAAGd,KAAK,CAACc,GAAG,CAACJ,CAAC,CAAC;MAEtB,IAAGxB,SAAS,CAAC2B,GAAG,CAAC,IAAI3B,SAAS,CAAC4B,GAAG,CAAC,EAAEH,MAAM,CAACI,MAAM,GAAG,CAAC,CAACF,GAAG,EAAE,CAACC,GAAG,CAAC,CAAC,KAC7DH,MAAM,CAACI,MAAM,GAAG,CAAC3B,MAAM,EAAEA,MAAM,CAAC;IACzC;EACJ;EAEAE,gBAAgB,CAACgB,SAAS,EAAEN,KAAK,CAAC;EAClCX,oBAAoB,CAACU,EAAE,EAAEC,KAAK,CAAC;EAC/BT,aAAa,CAACe,SAAS,EAAEN,KAAK,CAAC;EAE/B,IAAGG,GAAG,EAAE;IACJG,SAAS,CAAC,CAAC,CAAC,CAACU,CAAC,GAAG;MACbC,MAAM,EAAE;QACJH,GAAG,EAAErB,CAAC,CAACM,EAAE,EAAE,MAAM,CAAC,GAAG,GAAG;QACxBc,GAAG,EAAEpB,CAAC,CAACM,EAAE,EAAE,MAAM,CAAC,GAAG;MACzB;IACJ,CAAC;EACL;EAEA,OAAOO,SAAS;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}