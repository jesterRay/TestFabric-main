{"ast":null,"code":"'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar attributes = require('./attributes');\nvar fillText = require('../../lib').fillText;\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n  var cd = pointData.cd;\n  var trace = cd[0].trace;\n  var geo = pointData.subplot;\n  var pt, i, j, isInside;\n  var xy = [xval, yval];\n  var altXy = [xval + 360, yval];\n  for (i = 0; i < cd.length; i++) {\n    pt = cd[i];\n    isInside = false;\n    if (pt._polygons) {\n      for (j = 0; j < pt._polygons.length; j++) {\n        if (pt._polygons[j].contains(xy)) {\n          isInside = !isInside;\n        }\n        // for polygons that cross antimeridian as xval is in [-180, 180]\n        if (pt._polygons[j].contains(altXy)) {\n          isInside = !isInside;\n        }\n      }\n      if (isInside) break;\n    }\n  }\n  if (!isInside || !pt) return;\n  pointData.x0 = pointData.x1 = pointData.xa.c2p(pt.ct);\n  pointData.y0 = pointData.y1 = pointData.ya.c2p(pt.ct);\n  pointData.index = pt.index;\n  pointData.location = pt.loc;\n  pointData.z = pt.z;\n  pointData.zLabel = Axes.tickText(geo.mockAxis, geo.mockAxis.c2l(pt.z), 'hover').text;\n  pointData.hovertemplate = pt.hovertemplate;\n  makeHoverInfo(pointData, trace, pt);\n  return [pointData];\n};\nfunction makeHoverInfo(pointData, trace, pt) {\n  if (trace.hovertemplate) return;\n  var hoverinfo = pt.hi || trace.hoverinfo;\n  var loc = String(pt.loc);\n  var parts = hoverinfo === 'all' ? attributes.hoverinfo.flags : hoverinfo.split('+');\n  var hasName = parts.indexOf('name') !== -1;\n  var hasLocation = parts.indexOf('location') !== -1;\n  var hasZ = parts.indexOf('z') !== -1;\n  var hasText = parts.indexOf('text') !== -1;\n  var hasIdAsNameLabel = !hasName && hasLocation;\n  var text = [];\n  if (hasIdAsNameLabel) {\n    pointData.nameOverride = loc;\n  } else {\n    if (hasName) pointData.nameOverride = trace.name;\n    if (hasLocation) text.push(loc);\n  }\n  if (hasZ) {\n    text.push(pointData.zLabel);\n  }\n  if (hasText) {\n    fillText(pt, trace, text);\n  }\n  pointData.extraText = text.join('<br>');\n}","map":{"version":3,"names":["Axes","require","attributes","fillText","module","exports","hoverPoints","pointData","xval","yval","cd","trace","geo","subplot","pt","i","j","isInside","xy","altXy","length","_polygons","contains","x0","x1","xa","c2p","ct","y0","y1","ya","index","location","loc","z","zLabel","tickText","mockAxis","c2l","text","hovertemplate","makeHoverInfo","hoverinfo","hi","String","parts","flags","split","hasName","indexOf","hasLocation","hasZ","hasText","hasIdAsNameLabel","nameOverride","name","push","extraText","join"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/choropleth/hover.js"],"sourcesContent":["'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar attributes = require('./attributes');\nvar fillText = require('../../lib').fillText;\n\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n    var cd = pointData.cd;\n    var trace = cd[0].trace;\n    var geo = pointData.subplot;\n\n    var pt, i, j, isInside;\n\n    var xy = [xval, yval];\n    var altXy = [xval + 360, yval];\n\n    for(i = 0; i < cd.length; i++) {\n        pt = cd[i];\n        isInside = false;\n\n        if(pt._polygons) {\n            for(j = 0; j < pt._polygons.length; j++) {\n                if(pt._polygons[j].contains(xy)) {\n                    isInside = !isInside;\n                }\n                // for polygons that cross antimeridian as xval is in [-180, 180]\n                if(pt._polygons[j].contains(altXy)) {\n                    isInside = !isInside;\n                }\n            }\n\n            if(isInside) break;\n        }\n    }\n\n    if(!isInside || !pt) return;\n\n    pointData.x0 = pointData.x1 = pointData.xa.c2p(pt.ct);\n    pointData.y0 = pointData.y1 = pointData.ya.c2p(pt.ct);\n\n    pointData.index = pt.index;\n    pointData.location = pt.loc;\n    pointData.z = pt.z;\n    pointData.zLabel = Axes.tickText(geo.mockAxis, geo.mockAxis.c2l(pt.z), 'hover').text;\n    pointData.hovertemplate = pt.hovertemplate;\n\n    makeHoverInfo(pointData, trace, pt);\n\n    return [pointData];\n};\n\nfunction makeHoverInfo(pointData, trace, pt) {\n    if(trace.hovertemplate) return;\n\n    var hoverinfo = pt.hi || trace.hoverinfo;\n    var loc = String(pt.loc);\n\n    var parts = (hoverinfo === 'all') ?\n        attributes.hoverinfo.flags :\n        hoverinfo.split('+');\n\n    var hasName = (parts.indexOf('name') !== -1);\n    var hasLocation = (parts.indexOf('location') !== -1);\n    var hasZ = (parts.indexOf('z') !== -1);\n    var hasText = (parts.indexOf('text') !== -1);\n    var hasIdAsNameLabel = !hasName && hasLocation;\n\n    var text = [];\n\n    if(hasIdAsNameLabel) {\n        pointData.nameOverride = loc;\n    } else {\n        if(hasName) pointData.nameOverride = trace.name;\n        if(hasLocation) text.push(loc);\n    }\n\n    if(hasZ) {\n        text.push(pointData.zLabel);\n    }\n    if(hasText) {\n        fillText(pt, trace, text);\n    }\n\n    pointData.extraText = text.join('<br>');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}