{"ast":null,"code":"'use strict';\n\nvar Lib = require('../lib');\nvar helpers = require('./helpers');\n\n/*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/\nfunction fileSaver(url, name, format) {\n  var saveLink = document.createElement('a');\n  var canUseSaveLink = 'download' in saveLink;\n  var promise = new Promise(function (resolve, reject) {\n    var blob;\n    var objectUrl;\n\n    // IE 10+ (native saveAs)\n    if (Lib.isIE()) {\n      // At this point we are only dealing with a decoded SVG as\n      // a data URL (since IE only supports SVG)\n      blob = helpers.createBlob(url, 'svg');\n      window.navigator.msSaveBlob(blob, name);\n      blob = null;\n      return resolve(name);\n    }\n    if (canUseSaveLink) {\n      blob = helpers.createBlob(url, format);\n      objectUrl = helpers.createObjectURL(blob);\n      saveLink.href = objectUrl;\n      saveLink.download = name;\n      document.body.appendChild(saveLink);\n      saveLink.click();\n      document.body.removeChild(saveLink);\n      helpers.revokeObjectURL(objectUrl);\n      blob = null;\n      return resolve(name);\n    }\n\n    // Older versions of Safari did not allow downloading of blob urls\n    if (Lib.isSafari()) {\n      var prefix = format === 'svg' ? ',' : ';base64,';\n      helpers.octetStream(prefix + encodeURIComponent(url));\n      return resolve(name);\n    }\n    reject(new Error('download error'));\n  });\n  return promise;\n}\nmodule.exports = fileSaver;","map":{"version":3,"names":["Lib","require","helpers","fileSaver","url","name","format","saveLink","document","createElement","canUseSaveLink","promise","Promise","resolve","reject","blob","objectUrl","isIE","createBlob","window","navigator","msSaveBlob","createObjectURL","href","download","body","appendChild","click","removeChild","revokeObjectURL","isSafari","prefix","octetStream","encodeURIComponent","Error","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/snapshot/filesaver.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../lib');\nvar helpers = require('./helpers');\n\n/*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/\nfunction fileSaver(url, name, format) {\n    var saveLink = document.createElement('a');\n    var canUseSaveLink = 'download' in saveLink;\n\n    var promise = new Promise(function(resolve, reject) {\n        var blob;\n        var objectUrl;\n\n        // IE 10+ (native saveAs)\n        if(Lib.isIE()) {\n            // At this point we are only dealing with a decoded SVG as\n            // a data URL (since IE only supports SVG)\n            blob = helpers.createBlob(url, 'svg');\n            window.navigator.msSaveBlob(blob, name);\n            blob = null;\n            return resolve(name);\n        }\n\n        if(canUseSaveLink) {\n            blob = helpers.createBlob(url, format);\n            objectUrl = helpers.createObjectURL(blob);\n\n            saveLink.href = objectUrl;\n            saveLink.download = name;\n            document.body.appendChild(saveLink);\n            saveLink.click();\n\n            document.body.removeChild(saveLink);\n            helpers.revokeObjectURL(objectUrl);\n            blob = null;\n\n            return resolve(name);\n        }\n\n        // Older versions of Safari did not allow downloading of blob urls\n        if(Lib.isSafari()) {\n            var prefix = format === 'svg' ? ',' : ';base64,';\n            helpers.octetStream(prefix + encodeURIComponent(url));\n            return resolve(name);\n        }\n\n        reject(new Error('download error'));\n    });\n\n    return promise;\n}\n\n\nmodule.exports = fileSaver;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,SAASA,CAACC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAE;EAClC,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EAC1C,IAAIC,cAAc,GAAG,UAAU,IAAIH,QAAQ;EAE3C,IAAII,OAAO,GAAG,IAAIC,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM,EAAE;IAChD,IAAIC,IAAI;IACR,IAAIC,SAAS;;IAEb;IACA,IAAGhB,GAAG,CAACiB,IAAI,CAAC,CAAC,EAAE;MACX;MACA;MACAF,IAAI,GAAGb,OAAO,CAACgB,UAAU,CAACd,GAAG,EAAE,KAAK,CAAC;MACrCe,MAAM,CAACC,SAAS,CAACC,UAAU,CAACN,IAAI,EAAEV,IAAI,CAAC;MACvCU,IAAI,GAAG,IAAI;MACX,OAAOF,OAAO,CAACR,IAAI,CAAC;IACxB;IAEA,IAAGK,cAAc,EAAE;MACfK,IAAI,GAAGb,OAAO,CAACgB,UAAU,CAACd,GAAG,EAAEE,MAAM,CAAC;MACtCU,SAAS,GAAGd,OAAO,CAACoB,eAAe,CAACP,IAAI,CAAC;MAEzCR,QAAQ,CAACgB,IAAI,GAAGP,SAAS;MACzBT,QAAQ,CAACiB,QAAQ,GAAGnB,IAAI;MACxBG,QAAQ,CAACiB,IAAI,CAACC,WAAW,CAACnB,QAAQ,CAAC;MACnCA,QAAQ,CAACoB,KAAK,CAAC,CAAC;MAEhBnB,QAAQ,CAACiB,IAAI,CAACG,WAAW,CAACrB,QAAQ,CAAC;MACnCL,OAAO,CAAC2B,eAAe,CAACb,SAAS,CAAC;MAClCD,IAAI,GAAG,IAAI;MAEX,OAAOF,OAAO,CAACR,IAAI,CAAC;IACxB;;IAEA;IACA,IAAGL,GAAG,CAAC8B,QAAQ,CAAC,CAAC,EAAE;MACf,IAAIC,MAAM,GAAGzB,MAAM,KAAK,KAAK,GAAG,GAAG,GAAG,UAAU;MAChDJ,OAAO,CAAC8B,WAAW,CAACD,MAAM,GAAGE,kBAAkB,CAAC7B,GAAG,CAAC,CAAC;MACrD,OAAOS,OAAO,CAACR,IAAI,CAAC;IACxB;IAEAS,MAAM,CAAC,IAAIoB,KAAK,CAAC,gBAAgB,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,OAAOvB,OAAO;AAClB;AAGAwB,MAAM,CAACC,OAAO,GAAGjC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script"}