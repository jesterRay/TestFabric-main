{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  colormodel: {\n    // min and max define the numerical range accepted in CSS\n    // If z(min|max)Dflt are not defined, z(min|max) will default to min/max\n    rgb: {\n      min: [0, 0, 0],\n      max: [255, 255, 255],\n      fmt: function (c) {\n        return c.slice(0, 3);\n      },\n      suffix: ['', '', '']\n    },\n    rgba: {\n      min: [0, 0, 0, 0],\n      max: [255, 255, 255, 1],\n      fmt: function (c) {\n        return c.slice(0, 4);\n      },\n      suffix: ['', '', '', '']\n    },\n    rgba256: {\n      colormodel: 'rgba',\n      // because rgba256 is not an accept colormodel in CSS\n      zminDflt: [0, 0, 0, 0],\n      zmaxDflt: [255, 255, 255, 255],\n      min: [0, 0, 0, 0],\n      max: [255, 255, 255, 1],\n      fmt: function (c) {\n        return c.slice(0, 4);\n      },\n      suffix: ['', '', '', '']\n    },\n    hsl: {\n      min: [0, 0, 0],\n      max: [360, 100, 100],\n      fmt: function (c) {\n        var p = c.slice(0, 3);\n        p[1] = p[1] + '%';\n        p[2] = p[2] + '%';\n        return p;\n      },\n      suffix: ['째', '%', '%']\n    },\n    hsla: {\n      min: [0, 0, 0, 0],\n      max: [360, 100, 100, 1],\n      fmt: function (c) {\n        var p = c.slice(0, 4);\n        p[1] = p[1] + '%';\n        p[2] = p[2] + '%';\n        return p;\n      },\n      suffix: ['째', '%', '%', '']\n    }\n  }\n};","map":{"version":3,"names":["module","exports","colormodel","rgb","min","max","fmt","c","slice","suffix","rgba","rgba256","zminDflt","zmaxDflt","hsl","p","hsla"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/image/constants.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    colormodel: {\n        // min and max define the numerical range accepted in CSS\n        // If z(min|max)Dflt are not defined, z(min|max) will default to min/max\n        rgb: {\n            min: [0, 0, 0],\n            max: [255, 255, 255],\n            fmt: function(c) {return c.slice(0, 3);},\n            suffix: ['', '', '']\n        },\n        rgba: {\n            min: [0, 0, 0, 0],\n            max: [255, 255, 255, 1],\n            fmt: function(c) {return c.slice(0, 4);},\n            suffix: ['', '', '', '']\n        },\n        rgba256: {\n            colormodel: 'rgba', // because rgba256 is not an accept colormodel in CSS\n            zminDflt: [0, 0, 0, 0],\n            zmaxDflt: [255, 255, 255, 255],\n            min: [0, 0, 0, 0],\n            max: [255, 255, 255, 1],\n            fmt: function(c) {return c.slice(0, 4);},\n            suffix: ['', '', '', '']\n        },\n        hsl: {\n            min: [0, 0, 0],\n            max: [360, 100, 100],\n            fmt: function(c) {\n                var p = c.slice(0, 3);\n                p[1] = p[1] + '%';\n                p[2] = p[2] + '%';\n                return p;\n            },\n            suffix: ['째', '%', '%']\n        },\n        hsla: {\n            min: [0, 0, 0, 0],\n            max: [360, 100, 100, 1],\n            fmt: function(c) {\n                var p = c.slice(0, 4);\n                p[1] = p[1] + '%';\n                p[2] = p[2] + '%';\n                return p;\n            },\n            suffix: ['째', '%', '%', '']\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}