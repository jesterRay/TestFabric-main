{"ast":null,"code":"'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\nvar arraysToCalcdata = require('./arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nmodule.exports = function calc(gd, trace) {\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var size, pos, origPos, pObj, hasPeriod, pLetter, i, cdi;\n  if (trace.orientation === 'h') {\n    size = xa.makeCalcdata(trace, 'x');\n    origPos = ya.makeCalcdata(trace, 'y');\n    pObj = alignPeriod(trace, ya, 'y', origPos);\n    hasPeriod = !!trace.yperiodalignment;\n    pLetter = 'y';\n  } else {\n    size = ya.makeCalcdata(trace, 'y');\n    origPos = xa.makeCalcdata(trace, 'x');\n    pObj = alignPeriod(trace, xa, 'x', origPos);\n    hasPeriod = !!trace.xperiodalignment;\n    pLetter = 'x';\n  }\n  pos = pObj.vals;\n\n  // create the \"calculated data\" to plot\n  var serieslen = Math.min(pos.length, size.length);\n  var cd = new Array(serieslen);\n\n  // Unlike other bar-like traces funnels do not support base attribute.\n  // bases for funnels are computed internally in a way that\n  // the mid-point of each bar are located on the axis line.\n  trace._base = [];\n\n  // set position and size\n  for (i = 0; i < serieslen; i++) {\n    // treat negative values as bad numbers\n    if (size[i] < 0) size[i] = BADNUM;\n    var connectToNext = false;\n    if (size[i] !== BADNUM) {\n      if (i + 1 < serieslen && size[i + 1] !== BADNUM) {\n        connectToNext = true;\n      }\n    }\n    cdi = cd[i] = {\n      p: pos[i],\n      s: size[i],\n      cNext: connectToNext\n    };\n    trace._base[i] = -0.5 * cdi.s;\n    if (hasPeriod) {\n      cd[i].orig_p = origPos[i]; // used by hover\n      cd[i][pLetter + 'End'] = pObj.ends[i];\n      cd[i][pLetter + 'Start'] = pObj.starts[i];\n    }\n    if (trace.ids) {\n      cdi.id = String(trace.ids[i]);\n    }\n\n    // calculate total values\n    if (i === 0) cd[0].vTotal = 0;\n    cd[0].vTotal += fixNum(cdi.s);\n\n    // ratio from initial value\n    cdi.begR = fixNum(cdi.s) / fixNum(cd[0].s);\n  }\n  var prevGoodNum;\n  for (i = 0; i < serieslen; i++) {\n    cdi = cd[i];\n    if (cdi.s === BADNUM) continue;\n\n    // ratio of total value\n    cdi.sumR = cdi.s / cd[0].vTotal;\n\n    // ratio of previous (good) value\n    cdi.difR = prevGoodNum !== undefined ? cdi.s / prevGoodNum : 1;\n    prevGoodNum = cdi.s;\n  }\n  arraysToCalcdata(cd, trace);\n  calcSelection(cd, trace);\n  return cd;\n};\nfunction fixNum(a) {\n  return a === BADNUM ? 0 : a;\n}","map":{"version":3,"names":["Axes","require","alignPeriod","arraysToCalcdata","calcSelection","BADNUM","module","exports","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","size","pos","origPos","pObj","hasPeriod","pLetter","i","cdi","orientation","makeCalcdata","yperiodalignment","xperiodalignment","vals","serieslen","Math","min","length","cd","Array","_base","connectToNext","p","s","cNext","orig_p","ends","starts","ids","id","String","vTotal","fixNum","begR","prevGoodNum","sumR","difR","undefined","a"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/funnel/calc.js"],"sourcesContent":["'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\nvar arraysToCalcdata = require('./arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function calc(gd, trace) {\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var size, pos, origPos, pObj, hasPeriod, pLetter, i, cdi;\n\n    if(trace.orientation === 'h') {\n        size = xa.makeCalcdata(trace, 'x');\n        origPos = ya.makeCalcdata(trace, 'y');\n        pObj = alignPeriod(trace, ya, 'y', origPos);\n        hasPeriod = !!trace.yperiodalignment;\n        pLetter = 'y';\n    } else {\n        size = ya.makeCalcdata(trace, 'y');\n        origPos = xa.makeCalcdata(trace, 'x');\n        pObj = alignPeriod(trace, xa, 'x', origPos);\n        hasPeriod = !!trace.xperiodalignment;\n        pLetter = 'x';\n    }\n    pos = pObj.vals;\n\n    // create the \"calculated data\" to plot\n    var serieslen = Math.min(pos.length, size.length);\n    var cd = new Array(serieslen);\n\n    // Unlike other bar-like traces funnels do not support base attribute.\n    // bases for funnels are computed internally in a way that\n    // the mid-point of each bar are located on the axis line.\n    trace._base = [];\n\n    // set position and size\n    for(i = 0; i < serieslen; i++) {\n        // treat negative values as bad numbers\n        if(size[i] < 0) size[i] = BADNUM;\n\n        var connectToNext = false;\n        if(size[i] !== BADNUM) {\n            if(i + 1 < serieslen && size[i + 1] !== BADNUM) {\n                connectToNext = true;\n            }\n        }\n\n        cdi = cd[i] = {\n            p: pos[i],\n            s: size[i],\n            cNext: connectToNext\n        };\n\n        trace._base[i] = -0.5 * cdi.s;\n\n        if(hasPeriod) {\n            cd[i].orig_p = origPos[i]; // used by hover\n            cd[i][pLetter + 'End'] = pObj.ends[i];\n            cd[i][pLetter + 'Start'] = pObj.starts[i];\n        }\n\n        if(trace.ids) {\n            cdi.id = String(trace.ids[i]);\n        }\n\n        // calculate total values\n        if(i === 0) cd[0].vTotal = 0;\n        cd[0].vTotal += fixNum(cdi.s);\n\n        // ratio from initial value\n        cdi.begR = fixNum(cdi.s) / fixNum(cd[0].s);\n    }\n\n    var prevGoodNum;\n    for(i = 0; i < serieslen; i++) {\n        cdi = cd[i];\n        if(cdi.s === BADNUM) continue;\n\n        // ratio of total value\n        cdi.sumR = cdi.s / cd[0].vTotal;\n\n        // ratio of previous (good) value\n        cdi.difR = (prevGoodNum !== undefined) ? cdi.s / prevGoodNum : 1;\n\n        prevGoodNum = cdi.s;\n    }\n\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n\nfunction fixNum(a) {\n    return (a === BADNUM) ? 0 : a;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}