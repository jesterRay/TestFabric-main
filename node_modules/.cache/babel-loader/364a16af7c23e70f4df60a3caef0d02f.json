{"ast":null,"code":"'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar Colorscale = require('../../components/colorscale');\nvar wrap = require('../../lib/gup').wrap;\nmodule.exports = function calc(gd, trace) {\n  var lineColor;\n  var cscale;\n  if (Colorscale.hasColorscale(trace, 'line') && isArrayOrTypedArray(trace.line.color)) {\n    lineColor = trace.line.color;\n    cscale = Colorscale.extractOpts(trace.line).colorscale;\n    Colorscale.calc(gd, trace, {\n      vals: lineColor,\n      containerStr: 'line',\n      cLetter: 'c'\n    });\n  } else {\n    lineColor = constHalf(trace._length);\n    cscale = [[0, trace.line.color], [1, trace.line.color]];\n  }\n  return wrap({\n    lineColor: lineColor,\n    cscale: cscale\n  });\n};\nfunction constHalf(len) {\n  var out = new Array(len);\n  for (var i = 0; i < len; i++) {\n    out[i] = 0.5;\n  }\n  return out;\n}","map":{"version":3,"names":["isArrayOrTypedArray","require","Colorscale","wrap","module","exports","calc","gd","trace","lineColor","cscale","hasColorscale","line","color","extractOpts","colorscale","vals","containerStr","cLetter","constHalf","_length","len","out","Array","i"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/parcoords/calc.js"],"sourcesContent":["'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar Colorscale = require('../../components/colorscale');\nvar wrap = require('../../lib/gup').wrap;\n\nmodule.exports = function calc(gd, trace) {\n    var lineColor;\n    var cscale;\n\n    if(Colorscale.hasColorscale(trace, 'line') && isArrayOrTypedArray(trace.line.color)) {\n        lineColor = trace.line.color;\n        cscale = Colorscale.extractOpts(trace.line).colorscale;\n\n        Colorscale.calc(gd, trace, {\n            vals: lineColor,\n            containerStr: 'line',\n            cLetter: 'c'\n        });\n    } else {\n        lineColor = constHalf(trace._length);\n        cscale = [[0, trace.line.color], [1, trace.line.color]];\n    }\n\n    return wrap({lineColor: lineColor, cscale: cscale});\n};\n\nfunction constHalf(len) {\n    var out = new Array(len);\n    for(var i = 0; i < len; i++) {\n        out[i] = 0.5;\n    }\n    return out;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,mBAAmB;AAClE,IAAIE,UAAU,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AACvD,IAAIE,IAAI,GAAGF,OAAO,CAAC,eAAe,CAAC,CAACE,IAAI;AAExCC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,SAAS;EACb,IAAIC,MAAM;EAEV,IAAGR,UAAU,CAACS,aAAa,CAACH,KAAK,EAAE,MAAM,CAAC,IAAIR,mBAAmB,CAACQ,KAAK,CAACI,IAAI,CAACC,KAAK,CAAC,EAAE;IACjFJ,SAAS,GAAGD,KAAK,CAACI,IAAI,CAACC,KAAK;IAC5BH,MAAM,GAAGR,UAAU,CAACY,WAAW,CAACN,KAAK,CAACI,IAAI,CAAC,CAACG,UAAU;IAEtDb,UAAU,CAACI,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;MACvBQ,IAAI,EAAEP,SAAS;MACfQ,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC,MAAM;IACHT,SAAS,GAAGU,SAAS,CAACX,KAAK,CAACY,OAAO,CAAC;IACpCV,MAAM,GAAG,CAAC,CAAC,CAAC,EAAEF,KAAK,CAACI,IAAI,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAEL,KAAK,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC;EAC3D;EAEA,OAAOV,IAAI,CAAC;IAACM,SAAS,EAAEA,SAAS;IAAEC,MAAM,EAAEA;EAAM,CAAC,CAAC;AACvD,CAAC;AAED,SAASS,SAASA,CAACE,GAAG,EAAE;EACpB,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAACF,GAAG,CAAC;EACxB,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;IACzBF,GAAG,CAACE,CAAC,CAAC,GAAG,GAAG;EAChB;EACA,OAAOF,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"script"}