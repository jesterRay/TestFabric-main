{"ast":null,"code":"'use strict';\n\nvar Colorscale = require('../../components/colorscale');\nvar makeColorMap = require('./make_color_map');\nvar endPlus = require('./end_plus');\nfunction calc(gd, trace, opts) {\n  var contours = trace.contours;\n  var line = trace.line;\n  var cs = contours.size || 1;\n  var coloring = contours.coloring;\n  var colorMap = makeColorMap(trace, {\n    isColorbar: true\n  });\n  if (coloring === 'heatmap') {\n    var cOpts = Colorscale.extractOpts(trace);\n    opts._fillgradient = cOpts.reversescale ? Colorscale.flipScale(cOpts.colorscale) : cOpts.colorscale;\n    opts._zrange = [cOpts.min, cOpts.max];\n  } else if (coloring === 'fill') {\n    opts._fillcolor = colorMap;\n  }\n  opts._line = {\n    color: coloring === 'lines' ? colorMap : line.color,\n    width: contours.showlines !== false ? line.width : 0,\n    dash: line.dash\n  };\n  opts._levels = {\n    start: contours.start,\n    end: endPlus(contours),\n    size: cs\n  };\n}\nmodule.exports = {\n  min: 'zmin',\n  max: 'zmax',\n  calc: calc\n};","map":{"version":3,"names":["Colorscale","require","makeColorMap","endPlus","calc","gd","trace","opts","contours","line","cs","size","coloring","colorMap","isColorbar","cOpts","extractOpts","_fillgradient","reversescale","flipScale","colorscale","_zrange","min","max","_fillcolor","_line","color","width","showlines","dash","_levels","start","end","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/contour/colorbar.js"],"sourcesContent":["'use strict';\n\nvar Colorscale = require('../../components/colorscale');\nvar makeColorMap = require('./make_color_map');\nvar endPlus = require('./end_plus');\n\nfunction calc(gd, trace, opts) {\n    var contours = trace.contours;\n    var line = trace.line;\n    var cs = contours.size || 1;\n    var coloring = contours.coloring;\n    var colorMap = makeColorMap(trace, {isColorbar: true});\n\n    if(coloring === 'heatmap') {\n        var cOpts = Colorscale.extractOpts(trace);\n        opts._fillgradient = cOpts.reversescale ?\n            Colorscale.flipScale(cOpts.colorscale) :\n            cOpts.colorscale;\n        opts._zrange = [cOpts.min, cOpts.max];\n    } else if(coloring === 'fill') {\n        opts._fillcolor = colorMap;\n    }\n\n    opts._line = {\n        color: coloring === 'lines' ? colorMap : line.color,\n        width: contours.showlines !== false ? line.width : 0,\n        dash: line.dash\n    };\n\n    opts._levels = {\n        start: contours.start,\n        end: endPlus(contours),\n        size: cs\n    };\n}\n\nmodule.exports = {\n    min: 'zmin',\n    max: 'zmax',\n    calc: calc\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,6BAA6B,CAAC;AACvD,IAAIC,YAAY,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC9C,IAAIE,OAAO,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEnC,SAASG,IAAIA,CAACC,EAAE,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC3B,IAAIC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;EAC7B,IAAIC,IAAI,GAAGH,KAAK,CAACG,IAAI;EACrB,IAAIC,EAAE,GAAGF,QAAQ,CAACG,IAAI,IAAI,CAAC;EAC3B,IAAIC,QAAQ,GAAGJ,QAAQ,CAACI,QAAQ;EAChC,IAAIC,QAAQ,GAAGX,YAAY,CAACI,KAAK,EAAE;IAACQ,UAAU,EAAE;EAAI,CAAC,CAAC;EAEtD,IAAGF,QAAQ,KAAK,SAAS,EAAE;IACvB,IAAIG,KAAK,GAAGf,UAAU,CAACgB,WAAW,CAACV,KAAK,CAAC;IACzCC,IAAI,CAACU,aAAa,GAAGF,KAAK,CAACG,YAAY,GACnClB,UAAU,CAACmB,SAAS,CAACJ,KAAK,CAACK,UAAU,CAAC,GACtCL,KAAK,CAACK,UAAU;IACpBb,IAAI,CAACc,OAAO,GAAG,CAACN,KAAK,CAACO,GAAG,EAAEP,KAAK,CAACQ,GAAG,CAAC;EACzC,CAAC,MAAM,IAAGX,QAAQ,KAAK,MAAM,EAAE;IAC3BL,IAAI,CAACiB,UAAU,GAAGX,QAAQ;EAC9B;EAEAN,IAAI,CAACkB,KAAK,GAAG;IACTC,KAAK,EAAEd,QAAQ,KAAK,OAAO,GAAGC,QAAQ,GAAGJ,IAAI,CAACiB,KAAK;IACnDC,KAAK,EAAEnB,QAAQ,CAACoB,SAAS,KAAK,KAAK,GAAGnB,IAAI,CAACkB,KAAK,GAAG,CAAC;IACpDE,IAAI,EAAEpB,IAAI,CAACoB;EACf,CAAC;EAEDtB,IAAI,CAACuB,OAAO,GAAG;IACXC,KAAK,EAAEvB,QAAQ,CAACuB,KAAK;IACrBC,GAAG,EAAE7B,OAAO,CAACK,QAAQ,CAAC;IACtBG,IAAI,EAAED;EACV,CAAC;AACL;AAEAuB,MAAM,CAACC,OAAO,GAAG;EACbZ,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE,MAAM;EACXnB,IAAI,EAAEA;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}