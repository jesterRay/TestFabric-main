{"ast":null,"code":"'use strict';\n\nvar subTypes = require('../scatter/subtypes');\nvar styleTextSelection = require('./edit_style').styleTextSelection;\nmodule.exports = function select(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var xa = searchInfo.xaxis;\n  var ya = searchInfo.yaxis;\n  var selection = [];\n  var trace = cd[0].trace;\n  var stash = cd[0].t;\n  var len = trace._length;\n  var x = stash.x;\n  var y = stash.y;\n  var scene = stash._scene;\n  var index = stash.index;\n  if (!scene) return selection;\n  var hasText = subTypes.hasText(trace);\n  var hasMarkers = subTypes.hasMarkers(trace);\n  var hasOnlyLines = !hasMarkers && !hasText;\n  if (trace.visible !== true || hasOnlyLines) return selection;\n  var els = [];\n  var unels = [];\n\n  // degenerate polygon does not enable selection\n  // filter out points by visible scatter ones\n  if (selectionTester !== false && !selectionTester.degenerate) {\n    for (var i = 0; i < len; i++) {\n      if (selectionTester.contains([stash.xpx[i], stash.ypx[i]], false, i, searchInfo)) {\n        els.push(i);\n        selection.push({\n          pointNumber: i,\n          x: xa.c2d(x[i]),\n          y: ya.c2d(y[i])\n        });\n      } else {\n        unels.push(i);\n      }\n    }\n  }\n  if (hasMarkers) {\n    var scatter2d = scene.scatter2d;\n    if (!els.length && !unels.length) {\n      // reset to base styles when clearing\n      var baseOpts = new Array(scene.count);\n      baseOpts[index] = scene.markerOptions[index];\n      scatter2d.update.apply(scatter2d, baseOpts);\n    } else if (!scene.selectBatch[index].length && !scene.unselectBatch[index].length) {\n      // set unselected styles on 'context' canvas (if not done already)\n      var unselOpts = new Array(scene.count);\n      unselOpts[index] = scene.markerUnselectedOptions[index];\n      scatter2d.update.apply(scatter2d, unselOpts);\n    }\n  }\n  scene.selectBatch[index] = els;\n  scene.unselectBatch[index] = unels;\n  if (hasText) {\n    styleTextSelection(cd);\n  }\n  return selection;\n};","map":{"version":3,"names":["subTypes","require","styleTextSelection","module","exports","select","searchInfo","selectionTester","cd","xa","xaxis","ya","yaxis","selection","trace","stash","t","len","_length","x","y","scene","_scene","index","hasText","hasMarkers","hasOnlyLines","visible","els","unels","degenerate","i","contains","xpx","ypx","push","pointNumber","c2d","scatter2d","length","baseOpts","Array","count","markerOptions","update","apply","selectBatch","unselectBatch","unselOpts","markerUnselectedOptions"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scattergl/select.js"],"sourcesContent":["'use strict';\n\nvar subTypes = require('../scatter/subtypes');\nvar styleTextSelection = require('./edit_style').styleTextSelection;\n\nmodule.exports = function select(searchInfo, selectionTester) {\n    var cd = searchInfo.cd;\n    var xa = searchInfo.xaxis;\n    var ya = searchInfo.yaxis;\n    var selection = [];\n    var trace = cd[0].trace;\n    var stash = cd[0].t;\n    var len = trace._length;\n    var x = stash.x;\n    var y = stash.y;\n    var scene = stash._scene;\n    var index = stash.index;\n\n    if(!scene) return selection;\n\n    var hasText = subTypes.hasText(trace);\n    var hasMarkers = subTypes.hasMarkers(trace);\n    var hasOnlyLines = !hasMarkers && !hasText;\n\n    if(trace.visible !== true || hasOnlyLines) return selection;\n\n    var els = [];\n    var unels = [];\n\n    // degenerate polygon does not enable selection\n    // filter out points by visible scatter ones\n    if(selectionTester !== false && !selectionTester.degenerate) {\n        for(var i = 0; i < len; i++) {\n            if(selectionTester.contains([stash.xpx[i], stash.ypx[i]], false, i, searchInfo)) {\n                els.push(i);\n                selection.push({\n                    pointNumber: i,\n                    x: xa.c2d(x[i]),\n                    y: ya.c2d(y[i])\n                });\n            } else {\n                unels.push(i);\n            }\n        }\n    }\n\n    if(hasMarkers) {\n        var scatter2d = scene.scatter2d;\n\n        if(!els.length && !unels.length) {\n            // reset to base styles when clearing\n            var baseOpts = new Array(scene.count);\n            baseOpts[index] = scene.markerOptions[index];\n            scatter2d.update.apply(scatter2d, baseOpts);\n        } else if(!scene.selectBatch[index].length && !scene.unselectBatch[index].length) {\n            // set unselected styles on 'context' canvas (if not done already)\n            var unselOpts = new Array(scene.count);\n            unselOpts[index] = scene.markerUnselectedOptions[index];\n            scatter2d.update.apply(scatter2d, unselOpts);\n        }\n    }\n\n    scene.selectBatch[index] = els;\n    scene.unselectBatch[index] = unels;\n\n    if(hasText) {\n        styleTextSelection(cd);\n    }\n\n    return selection;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}