{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../drawing');\nvar Axes = require('../../plots/cartesian/axes');\nvar axisIds = require('../../plots/cartesian/axis_ids');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var imageDataAbove = [];\n  var imageDataSubplot = {};\n  var imageDataBelow = [];\n  var subplot;\n  var i;\n\n  // Sort into top, subplot, and bottom layers\n  for (i = 0; i < fullLayout.images.length; i++) {\n    var img = fullLayout.images[i];\n    if (img.visible) {\n      if (img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n        subplot = axisIds.ref2id(img.xref) + axisIds.ref2id(img.yref);\n        var plotinfo = fullLayout._plots[subplot];\n        if (!plotinfo) {\n          // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n          // This can happen if you reference the image to an x / y axis combination\n          // that doesn't have any data on it (and layer is below)\n          imageDataBelow.push(img);\n          continue;\n        }\n        if (plotinfo.mainplot) {\n          subplot = plotinfo.mainplot.id;\n        }\n        if (!imageDataSubplot[subplot]) {\n          imageDataSubplot[subplot] = [];\n        }\n        imageDataSubplot[subplot].push(img);\n      } else if (img.layer === 'above') {\n        imageDataAbove.push(img);\n      } else {\n        imageDataBelow.push(img);\n      }\n    }\n  }\n  var anchors = {\n    x: {\n      left: {\n        sizing: 'xMin',\n        offset: 0\n      },\n      center: {\n        sizing: 'xMid',\n        offset: -1 / 2\n      },\n      right: {\n        sizing: 'xMax',\n        offset: -1\n      }\n    },\n    y: {\n      top: {\n        sizing: 'YMin',\n        offset: 0\n      },\n      middle: {\n        sizing: 'YMid',\n        offset: -1 / 2\n      },\n      bottom: {\n        sizing: 'YMax',\n        offset: -1\n      }\n    }\n  };\n\n  // Images must be converted to dataURL's for exporting.\n  function setImage(d) {\n    var thisImage = d3.select(this);\n    if (this._imgSrc === d.source) {\n      return;\n    }\n    thisImage.attr('xmlns', xmlnsNamespaces.svg);\n    if (d.source && d.source.slice(0, 5) === 'data:') {\n      thisImage.attr('xlink:href', d.source);\n      this._imgSrc = d.source;\n    } else {\n      var imagePromise = new Promise(function (resolve) {\n        var img = new Image();\n        this.img = img;\n\n        // If not set, a `tainted canvas` error is thrown\n        img.setAttribute('crossOrigin', 'anonymous');\n        img.onerror = errorHandler;\n        img.onload = function () {\n          var canvas = document.createElement('canvas');\n          canvas.width = this.width;\n          canvas.height = this.height;\n          var ctx = canvas.getContext('2d', {\n            willReadFrequently: true\n          });\n          ctx.drawImage(this, 0, 0);\n          var dataURL = canvas.toDataURL('image/png');\n          thisImage.attr('xlink:href', dataURL);\n\n          // resolve promise in onload handler instead of on 'load' to support IE11\n          // see https://github.com/plotly/plotly.js/issues/1685\n          // for more details\n          resolve();\n        };\n        thisImage.on('error', errorHandler);\n        img.src = d.source;\n        this._imgSrc = d.source;\n        function errorHandler() {\n          thisImage.remove();\n          resolve();\n        }\n      }.bind(this));\n      gd._promises.push(imagePromise);\n    }\n  }\n  function applyAttributes(d) {\n    var thisImage = d3.select(this);\n\n    // Axes if specified\n    var xa = Axes.getFromId(gd, d.xref);\n    var ya = Axes.getFromId(gd, d.yref);\n    var xIsDomain = Axes.getRefType(d.xref) === 'domain';\n    var yIsDomain = Axes.getRefType(d.yref) === 'domain';\n    var size = fullLayout._size;\n    var width, height;\n    if (xa !== undefined) {\n      width = typeof d.xref === 'string' && xIsDomain ? xa._length * d.sizex : Math.abs(xa.l2p(d.sizex) - xa.l2p(0));\n    } else {\n      width = d.sizex * size.w;\n    }\n    if (ya !== undefined) {\n      height = typeof d.yref === 'string' && yIsDomain ? ya._length * d.sizey : Math.abs(ya.l2p(d.sizey) - ya.l2p(0));\n    } else {\n      height = d.sizey * size.h;\n    }\n\n    // Offsets for anchor positioning\n    var xOffset = width * anchors.x[d.xanchor].offset;\n    var yOffset = height * anchors.y[d.yanchor].offset;\n    var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing;\n\n    // Final positions\n    var xPos, yPos;\n    if (xa !== undefined) {\n      xPos = typeof d.xref === 'string' && xIsDomain ? xa._length * d.x + xa._offset : xa.r2p(d.x) + xa._offset;\n    } else {\n      xPos = d.x * size.w + size.l;\n    }\n    xPos += xOffset;\n    if (ya !== undefined) {\n      yPos = typeof d.yref === 'string' && yIsDomain ?\n      // consistent with \"paper\" yref value, where positive values\n      // move up the page\n      ya._length * (1 - d.y) + ya._offset : ya.r2p(d.y) + ya._offset;\n    } else {\n      yPos = size.h - d.y * size.h + size.t;\n    }\n    yPos += yOffset;\n\n    // Construct the proper aspectRatio attribute\n    switch (d.sizing) {\n      case 'fill':\n        sizing += ' slice';\n        break;\n      case 'stretch':\n        sizing = 'none';\n        break;\n    }\n    thisImage.attr({\n      x: xPos,\n      y: yPos,\n      width: width,\n      height: height,\n      preserveAspectRatio: sizing,\n      opacity: d.opacity\n    });\n\n    // Set proper clipping on images\n    var xId = xa && Axes.getRefType(d.xref) !== 'domain' ? xa._id : '';\n    var yId = ya && Axes.getRefType(d.yref) !== 'domain' ? ya._id : '';\n    var clipAxes = xId + yId;\n    Drawing.setClipUrl(thisImage, clipAxes ? 'clip' + fullLayout._uid + clipAxes : null, gd);\n  }\n  var imagesBelow = fullLayout._imageLowerLayer.selectAll('image').data(imageDataBelow);\n  var imagesAbove = fullLayout._imageUpperLayer.selectAll('image').data(imageDataAbove);\n  imagesBelow.enter().append('image');\n  imagesAbove.enter().append('image');\n  imagesBelow.exit().remove();\n  imagesAbove.exit().remove();\n  imagesBelow.each(function (d) {\n    setImage.bind(this)(d);\n    applyAttributes.bind(this)(d);\n  });\n  imagesAbove.each(function (d) {\n    setImage.bind(this)(d);\n    applyAttributes.bind(this)(d);\n  });\n  var allSubplots = Object.keys(fullLayout._plots);\n  for (i = 0; i < allSubplots.length; i++) {\n    subplot = allSubplots[i];\n    var subplotObj = fullLayout._plots[subplot];\n\n    // filter out overlaid plots (which have their images on the main plot)\n    // and gl2d plots (which don't support below images, at least not yet)\n    if (!subplotObj.imagelayer) continue;\n    var imagesOnSubplot = subplotObj.imagelayer.selectAll('image')\n    // even if there are no images on this subplot, we need to run\n    // enter and exit in case there were previously\n    .data(imageDataSubplot[subplot] || []);\n    imagesOnSubplot.enter().append('image');\n    imagesOnSubplot.exit().remove();\n    imagesOnSubplot.each(function (d) {\n      setImage.bind(this)(d);\n      applyAttributes.bind(this)(d);\n    });\n  }\n};","map":{"version":3,"names":["d3","require","Drawing","Axes","axisIds","xmlnsNamespaces","module","exports","draw","gd","fullLayout","_fullLayout","imageDataAbove","imageDataSubplot","imageDataBelow","subplot","i","images","length","img","visible","layer","xref","yref","ref2id","plotinfo","_plots","push","mainplot","id","anchors","x","left","sizing","offset","center","right","y","top","middle","bottom","setImage","d","thisImage","select","_imgSrc","source","attr","svg","slice","imagePromise","Promise","resolve","Image","setAttribute","onerror","errorHandler","onload","canvas","document","createElement","width","height","ctx","getContext","willReadFrequently","drawImage","dataURL","toDataURL","on","src","remove","bind","_promises","applyAttributes","xa","getFromId","ya","xIsDomain","getRefType","yIsDomain","size","_size","undefined","_length","sizex","Math","abs","l2p","w","sizey","h","xOffset","xanchor","yOffset","yanchor","xPos","yPos","_offset","r2p","l","t","preserveAspectRatio","opacity","xId","_id","yId","clipAxes","setClipUrl","_uid","imagesBelow","_imageLowerLayer","selectAll","data","imagesAbove","_imageUpperLayer","enter","append","exit","each","allSubplots","Object","keys","subplotObj","imagelayer","imagesOnSubplot"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/images/draw.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../drawing');\nvar Axes = require('../../plots/cartesian/axes');\nvar axisIds = require('../../plots/cartesian/axis_ids');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var imageDataAbove = [];\n    var imageDataSubplot = {};\n    var imageDataBelow = [];\n    var subplot;\n    var i;\n\n    // Sort into top, subplot, and bottom layers\n    for(i = 0; i < fullLayout.images.length; i++) {\n        var img = fullLayout.images[i];\n\n        if(img.visible) {\n            if(img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n                subplot = axisIds.ref2id(img.xref) + axisIds.ref2id(img.yref);\n\n                var plotinfo = fullLayout._plots[subplot];\n\n                if(!plotinfo) {\n                    // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n                    // This can happen if you reference the image to an x / y axis combination\n                    // that doesn't have any data on it (and layer is below)\n                    imageDataBelow.push(img);\n                    continue;\n                }\n\n                if(plotinfo.mainplot) {\n                    subplot = plotinfo.mainplot.id;\n                }\n\n                if(!imageDataSubplot[subplot]) {\n                    imageDataSubplot[subplot] = [];\n                }\n                imageDataSubplot[subplot].push(img);\n            } else if(img.layer === 'above') {\n                imageDataAbove.push(img);\n            } else {\n                imageDataBelow.push(img);\n            }\n        }\n    }\n\n\n    var anchors = {\n        x: {\n            left: { sizing: 'xMin', offset: 0 },\n            center: { sizing: 'xMid', offset: -1 / 2 },\n            right: { sizing: 'xMax', offset: -1 }\n        },\n        y: {\n            top: { sizing: 'YMin', offset: 0 },\n            middle: { sizing: 'YMid', offset: -1 / 2 },\n            bottom: { sizing: 'YMax', offset: -1 }\n        }\n    };\n\n\n    // Images must be converted to dataURL's for exporting.\n    function setImage(d) {\n        var thisImage = d3.select(this);\n\n        if(this._imgSrc === d.source) {\n            return;\n        }\n\n        thisImage.attr('xmlns', xmlnsNamespaces.svg);\n\n        if(d.source && d.source.slice(0, 5) === 'data:') {\n            thisImage.attr('xlink:href', d.source);\n            this._imgSrc = d.source;\n        } else {\n            var imagePromise = new Promise(function(resolve) {\n                var img = new Image();\n                this.img = img;\n\n                // If not set, a `tainted canvas` error is thrown\n                img.setAttribute('crossOrigin', 'anonymous');\n                img.onerror = errorHandler;\n                img.onload = function() {\n                    var canvas = document.createElement('canvas');\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n\n                    var ctx = canvas.getContext('2d', {willReadFrequently: true});\n                    ctx.drawImage(this, 0, 0);\n\n                    var dataURL = canvas.toDataURL('image/png');\n\n                    thisImage.attr('xlink:href', dataURL);\n\n                    // resolve promise in onload handler instead of on 'load' to support IE11\n                    // see https://github.com/plotly/plotly.js/issues/1685\n                    // for more details\n                    resolve();\n                };\n\n                thisImage.on('error', errorHandler);\n\n                img.src = d.source;\n                this._imgSrc = d.source;\n\n                function errorHandler() {\n                    thisImage.remove();\n                    resolve();\n                }\n            }.bind(this));\n\n            gd._promises.push(imagePromise);\n        }\n    }\n\n    function applyAttributes(d) {\n        var thisImage = d3.select(this);\n\n        // Axes if specified\n        var xa = Axes.getFromId(gd, d.xref);\n        var ya = Axes.getFromId(gd, d.yref);\n        var xIsDomain = Axes.getRefType(d.xref) === 'domain';\n        var yIsDomain = Axes.getRefType(d.yref) === 'domain';\n\n        var size = fullLayout._size;\n        var width, height;\n        if(xa !== undefined) {\n            width = ((typeof(d.xref) === 'string') && xIsDomain) ?\n                xa._length * d.sizex :\n                Math.abs(xa.l2p(d.sizex) - xa.l2p(0));\n        } else {\n            width = d.sizex * size.w;\n        }\n        if(ya !== undefined) {\n            height = ((typeof(d.yref) === 'string') && yIsDomain) ?\n                ya._length * d.sizey :\n                Math.abs(ya.l2p(d.sizey) - ya.l2p(0));\n        } else {\n            height = d.sizey * size.h;\n        }\n\n        // Offsets for anchor positioning\n        var xOffset = width * anchors.x[d.xanchor].offset;\n        var yOffset = height * anchors.y[d.yanchor].offset;\n\n        var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing;\n\n        // Final positions\n        var xPos, yPos;\n        if(xa !== undefined) {\n            xPos = ((typeof(d.xref) === 'string') && xIsDomain) ?\n                xa._length * d.x + xa._offset :\n                xa.r2p(d.x) + xa._offset;\n        } else {\n            xPos = d.x * size.w + size.l;\n        }\n        xPos += xOffset;\n        if(ya !== undefined) {\n            yPos = ((typeof(d.yref) === 'string') && yIsDomain) ?\n                // consistent with \"paper\" yref value, where positive values\n                // move up the page\n                ya._length * (1 - d.y) + ya._offset :\n                ya.r2p(d.y) + ya._offset;\n        } else {\n            yPos = size.h - d.y * size.h + size.t;\n        }\n        yPos += yOffset;\n\n        // Construct the proper aspectRatio attribute\n        switch(d.sizing) {\n            case 'fill':\n                sizing += ' slice';\n                break;\n\n            case 'stretch':\n                sizing = 'none';\n                break;\n        }\n\n        thisImage.attr({\n            x: xPos,\n            y: yPos,\n            width: width,\n            height: height,\n            preserveAspectRatio: sizing,\n            opacity: d.opacity\n        });\n\n\n        // Set proper clipping on images\n        var xId = xa && (Axes.getRefType(d.xref) !== 'domain') ? xa._id : '';\n        var yId = ya && (Axes.getRefType(d.yref) !== 'domain') ? ya._id : '';\n        var clipAxes = xId + yId;\n\n        Drawing.setClipUrl(\n            thisImage,\n            clipAxes ? ('clip' + fullLayout._uid + clipAxes) : null,\n            gd\n        );\n    }\n\n    var imagesBelow = fullLayout._imageLowerLayer.selectAll('image')\n        .data(imageDataBelow);\n    var imagesAbove = fullLayout._imageUpperLayer.selectAll('image')\n        .data(imageDataAbove);\n\n    imagesBelow.enter().append('image');\n    imagesAbove.enter().append('image');\n\n    imagesBelow.exit().remove();\n    imagesAbove.exit().remove();\n\n    imagesBelow.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n    imagesAbove.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n\n    var allSubplots = Object.keys(fullLayout._plots);\n    for(i = 0; i < allSubplots.length; i++) {\n        subplot = allSubplots[i];\n        var subplotObj = fullLayout._plots[subplot];\n\n        // filter out overlaid plots (which have their images on the main plot)\n        // and gl2d plots (which don't support below images, at least not yet)\n        if(!subplotObj.imagelayer) continue;\n\n        var imagesOnSubplot = subplotObj.imagelayer.selectAll('image')\n            // even if there are no images on this subplot, we need to run\n            // enter and exit in case there were previously\n            .data(imageDataSubplot[subplot] || []);\n\n        imagesOnSubplot.enter().append('image');\n        imagesOnSubplot.exit().remove();\n\n        imagesOnSubplot.each(function(d) {\n            setImage.bind(this)(d);\n            applyAttributes.bind(this)(d);\n        });\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}