{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar barPlot = require('../bar/plot');\nvar clearMinTextSize = require('../bar/uniform_text').clearMinTextSize;\nmodule.exports = function plot(gd, plotinfo, cdModule, traceLayer) {\n  var fullLayout = gd._fullLayout;\n  clearMinTextSize('waterfall', fullLayout);\n  barPlot.plot(gd, plotinfo, cdModule, traceLayer, {\n    mode: fullLayout.waterfallmode,\n    norm: fullLayout.waterfallmode,\n    gap: fullLayout.waterfallgap,\n    groupgap: fullLayout.waterfallgroupgap\n  });\n  plotConnectors(gd, plotinfo, cdModule, traceLayer);\n};\nfunction plotConnectors(gd, plotinfo, cdModule, traceLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  Lib.makeTraceGroups(traceLayer, cdModule, 'trace bars').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var trace = cd[0].trace;\n    var group = Lib.ensureSingle(plotGroup, 'g', 'lines');\n    if (!trace.connector || !trace.connector.visible) {\n      group.remove();\n      return;\n    }\n    var isHorizontal = trace.orientation === 'h';\n    var mode = trace.connector.mode;\n    var connectors = group.selectAll('g.line').data(Lib.identity);\n    connectors.enter().append('g').classed('line', true);\n    connectors.exit().remove();\n    var len = connectors.size();\n    connectors.each(function (di, i) {\n      // don't draw lines between nulls\n      if (i !== len - 1 && !di.cNext) return;\n      var xy = getXY(di, xa, ya, isHorizontal);\n      var x = xy[0];\n      var y = xy[1];\n      var shape = '';\n      if (x[0] !== BADNUM && y[0] !== BADNUM && x[1] !== BADNUM && y[1] !== BADNUM) {\n        if (mode === 'spanning') {\n          if (!di.isSum && i > 0) {\n            if (isHorizontal) {\n              shape += 'M' + x[0] + ',' + y[1] + 'V' + y[0];\n            } else {\n              shape += 'M' + x[1] + ',' + y[0] + 'H' + x[0];\n            }\n          }\n        }\n        if (mode !== 'between') {\n          if (di.isSum || i < len - 1) {\n            if (isHorizontal) {\n              shape += 'M' + x[1] + ',' + y[0] + 'V' + y[1];\n            } else {\n              shape += 'M' + x[0] + ',' + y[1] + 'H' + x[1];\n            }\n          }\n        }\n        if (x[2] !== BADNUM && y[2] !== BADNUM) {\n          if (isHorizontal) {\n            shape += 'M' + x[1] + ',' + y[1] + 'V' + y[2];\n          } else {\n            shape += 'M' + x[1] + ',' + y[1] + 'H' + x[2];\n          }\n        }\n      }\n      if (shape === '') shape = 'M0,0Z';\n      Lib.ensureSingle(d3.select(this), 'path').attr('d', shape).call(Drawing.setClipUrl, plotinfo.layerClipId, gd);\n    });\n  });\n}\nfunction getXY(di, xa, ya, isHorizontal) {\n  var s = [];\n  var p = [];\n  var sAxis = isHorizontal ? xa : ya;\n  var pAxis = isHorizontal ? ya : xa;\n  s[0] = sAxis.c2p(di.s0, true);\n  p[0] = pAxis.c2p(di.p0, true);\n  s[1] = sAxis.c2p(di.s1, true);\n  p[1] = pAxis.c2p(di.p1, true);\n  s[2] = sAxis.c2p(di.nextS0, true);\n  p[2] = pAxis.c2p(di.nextP0, true);\n  return isHorizontal ? [s, p] : [p, s];\n}","map":{"version":3,"names":["d3","require","Lib","Drawing","BADNUM","barPlot","clearMinTextSize","module","exports","plot","gd","plotinfo","cdModule","traceLayer","fullLayout","_fullLayout","mode","waterfallmode","norm","gap","waterfallgap","groupgap","waterfallgroupgap","plotConnectors","xa","xaxis","ya","yaxis","makeTraceGroups","each","cd","plotGroup","select","trace","group","ensureSingle","connector","visible","remove","isHorizontal","orientation","connectors","selectAll","data","identity","enter","append","classed","exit","len","size","di","i","cNext","xy","getXY","x","y","shape","isSum","attr","call","setClipUrl","layerClipId","s","p","sAxis","pAxis","c2p","s0","p0","s1","p1","nextS0","nextP0"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/waterfall/plot.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar barPlot = require('../bar/plot');\nvar clearMinTextSize = require('../bar/uniform_text').clearMinTextSize;\n\nmodule.exports = function plot(gd, plotinfo, cdModule, traceLayer) {\n    var fullLayout = gd._fullLayout;\n\n    clearMinTextSize('waterfall', fullLayout);\n\n    barPlot.plot(gd, plotinfo, cdModule, traceLayer, {\n        mode: fullLayout.waterfallmode,\n        norm: fullLayout.waterfallmode,\n        gap: fullLayout.waterfallgap,\n        groupgap: fullLayout.waterfallgroupgap\n    });\n\n    plotConnectors(gd, plotinfo, cdModule, traceLayer);\n};\n\nfunction plotConnectors(gd, plotinfo, cdModule, traceLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    Lib.makeTraceGroups(traceLayer, cdModule, 'trace bars').each(function(cd) {\n        var plotGroup = d3.select(this);\n        var trace = cd[0].trace;\n\n        var group = Lib.ensureSingle(plotGroup, 'g', 'lines');\n\n        if(!trace.connector || !trace.connector.visible) {\n            group.remove();\n            return;\n        }\n\n        var isHorizontal = (trace.orientation === 'h');\n        var mode = trace.connector.mode;\n\n        var connectors = group.selectAll('g.line').data(Lib.identity);\n\n        connectors.enter().append('g')\n            .classed('line', true);\n\n        connectors.exit().remove();\n\n        var len = connectors.size();\n\n        connectors.each(function(di, i) {\n            // don't draw lines between nulls\n            if(i !== len - 1 && !di.cNext) return;\n\n            var xy = getXY(di, xa, ya, isHorizontal);\n            var x = xy[0];\n            var y = xy[1];\n\n            var shape = '';\n\n            if(\n                x[0] !== BADNUM && y[0] !== BADNUM &&\n                x[1] !== BADNUM && y[1] !== BADNUM\n            ) {\n                if(mode === 'spanning') {\n                    if(!di.isSum && i > 0) {\n                        if(isHorizontal) {\n                            shape += 'M' + x[0] + ',' + y[1] + 'V' + y[0];\n                        } else {\n                            shape += 'M' + x[1] + ',' + y[0] + 'H' + x[0];\n                        }\n                    }\n                }\n\n                if(mode !== 'between') {\n                    if(di.isSum || i < len - 1) {\n                        if(isHorizontal) {\n                            shape += 'M' + x[1] + ',' + y[0] + 'V' + y[1];\n                        } else {\n                            shape += 'M' + x[0] + ',' + y[1] + 'H' + x[1];\n                        }\n                    }\n                }\n\n                if(x[2] !== BADNUM && y[2] !== BADNUM) {\n                    if(isHorizontal) {\n                        shape += 'M' + x[1] + ',' + y[1] + 'V' + y[2];\n                    } else {\n                        shape += 'M' + x[1] + ',' + y[1] + 'H' + x[2];\n                    }\n                }\n            }\n\n            if(shape === '') shape = 'M0,0Z';\n\n            Lib.ensureSingle(d3.select(this), 'path')\n                .attr('d', shape)\n                .call(Drawing.setClipUrl, plotinfo.layerClipId, gd);\n        });\n    });\n}\n\nfunction getXY(di, xa, ya, isHorizontal) {\n    var s = [];\n    var p = [];\n\n    var sAxis = isHorizontal ? xa : ya;\n    var pAxis = isHorizontal ? ya : xa;\n\n    s[0] = sAxis.c2p(di.s0, true);\n    p[0] = pAxis.c2p(di.p0, true);\n\n    s[1] = sAxis.c2p(di.s1, true);\n    p[1] = pAxis.c2p(di.p1, true);\n\n    s[2] = sAxis.c2p(di.nextS0, true);\n    p[2] = pAxis.c2p(di.nextP0, true);\n\n    return isHorizontal ? [s, p] : [p, s];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}