{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar _ = require('../../lib')._;\nmodule.exports = function calc(gd, trace) {\n  var len = trace._length;\n  var calcTrace = new Array(len);\n  var z = trace.z;\n  var hasZ = isArrayOrTypedArray(z) && z.length;\n  for (var i = 0; i < len; i++) {\n    var cdi = calcTrace[i] = {};\n    var lon = trace.lon[i];\n    var lat = trace.lat[i];\n    cdi.lonlat = isNumeric(lon) && isNumeric(lat) ? [+lon, +lat] : [BADNUM, BADNUM];\n    if (hasZ) {\n      var zi = z[i];\n      cdi.z = isNumeric(zi) ? zi : BADNUM;\n    }\n  }\n  colorscaleCalc(gd, trace, {\n    vals: hasZ ? z : [0, 1],\n    containerStr: '',\n    cLetter: 'z'\n  });\n  if (len) {\n    calcTrace[0].t = {\n      labels: {\n        lat: _(gd, 'lat:') + ' ',\n        lon: _(gd, 'lon:') + ' '\n      }\n    };\n  }\n  return calcTrace;\n};","map":{"version":3,"names":["isNumeric","require","isArrayOrTypedArray","BADNUM","colorscaleCalc","_","module","exports","calc","gd","trace","len","_length","calcTrace","Array","z","hasZ","length","i","cdi","lon","lat","lonlat","zi","vals","containerStr","cLetter","t","labels"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/densitymapbox/calc.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar _ = require('../../lib')._;\n\nmodule.exports = function calc(gd, trace) {\n    var len = trace._length;\n    var calcTrace = new Array(len);\n    var z = trace.z;\n    var hasZ = isArrayOrTypedArray(z) && z.length;\n\n    for(var i = 0; i < len; i++) {\n        var cdi = calcTrace[i] = {};\n\n        var lon = trace.lon[i];\n        var lat = trace.lat[i];\n\n        cdi.lonlat = isNumeric(lon) && isNumeric(lat) ?\n            [+lon, +lat] :\n            [BADNUM, BADNUM];\n\n        if(hasZ) {\n            var zi = z[i];\n            cdi.z = isNumeric(zi) ? zi : BADNUM;\n        }\n    }\n\n    colorscaleCalc(gd, trace, {\n        vals: hasZ ? z : [0, 1],\n        containerStr: '',\n        cLetter: 'z'\n    });\n\n    if(len) {\n        calcTrace[0].t = {\n            labels: {\n                lat: _(gd, 'lat:') + ' ',\n                lon: _(gd, 'lon:') + ' '\n            }\n        };\n    }\n\n    return calcTrace;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEzC,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,mBAAmB;AAClE,IAAIC,MAAM,GAAGF,OAAO,CAAC,2BAA2B,CAAC,CAACE,MAAM;AAExD,IAAIC,cAAc,GAAGH,OAAO,CAAC,kCAAkC,CAAC;AAChE,IAAII,CAAC,GAAGJ,OAAO,CAAC,WAAW,CAAC,CAACI,CAAC;AAE9BC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,GAAG,GAAGD,KAAK,CAACE,OAAO;EACvB,IAAIC,SAAS,GAAG,IAAIC,KAAK,CAACH,GAAG,CAAC;EAC9B,IAAII,CAAC,GAAGL,KAAK,CAACK,CAAC;EACf,IAAIC,IAAI,GAAGd,mBAAmB,CAACa,CAAC,CAAC,IAAIA,CAAC,CAACE,MAAM;EAE7C,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,GAAG,EAAEO,CAAC,EAAE,EAAE;IACzB,IAAIC,GAAG,GAAGN,SAAS,CAACK,CAAC,CAAC,GAAG,CAAC,CAAC;IAE3B,IAAIE,GAAG,GAAGV,KAAK,CAACU,GAAG,CAACF,CAAC,CAAC;IACtB,IAAIG,GAAG,GAAGX,KAAK,CAACW,GAAG,CAACH,CAAC,CAAC;IAEtBC,GAAG,CAACG,MAAM,GAAGtB,SAAS,CAACoB,GAAG,CAAC,IAAIpB,SAAS,CAACqB,GAAG,CAAC,GACzC,CAAC,CAACD,GAAG,EAAE,CAACC,GAAG,CAAC,GACZ,CAAClB,MAAM,EAAEA,MAAM,CAAC;IAEpB,IAAGa,IAAI,EAAE;MACL,IAAIO,EAAE,GAAGR,CAAC,CAACG,CAAC,CAAC;MACbC,GAAG,CAACJ,CAAC,GAAGf,SAAS,CAACuB,EAAE,CAAC,GAAGA,EAAE,GAAGpB,MAAM;IACvC;EACJ;EAEAC,cAAc,CAACK,EAAE,EAAEC,KAAK,EAAE;IACtBc,IAAI,EAAER,IAAI,GAAGD,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACvBU,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,IAAGf,GAAG,EAAE;IACJE,SAAS,CAAC,CAAC,CAAC,CAACc,CAAC,GAAG;MACbC,MAAM,EAAE;QACJP,GAAG,EAAEhB,CAAC,CAACI,EAAE,EAAE,MAAM,CAAC,GAAG,GAAG;QACxBW,GAAG,EAAEf,CAAC,CAACI,EAAE,EAAE,MAAM,CAAC,GAAG;MACzB;IACJ,CAAC;EACL;EAEA,OAAOI,SAAS;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}