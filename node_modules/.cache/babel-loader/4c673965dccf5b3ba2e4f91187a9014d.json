{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar Colorscale = require('../../components/colorscale');\nvar Drawing = require('../../components/drawing');\nvar makeBlank = require('../../lib/geojson_utils').makeBlank;\nvar geoUtils = require('../../lib/geo_location_utils');\n\n/* N.B.\n *\n * We fetch the GeoJSON files \"ourselves\" (during\n * map.prototype.fetchMapData) where they are stored in a global object\n * named `PlotlyGeoAssets` (same as for topojson files in `geo` subplots).\n *\n * Map does allow using URLs as geojson sources, but does NOT allow filtering\n * features by feature `id` that are not numbers (more info in:\n * https://github.com/mapbox/mapbox-gl-js/issues/8088).\n */\n\nfunction convert(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var isVisible = trace.visible === true && trace._length !== 0;\n  var fill = {\n    layout: {\n      visibility: 'none'\n    },\n    paint: {}\n  };\n  var line = {\n    layout: {\n      visibility: 'none'\n    },\n    paint: {}\n  };\n  var opts = trace._opts = {\n    fill: fill,\n    line: line,\n    geojson: makeBlank()\n  };\n  if (!isVisible) return opts;\n  var features = geoUtils.extractTraceFeature(calcTrace);\n  if (!features) return opts;\n  var sclFunc = Colorscale.makeColorScaleFuncFromTrace(trace);\n  var marker = trace.marker;\n  var markerLine = marker.line || {};\n  var opacityFn;\n  if (Lib.isArrayOrTypedArray(marker.opacity)) {\n    opacityFn = function (d) {\n      var mo = d.mo;\n      return isNumeric(mo) ? +Lib.constrain(mo, 0, 1) : 0;\n    };\n  }\n  var lineColorFn;\n  if (Lib.isArrayOrTypedArray(markerLine.color)) {\n    lineColorFn = function (d) {\n      return d.mlc;\n    };\n  }\n  var lineWidthFn;\n  if (Lib.isArrayOrTypedArray(markerLine.width)) {\n    lineWidthFn = function (d) {\n      return d.mlw;\n    };\n  }\n  for (var i = 0; i < calcTrace.length; i++) {\n    var cdi = calcTrace[i];\n    var fOut = cdi.fOut;\n    if (fOut) {\n      var props = fOut.properties;\n      props.fc = sclFunc(cdi.z);\n      if (opacityFn) props.mo = opacityFn(cdi);\n      if (lineColorFn) props.mlc = lineColorFn(cdi);\n      if (lineWidthFn) props.mlw = lineWidthFn(cdi);\n      cdi.ct = props.ct;\n      cdi._polygons = geoUtils.feature2polygons(fOut);\n    }\n  }\n  var opacitySetting = opacityFn ? {\n    type: 'identity',\n    property: 'mo'\n  } : marker.opacity;\n  Lib.extendFlat(fill.paint, {\n    'fill-color': {\n      type: 'identity',\n      property: 'fc'\n    },\n    'fill-opacity': opacitySetting\n  });\n  Lib.extendFlat(line.paint, {\n    'line-color': lineColorFn ? {\n      type: 'identity',\n      property: 'mlc'\n    } : markerLine.color,\n    'line-width': lineWidthFn ? {\n      type: 'identity',\n      property: 'mlw'\n    } : markerLine.width,\n    'line-opacity': opacitySetting\n  });\n  fill.layout.visibility = 'visible';\n  line.layout.visibility = 'visible';\n  opts.geojson = {\n    type: 'FeatureCollection',\n    features: features\n  };\n  convertOnSelect(calcTrace);\n  return opts;\n}\nfunction convertOnSelect(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var opts = trace._opts;\n  var opacitySetting;\n  if (trace.selectedpoints) {\n    var fns = Drawing.makeSelectedPointStyleFns(trace);\n    for (var i = 0; i < calcTrace.length; i++) {\n      var cdi = calcTrace[i];\n      if (cdi.fOut) {\n        cdi.fOut.properties.mo2 = fns.selectedOpacityFn(cdi);\n      }\n    }\n    opacitySetting = {\n      type: 'identity',\n      property: 'mo2'\n    };\n  } else {\n    opacitySetting = Lib.isArrayOrTypedArray(trace.marker.opacity) ? {\n      type: 'identity',\n      property: 'mo'\n    } : trace.marker.opacity;\n  }\n  Lib.extendFlat(opts.fill.paint, {\n    'fill-opacity': opacitySetting\n  });\n  Lib.extendFlat(opts.line.paint, {\n    'line-opacity': opacitySetting\n  });\n  return opts;\n}\nmodule.exports = {\n  convert: convert,\n  convertOnSelect: convertOnSelect\n};","map":{"version":3,"names":["isNumeric","require","Lib","Colorscale","Drawing","makeBlank","geoUtils","convert","calcTrace","trace","isVisible","visible","_length","fill","layout","visibility","paint","line","opts","_opts","geojson","features","extractTraceFeature","sclFunc","makeColorScaleFuncFromTrace","marker","markerLine","opacityFn","isArrayOrTypedArray","opacity","d","mo","constrain","lineColorFn","color","mlc","lineWidthFn","width","mlw","i","length","cdi","fOut","props","properties","fc","z","ct","_polygons","feature2polygons","opacitySetting","type","property","extendFlat","convertOnSelect","selectedpoints","fns","makeSelectedPointStyleFns","mo2","selectedOpacityFn","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/choroplethmap/convert.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar Colorscale = require('../../components/colorscale');\nvar Drawing = require('../../components/drawing');\n\nvar makeBlank = require('../../lib/geojson_utils').makeBlank;\nvar geoUtils = require('../../lib/geo_location_utils');\n\n/* N.B.\n *\n * We fetch the GeoJSON files \"ourselves\" (during\n * map.prototype.fetchMapData) where they are stored in a global object\n * named `PlotlyGeoAssets` (same as for topojson files in `geo` subplots).\n *\n * Map does allow using URLs as geojson sources, but does NOT allow filtering\n * features by feature `id` that are not numbers (more info in:\n * https://github.com/mapbox/mapbox-gl-js/issues/8088).\n */\n\nfunction convert(calcTrace) {\n    var trace = calcTrace[0].trace;\n    var isVisible = trace.visible === true && trace._length !== 0;\n\n    var fill = {\n        layout: {visibility: 'none'},\n        paint: {}\n    };\n\n    var line = {\n        layout: {visibility: 'none'},\n        paint: {}\n    };\n\n    var opts = trace._opts = {\n        fill: fill,\n        line: line,\n        geojson: makeBlank()\n    };\n\n    if(!isVisible) return opts;\n\n    var features = geoUtils.extractTraceFeature(calcTrace);\n\n    if(!features) return opts;\n\n    var sclFunc = Colorscale.makeColorScaleFuncFromTrace(trace);\n    var marker = trace.marker;\n    var markerLine = marker.line || {};\n\n    var opacityFn;\n    if(Lib.isArrayOrTypedArray(marker.opacity)) {\n        opacityFn = function(d) {\n            var mo = d.mo;\n            return isNumeric(mo) ? +Lib.constrain(mo, 0, 1) : 0;\n        };\n    }\n\n    var lineColorFn;\n    if(Lib.isArrayOrTypedArray(markerLine.color)) {\n        lineColorFn = function(d) { return d.mlc; };\n    }\n\n    var lineWidthFn;\n    if(Lib.isArrayOrTypedArray(markerLine.width)) {\n        lineWidthFn = function(d) { return d.mlw; };\n    }\n\n    for(var i = 0; i < calcTrace.length; i++) {\n        var cdi = calcTrace[i];\n        var fOut = cdi.fOut;\n\n        if(fOut) {\n            var props = fOut.properties;\n            props.fc = sclFunc(cdi.z);\n            if(opacityFn) props.mo = opacityFn(cdi);\n            if(lineColorFn) props.mlc = lineColorFn(cdi);\n            if(lineWidthFn) props.mlw = lineWidthFn(cdi);\n            cdi.ct = props.ct;\n            cdi._polygons = geoUtils.feature2polygons(fOut);\n        }\n    }\n\n    var opacitySetting = opacityFn ?\n        {type: 'identity', property: 'mo'} :\n        marker.opacity;\n\n    Lib.extendFlat(fill.paint, {\n        'fill-color': {type: 'identity', property: 'fc'},\n        'fill-opacity': opacitySetting\n    });\n\n    Lib.extendFlat(line.paint, {\n        'line-color': lineColorFn ?\n            {type: 'identity', property: 'mlc'} :\n            markerLine.color,\n        'line-width': lineWidthFn ?\n            {type: 'identity', property: 'mlw'} :\n            markerLine.width,\n        'line-opacity': opacitySetting\n    });\n\n    fill.layout.visibility = 'visible';\n    line.layout.visibility = 'visible';\n\n    opts.geojson = {type: 'FeatureCollection', features: features};\n\n    convertOnSelect(calcTrace);\n\n    return opts;\n}\n\nfunction convertOnSelect(calcTrace) {\n    var trace = calcTrace[0].trace;\n    var opts = trace._opts;\n    var opacitySetting;\n\n    if(trace.selectedpoints) {\n        var fns = Drawing.makeSelectedPointStyleFns(trace);\n\n        for(var i = 0; i < calcTrace.length; i++) {\n            var cdi = calcTrace[i];\n            if(cdi.fOut) {\n                cdi.fOut.properties.mo2 = fns.selectedOpacityFn(cdi);\n            }\n        }\n\n        opacitySetting = {type: 'identity', property: 'mo2'};\n    } else {\n        opacitySetting = Lib.isArrayOrTypedArray(trace.marker.opacity) ?\n            {type: 'identity', property: 'mo'} :\n            trace.marker.opacity;\n    }\n\n    Lib.extendFlat(opts.fill.paint, {'fill-opacity': opacitySetting});\n    Lib.extendFlat(opts.line.paint, {'line-opacity': opacitySetting});\n\n    return opts;\n}\n\nmodule.exports = {\n    convert: convert,\n    convertOnSelect: convertOnSelect\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}