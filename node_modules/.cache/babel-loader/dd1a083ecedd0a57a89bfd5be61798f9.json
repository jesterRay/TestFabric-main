{"ast":null,"code":"'use strict';\n\nvar appendArrayMultiPointValues = require('../../components/fx/helpers').appendArrayMultiPointValues;\n\n// Note: like other eventData routines, this creates the data for hover/unhover/click events\n// but it has a different API and goes through a totally different pathway.\n// So to ensure it doesn't get misused, it's not attached to the Pie module.\nmodule.exports = function eventData(pt, trace) {\n  var out = {\n    curveNumber: trace.index,\n    pointNumbers: pt.pts,\n    data: trace._input,\n    fullData: trace,\n    label: pt.label,\n    color: pt.color,\n    value: pt.v,\n    percent: pt.percent,\n    text: pt.text,\n    bbox: pt.bbox,\n    // pt.v (and pt.i below) for backward compatibility\n    v: pt.v\n  };\n\n  // Only include pointNumber if it's unambiguous\n  if (pt.pts.length === 1) out.pointNumber = out.i = pt.pts[0];\n\n  // Add extra data arrays to the output\n  // notice that this is the multi-point version ('s' on the end!)\n  // so added data will be arrays matching the pointNumbers array.\n  appendArrayMultiPointValues(out, trace, pt.pts);\n\n  // don't include obsolete fields in new funnelarea traces\n  if (trace.type === 'funnelarea') {\n    delete out.v;\n    delete out.i;\n  }\n  return out;\n};","map":{"version":3,"names":["appendArrayMultiPointValues","require","module","exports","eventData","pt","trace","out","curveNumber","index","pointNumbers","pts","data","_input","fullData","label","color","value","v","percent","text","bbox","length","pointNumber","i","type"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/pie/event_data.js"],"sourcesContent":["'use strict';\n\nvar appendArrayMultiPointValues = require('../../components/fx/helpers').appendArrayMultiPointValues;\n\n// Note: like other eventData routines, this creates the data for hover/unhover/click events\n// but it has a different API and goes through a totally different pathway.\n// So to ensure it doesn't get misused, it's not attached to the Pie module.\nmodule.exports = function eventData(pt, trace) {\n    var out = {\n        curveNumber: trace.index,\n        pointNumbers: pt.pts,\n        data: trace._input,\n        fullData: trace,\n        label: pt.label,\n        color: pt.color,\n        value: pt.v,\n        percent: pt.percent,\n        text: pt.text,\n        bbox: pt.bbox,\n\n        // pt.v (and pt.i below) for backward compatibility\n        v: pt.v\n    };\n\n    // Only include pointNumber if it's unambiguous\n    if(pt.pts.length === 1) out.pointNumber = out.i = pt.pts[0];\n\n    // Add extra data arrays to the output\n    // notice that this is the multi-point version ('s' on the end!)\n    // so added data will be arrays matching the pointNumbers array.\n    appendArrayMultiPointValues(out, trace, pt.pts);\n\n    // don't include obsolete fields in new funnelarea traces\n    if(trace.type === 'funnelarea') {\n        delete out.v;\n        delete out.i;\n    }\n\n    return out;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,2BAA2B,GAAGC,OAAO,CAAC,6BAA6B,CAAC,CAACD,2BAA2B;;AAEpG;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,SAASA,CAACC,EAAE,EAAEC,KAAK,EAAE;EAC3C,IAAIC,GAAG,GAAG;IACNC,WAAW,EAAEF,KAAK,CAACG,KAAK;IACxBC,YAAY,EAAEL,EAAE,CAACM,GAAG;IACpBC,IAAI,EAAEN,KAAK,CAACO,MAAM;IAClBC,QAAQ,EAAER,KAAK;IACfS,KAAK,EAAEV,EAAE,CAACU,KAAK;IACfC,KAAK,EAAEX,EAAE,CAACW,KAAK;IACfC,KAAK,EAAEZ,EAAE,CAACa,CAAC;IACXC,OAAO,EAAEd,EAAE,CAACc,OAAO;IACnBC,IAAI,EAAEf,EAAE,CAACe,IAAI;IACbC,IAAI,EAAEhB,EAAE,CAACgB,IAAI;IAEb;IACAH,CAAC,EAAEb,EAAE,CAACa;EACV,CAAC;;EAED;EACA,IAAGb,EAAE,CAACM,GAAG,CAACW,MAAM,KAAK,CAAC,EAAEf,GAAG,CAACgB,WAAW,GAAGhB,GAAG,CAACiB,CAAC,GAAGnB,EAAE,CAACM,GAAG,CAAC,CAAC,CAAC;;EAE3D;EACA;EACA;EACAX,2BAA2B,CAACO,GAAG,EAAED,KAAK,EAAED,EAAE,CAACM,GAAG,CAAC;;EAE/C;EACA,IAAGL,KAAK,CAACmB,IAAI,KAAK,YAAY,EAAE;IAC5B,OAAOlB,GAAG,CAACW,CAAC;IACZ,OAAOX,GAAG,CAACiB,CAAC;EAChB;EAEA,OAAOjB,GAAG;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}