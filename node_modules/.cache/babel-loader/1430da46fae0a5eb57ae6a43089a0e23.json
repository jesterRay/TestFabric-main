{"ast":null,"code":"'use strict';\n\nvar getAxisGroup = require('../../plots/cartesian/constraints').getAxisGroup;\nmodule.exports = function handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce) {\n  var orientation = traceOut.orientation;\n  // N.B. grouping is done across all trace types that support it\n  var posAxId = traceOut[{\n    v: 'x',\n    h: 'y'\n  }[orientation] + 'axis'];\n  var groupId = getAxisGroup(fullLayout, posAxId) + orientation;\n  var alignmentOpts = fullLayout._alignmentOpts || {};\n  var alignmentgroup = coerce('alignmentgroup');\n  var alignmentGroups = alignmentOpts[groupId];\n  if (!alignmentGroups) alignmentGroups = alignmentOpts[groupId] = {};\n  var alignmentGroupOpts = alignmentGroups[alignmentgroup];\n  if (alignmentGroupOpts) {\n    alignmentGroupOpts.traces.push(traceOut);\n  } else {\n    alignmentGroupOpts = alignmentGroups[alignmentgroup] = {\n      traces: [traceOut],\n      alignmentIndex: Object.keys(alignmentGroups).length,\n      offsetGroups: {}\n    };\n  }\n  var offsetgroup = coerce('offsetgroup');\n  var offsetGroups = alignmentGroupOpts.offsetGroups;\n  var offsetGroupOpts = offsetGroups[offsetgroup];\n  if (offsetgroup) {\n    if (!offsetGroupOpts) {\n      offsetGroupOpts = offsetGroups[offsetgroup] = {\n        offsetIndex: Object.keys(offsetGroups).length\n      };\n    }\n    traceOut._offsetIndex = offsetGroupOpts.offsetIndex;\n  }\n};","map":{"version":3,"names":["getAxisGroup","require","module","exports","handleGroupingDefaults","traceIn","traceOut","fullLayout","coerce","orientation","posAxId","v","h","groupId","alignmentOpts","_alignmentOpts","alignmentgroup","alignmentGroups","alignmentGroupOpts","traces","push","alignmentIndex","Object","keys","length","offsetGroups","offsetgroup","offsetGroupOpts","offsetIndex","_offsetIndex"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scatter/grouping_defaults.js"],"sourcesContent":["'use strict';\n\nvar getAxisGroup = require('../../plots/cartesian/constraints').getAxisGroup;\n\nmodule.exports = function handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce) {\n    var orientation = traceOut.orientation;\n    // N.B. grouping is done across all trace types that support it\n    var posAxId = traceOut[{v: 'x', h: 'y'}[orientation] + 'axis'];\n    var groupId = getAxisGroup(fullLayout, posAxId) + orientation;\n\n    var alignmentOpts = fullLayout._alignmentOpts || {};\n    var alignmentgroup = coerce('alignmentgroup');\n\n    var alignmentGroups = alignmentOpts[groupId];\n    if(!alignmentGroups) alignmentGroups = alignmentOpts[groupId] = {};\n\n    var alignmentGroupOpts = alignmentGroups[alignmentgroup];\n\n    if(alignmentGroupOpts) {\n        alignmentGroupOpts.traces.push(traceOut);\n    } else {\n        alignmentGroupOpts = alignmentGroups[alignmentgroup] = {\n            traces: [traceOut],\n            alignmentIndex: Object.keys(alignmentGroups).length,\n            offsetGroups: {}\n        };\n    }\n\n    var offsetgroup = coerce('offsetgroup');\n    var offsetGroups = alignmentGroupOpts.offsetGroups;\n    var offsetGroupOpts = offsetGroups[offsetgroup];\n\n    if(offsetgroup) {\n        if(!offsetGroupOpts) {\n            offsetGroupOpts = offsetGroups[offsetgroup] = {\n                offsetIndex: Object.keys(offsetGroups).length\n            };\n        }\n\n        traceOut._offsetIndex = offsetGroupOpts.offsetIndex;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,mCAAmC,CAAC,CAACD,YAAY;AAE5EE,MAAM,CAACC,OAAO,GAAG,SAASC,sBAAsBA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,EAAE;EACpF,IAAIC,WAAW,GAAGH,QAAQ,CAACG,WAAW;EACtC;EACA,IAAIC,OAAO,GAAGJ,QAAQ,CAAC;IAACK,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC,CAACH,WAAW,CAAC,GAAG,MAAM,CAAC;EAC9D,IAAII,OAAO,GAAGb,YAAY,CAACO,UAAU,EAAEG,OAAO,CAAC,GAAGD,WAAW;EAE7D,IAAIK,aAAa,GAAGP,UAAU,CAACQ,cAAc,IAAI,CAAC,CAAC;EACnD,IAAIC,cAAc,GAAGR,MAAM,CAAC,gBAAgB,CAAC;EAE7C,IAAIS,eAAe,GAAGH,aAAa,CAACD,OAAO,CAAC;EAC5C,IAAG,CAACI,eAAe,EAAEA,eAAe,GAAGH,aAAa,CAACD,OAAO,CAAC,GAAG,CAAC,CAAC;EAElE,IAAIK,kBAAkB,GAAGD,eAAe,CAACD,cAAc,CAAC;EAExD,IAAGE,kBAAkB,EAAE;IACnBA,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACd,QAAQ,CAAC;EAC5C,CAAC,MAAM;IACHY,kBAAkB,GAAGD,eAAe,CAACD,cAAc,CAAC,GAAG;MACnDG,MAAM,EAAE,CAACb,QAAQ,CAAC;MAClBe,cAAc,EAAEC,MAAM,CAACC,IAAI,CAACN,eAAe,CAAC,CAACO,MAAM;MACnDC,YAAY,EAAE,CAAC;IACnB,CAAC;EACL;EAEA,IAAIC,WAAW,GAAGlB,MAAM,CAAC,aAAa,CAAC;EACvC,IAAIiB,YAAY,GAAGP,kBAAkB,CAACO,YAAY;EAClD,IAAIE,eAAe,GAAGF,YAAY,CAACC,WAAW,CAAC;EAE/C,IAAGA,WAAW,EAAE;IACZ,IAAG,CAACC,eAAe,EAAE;MACjBA,eAAe,GAAGF,YAAY,CAACC,WAAW,CAAC,GAAG;QAC1CE,WAAW,EAAEN,MAAM,CAACC,IAAI,CAACE,YAAY,CAAC,CAACD;MAC3C,CAAC;IACL;IAEAlB,QAAQ,CAACuB,YAAY,GAAGF,eAAe,CAACC,WAAW;EACvD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}