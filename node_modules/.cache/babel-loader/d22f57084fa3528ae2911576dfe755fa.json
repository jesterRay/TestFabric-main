{"ast":null,"code":"'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar axisAttrs = require('./axis_attributes');\nvar colorAttrs = require('../../components/color/attributes');\nvar carpetFont = fontAttrs({\n  editType: 'calc',\n  description: 'The default font used for axis & tick labels on this carpet'\n});\nvar zorder = require('../scatter/attributes').zorder;\n\n// TODO: inherit from global font\ncarpetFont.family.dflt = '\"Open Sans\", verdana, arial, sans-serif';\ncarpetFont.size.dflt = 12;\ncarpetFont.color.dflt = colorAttrs.defaultLine;\nmodule.exports = {\n  carpet: {\n    valType: 'string',\n    editType: 'calc',\n    description: ['An identifier for this carpet, so that `scattercarpet` and', '`contourcarpet` traces can specify a carpet plot on which', 'they lie'].join(' ')\n  },\n  x: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: ['A two dimensional array of x coordinates at each carpet point.', 'If omitted, the plot is a cheater plot and the xaxis is hidden', 'by default.'].join(' ')\n  },\n  y: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: 'A two dimensional array of y coordinates at each carpet point.'\n  },\n  a: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['An array containing values of the first parameter value'].join(' ')\n  },\n  a0: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'calc',\n    description: ['Alternate to `a`.', 'Builds a linear space of a coordinates.', 'Use with `da`', 'where `a0` is the starting coordinate and `da` the step.'].join(' ')\n  },\n  da: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: ['Sets the a coordinate step.', 'See `a0` for more info.'].join(' ')\n  },\n  b: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'A two dimensional array of y coordinates at each carpet point.'\n  },\n  b0: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'calc',\n    description: ['Alternate to `b`.', 'Builds a linear space of a coordinates.', 'Use with `db`', 'where `b0` is the starting coordinate and `db` the step.'].join(' ')\n  },\n  db: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: ['Sets the b coordinate step.', 'See `b0` for more info.'].join(' ')\n  },\n  cheaterslope: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: ['The shift applied to each successive row of data in creating a cheater plot.', 'Only used if `x` is been omitted.'].join(' ')\n  },\n  aaxis: axisAttrs,\n  baxis: axisAttrs,\n  font: carpetFont,\n  color: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    editType: 'plot',\n    description: ['Sets default for all colors associated with this axis', 'all at once: line, font, tick, and grid colors.', 'Grid color is lightened by blending this with the plot background', 'Individual pieces can override this.'].join(' ')\n  },\n  transforms: undefined,\n  zorder: zorder\n};","map":{"version":3,"names":["fontAttrs","require","axisAttrs","colorAttrs","carpetFont","editType","description","zorder","family","dflt","size","color","defaultLine","module","exports","carpet","valType","join","x","y","a","a0","da","b","b0","db","cheaterslope","aaxis","baxis","font","transforms","undefined"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/carpet/attributes.js"],"sourcesContent":["'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar axisAttrs = require('./axis_attributes');\nvar colorAttrs = require('../../components/color/attributes');\n\nvar carpetFont = fontAttrs({\n    editType: 'calc',\n    description: 'The default font used for axis & tick labels on this carpet'\n});\n\nvar zorder = require('../scatter/attributes').zorder;\n\n// TODO: inherit from global font\ncarpetFont.family.dflt = '\"Open Sans\", verdana, arial, sans-serif';\ncarpetFont.size.dflt = 12;\ncarpetFont.color.dflt = colorAttrs.defaultLine;\n\nmodule.exports = {\n    carpet: {\n        valType: 'string',\n        editType: 'calc',\n        description: [\n            'An identifier for this carpet, so that `scattercarpet` and',\n            '`contourcarpet` traces can specify a carpet plot on which',\n            'they lie'\n        ].join(' ')\n    },\n    x: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'A two dimensional array of x coordinates at each carpet point.',\n            'If omitted, the plot is a cheater plot and the xaxis is hidden',\n            'by default.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: 'A two dimensional array of y coordinates at each carpet point.'\n    },\n    a: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'An array containing values of the first parameter value'\n        ].join(' ')\n    },\n    a0: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Alternate to `a`.',\n            'Builds a linear space of a coordinates.',\n            'Use with `da`',\n            'where `a0` is the starting coordinate and `da` the step.'\n        ].join(' ')\n    },\n    da: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: [\n            'Sets the a coordinate step.',\n            'See `a0` for more info.'\n        ].join(' ')\n    },\n    b: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'A two dimensional array of y coordinates at each carpet point.'\n    },\n    b0: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Alternate to `b`.',\n            'Builds a linear space of a coordinates.',\n            'Use with `db`',\n            'where `b0` is the starting coordinate and `db` the step.'\n        ].join(' ')\n    },\n    db: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: [\n            'Sets the b coordinate step.',\n            'See `b0` for more info.'\n        ].join(' ')\n    },\n    cheaterslope: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: [\n            'The shift applied to each successive row of data in creating a cheater plot.',\n            'Only used if `x` is been omitted.'\n        ].join(' ')\n    },\n    aaxis: axisAttrs,\n    baxis: axisAttrs,\n    font: carpetFont,\n    color: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        editType: 'plot',\n        description: [\n            'Sets default for all colors associated with this axis',\n            'all at once: line, font, tick, and grid colors.',\n            'Grid color is lightened by blending this with the plot background',\n            'Individual pieces can override this.'\n        ].join(' ')\n    },\n    transforms: undefined,\n    zorder: zorder\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}