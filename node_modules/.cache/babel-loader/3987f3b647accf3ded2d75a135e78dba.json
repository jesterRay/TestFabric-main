{"ast":null,"code":"'use strict';\n\nvar constants = require('./constants');\nmodule.exports = {\n  editType: 'modebar',\n  orientation: {\n    valType: 'enumerated',\n    values: ['v', 'h'],\n    dflt: 'h',\n    editType: 'modebar',\n    description: 'Sets the orientation of the modebar.'\n  },\n  bgcolor: {\n    valType: 'color',\n    editType: 'modebar',\n    description: 'Sets the background color of the modebar.'\n  },\n  color: {\n    valType: 'color',\n    editType: 'modebar',\n    description: 'Sets the color of the icons in the modebar.'\n  },\n  activecolor: {\n    valType: 'color',\n    editType: 'modebar',\n    description: 'Sets the color of the active or hovered on icons in the modebar.'\n  },\n  uirevision: {\n    valType: 'any',\n    editType: 'none',\n    description: ['Controls persistence of user-driven changes related to the modebar,', 'including `hovermode`, `dragmode`, and `showspikes` at both the', 'root level and inside subplots. Defaults to `layout.uirevision`.'].join(' ')\n  },\n  add: {\n    valType: 'string',\n    arrayOk: true,\n    dflt: '',\n    editType: 'modebar',\n    description: ['Determines which predefined modebar buttons to add.', 'Please note that these buttons will only be shown if they are', 'compatible with all trace types used in a graph.', 'Similar to `config.modeBarButtonsToAdd` option.', 'This may include *' + constants.backButtons.join('*, *') + '*.'].join(' ')\n  },\n  remove: {\n    valType: 'string',\n    arrayOk: true,\n    dflt: '',\n    editType: 'modebar',\n    description: ['Determines which predefined modebar buttons to remove.', 'Similar to `config.modeBarButtonsToRemove` option.', 'This may include *' + constants.foreButtons.join('*, *') + '*.'].join(' ')\n  }\n};","map":{"version":3,"names":["constants","require","module","exports","editType","orientation","valType","values","dflt","description","bgcolor","color","activecolor","uirevision","join","add","arrayOk","backButtons","remove","foreButtons"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/modebar/attributes.js"],"sourcesContent":["'use strict';\n\nvar constants = require('./constants');\n\nmodule.exports = {\n    editType: 'modebar',\n\n    orientation: {\n        valType: 'enumerated',\n        values: ['v', 'h'],\n        dflt: 'h',\n        editType: 'modebar',\n        description: 'Sets the orientation of the modebar.'\n    },\n    bgcolor: {\n        valType: 'color',\n        editType: 'modebar',\n        description: 'Sets the background color of the modebar.'\n    },\n    color: {\n        valType: 'color',\n        editType: 'modebar',\n        description: 'Sets the color of the icons in the modebar.'\n    },\n    activecolor: {\n        valType: 'color',\n        editType: 'modebar',\n        description: 'Sets the color of the active or hovered on icons in the modebar.'\n    },\n    uirevision: {\n        valType: 'any',\n        editType: 'none',\n        description: [\n            'Controls persistence of user-driven changes related to the modebar,',\n            'including `hovermode`, `dragmode`, and `showspikes` at both the',\n            'root level and inside subplots. Defaults to `layout.uirevision`.'\n        ].join(' ')\n    },\n    add: {\n        valType: 'string',\n        arrayOk: true,\n        dflt: '',\n        editType: 'modebar',\n        description: [\n            'Determines which predefined modebar buttons to add.',\n            'Please note that these buttons will only be shown if they are',\n            'compatible with all trace types used in a graph.',\n            'Similar to `config.modeBarButtonsToAdd` option.',\n            'This may include *' + constants.backButtons.join('*, *') + '*.'\n        ].join(' ')\n    },\n    remove: {\n        valType: 'string',\n        arrayOk: true,\n        dflt: '',\n        editType: 'modebar',\n        description: [\n            'Determines which predefined modebar buttons to remove.',\n            'Similar to `config.modeBarButtonsToRemove` option.',\n            'This may include *' + constants.foreButtons.join('*, *') + '*.'\n        ].join(' ')\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEtCC,MAAM,CAACC,OAAO,GAAG;EACbC,QAAQ,EAAE,SAAS;EAEnBC,WAAW,EAAE;IACTC,OAAO,EAAE,YAAY;IACrBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAClBC,IAAI,EAAE,GAAG;IACTJ,QAAQ,EAAE,SAAS;IACnBK,WAAW,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACLJ,OAAO,EAAE,OAAO;IAChBF,QAAQ,EAAE,SAAS;IACnBK,WAAW,EAAE;EACjB,CAAC;EACDE,KAAK,EAAE;IACHL,OAAO,EAAE,OAAO;IAChBF,QAAQ,EAAE,SAAS;IACnBK,WAAW,EAAE;EACjB,CAAC;EACDG,WAAW,EAAE;IACTN,OAAO,EAAE,OAAO;IAChBF,QAAQ,EAAE,SAAS;IACnBK,WAAW,EAAE;EACjB,CAAC;EACDI,UAAU,EAAE;IACRP,OAAO,EAAE,KAAK;IACdF,QAAQ,EAAE,MAAM;IAChBK,WAAW,EAAE,CACT,qEAAqE,EACrE,iEAAiE,EACjE,kEAAkE,CACrE,CAACK,IAAI,CAAC,GAAG;EACd,CAAC;EACDC,GAAG,EAAE;IACDT,OAAO,EAAE,QAAQ;IACjBU,OAAO,EAAE,IAAI;IACbR,IAAI,EAAE,EAAE;IACRJ,QAAQ,EAAE,SAAS;IACnBK,WAAW,EAAE,CACT,qDAAqD,EACrD,+DAA+D,EAC/D,kDAAkD,EAClD,iDAAiD,EACjD,oBAAoB,GAAGT,SAAS,CAACiB,WAAW,CAACH,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CACnE,CAACA,IAAI,CAAC,GAAG;EACd,CAAC;EACDI,MAAM,EAAE;IACJZ,OAAO,EAAE,QAAQ;IACjBU,OAAO,EAAE,IAAI;IACbR,IAAI,EAAE,EAAE;IACRJ,QAAQ,EAAE,SAAS;IACnBK,WAAW,EAAE,CACT,wDAAwD,EACxD,oDAAoD,EACpD,oBAAoB,GAAGT,SAAS,CAACmB,WAAW,CAACL,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CACnE,CAACA,IAAI,CAAC,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}