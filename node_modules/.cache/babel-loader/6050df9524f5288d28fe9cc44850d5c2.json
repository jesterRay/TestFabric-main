{"ast":null,"code":"'use strict';\n\nvar barAttrs = require('../bar/attributes');\nvar lineAttrs = require('../scatter/attributes').line;\nvar baseAttrs = require('../../plots/attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar constants = require('./constants');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar Color = require('../../components/color');\nfunction directionAttrs(dirTxt) {\n  return {\n    marker: {\n      color: extendFlat({}, barAttrs.marker.color, {\n        arrayOk: false,\n        editType: 'style',\n        description: 'Sets the marker color of all ' + dirTxt + ' values.'\n      }),\n      line: {\n        color: extendFlat({}, barAttrs.marker.line.color, {\n          arrayOk: false,\n          editType: 'style',\n          description: 'Sets the line color of all ' + dirTxt + ' values.'\n        }),\n        width: extendFlat({}, barAttrs.marker.line.width, {\n          arrayOk: false,\n          editType: 'style',\n          description: 'Sets the line width of all ' + dirTxt + ' values.'\n        }),\n        editType: 'style'\n      },\n      editType: 'style'\n    },\n    editType: 'style'\n  };\n}\nmodule.exports = {\n  measure: {\n    valType: 'data_array',\n    dflt: [],\n    editType: 'calc',\n    description: ['An array containing types of values.', 'By default the values are considered as \\'relative\\'.', 'However; it is possible to use \\'total\\' to compute the sums.', 'Also \\'absolute\\' could be applied to reset the computed total', 'or to declare an initial value where needed.'].join(' ')\n  },\n  base: {\n    valType: 'number',\n    dflt: null,\n    arrayOk: false,\n    editType: 'calc',\n    description: ['Sets where the bar base is drawn (in position axis units).'].join(' ')\n  },\n  x: barAttrs.x,\n  x0: barAttrs.x0,\n  dx: barAttrs.dx,\n  y: barAttrs.y,\n  y0: barAttrs.y0,\n  dy: barAttrs.dy,\n  xperiod: barAttrs.xperiod,\n  yperiod: barAttrs.yperiod,\n  xperiod0: barAttrs.xperiod0,\n  yperiod0: barAttrs.yperiod0,\n  xperiodalignment: barAttrs.xperiodalignment,\n  yperiodalignment: barAttrs.yperiodalignment,\n  xhoverformat: axisHoverFormat('x'),\n  yhoverformat: axisHoverFormat('y'),\n  hovertext: barAttrs.hovertext,\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: constants.eventDataKeys\n  }),\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    flags: ['name', 'x', 'y', 'text', 'initial', 'delta', 'final']\n  }),\n  textinfo: {\n    valType: 'flaglist',\n    flags: ['label', 'text', 'initial', 'delta', 'final'],\n    extras: ['none'],\n    editType: 'plot',\n    arrayOk: false,\n    description: ['Determines which trace information appear on the graph.', 'In the case of having multiple waterfalls, totals', 'are computed separately (per trace).'].join(' ')\n  },\n  // TODO: incorporate `label` and `value` in the eventData\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: constants.eventDataKeys.concat(['label'])\n  }),\n  text: barAttrs.text,\n  textposition: barAttrs.textposition,\n  insidetextanchor: barAttrs.insidetextanchor,\n  textangle: barAttrs.textangle,\n  textfont: barAttrs.textfont,\n  insidetextfont: barAttrs.insidetextfont,\n  outsidetextfont: barAttrs.outsidetextfont,\n  constraintext: barAttrs.constraintext,\n  cliponaxis: barAttrs.cliponaxis,\n  orientation: barAttrs.orientation,\n  offset: barAttrs.offset,\n  width: barAttrs.width,\n  increasing: directionAttrs('increasing'),\n  decreasing: directionAttrs('decreasing'),\n  totals: directionAttrs('intermediate sums and total'),\n  connector: {\n    line: {\n      color: extendFlat({}, lineAttrs.color, {\n        dflt: Color.defaultLine\n      }),\n      width: extendFlat({}, lineAttrs.width, {\n        editType: 'plot' // i.e. to adjust bars is mode: 'between'. See https://github.com/plotly/plotly.js/issues/3787\n      }),\n      dash: lineAttrs.dash,\n      editType: 'plot'\n    },\n    mode: {\n      valType: 'enumerated',\n      values: ['spanning', 'between'],\n      dflt: 'between',\n      editType: 'plot',\n      description: ['Sets the shape of connector lines.'].join(' ')\n    },\n    visible: {\n      valType: 'boolean',\n      dflt: true,\n      editType: 'plot',\n      description: ['Determines if connector lines are drawn. '].join(' ')\n    },\n    editType: 'plot'\n  },\n  offsetgroup: barAttrs.offsetgroup,\n  alignmentgroup: barAttrs.alignmentgroup,\n  zorder: barAttrs.zorder\n};","map":{"version":3,"names":["barAttrs","require","lineAttrs","line","baseAttrs","axisHoverFormat","hovertemplateAttrs","texttemplateAttrs","constants","extendFlat","Color","directionAttrs","dirTxt","marker","color","arrayOk","editType","description","width","module","exports","measure","valType","dflt","join","base","x","x0","dx","y","y0","dy","xperiod","yperiod","xperiod0","yperiod0","xperiodalignment","yperiodalignment","xhoverformat","yhoverformat","hovertext","hovertemplate","keys","eventDataKeys","hoverinfo","flags","textinfo","extras","texttemplate","concat","text","textposition","insidetextanchor","textangle","textfont","insidetextfont","outsidetextfont","constraintext","cliponaxis","orientation","offset","increasing","decreasing","totals","connector","defaultLine","dash","mode","values","visible","offsetgroup","alignmentgroup","zorder"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/waterfall/attributes.js"],"sourcesContent":["'use strict';\n\nvar barAttrs = require('../bar/attributes');\nvar lineAttrs = require('../scatter/attributes').line;\nvar baseAttrs = require('../../plots/attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar constants = require('./constants');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar Color = require('../../components/color');\n\nfunction directionAttrs(dirTxt) {\n    return {\n        marker: {\n            color: extendFlat({}, barAttrs.marker.color, {\n                arrayOk: false,\n                editType: 'style',\n                description: 'Sets the marker color of all ' + dirTxt + ' values.'\n            }),\n            line: {\n                color: extendFlat({}, barAttrs.marker.line.color, {\n                    arrayOk: false,\n                    editType: 'style',\n                    description: 'Sets the line color of all ' + dirTxt + ' values.'\n                }),\n                width: extendFlat({}, barAttrs.marker.line.width, {\n                    arrayOk: false,\n                    editType: 'style',\n                    description: 'Sets the line width of all ' + dirTxt + ' values.'\n                }),\n                editType: 'style',\n            },\n            editType: 'style'\n        },\n        editType: 'style'\n    };\n}\n\nmodule.exports = {\n    measure: {\n        valType: 'data_array',\n        dflt: [],\n        editType: 'calc',\n        description: [\n            'An array containing types of values.',\n            'By default the values are considered as \\'relative\\'.',\n            'However; it is possible to use \\'total\\' to compute the sums.',\n            'Also \\'absolute\\' could be applied to reset the computed total',\n            'or to declare an initial value where needed.'\n        ].join(' ')\n    },\n\n    base: {\n        valType: 'number',\n        dflt: null,\n        arrayOk: false,\n        editType: 'calc',\n        description: [\n            'Sets where the bar base is drawn (in position axis units).'\n        ].join(' ')\n    },\n\n    x: barAttrs.x,\n    x0: barAttrs.x0,\n    dx: barAttrs.dx,\n    y: barAttrs.y,\n    y0: barAttrs.y0,\n    dy: barAttrs.dy,\n\n    xperiod: barAttrs.xperiod,\n    yperiod: barAttrs.yperiod,\n    xperiod0: barAttrs.xperiod0,\n    yperiod0: barAttrs.yperiod0,\n    xperiodalignment: barAttrs.xperiodalignment,\n    yperiodalignment: barAttrs.yperiodalignment,\n    xhoverformat: axisHoverFormat('x'),\n    yhoverformat: axisHoverFormat('y'),\n\n    hovertext: barAttrs.hovertext,\n    hovertemplate: hovertemplateAttrs({}, {\n        keys: constants.eventDataKeys\n    }),\n\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n        flags: ['name', 'x', 'y', 'text', 'initial', 'delta', 'final']\n    }),\n\n    textinfo: {\n        valType: 'flaglist',\n        flags: ['label', 'text', 'initial', 'delta', 'final'],\n        extras: ['none'],\n        editType: 'plot',\n        arrayOk: false,\n        description: [\n            'Determines which trace information appear on the graph.',\n            'In the case of having multiple waterfalls, totals',\n            'are computed separately (per trace).'\n        ].join(' ')\n    },\n    // TODO: incorporate `label` and `value` in the eventData\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\n        keys: constants.eventDataKeys.concat(['label'])\n    }),\n    text: barAttrs.text,\n    textposition: barAttrs.textposition,\n    insidetextanchor: barAttrs.insidetextanchor,\n    textangle: barAttrs.textangle,\n    textfont: barAttrs.textfont,\n    insidetextfont: barAttrs.insidetextfont,\n    outsidetextfont: barAttrs.outsidetextfont,\n    constraintext: barAttrs.constraintext,\n\n    cliponaxis: barAttrs.cliponaxis,\n    orientation: barAttrs.orientation,\n\n    offset: barAttrs.offset,\n    width: barAttrs.width,\n\n    increasing: directionAttrs('increasing'),\n    decreasing: directionAttrs('decreasing'),\n    totals: directionAttrs('intermediate sums and total'),\n\n    connector: {\n        line: {\n            color: extendFlat({}, lineAttrs.color, {dflt: Color.defaultLine}),\n            width: extendFlat({}, lineAttrs.width, {\n                editType: 'plot', // i.e. to adjust bars is mode: 'between'. See https://github.com/plotly/plotly.js/issues/3787\n            }),\n            dash: lineAttrs.dash,\n            editType: 'plot'\n        },\n        mode: {\n            valType: 'enumerated',\n            values: ['spanning', 'between'],\n            dflt: 'between',\n            editType: 'plot',\n            description: [\n                'Sets the shape of connector lines.'\n            ].join(' ')\n        },\n        visible: {\n            valType: 'boolean',\n            dflt: true,\n            editType: 'plot',\n            description: [\n                'Determines if connector lines are drawn. '\n            ].join(' ')\n        },\n        editType: 'plot'\n    },\n\n    offsetgroup: barAttrs.offsetgroup,\n    alignmentgroup: barAttrs.alignmentgroup,\n    zorder: barAttrs.zorder\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}