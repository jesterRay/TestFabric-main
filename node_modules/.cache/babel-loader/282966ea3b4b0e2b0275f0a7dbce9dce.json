{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\nvar helpers = require('./helpers');\nmodule.exports = function getLegendData(calcdata, opts, hasMultipleLegends) {\n  var inHover = opts._inHover;\n  var grouped = helpers.isGrouped(opts);\n  var reversed = helpers.isReversed(opts);\n  var lgroupToTraces = {};\n  var lgroups = [];\n  var hasOneNonBlankGroup = false;\n  var slicesShown = {};\n  var lgroupi = 0;\n  var maxNameLength = 0;\n  var i, j;\n  function addOneItem(legendId, legendGroup, legendItem) {\n    if (opts.visible === false) return;\n    if (hasMultipleLegends && legendId !== opts._id) return;\n\n    // each '' legend group is treated as a separate group\n    if (legendGroup === '' || !helpers.isGrouped(opts)) {\n      // TODO: check this against fullData legendgroups?\n      var uniqueGroup = '~~i' + lgroupi;\n      lgroups.push(uniqueGroup);\n      lgroupToTraces[uniqueGroup] = [legendItem];\n      lgroupi++;\n    } else if (lgroups.indexOf(legendGroup) === -1) {\n      lgroups.push(legendGroup);\n      hasOneNonBlankGroup = true;\n      lgroupToTraces[legendGroup] = [legendItem];\n    } else {\n      lgroupToTraces[legendGroup].push(legendItem);\n    }\n  }\n\n  // build an { legendgroup: [cd0, cd0], ... } object\n  for (i = 0; i < calcdata.length; i++) {\n    var cd = calcdata[i];\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var lid = trace.legend;\n    var lgroup = trace.legendgroup;\n    if (!inHover && (!trace.visible || !trace.showlegend)) continue;\n    if (Registry.traceIs(trace, 'pie-like')) {\n      if (!slicesShown[lgroup]) slicesShown[lgroup] = {};\n      for (j = 0; j < cd.length; j++) {\n        var labelj = cd[j].label;\n        if (!slicesShown[lgroup][labelj]) {\n          addOneItem(lid, lgroup, {\n            label: labelj,\n            color: cd[j].color,\n            i: cd[j].i,\n            trace: trace,\n            pts: cd[j].pts\n          });\n          slicesShown[lgroup][labelj] = true;\n          maxNameLength = Math.max(maxNameLength, (labelj || '').length);\n        }\n      }\n    } else {\n      addOneItem(lid, lgroup, cd0);\n      maxNameLength = Math.max(maxNameLength, (trace.name || '').length);\n    }\n  }\n\n  // won't draw a legend in this case\n  if (!lgroups.length) return [];\n\n  // collapse all groups into one if all groups are blank\n  var shouldCollapse = !hasOneNonBlankGroup || !grouped;\n  var legendData = [];\n  for (i = 0; i < lgroups.length; i++) {\n    var t = lgroupToTraces[lgroups[i]];\n    if (shouldCollapse) {\n      legendData.push(t[0]);\n    } else {\n      legendData.push(t);\n    }\n  }\n  if (shouldCollapse) legendData = [legendData];\n  for (i = 0; i < legendData.length; i++) {\n    // find minimum rank within group\n    var groupMinRank = Infinity;\n    for (j = 0; j < legendData[i].length; j++) {\n      var rank = legendData[i][j].trace.legendrank;\n      if (groupMinRank > rank) groupMinRank = rank;\n    }\n\n    // record on first group element\n    legendData[i][0]._groupMinRank = groupMinRank;\n    legendData[i][0]._preGroupSort = i;\n  }\n  var orderFn1 = function (a, b) {\n    return a[0]._groupMinRank - b[0]._groupMinRank || a[0]._preGroupSort - b[0]._preGroupSort // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n    ;\n  };\n  var orderFn2 = function (a, b) {\n    return a.trace.legendrank - b.trace.legendrank || a._preSort - b._preSort // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n    ;\n  };\n\n  // sort considering minimum group legendrank\n  legendData.forEach(function (a, k) {\n    a[0]._preGroupSort = k;\n  });\n  legendData.sort(orderFn1);\n  for (i = 0; i < legendData.length; i++) {\n    // sort considering trace.legendrank and legend.traceorder\n    legendData[i].forEach(function (a, k) {\n      a._preSort = k;\n    });\n    legendData[i].sort(orderFn2);\n    var firstItemTrace = legendData[i][0].trace;\n    var groupTitle = null;\n    // get group title text\n    for (j = 0; j < legendData[i].length; j++) {\n      var gt = legendData[i][j].trace.legendgrouptitle;\n      if (gt && gt.text) {\n        groupTitle = gt;\n        if (inHover) gt.font = opts._groupTitleFont;\n        break;\n      }\n    }\n\n    // reverse order\n    if (reversed) legendData[i].reverse();\n    if (groupTitle) {\n      var hasPieLike = false;\n      for (j = 0; j < legendData[i].length; j++) {\n        if (Registry.traceIs(legendData[i][j].trace, 'pie-like')) {\n          hasPieLike = true;\n          break;\n        }\n      }\n\n      // set group title text\n      legendData[i].unshift({\n        i: -1,\n        groupTitle: groupTitle,\n        noClick: hasPieLike,\n        trace: {\n          showlegend: firstItemTrace.showlegend,\n          legendgroup: firstItemTrace.legendgroup,\n          visible: opts.groupclick === 'toggleitem' ? true : firstItemTrace.visible\n        }\n      });\n    }\n\n    // rearrange lgroupToTraces into a d3-friendly array of arrays\n    for (j = 0; j < legendData[i].length; j++) {\n      legendData[i][j] = [legendData[i][j]];\n    }\n  }\n\n  // number of legend groups - needed in legend/draw.js\n  opts._lgroupsLength = legendData.length;\n  // maximum name/label length - needed in legend/draw.js\n  opts._maxNameLength = maxNameLength;\n  return legendData;\n};","map":{"version":3,"names":["Registry","require","helpers","module","exports","getLegendData","calcdata","opts","hasMultipleLegends","inHover","_inHover","grouped","isGrouped","reversed","isReversed","lgroupToTraces","lgroups","hasOneNonBlankGroup","slicesShown","lgroupi","maxNameLength","i","j","addOneItem","legendId","legendGroup","legendItem","visible","_id","uniqueGroup","push","indexOf","length","cd","cd0","trace","lid","legend","lgroup","legendgroup","showlegend","traceIs","labelj","label","color","pts","Math","max","name","shouldCollapse","legendData","t","groupMinRank","Infinity","rank","legendrank","_groupMinRank","_preGroupSort","orderFn1","a","b","orderFn2","_preSort","forEach","k","sort","firstItemTrace","groupTitle","gt","legendgrouptitle","text","font","_groupTitleFont","reverse","hasPieLike","unshift","noClick","groupclick","_lgroupsLength","_maxNameLength"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/legend/get_legend_data.js"],"sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar helpers = require('./helpers');\n\nmodule.exports = function getLegendData(calcdata, opts, hasMultipleLegends) {\n    var inHover = opts._inHover;\n    var grouped = helpers.isGrouped(opts);\n    var reversed = helpers.isReversed(opts);\n\n    var lgroupToTraces = {};\n    var lgroups = [];\n    var hasOneNonBlankGroup = false;\n    var slicesShown = {};\n    var lgroupi = 0;\n    var maxNameLength = 0;\n    var i, j;\n\n    function addOneItem(legendId, legendGroup, legendItem) {\n        if(opts.visible === false) return;\n        if(hasMultipleLegends && legendId !== opts._id) return;\n\n        // each '' legend group is treated as a separate group\n        if(legendGroup === '' || !helpers.isGrouped(opts)) {\n            // TODO: check this against fullData legendgroups?\n            var uniqueGroup = '~~i' + lgroupi;\n            lgroups.push(uniqueGroup);\n            lgroupToTraces[uniqueGroup] = [legendItem];\n            lgroupi++;\n        } else if(lgroups.indexOf(legendGroup) === -1) {\n            lgroups.push(legendGroup);\n            hasOneNonBlankGroup = true;\n            lgroupToTraces[legendGroup] = [legendItem];\n        } else {\n            lgroupToTraces[legendGroup].push(legendItem);\n        }\n    }\n\n    // build an { legendgroup: [cd0, cd0], ... } object\n    for(i = 0; i < calcdata.length; i++) {\n        var cd = calcdata[i];\n        var cd0 = cd[0];\n        var trace = cd0.trace;\n        var lid = trace.legend;\n        var lgroup = trace.legendgroup;\n\n        if(!inHover && (!trace.visible || !trace.showlegend)) continue;\n\n        if(Registry.traceIs(trace, 'pie-like')) {\n            if(!slicesShown[lgroup]) slicesShown[lgroup] = {};\n\n            for(j = 0; j < cd.length; j++) {\n                var labelj = cd[j].label;\n\n                if(!slicesShown[lgroup][labelj]) {\n                    addOneItem(lid, lgroup, {\n                        label: labelj,\n                        color: cd[j].color,\n                        i: cd[j].i,\n                        trace: trace,\n                        pts: cd[j].pts\n                    });\n\n                    slicesShown[lgroup][labelj] = true;\n                    maxNameLength = Math.max(maxNameLength, (labelj || '').length);\n                }\n            }\n        } else {\n            addOneItem(lid, lgroup, cd0);\n            maxNameLength = Math.max(maxNameLength, (trace.name || '').length);\n        }\n    }\n\n    // won't draw a legend in this case\n    if(!lgroups.length) return [];\n\n    // collapse all groups into one if all groups are blank\n    var shouldCollapse = !hasOneNonBlankGroup || !grouped;\n\n    var legendData = [];\n    for(i = 0; i < lgroups.length; i++) {\n        var t = lgroupToTraces[lgroups[i]];\n        if(shouldCollapse) {\n            legendData.push(t[0]);\n        } else {\n            legendData.push(t);\n        }\n    }\n    if(shouldCollapse) legendData = [legendData];\n\n    for(i = 0; i < legendData.length; i++) {\n        // find minimum rank within group\n        var groupMinRank = Infinity;\n        for(j = 0; j < legendData[i].length; j++) {\n            var rank = legendData[i][j].trace.legendrank;\n            if(groupMinRank > rank) groupMinRank = rank;\n        }\n\n        // record on first group element\n        legendData[i][0]._groupMinRank = groupMinRank;\n        legendData[i][0]._preGroupSort = i;\n    }\n\n    var orderFn1 = function(a, b) {\n        return (\n            (a[0]._groupMinRank - b[0]._groupMinRank) ||\n            (a[0]._preGroupSort - b[0]._preGroupSort) // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n        );\n    };\n\n    var orderFn2 = function(a, b) {\n        return (\n            (a.trace.legendrank - b.trace.legendrank) ||\n            (a._preSort - b._preSort) // fallback for old Chrome < 70 https://bugs.chromium.org/p/v8/issues/detail?id=90\n        );\n    };\n\n    // sort considering minimum group legendrank\n    legendData.forEach(function(a, k) { a[0]._preGroupSort = k; });\n    legendData.sort(orderFn1);\n    for(i = 0; i < legendData.length; i++) {\n        // sort considering trace.legendrank and legend.traceorder\n        legendData[i].forEach(function(a, k) { a._preSort = k; });\n        legendData[i].sort(orderFn2);\n\n        var firstItemTrace = legendData[i][0].trace;\n\n        var groupTitle = null;\n        // get group title text\n        for(j = 0; j < legendData[i].length; j++) {\n            var gt = legendData[i][j].trace.legendgrouptitle;\n            if(gt && gt.text) {\n                groupTitle = gt;\n                if(inHover) gt.font = opts._groupTitleFont;\n                break;\n            }\n        }\n\n        // reverse order\n        if(reversed) legendData[i].reverse();\n\n        if(groupTitle) {\n            var hasPieLike = false;\n            for(j = 0; j < legendData[i].length; j++) {\n                if(Registry.traceIs(legendData[i][j].trace, 'pie-like')) {\n                    hasPieLike = true;\n                    break;\n                }\n            }\n\n            // set group title text\n            legendData[i].unshift({\n                i: -1,\n                groupTitle: groupTitle,\n                noClick: hasPieLike,\n                trace: {\n                    showlegend: firstItemTrace.showlegend,\n                    legendgroup: firstItemTrace.legendgroup,\n                    visible: opts.groupclick === 'toggleitem' ? true : firstItemTrace.visible\n                }\n            });\n        }\n\n        // rearrange lgroupToTraces into a d3-friendly array of arrays\n        for(j = 0; j < legendData[i].length; j++) {\n            legendData[i][j] = [\n                legendData[i][j]\n            ];\n        }\n    }\n\n    // number of legend groups - needed in legend/draw.js\n    opts._lgroupsLength = legendData.length;\n    // maximum name/label length - needed in legend/draw.js\n    opts._maxNameLength = maxNameLength;\n\n    return legendData;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}