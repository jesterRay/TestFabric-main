{"ast":null,"code":"import _objectSpread from\"E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// import React, { useState, useEffect } from 'react';\n// import WorldMap from \"react-basic-world-map\";\n// import { useApi } from \"../../middleware/middleware\";\n// import CountryDetailModel from \"./model\";\n// const CountrySection = () => {\n//   const [modalShow, setModalShow] = useState(false);\n//   const [countryId, setCountryId] = useState({ id: 0, name: \"\", show: false });\n//   const [continent, setContinent] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [continents, setContinents] = useState([]);\n//   const [countries, setCountries] = useState([]);\n//   const [selectedCountries, setSelectedCountries] = useState({});\n//   const { data: countryData, error: countryError, isLoading: countryLoading } = useApi('map_contries_data', {});\n//   const { data: continentData, error: continentError, isLoading: continentLoading } = useApi('region_data', {});\n//   useEffect(() => {\n//     if (continentData) {\n//       setContinents(continentData.map(item => item.map__Name));\n//     }\n//   }, [continentData]);\n//   useEffect(() => {\n//     if (countryData) {\n//       setCountries(countryData.map(item => ({ label: item.countries__Name, value: item.countries__ID, map__ID: item.map__ID })));\n//     }\n//   }, [countryData]);\n//   const handleContinentChange = (e) => {\n//     setContinent(e.target.value);\n//     setCountry(\"\");\n//     const selectedContinent = continentData.find(cont => cont.map__Name === e.target.value);\n//     const filteredCountries = countryData.filter(item => item.map__ID === selectedContinent.map__ID);\n//     setCountries(filteredCountries.map(item => ({ label: item.countries__Name, value: item.countries__ID })));\n//     const initialSelectedCountries = {};\n//     filteredCountries.forEach(country => {\n//       initialSelectedCountries[country.countries__Name] = true;\n//     });\n//     setSelectedCountries(initialSelectedCountries);\n//   };\n//   const handleCountryChange = (e) => {\n//     setCountry(e.target.value);\n//     const selectedCountry = countryData.find(item => item.countries__ID === e.target.value);\n//     if (selectedCountry) {\n//       setSelectedCountries({ [selectedCountry.countries__Name]: true });\n//       setCountryId({ id: selectedCountry.countries__ID, name: selectedCountry.countries__Name, show: true });\n//     }\n//   };\n//   const onMapClick = (countryCode) => {\n//     const selectedCountry = countryData.find(item => item.countries__Code === countryCode);\n//     if (selectedCountry) {\n//       setSelectedCountries({ [selectedCountry.countries__Name]: true });\n//       setCountryId({ id: selectedCountry.countries__ID, name: selectedCountry.countries__Name, show: true });\n//     }\n//   };\n//   return (\n//     <div className=\"container p-4 mt-5 border border-secondary rounded\">\n//       <CountryDetailModel\n//         show={countryId.show}\n//         onHide={() => setCountryId((pre) => ({ ...pre, show: false }))}\n//         countryid={countryId}\n//       />\n//       <h5 className=\"mb-3\">Country Selection</h5>\n//       <div className=\"row\">\n//         {/* <div className=\"col-md-6\">\n//           <select \n//             value={continent} \n//             onChange={handleContinentChange} \n//             className=\"form-select\"\n//           >\n//             <option value=\"\">Select Continent</option>\n//             {continents.map(item => (\n//               <option key={item} value={item}>{item}</option>\n//             ))}\n//           </select>\n//         </div> */}\n//         <div className=\"col-md-6\">\n//           <select \n//             value={country} \n//             onChange={handleCountryChange} \n//             className=\"form-select\" \n//             // disabled={!continent || countries.length === 0}\n//           >\n//             <option value=\"\">Select Country</option>\n//             {countries.map(item => (\n//               <option key={item.value} value={item.value}>{item.label}</option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n//       <div className=\"mt-4\">\n//         <WorldMap \n//           countries={selectedCountries}\n//           onClick={onMapClick}\n//           style={{ fill: 'blue', stroke: 'lightblue', backgroundColor: 'lightblue' }}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n// export default CountrySection;\nimport{Link}from\"@material-ui/core\";import{useApi}from\"../../middleware/middleware\";import Parser from'html-react-parser';import{useState}from\"react\";import CountryDetailModel from\"./model\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function CountrySection(){var _data$;const[modalShow,setModalShow]=useState(false);const[countryId,setCountryId]=useState({id:0,name:\"\",show:false});const{data,error,isLoading}=useApi('pages_data',{page_id:43});const{data:region_data,error:region_error,isLoading:region_loading}=useApi('region_data',{});const{data:country_data,error:country_error,isLoading:country_loading}=useApi('map_contries_data',{});function suCrypt(id){// console.log(\"countryyyy code : \",btoa(btoa(id)))\nreturn btoa(btoa(id));}function handleClick(id,name){setCountryId(()=>({id:id,name:name,show:true}));// setModalShow(true);\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(CountryDetailModel,{show:countryId.show,onHide:()=>setCountryId(pre=>_objectSpread(_objectSpread({},pre),{},{show:false})),countryid:countryId}),/*#__PURE__*/_jsx(\"h5\",{children:data&&Parser(data===null||data===void 0?void 0:(_data$=data[0])===null||_data$===void 0?void 0:_data$.page_long_content)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"br\",{}),region_data&&(region_data===null||region_data===void 0?void 0:region_data.map(item=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"10px \"},children:[/*#__PURE__*/_jsx(\"h4\",{children:item===null||item===void 0?void 0:item.map__Name}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",style:{marginTop:\"10px\",marginLeft:\"10px\"},children:country_data===null||country_data===void 0?void 0:country_data.map(county=>{return county.countries__Map_ID==item.map__ID&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-3 mb-3\",style:{cursor:\"pointer\"},onClick:()=>handleClick(county===null||county===void 0?void 0:county.countries__ID,county===null||county===void 0?void 0:county.countries__Name),children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",style:{width:\"30%\"},children:/*#__PURE__*/_jsx(\"img\",{width:\"25\",style:{marginRight:\"5px\"},src:process.env.REACT_APP_IMAGE_URL+'map_images/'+suCrypt(county===null||county===void 0?void 0:county.countries__ID)+'.jpg'})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"h6\",{children:county===null||county===void 0?void 0:county.countries__Name})})]});})})]}),/*#__PURE__*/_jsx(\"br\",{})]})))]});}","map":{"version":3,"names":["Link","useApi","Parser","useState","CountryDetailModel","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CountrySection","_data$","modalShow","setModalShow","countryId","setCountryId","id","name","show","data","error","isLoading","page_id","region_data","region_error","region_loading","country_data","country_error","country_loading","suCrypt","btoa","handleClick","className","children","onHide","pre","_objectSpread","countryid","page_long_content","map","item","style","padding","map__Name","marginTop","marginLeft","county","countries__Map_ID","map__ID","cursor","onClick","countries__ID","countries__Name","width","marginRight","src","process","env","REACT_APP_IMAGE_URL"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/components/ChooseRegion/index.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import WorldMap from \"react-basic-world-map\";\n// import { useApi } from \"../../middleware/middleware\";\n// import CountryDetailModel from \"./model\";\n\n// const CountrySection = () => {\n//   const [modalShow, setModalShow] = useState(false);\n//   const [countryId, setCountryId] = useState({ id: 0, name: \"\", show: false });\n//   const [continent, setContinent] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [continents, setContinents] = useState([]);\n//   const [countries, setCountries] = useState([]);\n//   const [selectedCountries, setSelectedCountries] = useState({});\n\n//   const { data: countryData, error: countryError, isLoading: countryLoading } = useApi('map_contries_data', {});\n//   const { data: continentData, error: continentError, isLoading: continentLoading } = useApi('region_data', {});\n\n//   useEffect(() => {\n//     if (continentData) {\n//       setContinents(continentData.map(item => item.map__Name));\n//     }\n//   }, [continentData]);\n\n//   useEffect(() => {\n//     if (countryData) {\n//       setCountries(countryData.map(item => ({ label: item.countries__Name, value: item.countries__ID, map__ID: item.map__ID })));\n//     }\n//   }, [countryData]);\n\n//   const handleContinentChange = (e) => {\n//     setContinent(e.target.value);\n//     setCountry(\"\");\n//     const selectedContinent = continentData.find(cont => cont.map__Name === e.target.value);\n//     const filteredCountries = countryData.filter(item => item.map__ID === selectedContinent.map__ID);\n//     setCountries(filteredCountries.map(item => ({ label: item.countries__Name, value: item.countries__ID })));\n//     const initialSelectedCountries = {};\n//     filteredCountries.forEach(country => {\n//       initialSelectedCountries[country.countries__Name] = true;\n//     });\n//     setSelectedCountries(initialSelectedCountries);\n//   };\n\n//   const handleCountryChange = (e) => {\n//     setCountry(e.target.value);\n//     const selectedCountry = countryData.find(item => item.countries__ID === e.target.value);\n//     if (selectedCountry) {\n//       setSelectedCountries({ [selectedCountry.countries__Name]: true });\n//       setCountryId({ id: selectedCountry.countries__ID, name: selectedCountry.countries__Name, show: true });\n//     }\n//   };\n\n//   const onMapClick = (countryCode) => {\n//     const selectedCountry = countryData.find(item => item.countries__Code === countryCode);\n//     if (selectedCountry) {\n//       setSelectedCountries({ [selectedCountry.countries__Name]: true });\n//       setCountryId({ id: selectedCountry.countries__ID, name: selectedCountry.countries__Name, show: true });\n//     }\n//   };\n\n//   return (\n//     <div className=\"container p-4 mt-5 border border-secondary rounded\">\n//       <CountryDetailModel\n//         show={countryId.show}\n//         onHide={() => setCountryId((pre) => ({ ...pre, show: false }))}\n//         countryid={countryId}\n//       />\n\n//       <h5 className=\"mb-3\">Country Selection</h5>\n\n//       <div className=\"row\">\n//         {/* <div className=\"col-md-6\">\n//           <select \n//             value={continent} \n//             onChange={handleContinentChange} \n//             className=\"form-select\"\n//           >\n//             <option value=\"\">Select Continent</option>\n//             {continents.map(item => (\n//               <option key={item} value={item}>{item}</option>\n//             ))}\n//           </select>\n//         </div> */}\n//         <div className=\"col-md-6\">\n//           <select \n//             value={country} \n//             onChange={handleCountryChange} \n//             className=\"form-select\" \n//             // disabled={!continent || countries.length === 0}\n//           >\n//             <option value=\"\">Select Country</option>\n//             {countries.map(item => (\n//               <option key={item.value} value={item.value}>{item.label}</option>\n//             ))}\n//           </select>\n//         </div>\n//       </div>\n\n//       <div className=\"mt-4\">\n//         <WorldMap \n//           countries={selectedCountries}\n//           onClick={onMapClick}\n//           style={{ fill: 'blue', stroke: 'lightblue', backgroundColor: 'lightblue' }}\n//         />\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default CountrySection;\n\nimport { Link } from \"@material-ui/core\";\nimport { useApi } from \"../../middleware/middleware\";\nimport Parser from 'html-react-parser';\n\nimport { useState } from \"react\";\nimport CountryDetailModel from \"./model\";\n\n\nexport default function CountrySection(){\n    const [modalShow, setModalShow] = useState(false);\n    const [countryId, setCountryId] = useState({id:0,name:\"\",show:false});\n\n    const { data, error, isLoading } = useApi('pages_data', {page_id:43});\n    const { data:region_data, error:region_error, isLoading:region_loading } = useApi('region_data', {});\n    const { data:country_data, error:country_error, isLoading:country_loading } = useApi('map_contries_data', {});\n    \n\n    function suCrypt(id) {\n        // console.log(\"countryyyy code : \",btoa(btoa(id)))\n        return btoa(btoa(id));\n    }\n    function handleClick(id,name){\n        setCountryId(()=>({id:id,name:name,show:true}));\n        // setModalShow(true);\n    }\n\n    return(\n        <div className=\"container\">\n            <CountryDetailModel\n                show={countryId.show}\n                onHide={() => setCountryId((pre)=>({...pre,show:false}))}\n                countryid={countryId}\n            />\n        <h5>\n            {data && Parser(data?.[0]?.page_long_content)}\n        </h5>\n        <br/>\n        <hr/>\n        <br/>\n        {region_data&&region_data?.map((item)=>\n            <>\n                <div style={{padding:\"10px \"}}>\n                    <h4>{item?.map__Name}</h4>\n                    <div  className=\"row\" style={{marginTop:\"10px\", marginLeft:\"10px\"}} >\n                        {country_data?.map((county)=>{\n                            return(\n                                county.countries__Map_ID==item.map__ID&&\n                                <div className=\"col-3 mb-3\" style={{cursor:\"pointer\", }} onClick={()=>handleClick(county?.countries__ID,county?.countries__Name)}>\n                                    {/* `url(http://localhost:8888/product_images/${suCrypt()}.jpg)` */}\n                                    {/* <img src={'http://localhost:8888/product_images/'+suCrypt(county?.map__ID)+'.jpg'} /> */}\n                                    <div className=\"row\" style={{width:\"30%\"}}>\n                                        <img  width=\"25\" style={{marginRight:\"5px\"}} src={process.env.REACT_APP_IMAGE_URL +'map_images/'+suCrypt(county?.countries__ID)+'.jpg'} />\n                                    </div>\n                                    <div className=\"row\">\n                                        <h6>{county?.countries__Name}</h6>\n                                    </div>\n                                    {/* <br/> */}\n                                </div>\n                            )\n                        }\n                        )}\n                    </div>\n                </div>\n                <br/>\n            </>\n        )}\n\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}