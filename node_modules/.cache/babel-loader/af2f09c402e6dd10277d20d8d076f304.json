{"ast":null,"code":"'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar domainAttrs = require('../../plots/domain').attributes;\nvar pieAttrs = require('../pie/attributes');\nvar sunburstAttrs = require('../sunburst/attributes');\nvar treemapAttrs = require('../treemap/attributes');\nvar constants = require('../treemap/constants');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar pattern = require('../../components/drawing/attributes').pattern;\nmodule.exports = {\n  labels: sunburstAttrs.labels,\n  parents: sunburstAttrs.parents,\n  values: sunburstAttrs.values,\n  branchvalues: sunburstAttrs.branchvalues,\n  count: sunburstAttrs.count,\n  level: sunburstAttrs.level,\n  maxdepth: sunburstAttrs.maxdepth,\n  tiling: {\n    orientation: {\n      valType: 'enumerated',\n      values: ['v', 'h'],\n      dflt: 'h',\n      editType: 'plot',\n      description: ['When set in conjunction with `tiling.flip`, determines on', 'which side the root nodes are drawn in the chart. If', '`tiling.orientation` is *v* and `tiling.flip` is **, the root', 'nodes appear at the top. If `tiling.orientation` is *v* and', '`tiling.flip` is *y*, the root nodes appear at the bottom. If', '`tiling.orientation` is *h* and `tiling.flip` is **, the', 'root nodes appear at the left. If `tiling.orientation` is *h*', 'and `tiling.flip` is *x*, the root nodes appear at the right.'].join(' ')\n    },\n    flip: treemapAttrs.tiling.flip,\n    pad: {\n      valType: 'number',\n      min: 0,\n      dflt: 0,\n      editType: 'plot',\n      description: ['Sets the inner padding (in px).'].join(' ')\n    },\n    editType: 'calc'\n  },\n  marker: extendFlat({\n    colors: sunburstAttrs.marker.colors,\n    line: sunburstAttrs.marker.line,\n    pattern: pattern,\n    editType: 'calc'\n  }, colorScaleAttrs('marker', {\n    colorAttr: 'colors',\n    anim: false // TODO: set to anim: true?\n  })),\n  leaf: sunburstAttrs.leaf,\n  pathbar: treemapAttrs.pathbar,\n  text: pieAttrs.text,\n  textinfo: sunburstAttrs.textinfo,\n  // TODO: incorporate `label` and `value` in the eventData\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: constants.eventDataKeys.concat(['label', 'value'])\n  }),\n  hovertext: pieAttrs.hovertext,\n  hoverinfo: sunburstAttrs.hoverinfo,\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: constants.eventDataKeys\n  }),\n  textfont: pieAttrs.textfont,\n  insidetextfont: pieAttrs.insidetextfont,\n  outsidetextfont: treemapAttrs.outsidetextfont,\n  textposition: treemapAttrs.textposition,\n  sort: pieAttrs.sort,\n  root: sunburstAttrs.root,\n  domain: domainAttrs({\n    name: 'icicle',\n    trace: true,\n    editType: 'calc'\n  })\n};","map":{"version":3,"names":["hovertemplateAttrs","require","texttemplateAttrs","colorScaleAttrs","domainAttrs","attributes","pieAttrs","sunburstAttrs","treemapAttrs","constants","extendFlat","pattern","module","exports","labels","parents","values","branchvalues","count","level","maxdepth","tiling","orientation","valType","dflt","editType","description","join","flip","pad","min","marker","colors","line","colorAttr","anim","leaf","pathbar","text","textinfo","texttemplate","keys","eventDataKeys","concat","hovertext","hoverinfo","hovertemplate","textfont","insidetextfont","outsidetextfont","textposition","sort","root","domain","name","trace"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/icicle/attributes.js"],"sourcesContent":["'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar domainAttrs = require('../../plots/domain').attributes;\nvar pieAttrs = require('../pie/attributes');\nvar sunburstAttrs = require('../sunburst/attributes');\nvar treemapAttrs = require('../treemap/attributes');\nvar constants = require('../treemap/constants');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar pattern = require('../../components/drawing/attributes').pattern;\n\nmodule.exports = {\n    labels: sunburstAttrs.labels,\n    parents: sunburstAttrs.parents,\n\n    values: sunburstAttrs.values,\n    branchvalues: sunburstAttrs.branchvalues,\n    count: sunburstAttrs.count,\n\n    level: sunburstAttrs.level,\n    maxdepth: sunburstAttrs.maxdepth,\n\n    tiling: {\n        orientation: {\n            valType: 'enumerated',\n            values: ['v', 'h'],\n            dflt: 'h',\n            editType: 'plot',\n            description: [\n                'When set in conjunction with `tiling.flip`, determines on',\n                'which side the root nodes are drawn in the chart. If',\n                '`tiling.orientation` is *v* and `tiling.flip` is **, the root',\n                'nodes appear at the top. If `tiling.orientation` is *v* and',\n                '`tiling.flip` is *y*, the root nodes appear at the bottom. If',\n                '`tiling.orientation` is *h* and `tiling.flip` is **, the',\n                'root nodes appear at the left. If `tiling.orientation` is *h*',\n                'and `tiling.flip` is *x*, the root nodes appear at the right.',\n            ].join(' ')\n        },\n\n        flip: treemapAttrs.tiling.flip,\n\n        pad: {\n            valType: 'number',\n            min: 0,\n            dflt: 0,\n            editType: 'plot',\n            description: [\n                'Sets the inner padding (in px).'\n            ].join(' ')\n        },\n\n\n        editType: 'calc',\n    },\n\n    marker: extendFlat({\n        colors: sunburstAttrs.marker.colors,\n\n        line: sunburstAttrs.marker.line,\n\n        pattern: pattern,\n\n        editType: 'calc'\n    },\n        colorScaleAttrs('marker', {\n            colorAttr: 'colors',\n            anim: false // TODO: set to anim: true?\n        })\n    ),\n\n    leaf: sunburstAttrs.leaf,\n\n    pathbar: treemapAttrs.pathbar,\n\n    text: pieAttrs.text,\n    textinfo: sunburstAttrs.textinfo,\n    // TODO: incorporate `label` and `value` in the eventData\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\n        keys: constants.eventDataKeys.concat(['label', 'value'])\n    }),\n\n    hovertext: pieAttrs.hovertext,\n    hoverinfo: sunburstAttrs.hoverinfo,\n    hovertemplate: hovertemplateAttrs({}, {\n        keys: constants.eventDataKeys\n    }),\n\n    textfont: pieAttrs.textfont,\n    insidetextfont: pieAttrs.insidetextfont,\n    outsidetextfont: treemapAttrs.outsidetextfont,\n\n    textposition: treemapAttrs.textposition,\n    sort: pieAttrs.sort,\n    root: sunburstAttrs.root,\n\n    domain: domainAttrs({name: 'icicle', trace: true, editType: 'calc'}),\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}