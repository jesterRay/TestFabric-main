{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\nvar sanitizeHTML = require('../../lib/svg_text_utils').sanitizeHTML;\nvar convertTextOpts = require('./convert_text_opts');\nvar constants = require('./constants');\nfunction MapboxLayer(subplot, index) {\n  this.subplot = subplot;\n  this.uid = subplot.uid + '-' + index;\n  this.index = index;\n  this.idSource = 'source-' + this.uid;\n  this.idLayer = constants.layoutLayerPrefix + this.uid;\n\n  // some state variable to check if a remove/add step is needed\n  this.sourceType = null;\n  this.source = null;\n  this.layerType = null;\n  this.below = null;\n\n  // is layer currently visible\n  this.visible = false;\n}\nvar proto = MapboxLayer.prototype;\nproto.update = function update(opts) {\n  if (!this.visible) {\n    // IMPORTANT: must create source before layer to not cause errors\n    this.updateSource(opts);\n    this.updateLayer(opts);\n  } else if (this.needsNewImage(opts)) {\n    this.updateImage(opts);\n  } else if (this.needsNewSource(opts)) {\n    // IMPORTANT: must delete layer before source to not cause errors\n    this.removeLayer();\n    this.updateSource(opts);\n    this.updateLayer(opts);\n  } else if (this.needsNewLayer(opts)) {\n    this.updateLayer(opts);\n  } else {\n    this.updateStyle(opts);\n  }\n  this.visible = isVisible(opts);\n};\nproto.needsNewImage = function (opts) {\n  var map = this.subplot.map;\n  return map.getSource(this.idSource) && this.sourceType === 'image' && opts.sourcetype === 'image' && (this.source !== opts.source || JSON.stringify(this.coordinates) !== JSON.stringify(opts.coordinates));\n};\nproto.needsNewSource = function (opts) {\n  // for some reason changing layer to 'fill' or 'symbol'\n  // w/o changing the source throws an exception in mapbox-gl 0.18 ;\n  // stay safe and make new source on type changes\n  return this.sourceType !== opts.sourcetype || JSON.stringify(this.source) !== JSON.stringify(opts.source) || this.layerType !== opts.type;\n};\nproto.needsNewLayer = function (opts) {\n  return this.layerType !== opts.type || this.below !== this.subplot.belowLookup['layout-' + this.index];\n};\nproto.lookupBelow = function () {\n  return this.subplot.belowLookup['layout-' + this.index];\n};\nproto.updateImage = function (opts) {\n  var map = this.subplot.map;\n  map.getSource(this.idSource).updateImage({\n    url: opts.source,\n    coordinates: opts.coordinates\n  });\n\n  // Since the `updateImage` control flow doesn't call updateLayer,\n  // We need to take care of moving the image layer to match the location\n  // where updateLayer would have placed it.\n  var _below = this.findFollowingMapboxLayerId(this.lookupBelow());\n  if (_below !== null) {\n    this.subplot.map.moveLayer(this.idLayer, _below);\n  }\n};\nproto.updateSource = function (opts) {\n  var map = this.subplot.map;\n  if (map.getSource(this.idSource)) map.removeSource(this.idSource);\n  this.sourceType = opts.sourcetype;\n  this.source = opts.source;\n  if (!isVisible(opts)) return;\n  var sourceOpts = convertSourceOpts(opts);\n  map.addSource(this.idSource, sourceOpts);\n};\nproto.findFollowingMapboxLayerId = function (below) {\n  if (below === 'traces') {\n    var mapLayers = this.subplot.getMapLayers();\n\n    // find id of first plotly trace layer\n    for (var i = 0; i < mapLayers.length; i++) {\n      var layerId = mapLayers[i].id;\n      if (typeof layerId === 'string' && layerId.indexOf(constants.traceLayerPrefix) === 0) {\n        below = layerId;\n        break;\n      }\n    }\n  }\n  return below;\n};\nproto.updateLayer = function (opts) {\n  var subplot = this.subplot;\n  var convertedOpts = convertOpts(opts);\n  var below = this.lookupBelow();\n  var _below = this.findFollowingMapboxLayerId(below);\n  this.removeLayer();\n  if (isVisible(opts)) {\n    subplot.addLayer({\n      id: this.idLayer,\n      source: this.idSource,\n      'source-layer': opts.sourcelayer || '',\n      type: opts.type,\n      minzoom: opts.minzoom,\n      maxzoom: opts.maxzoom,\n      layout: convertedOpts.layout,\n      paint: convertedOpts.paint\n    }, _below);\n  }\n  this.layerType = opts.type;\n  this.below = below;\n};\nproto.updateStyle = function (opts) {\n  if (isVisible(opts)) {\n    var convertedOpts = convertOpts(opts);\n    this.subplot.setOptions(this.idLayer, 'setLayoutProperty', convertedOpts.layout);\n    this.subplot.setOptions(this.idLayer, 'setPaintProperty', convertedOpts.paint);\n  }\n};\nproto.removeLayer = function () {\n  var map = this.subplot.map;\n  if (map.getLayer(this.idLayer)) {\n    map.removeLayer(this.idLayer);\n  }\n};\nproto.dispose = function () {\n  var map = this.subplot.map;\n  if (map.getLayer(this.idLayer)) map.removeLayer(this.idLayer);\n  if (map.getSource(this.idSource)) map.removeSource(this.idSource);\n};\nfunction isVisible(opts) {\n  if (!opts.visible) return false;\n  var source = opts.source;\n  if (Array.isArray(source) && source.length > 0) {\n    for (var i = 0; i < source.length; i++) {\n      if (typeof source[i] !== 'string' || source[i].length === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return Lib.isPlainObject(source) || typeof source === 'string' && source.length > 0;\n}\nfunction convertOpts(opts) {\n  var layout = {};\n  var paint = {};\n  switch (opts.type) {\n    case 'circle':\n      Lib.extendFlat(paint, {\n        'circle-radius': opts.circle.radius,\n        'circle-color': opts.color,\n        'circle-opacity': opts.opacity\n      });\n      break;\n    case 'line':\n      Lib.extendFlat(paint, {\n        'line-width': opts.line.width,\n        'line-color': opts.color,\n        'line-opacity': opts.opacity,\n        'line-dasharray': opts.line.dash\n      });\n      break;\n    case 'fill':\n      Lib.extendFlat(paint, {\n        'fill-color': opts.color,\n        'fill-outline-color': opts.fill.outlinecolor,\n        'fill-opacity': opts.opacity\n\n        // no way to pass specify outline width at the moment\n      });\n      break;\n    case 'symbol':\n      var symbol = opts.symbol;\n      var textOpts = convertTextOpts(symbol.textposition, symbol.iconsize);\n      Lib.extendFlat(layout, {\n        'icon-image': symbol.icon + '-15',\n        'icon-size': symbol.iconsize / 10,\n        'text-field': symbol.text,\n        'text-size': symbol.textfont.size,\n        'text-anchor': textOpts.anchor,\n        'text-offset': textOpts.offset,\n        'symbol-placement': symbol.placement\n\n        // TODO font family\n        // 'text-font': symbol.textfont.family.split(', '),\n      });\n      Lib.extendFlat(paint, {\n        'icon-color': opts.color,\n        'text-color': symbol.textfont.color,\n        'text-opacity': opts.opacity\n      });\n      break;\n    case 'raster':\n      Lib.extendFlat(paint, {\n        'raster-fade-duration': 0,\n        'raster-opacity': opts.opacity\n      });\n      break;\n  }\n  return {\n    layout: layout,\n    paint: paint\n  };\n}\nfunction convertSourceOpts(opts) {\n  var sourceType = opts.sourcetype;\n  var source = opts.source;\n  var sourceOpts = {\n    type: sourceType\n  };\n  var field;\n  if (sourceType === 'geojson') {\n    field = 'data';\n  } else if (sourceType === 'vector') {\n    field = typeof source === 'string' ? 'url' : 'tiles';\n  } else if (sourceType === 'raster') {\n    field = 'tiles';\n    sourceOpts.tileSize = 256;\n  } else if (sourceType === 'image') {\n    field = 'url';\n    sourceOpts.coordinates = opts.coordinates;\n  }\n  sourceOpts[field] = source;\n  if (opts.sourceattribution) {\n    sourceOpts.attribution = sanitizeHTML(opts.sourceattribution);\n  }\n  return sourceOpts;\n}\nmodule.exports = function createMapboxLayer(subplot, index, opts) {\n  var mapboxLayer = new MapboxLayer(subplot, index);\n  mapboxLayer.update(opts);\n  return mapboxLayer;\n};","map":{"version":3,"names":["Lib","require","sanitizeHTML","convertTextOpts","constants","MapboxLayer","subplot","index","uid","idSource","idLayer","layoutLayerPrefix","sourceType","source","layerType","below","visible","proto","prototype","update","opts","updateSource","updateLayer","needsNewImage","updateImage","needsNewSource","removeLayer","needsNewLayer","updateStyle","isVisible","map","getSource","sourcetype","JSON","stringify","coordinates","type","belowLookup","lookupBelow","url","_below","findFollowingMapboxLayerId","moveLayer","removeSource","sourceOpts","convertSourceOpts","addSource","mapLayers","getMapLayers","i","length","layerId","id","indexOf","traceLayerPrefix","convertedOpts","convertOpts","addLayer","sourcelayer","minzoom","maxzoom","layout","paint","setOptions","getLayer","dispose","Array","isArray","isPlainObject","extendFlat","circle","radius","color","opacity","line","width","dash","fill","outlinecolor","symbol","textOpts","textposition","iconsize","icon","text","textfont","size","anchor","offset","placement","field","tileSize","sourceattribution","attribution","module","exports","createMapboxLayer","mapboxLayer"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/mapbox/layers.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar sanitizeHTML = require('../../lib/svg_text_utils').sanitizeHTML;\nvar convertTextOpts = require('./convert_text_opts');\nvar constants = require('./constants');\n\nfunction MapboxLayer(subplot, index) {\n    this.subplot = subplot;\n\n    this.uid = subplot.uid + '-' + index;\n    this.index = index;\n\n    this.idSource = 'source-' + this.uid;\n    this.idLayer = constants.layoutLayerPrefix + this.uid;\n\n    // some state variable to check if a remove/add step is needed\n    this.sourceType = null;\n    this.source = null;\n    this.layerType = null;\n    this.below = null;\n\n    // is layer currently visible\n    this.visible = false;\n}\n\nvar proto = MapboxLayer.prototype;\n\nproto.update = function update(opts) {\n    if(!this.visible) {\n        // IMPORTANT: must create source before layer to not cause errors\n        this.updateSource(opts);\n        this.updateLayer(opts);\n    } else if(this.needsNewImage(opts)) {\n        this.updateImage(opts);\n    } else if(this.needsNewSource(opts)) {\n        // IMPORTANT: must delete layer before source to not cause errors\n        this.removeLayer();\n        this.updateSource(opts);\n        this.updateLayer(opts);\n    } else if(this.needsNewLayer(opts)) {\n        this.updateLayer(opts);\n    } else {\n        this.updateStyle(opts);\n    }\n\n    this.visible = isVisible(opts);\n};\n\nproto.needsNewImage = function(opts) {\n    var map = this.subplot.map;\n    return (\n        map.getSource(this.idSource) &&\n        this.sourceType === 'image' &&\n        opts.sourcetype === 'image' &&\n        (this.source !== opts.source ||\n            JSON.stringify(this.coordinates) !==\n            JSON.stringify(opts.coordinates))\n    );\n};\n\nproto.needsNewSource = function(opts) {\n    // for some reason changing layer to 'fill' or 'symbol'\n    // w/o changing the source throws an exception in mapbox-gl 0.18 ;\n    // stay safe and make new source on type changes\n    return (\n        this.sourceType !== opts.sourcetype ||\n        JSON.stringify(this.source) !== JSON.stringify(opts.source) ||\n        this.layerType !== opts.type\n    );\n};\n\nproto.needsNewLayer = function(opts) {\n    return (\n        this.layerType !== opts.type ||\n        this.below !== this.subplot.belowLookup['layout-' + this.index]\n    );\n};\n\nproto.lookupBelow = function() {\n    return this.subplot.belowLookup['layout-' + this.index];\n};\n\nproto.updateImage = function(opts) {\n    var map = this.subplot.map;\n    map.getSource(this.idSource).updateImage({\n        url: opts.source, coordinates: opts.coordinates\n    });\n\n    // Since the `updateImage` control flow doesn't call updateLayer,\n    // We need to take care of moving the image layer to match the location\n    // where updateLayer would have placed it.\n    var _below = this.findFollowingMapboxLayerId(this.lookupBelow());\n    if(_below !== null) {\n        this.subplot.map.moveLayer(this.idLayer, _below);\n    }\n};\n\nproto.updateSource = function(opts) {\n    var map = this.subplot.map;\n\n    if(map.getSource(this.idSource)) map.removeSource(this.idSource);\n\n    this.sourceType = opts.sourcetype;\n    this.source = opts.source;\n\n    if(!isVisible(opts)) return;\n\n    var sourceOpts = convertSourceOpts(opts);\n\n    map.addSource(this.idSource, sourceOpts);\n};\n\nproto.findFollowingMapboxLayerId = function(below) {\n    if(below === 'traces') {\n        var mapLayers = this.subplot.getMapLayers();\n\n        // find id of first plotly trace layer\n        for(var i = 0; i < mapLayers.length; i++) {\n            var layerId = mapLayers[i].id;\n            if(typeof layerId === 'string' &&\n                layerId.indexOf(constants.traceLayerPrefix) === 0\n            ) {\n                below = layerId;\n                break;\n            }\n        }\n    }\n    return below;\n};\n\nproto.updateLayer = function(opts) {\n    var subplot = this.subplot;\n    var convertedOpts = convertOpts(opts);\n    var below = this.lookupBelow();\n    var _below = this.findFollowingMapboxLayerId(below);\n\n    this.removeLayer();\n\n    if(isVisible(opts)) {\n        subplot.addLayer({\n            id: this.idLayer,\n            source: this.idSource,\n            'source-layer': opts.sourcelayer || '',\n            type: opts.type,\n            minzoom: opts.minzoom,\n            maxzoom: opts.maxzoom,\n            layout: convertedOpts.layout,\n            paint: convertedOpts.paint\n        }, _below);\n    }\n\n    this.layerType = opts.type;\n    this.below = below;\n};\n\nproto.updateStyle = function(opts) {\n    if(isVisible(opts)) {\n        var convertedOpts = convertOpts(opts);\n        this.subplot.setOptions(this.idLayer, 'setLayoutProperty', convertedOpts.layout);\n        this.subplot.setOptions(this.idLayer, 'setPaintProperty', convertedOpts.paint);\n    }\n};\n\nproto.removeLayer = function() {\n    var map = this.subplot.map;\n    if(map.getLayer(this.idLayer)) {\n        map.removeLayer(this.idLayer);\n    }\n};\n\nproto.dispose = function() {\n    var map = this.subplot.map;\n    if(map.getLayer(this.idLayer)) map.removeLayer(this.idLayer);\n    if(map.getSource(this.idSource)) map.removeSource(this.idSource);\n};\n\nfunction isVisible(opts) {\n    if(!opts.visible) return false;\n\n    var source = opts.source;\n\n    if(Array.isArray(source) && source.length > 0) {\n        for(var i = 0; i < source.length; i++) {\n            if(typeof source[i] !== 'string' || source[i].length === 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    return Lib.isPlainObject(source) ||\n        (typeof source === 'string' && source.length > 0);\n}\n\nfunction convertOpts(opts) {\n    var layout = {};\n    var paint = {};\n\n    switch(opts.type) {\n        case 'circle':\n            Lib.extendFlat(paint, {\n                'circle-radius': opts.circle.radius,\n                'circle-color': opts.color,\n                'circle-opacity': opts.opacity\n            });\n            break;\n\n        case 'line':\n            Lib.extendFlat(paint, {\n                'line-width': opts.line.width,\n                'line-color': opts.color,\n                'line-opacity': opts.opacity,\n                'line-dasharray': opts.line.dash\n            });\n            break;\n\n        case 'fill':\n            Lib.extendFlat(paint, {\n                'fill-color': opts.color,\n                'fill-outline-color': opts.fill.outlinecolor,\n                'fill-opacity': opts.opacity\n\n                // no way to pass specify outline width at the moment\n            });\n            break;\n\n        case 'symbol':\n            var symbol = opts.symbol;\n            var textOpts = convertTextOpts(symbol.textposition, symbol.iconsize);\n\n            Lib.extendFlat(layout, {\n                'icon-image': symbol.icon + '-15',\n                'icon-size': symbol.iconsize / 10,\n\n                'text-field': symbol.text,\n                'text-size': symbol.textfont.size,\n                'text-anchor': textOpts.anchor,\n                'text-offset': textOpts.offset,\n                'symbol-placement': symbol.placement,\n\n                // TODO font family\n                // 'text-font': symbol.textfont.family.split(', '),\n            });\n\n            Lib.extendFlat(paint, {\n                'icon-color': opts.color,\n                'text-color': symbol.textfont.color,\n                'text-opacity': opts.opacity\n            });\n            break;\n        case 'raster':\n            Lib.extendFlat(paint, {\n                'raster-fade-duration': 0,\n                'raster-opacity': opts.opacity\n            });\n            break;\n    }\n\n    return {\n        layout: layout,\n        paint: paint\n    };\n}\n\nfunction convertSourceOpts(opts) {\n    var sourceType = opts.sourcetype;\n    var source = opts.source;\n    var sourceOpts = {type: sourceType};\n    var field;\n\n    if(sourceType === 'geojson') {\n        field = 'data';\n    } else if(sourceType === 'vector') {\n        field = typeof source === 'string' ? 'url' : 'tiles';\n    } else if(sourceType === 'raster') {\n        field = 'tiles';\n        sourceOpts.tileSize = 256;\n    } else if(sourceType === 'image') {\n        field = 'url';\n        sourceOpts.coordinates = opts.coordinates;\n    }\n\n    sourceOpts[field] = source;\n\n    if(opts.sourceattribution) {\n        sourceOpts.attribution = sanitizeHTML(opts.sourceattribution);\n    }\n\n    return sourceOpts;\n}\n\nmodule.exports = function createMapboxLayer(subplot, index, opts) {\n    var mapboxLayer = new MapboxLayer(subplot, index);\n\n    mapboxLayer.update(opts);\n\n    return mapboxLayer;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}