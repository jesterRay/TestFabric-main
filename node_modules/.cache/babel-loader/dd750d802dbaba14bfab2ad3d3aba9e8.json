{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  calc: require('./calc'),\n  plot: require('./plot').plot,\n  style: require('./style'),\n  colorbar: require('./colorbar'),\n  hoverPoints: require('./hover'),\n  moduleType: 'trace',\n  name: 'contour',\n  basePlotModule: require('../../plots/cartesian'),\n  categories: ['cartesian', 'svg', '2dMap', 'contour', 'showLegend'],\n  meta: {\n    description: ['The data from which contour lines are computed is set in `z`.', 'Data in `z` must be a {2D array} of numbers.', 'Say that `z` has N rows and M columns, then by default,', 'these N rows correspond to N y coordinates', '(set in `y` or auto-generated) and the M columns', 'correspond to M x coordinates (set in `x` or auto-generated).', 'By setting `transpose` to *true*, the above behavior is flipped.'].join(' ')\n  }\n};","map":{"version":3,"names":["module","exports","attributes","require","supplyDefaults","calc","plot","style","colorbar","hoverPoints","moduleType","name","basePlotModule","categories","meta","description","join"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/contour/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    attributes: require('./attributes'),\n    supplyDefaults: require('./defaults'),\n    calc: require('./calc'),\n    plot: require('./plot').plot,\n    style: require('./style'),\n    colorbar: require('./colorbar'),\n    hoverPoints: require('./hover'),\n\n    moduleType: 'trace',\n    name: 'contour',\n    basePlotModule: require('../../plots/cartesian'),\n    categories: ['cartesian', 'svg', '2dMap', 'contour', 'showLegend'],\n    meta: {\n        description: [\n            'The data from which contour lines are computed is set in `z`.',\n            'Data in `z` must be a {2D array} of numbers.',\n\n            'Say that `z` has N rows and M columns, then by default,',\n            'these N rows correspond to N y coordinates',\n            '(set in `y` or auto-generated) and the M columns',\n            'correspond to M x coordinates (set in `x` or auto-generated).',\n            'By setting `transpose` to *true*, the above behavior is flipped.'\n        ].join(' ')\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG;EACbC,UAAU,EAAEC,OAAO,CAAC,cAAc,CAAC;EACnCC,cAAc,EAAED,OAAO,CAAC,YAAY,CAAC;EACrCE,IAAI,EAAEF,OAAO,CAAC,QAAQ,CAAC;EACvBG,IAAI,EAAEH,OAAO,CAAC,QAAQ,CAAC,CAACG,IAAI;EAC5BC,KAAK,EAAEJ,OAAO,CAAC,SAAS,CAAC;EACzBK,QAAQ,EAAEL,OAAO,CAAC,YAAY,CAAC;EAC/BM,WAAW,EAAEN,OAAO,CAAC,SAAS,CAAC;EAE/BO,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE,SAAS;EACfC,cAAc,EAAET,OAAO,CAAC,uBAAuB,CAAC;EAChDU,UAAU,EAAE,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,CAAC;EAClEC,IAAI,EAAE;IACFC,WAAW,EAAE,CACT,+DAA+D,EAC/D,8CAA8C,EAE9C,yDAAyD,EACzD,4CAA4C,EAC5C,kDAAkD,EAClD,+DAA+D,EAC/D,kEAAkE,CACrE,CAACC,IAAI,CAAC,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}