{"ast":null,"code":"'use strict';\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar convert = require('../scattergl/convert');\nvar Axes = require('../../plots/cartesian/axes');\nvar TOO_MANY_POINTS = require('../scattergl/constants').TOO_MANY_POINTS;\nmodule.exports = function calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var subplotId = trace.subplot;\n  var radialAxis = fullLayout[subplotId].radialaxis;\n  var angularAxis = fullLayout[subplotId].angularaxis;\n  var rArray = trace._r = radialAxis.makeCalcdata(trace, 'r');\n  var thetaArray = trace._theta = angularAxis.makeCalcdata(trace, 'theta');\n  var len = trace._length;\n  var stash = {};\n  if (len < rArray.length) rArray = rArray.slice(0, len);\n  if (len < thetaArray.length) thetaArray = thetaArray.slice(0, len);\n  stash.r = rArray;\n  stash.theta = thetaArray;\n  calcColorscale(gd, trace);\n\n  // only compute 'style' options in calc, as position options\n  // depend on the radial range and must be set in plot\n  var opts = stash.opts = convert.style(gd, trace);\n\n  // For graphs with very large number of points and array marker.size,\n  // use average marker size instead to speed things up.\n  var ppad;\n  if (len < TOO_MANY_POINTS) {\n    ppad = calcMarkerSize(trace, len);\n  } else if (opts.marker) {\n    ppad = 2 * (opts.marker.sizeAvg || Math.max(opts.marker.size, 3));\n  }\n  trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {\n    ppad: ppad\n  });\n  return [{\n    x: false,\n    y: false,\n    t: stash,\n    trace: trace\n  }];\n};","map":{"version":3,"names":["calcColorscale","require","calcMarkerSize","convert","Axes","TOO_MANY_POINTS","module","exports","calc","gd","trace","fullLayout","_fullLayout","subplotId","subplot","radialAxis","radialaxis","angularAxis","angularaxis","rArray","_r","makeCalcdata","thetaArray","_theta","len","_length","stash","length","slice","r","theta","opts","style","ppad","marker","sizeAvg","Math","max","size","_extremes","x","findExtremes","y","t"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scatterpolargl/calc.js"],"sourcesContent":["'use strict';\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar convert = require('../scattergl/convert');\nvar Axes = require('../../plots/cartesian/axes');\nvar TOO_MANY_POINTS = require('../scattergl/constants').TOO_MANY_POINTS;\n\nmodule.exports = function calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var subplotId = trace.subplot;\n    var radialAxis = fullLayout[subplotId].radialaxis;\n    var angularAxis = fullLayout[subplotId].angularaxis;\n    var rArray = trace._r = radialAxis.makeCalcdata(trace, 'r');\n    var thetaArray = trace._theta = angularAxis.makeCalcdata(trace, 'theta');\n    var len = trace._length;\n    var stash = {};\n\n    if(len < rArray.length) rArray = rArray.slice(0, len);\n    if(len < thetaArray.length) thetaArray = thetaArray.slice(0, len);\n\n    stash.r = rArray;\n    stash.theta = thetaArray;\n\n    calcColorscale(gd, trace);\n\n    // only compute 'style' options in calc, as position options\n    // depend on the radial range and must be set in plot\n    var opts = stash.opts = convert.style(gd, trace);\n\n    // For graphs with very large number of points and array marker.size,\n    // use average marker size instead to speed things up.\n    var ppad;\n    if(len < TOO_MANY_POINTS) {\n        ppad = calcMarkerSize(trace, len);\n    } else if(opts.marker) {\n        ppad = 2 * (opts.marker.sizeAvg || Math.max(opts.marker.size, 3));\n    }\n    trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {ppad: ppad});\n\n    return [{x: false, y: false, t: stash, trace: trace}];\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAC1D,IAAIC,cAAc,GAAGD,OAAO,CAAC,iBAAiB,CAAC,CAACC,cAAc;AAC9D,IAAIC,OAAO,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIG,IAAI,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAChD,IAAII,eAAe,GAAGJ,OAAO,CAAC,wBAAwB,CAAC,CAACI,eAAe;AAEvEC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,UAAU,GAAGF,EAAE,CAACG,WAAW;EAC/B,IAAIC,SAAS,GAAGH,KAAK,CAACI,OAAO;EAC7B,IAAIC,UAAU,GAAGJ,UAAU,CAACE,SAAS,CAAC,CAACG,UAAU;EACjD,IAAIC,WAAW,GAAGN,UAAU,CAACE,SAAS,CAAC,CAACK,WAAW;EACnD,IAAIC,MAAM,GAAGT,KAAK,CAACU,EAAE,GAAGL,UAAU,CAACM,YAAY,CAACX,KAAK,EAAE,GAAG,CAAC;EAC3D,IAAIY,UAAU,GAAGZ,KAAK,CAACa,MAAM,GAAGN,WAAW,CAACI,YAAY,CAACX,KAAK,EAAE,OAAO,CAAC;EACxE,IAAIc,GAAG,GAAGd,KAAK,CAACe,OAAO;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,IAAGF,GAAG,GAAGL,MAAM,CAACQ,MAAM,EAAER,MAAM,GAAGA,MAAM,CAACS,KAAK,CAAC,CAAC,EAAEJ,GAAG,CAAC;EACrD,IAAGA,GAAG,GAAGF,UAAU,CAACK,MAAM,EAAEL,UAAU,GAAGA,UAAU,CAACM,KAAK,CAAC,CAAC,EAAEJ,GAAG,CAAC;EAEjEE,KAAK,CAACG,CAAC,GAAGV,MAAM;EAChBO,KAAK,CAACI,KAAK,GAAGR,UAAU;EAExBtB,cAAc,CAACS,EAAE,EAAEC,KAAK,CAAC;;EAEzB;EACA;EACA,IAAIqB,IAAI,GAAGL,KAAK,CAACK,IAAI,GAAG5B,OAAO,CAAC6B,KAAK,CAACvB,EAAE,EAAEC,KAAK,CAAC;;EAEhD;EACA;EACA,IAAIuB,IAAI;EACR,IAAGT,GAAG,GAAGnB,eAAe,EAAE;IACtB4B,IAAI,GAAG/B,cAAc,CAACQ,KAAK,EAAEc,GAAG,CAAC;EACrC,CAAC,MAAM,IAAGO,IAAI,CAACG,MAAM,EAAE;IACnBD,IAAI,GAAG,CAAC,IAAIF,IAAI,CAACG,MAAM,CAACC,OAAO,IAAIC,IAAI,CAACC,GAAG,CAACN,IAAI,CAACG,MAAM,CAACI,IAAI,EAAE,CAAC,CAAC,CAAC;EACrE;EACA5B,KAAK,CAAC6B,SAAS,CAACC,CAAC,GAAGpC,IAAI,CAACqC,YAAY,CAAC1B,UAAU,EAAEI,MAAM,EAAE;IAACc,IAAI,EAAEA;EAAI,CAAC,CAAC;EAEvE,OAAO,CAAC;IAACO,CAAC,EAAE,KAAK;IAAEE,CAAC,EAAE,KAAK;IAAEC,CAAC,EAAEjB,KAAK;IAAEhB,KAAK,EAAEA;EAAK,CAAC,CAAC;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}