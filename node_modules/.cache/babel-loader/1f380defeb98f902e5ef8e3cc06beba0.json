{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar geoJsonUtils = require('../../lib/geojson_utils');\nvar Colorscale = require('../../components/colorscale');\nvar Drawing = require('../../components/drawing');\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar subTypes = require('../scatter/subtypes');\nvar isSupportedFont = require('./constants').isSupportedFont;\nvar convertTextOpts = require('../../plots/mapbox/convert_text_opts');\nvar appendArrayPointValue = require('../../components/fx/helpers').appendArrayPointValue;\nvar NEWLINES = require('../../lib/svg_text_utils').NEWLINES;\nvar BR_TAG_ALL = require('../../lib/svg_text_utils').BR_TAG_ALL;\nmodule.exports = function convert(gd, calcTrace) {\n  var trace = calcTrace[0].trace;\n  var isVisible = trace.visible === true && trace._length !== 0;\n  var hasFill = trace.fill !== 'none';\n  var hasLines = subTypes.hasLines(trace);\n  var hasMarkers = subTypes.hasMarkers(trace);\n  var hasText = subTypes.hasText(trace);\n  var hasCircles = hasMarkers && trace.marker.symbol === 'circle';\n  var hasSymbols = hasMarkers && trace.marker.symbol !== 'circle';\n  var hasCluster = trace.cluster && trace.cluster.enabled;\n  var fill = initContainer('fill');\n  var line = initContainer('line');\n  var circle = initContainer('circle');\n  var symbol = initContainer('symbol');\n  var opts = {\n    fill: fill,\n    line: line,\n    circle: circle,\n    symbol: symbol\n  };\n\n  // early return if not visible or placeholder\n  if (!isVisible) return opts;\n\n  // fill layer and line layer use the same coords\n  var lineCoords;\n  if (hasFill || hasLines) {\n    lineCoords = geoJsonUtils.calcTraceToLineCoords(calcTrace);\n  }\n  if (hasFill) {\n    fill.geojson = geoJsonUtils.makePolygon(lineCoords);\n    fill.layout.visibility = 'visible';\n    Lib.extendFlat(fill.paint, {\n      'fill-color': trace.fillcolor\n    });\n  }\n  if (hasLines) {\n    line.geojson = geoJsonUtils.makeLine(lineCoords);\n    line.layout.visibility = 'visible';\n    Lib.extendFlat(line.paint, {\n      'line-width': trace.line.width,\n      'line-color': trace.line.color,\n      'line-opacity': trace.opacity\n    });\n\n    // TODO convert line.dash into line-dasharray\n  }\n  if (hasCircles) {\n    var circleOpts = makeCircleOpts(calcTrace);\n    circle.geojson = circleOpts.geojson;\n    circle.layout.visibility = 'visible';\n    if (hasCluster) {\n      circle.filter = ['!', ['has', 'point_count']];\n      opts.cluster = {\n        type: 'circle',\n        filter: ['has', 'point_count'],\n        layout: {\n          visibility: 'visible'\n        },\n        paint: {\n          'circle-color': arrayifyAttribute(trace.cluster.color, trace.cluster.step),\n          'circle-radius': arrayifyAttribute(trace.cluster.size, trace.cluster.step),\n          'circle-opacity': arrayifyAttribute(trace.cluster.opacity, trace.cluster.step)\n        }\n      };\n      opts.clusterCount = {\n        type: 'symbol',\n        filter: ['has', 'point_count'],\n        paint: {},\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': getTextFont(trace),\n          'text-size': 12\n        }\n      };\n    }\n    Lib.extendFlat(circle.paint, {\n      'circle-color': circleOpts.mcc,\n      'circle-radius': circleOpts.mrc,\n      'circle-opacity': circleOpts.mo\n    });\n  }\n  if (hasCircles && hasCluster) {\n    circle.filter = ['!', ['has', 'point_count']];\n  }\n  if (hasSymbols || hasText) {\n    symbol.geojson = makeSymbolGeoJSON(calcTrace, gd);\n    Lib.extendFlat(symbol.layout, {\n      visibility: 'visible',\n      'icon-image': '{symbol}-15',\n      'text-field': '{text}'\n    });\n    if (hasSymbols) {\n      Lib.extendFlat(symbol.layout, {\n        'icon-size': trace.marker.size / 10\n      });\n      if ('angle' in trace.marker && trace.marker.angle !== 'auto') {\n        Lib.extendFlat(symbol.layout, {\n          // unfortunately cant use {angle} do to this issue:\n          // https://github.com/mapbox/mapbox-gl-js/issues/873\n          'icon-rotate': {\n            type: 'identity',\n            property: 'angle'\n          },\n          'icon-rotation-alignment': 'map'\n        });\n      }\n      symbol.layout['icon-allow-overlap'] = trace.marker.allowoverlap;\n      Lib.extendFlat(symbol.paint, {\n        'icon-opacity': trace.opacity * trace.marker.opacity,\n        // TODO does not work ??\n        'icon-color': trace.marker.color\n      });\n    }\n    if (hasText) {\n      var iconSize = (trace.marker || {}).size;\n      var textOpts = convertTextOpts(trace.textposition, iconSize);\n\n      // all data-driven below !!\n\n      Lib.extendFlat(symbol.layout, {\n        'text-size': trace.textfont.size,\n        'text-anchor': textOpts.anchor,\n        'text-offset': textOpts.offset,\n        'text-font': getTextFont(trace)\n      });\n      Lib.extendFlat(symbol.paint, {\n        'text-color': trace.textfont.color,\n        'text-opacity': trace.opacity\n      });\n    }\n  }\n  return opts;\n};\nfunction initContainer(type) {\n  return {\n    type: type,\n    geojson: geoJsonUtils.makeBlank(),\n    layout: {\n      visibility: 'none'\n    },\n    filter: null,\n    paint: {}\n  };\n}\nfunction makeCircleOpts(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var marker = trace.marker;\n  var selectedpoints = trace.selectedpoints;\n  var arrayColor = Lib.isArrayOrTypedArray(marker.color);\n  var arraySize = Lib.isArrayOrTypedArray(marker.size);\n  var arrayOpacity = Lib.isArrayOrTypedArray(marker.opacity);\n  var i;\n  function addTraceOpacity(o) {\n    return trace.opacity * o;\n  }\n  function size2radius(s) {\n    return s / 2;\n  }\n  var colorFn;\n  if (arrayColor) {\n    if (Colorscale.hasColorscale(trace, 'marker')) {\n      colorFn = Colorscale.makeColorScaleFuncFromTrace(marker);\n    } else {\n      colorFn = Lib.identity;\n    }\n  }\n  var sizeFn;\n  if (arraySize) {\n    sizeFn = makeBubbleSizeFn(trace);\n  }\n  var opacityFn;\n  if (arrayOpacity) {\n    opacityFn = function (mo) {\n      var mo2 = isNumeric(mo) ? +Lib.constrain(mo, 0, 1) : 0;\n      return addTraceOpacity(mo2);\n    };\n  }\n  var features = [];\n  for (i = 0; i < calcTrace.length; i++) {\n    var calcPt = calcTrace[i];\n    var lonlat = calcPt.lonlat;\n    if (isBADNUM(lonlat)) continue;\n    var props = {};\n    if (colorFn) props.mcc = calcPt.mcc = colorFn(calcPt.mc);\n    if (sizeFn) props.mrc = calcPt.mrc = sizeFn(calcPt.ms);\n    if (opacityFn) props.mo = opacityFn(calcPt.mo);\n    if (selectedpoints) props.selected = calcPt.selected || 0;\n    features.push({\n      type: 'Feature',\n      id: i + 1,\n      geometry: {\n        type: 'Point',\n        coordinates: lonlat\n      },\n      properties: props\n    });\n  }\n  var fns;\n  if (selectedpoints) {\n    fns = Drawing.makeSelectedPointStyleFns(trace);\n    for (i = 0; i < features.length; i++) {\n      var d = features[i].properties;\n      if (fns.selectedOpacityFn) {\n        d.mo = addTraceOpacity(fns.selectedOpacityFn(d));\n      }\n      if (fns.selectedColorFn) {\n        d.mcc = fns.selectedColorFn(d);\n      }\n      if (fns.selectedSizeFn) {\n        d.mrc = fns.selectedSizeFn(d);\n      }\n    }\n  }\n  return {\n    geojson: {\n      type: 'FeatureCollection',\n      features: features\n    },\n    mcc: arrayColor || fns && fns.selectedColorFn ? {\n      type: 'identity',\n      property: 'mcc'\n    } : marker.color,\n    mrc: arraySize || fns && fns.selectedSizeFn ? {\n      type: 'identity',\n      property: 'mrc'\n    } : size2radius(marker.size),\n    mo: arrayOpacity || fns && fns.selectedOpacityFn ? {\n      type: 'identity',\n      property: 'mo'\n    } : addTraceOpacity(marker.opacity)\n  };\n}\nfunction makeSymbolGeoJSON(calcTrace, gd) {\n  var fullLayout = gd._fullLayout;\n  var trace = calcTrace[0].trace;\n  var marker = trace.marker || {};\n  var symbol = marker.symbol;\n  var angle = marker.angle;\n  var fillSymbol = symbol !== 'circle' ? getFillFunc(symbol) : blankFillFunc;\n  var fillAngle = angle !== 'auto' ? getFillFunc(angle, true) : blankFillFunc;\n  var fillText = subTypes.hasText(trace) ? getFillFunc(trace.text) : blankFillFunc;\n  var features = [];\n  for (var i = 0; i < calcTrace.length; i++) {\n    var calcPt = calcTrace[i];\n    if (isBADNUM(calcPt.lonlat)) continue;\n    var texttemplate = trace.texttemplate;\n    var text;\n    if (texttemplate) {\n      var tt = Array.isArray(texttemplate) ? texttemplate[i] || '' : texttemplate;\n      var labels = trace._module.formatLabels(calcPt, trace, fullLayout);\n      var pointValues = {};\n      appendArrayPointValue(pointValues, trace, calcPt.i);\n      var meta = trace._meta || {};\n      text = Lib.texttemplateString(tt, labels, fullLayout._d3locale, pointValues, calcPt, meta);\n    } else {\n      text = fillText(i);\n    }\n    if (text) {\n      text = text.replace(NEWLINES, '').replace(BR_TAG_ALL, '\\n');\n    }\n    features.push({\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: calcPt.lonlat\n      },\n      properties: {\n        symbol: fillSymbol(i),\n        angle: fillAngle(i),\n        text: text\n      }\n    });\n  }\n  return {\n    type: 'FeatureCollection',\n    features: features\n  };\n}\nfunction getFillFunc(attr, numeric) {\n  if (Lib.isArrayOrTypedArray(attr)) {\n    if (numeric) {\n      return function (i) {\n        return isNumeric(attr[i]) ? +attr[i] : 0;\n      };\n    }\n    return function (i) {\n      return attr[i];\n    };\n  } else if (attr) {\n    return function () {\n      return attr;\n    };\n  } else {\n    return blankFillFunc;\n  }\n}\nfunction blankFillFunc() {\n  return '';\n}\n\n// only need to check lon (OR lat)\nfunction isBADNUM(lonlat) {\n  return lonlat[0] === BADNUM;\n}\nfunction arrayifyAttribute(values, step) {\n  var newAttribute;\n  if (Lib.isArrayOrTypedArray(values) && Lib.isArrayOrTypedArray(step)) {\n    newAttribute = ['step', ['get', 'point_count'], values[0]];\n    for (var idx = 1; idx < values.length; idx++) {\n      newAttribute.push(step[idx - 1], values[idx]);\n    }\n  } else {\n    newAttribute = values;\n  }\n  return newAttribute;\n}\nfunction getTextFont(trace) {\n  var font = trace.textfont;\n  var family = font.family;\n  var style = font.style;\n  var weight = font.weight;\n  var parts = family.split(' ');\n  var isItalic = parts[parts.length - 1] === 'Italic';\n  if (isItalic) parts.pop();\n  isItalic = isItalic || style === 'italic';\n  var str = parts.join(' ');\n  if (weight === 'bold' && parts.indexOf('Bold') === -1) {\n    str += ' Bold';\n  } else if (weight <= 1000) {\n    // numeric font-weight\n    // See supportedFonts\n\n    if (parts[0] === 'Metropolis') {\n      str = 'Metropolis';\n      if (weight > 850) str += ' Black';else if (weight > 750) str += ' Extra Bold';else if (weight > 650) str += ' Bold';else if (weight > 550) str += ' Semi Bold';else if (weight > 450) str += ' Medium';else if (weight > 350) str += ' Regular';else if (weight > 250) str += ' Light';else if (weight > 150) str += ' Extra Light';else str += ' Thin';\n    } else if (parts.slice(0, 2).join(' ') === 'Open Sans') {\n      str = 'Open Sans';\n      if (weight > 750) str += ' Extrabold';else if (weight > 650) str += ' Bold';else if (weight > 550) str += ' Semibold';else if (weight > 350) str += ' Regular';else str += ' Light';\n    } else if (parts.slice(0, 3).join(' ') === 'Klokantech Noto Sans') {\n      str = 'Klokantech Noto Sans';\n      if (parts[3] === 'CJK') str += ' CJK';\n      str += weight > 500 ? ' Bold' : ' Regular';\n    }\n  }\n  if (isItalic) str += ' Italic';\n  if (str === 'Open Sans Regular Italic') str = 'Open Sans Italic';else if (str === 'Open Sans Regular Bold') str = 'Open Sans Bold';else if (str === 'Open Sans Regular Bold Italic') str = 'Open Sans Bold Italic';else if (str === 'Klokantech Noto Sans Regular Italic') str = 'Klokantech Noto Sans Italic';\n\n  // Ensure the result is a supported font\n  if (!isSupportedFont(str)) {\n    str = family;\n  }\n  var textFont = str.split(', ');\n  return textFont;\n}","map":{"version":3,"names":["isNumeric","require","Lib","BADNUM","geoJsonUtils","Colorscale","Drawing","makeBubbleSizeFn","subTypes","isSupportedFont","convertTextOpts","appendArrayPointValue","NEWLINES","BR_TAG_ALL","module","exports","convert","gd","calcTrace","trace","isVisible","visible","_length","hasFill","fill","hasLines","hasMarkers","hasText","hasCircles","marker","symbol","hasSymbols","hasCluster","cluster","enabled","initContainer","line","circle","opts","lineCoords","calcTraceToLineCoords","geojson","makePolygon","layout","visibility","extendFlat","paint","fillcolor","makeLine","width","color","opacity","circleOpts","makeCircleOpts","filter","type","arrayifyAttribute","step","size","clusterCount","getTextFont","mcc","mrc","mo","makeSymbolGeoJSON","angle","property","allowoverlap","iconSize","textOpts","textposition","textfont","anchor","offset","makeBlank","selectedpoints","arrayColor","isArrayOrTypedArray","arraySize","arrayOpacity","i","addTraceOpacity","o","size2radius","s","colorFn","hasColorscale","makeColorScaleFuncFromTrace","identity","sizeFn","opacityFn","mo2","constrain","features","length","calcPt","lonlat","isBADNUM","props","mc","ms","selected","push","id","geometry","coordinates","properties","fns","makeSelectedPointStyleFns","d","selectedOpacityFn","selectedColorFn","selectedSizeFn","fullLayout","_fullLayout","fillSymbol","getFillFunc","blankFillFunc","fillAngle","fillText","text","texttemplate","tt","Array","isArray","labels","_module","formatLabels","pointValues","meta","_meta","texttemplateString","_d3locale","replace","attr","numeric","values","newAttribute","idx","font","family","style","weight","parts","split","isItalic","pop","str","join","indexOf","slice","textFont"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scattermapbox/convert.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar geoJsonUtils = require('../../lib/geojson_utils');\n\nvar Colorscale = require('../../components/colorscale');\nvar Drawing = require('../../components/drawing');\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar subTypes = require('../scatter/subtypes');\nvar isSupportedFont = require('./constants').isSupportedFont;\nvar convertTextOpts = require('../../plots/mapbox/convert_text_opts');\nvar appendArrayPointValue = require('../../components/fx/helpers').appendArrayPointValue;\n\nvar NEWLINES = require('../../lib/svg_text_utils').NEWLINES;\nvar BR_TAG_ALL = require('../../lib/svg_text_utils').BR_TAG_ALL;\n\nmodule.exports = function convert(gd, calcTrace) {\n    var trace = calcTrace[0].trace;\n\n    var isVisible = (trace.visible === true && trace._length !== 0);\n    var hasFill = (trace.fill !== 'none');\n    var hasLines = subTypes.hasLines(trace);\n    var hasMarkers = subTypes.hasMarkers(trace);\n    var hasText = subTypes.hasText(trace);\n    var hasCircles = (hasMarkers && trace.marker.symbol === 'circle');\n    var hasSymbols = (hasMarkers && trace.marker.symbol !== 'circle');\n    var hasCluster = trace.cluster && trace.cluster.enabled;\n\n    var fill = initContainer('fill');\n    var line = initContainer('line');\n    var circle = initContainer('circle');\n    var symbol = initContainer('symbol');\n\n    var opts = {\n        fill: fill,\n        line: line,\n        circle: circle,\n        symbol: symbol\n    };\n\n    // early return if not visible or placeholder\n    if(!isVisible) return opts;\n\n    // fill layer and line layer use the same coords\n    var lineCoords;\n    if(hasFill || hasLines) {\n        lineCoords = geoJsonUtils.calcTraceToLineCoords(calcTrace);\n    }\n\n    if(hasFill) {\n        fill.geojson = geoJsonUtils.makePolygon(lineCoords);\n        fill.layout.visibility = 'visible';\n\n        Lib.extendFlat(fill.paint, {\n            'fill-color': trace.fillcolor\n        });\n    }\n\n    if(hasLines) {\n        line.geojson = geoJsonUtils.makeLine(lineCoords);\n        line.layout.visibility = 'visible';\n\n        Lib.extendFlat(line.paint, {\n            'line-width': trace.line.width,\n            'line-color': trace.line.color,\n            'line-opacity': trace.opacity\n        });\n\n        // TODO convert line.dash into line-dasharray\n    }\n\n    if(hasCircles) {\n        var circleOpts = makeCircleOpts(calcTrace);\n        circle.geojson = circleOpts.geojson;\n        circle.layout.visibility = 'visible';\n        if(hasCluster) {\n            circle.filter = ['!', ['has', 'point_count']];\n            opts.cluster = {\n                type: 'circle',\n                filter: ['has', 'point_count'],\n                layout: {visibility: 'visible'},\n                paint: {\n                    'circle-color': arrayifyAttribute(trace.cluster.color, trace.cluster.step),\n                    'circle-radius': arrayifyAttribute(trace.cluster.size, trace.cluster.step),\n                    'circle-opacity': arrayifyAttribute(trace.cluster.opacity, trace.cluster.step),\n                },\n            };\n            opts.clusterCount = {\n                type: 'symbol',\n                filter: ['has', 'point_count'],\n                paint: {},\n                layout: {\n                    'text-field': '{point_count_abbreviated}',\n                    'text-font': getTextFont(trace),\n                    'text-size': 12\n                }\n            };\n        }\n\n        Lib.extendFlat(circle.paint, {\n            'circle-color': circleOpts.mcc,\n            'circle-radius': circleOpts.mrc,\n            'circle-opacity': circleOpts.mo\n        });\n    }\n\n    if(hasCircles && hasCluster) {\n        circle.filter = ['!', ['has', 'point_count']];\n    }\n\n    if(hasSymbols || hasText) {\n        symbol.geojson = makeSymbolGeoJSON(calcTrace, gd);\n\n        Lib.extendFlat(symbol.layout, {\n            visibility: 'visible',\n            'icon-image': '{symbol}-15',\n            'text-field': '{text}'\n        });\n\n        if(hasSymbols) {\n            Lib.extendFlat(symbol.layout, {\n                'icon-size': trace.marker.size / 10\n            });\n\n            if('angle' in trace.marker && trace.marker.angle !== 'auto') {\n                Lib.extendFlat(symbol.layout, {\n                // unfortunately cant use {angle} do to this issue:\n                // https://github.com/mapbox/mapbox-gl-js/issues/873\n                    'icon-rotate': {\n                        type: 'identity', property: 'angle'\n                    },\n                    'icon-rotation-alignment': 'map'\n                });\n            }\n\n            symbol.layout['icon-allow-overlap'] = trace.marker.allowoverlap;\n\n            Lib.extendFlat(symbol.paint, {\n                'icon-opacity': trace.opacity * trace.marker.opacity,\n\n                // TODO does not work ??\n                'icon-color': trace.marker.color\n            });\n        }\n\n        if(hasText) {\n            var iconSize = (trace.marker || {}).size;\n            var textOpts = convertTextOpts(trace.textposition, iconSize);\n\n            // all data-driven below !!\n\n            Lib.extendFlat(symbol.layout, {\n                'text-size': trace.textfont.size,\n                'text-anchor': textOpts.anchor,\n                'text-offset': textOpts.offset,\n                'text-font': getTextFont(trace)\n            });\n\n            Lib.extendFlat(symbol.paint, {\n                'text-color': trace.textfont.color,\n                'text-opacity': trace.opacity\n            });\n        }\n    }\n\n    return opts;\n};\n\nfunction initContainer(type) {\n    return {\n        type: type,\n        geojson: geoJsonUtils.makeBlank(),\n        layout: { visibility: 'none' },\n        filter: null,\n        paint: {}\n    };\n}\n\nfunction makeCircleOpts(calcTrace) {\n    var trace = calcTrace[0].trace;\n    var marker = trace.marker;\n    var selectedpoints = trace.selectedpoints;\n    var arrayColor = Lib.isArrayOrTypedArray(marker.color);\n    var arraySize = Lib.isArrayOrTypedArray(marker.size);\n    var arrayOpacity = Lib.isArrayOrTypedArray(marker.opacity);\n    var i;\n\n    function addTraceOpacity(o) { return trace.opacity * o; }\n\n    function size2radius(s) { return s / 2; }\n\n    var colorFn;\n    if(arrayColor) {\n        if(Colorscale.hasColorscale(trace, 'marker')) {\n            colorFn = Colorscale.makeColorScaleFuncFromTrace(marker);\n        } else {\n            colorFn = Lib.identity;\n        }\n    }\n\n    var sizeFn;\n    if(arraySize) {\n        sizeFn = makeBubbleSizeFn(trace);\n    }\n\n    var opacityFn;\n    if(arrayOpacity) {\n        opacityFn = function(mo) {\n            var mo2 = isNumeric(mo) ? +Lib.constrain(mo, 0, 1) : 0;\n            return addTraceOpacity(mo2);\n        };\n    }\n\n    var features = [];\n    for(i = 0; i < calcTrace.length; i++) {\n        var calcPt = calcTrace[i];\n        var lonlat = calcPt.lonlat;\n\n        if(isBADNUM(lonlat)) continue;\n\n        var props = {};\n        if(colorFn) props.mcc = calcPt.mcc = colorFn(calcPt.mc);\n        if(sizeFn) props.mrc = calcPt.mrc = sizeFn(calcPt.ms);\n        if(opacityFn) props.mo = opacityFn(calcPt.mo);\n        if(selectedpoints) props.selected = calcPt.selected || 0;\n\n        features.push({\n            type: 'Feature',\n            id: i + 1,\n            geometry: { type: 'Point', coordinates: lonlat },\n            properties: props\n        });\n    }\n\n    var fns;\n    if(selectedpoints) {\n        fns = Drawing.makeSelectedPointStyleFns(trace);\n\n        for(i = 0; i < features.length; i++) {\n            var d = features[i].properties;\n\n            if(fns.selectedOpacityFn) {\n                d.mo = addTraceOpacity(fns.selectedOpacityFn(d));\n            }\n            if(fns.selectedColorFn) {\n                d.mcc = fns.selectedColorFn(d);\n            }\n            if(fns.selectedSizeFn) {\n                d.mrc = fns.selectedSizeFn(d);\n            }\n        }\n    }\n\n    return {\n        geojson: {type: 'FeatureCollection', features: features},\n        mcc: arrayColor || (fns && fns.selectedColorFn) ?\n            {type: 'identity', property: 'mcc'} :\n            marker.color,\n        mrc: arraySize || (fns && fns.selectedSizeFn) ?\n            {type: 'identity', property: 'mrc'} :\n            size2radius(marker.size),\n        mo: arrayOpacity || (fns && fns.selectedOpacityFn) ?\n            {type: 'identity', property: 'mo'} :\n            addTraceOpacity(marker.opacity)\n    };\n}\n\nfunction makeSymbolGeoJSON(calcTrace, gd) {\n    var fullLayout = gd._fullLayout;\n    var trace = calcTrace[0].trace;\n\n    var marker = trace.marker || {};\n    var symbol = marker.symbol;\n    var angle = marker.angle;\n\n    var fillSymbol = (symbol !== 'circle') ?\n        getFillFunc(symbol) :\n        blankFillFunc;\n\n    var fillAngle = (angle !== 'auto') ?\n        getFillFunc(angle, true) :\n        blankFillFunc;\n\n    var fillText = subTypes.hasText(trace) ?\n        getFillFunc(trace.text) :\n        blankFillFunc;\n\n\n    var features = [];\n\n    for(var i = 0; i < calcTrace.length; i++) {\n        var calcPt = calcTrace[i];\n\n        if(isBADNUM(calcPt.lonlat)) continue;\n\n        var texttemplate = trace.texttemplate;\n        var text;\n\n        if(texttemplate) {\n            var tt = Array.isArray(texttemplate) ? (texttemplate[i] || '') : texttemplate;\n            var labels = trace._module.formatLabels(calcPt, trace, fullLayout);\n            var pointValues = {};\n            appendArrayPointValue(pointValues, trace, calcPt.i);\n            var meta = trace._meta || {};\n            text = Lib.texttemplateString(tt, labels, fullLayout._d3locale, pointValues, calcPt, meta);\n        } else {\n            text = fillText(i);\n        }\n\n        if(text) {\n            text = text.replace(NEWLINES, '').replace(BR_TAG_ALL, '\\n');\n        }\n\n        features.push({\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: calcPt.lonlat\n            },\n            properties: {\n                symbol: fillSymbol(i),\n                angle: fillAngle(i),\n                text: text\n            }\n        });\n    }\n\n    return {\n        type: 'FeatureCollection',\n        features: features\n    };\n}\n\nfunction getFillFunc(attr, numeric) {\n    if(Lib.isArrayOrTypedArray(attr)) {\n        if(numeric) {\n            return function(i) { return isNumeric(attr[i]) ? +attr[i] : 0; };\n        }\n        return function(i) { return attr[i]; };\n    } else if(attr) {\n        return function() { return attr; };\n    } else {\n        return blankFillFunc;\n    }\n}\n\nfunction blankFillFunc() { return ''; }\n\n// only need to check lon (OR lat)\nfunction isBADNUM(lonlat) {\n    return lonlat[0] === BADNUM;\n}\n\nfunction arrayifyAttribute(values, step) {\n    var newAttribute;\n    if(Lib.isArrayOrTypedArray(values) && Lib.isArrayOrTypedArray(step)) {\n        newAttribute = ['step', ['get', 'point_count'], values[0]];\n\n        for(var idx = 1; idx < values.length; idx++) {\n            newAttribute.push(step[idx - 1], values[idx]);\n        }\n    } else {\n        newAttribute = values;\n    }\n    return newAttribute;\n}\n\nfunction getTextFont(trace) {\n    var font = trace.textfont;\n    var family = font.family;\n    var style = font.style;\n    var weight = font.weight;\n\n    var parts = family.split(' ');\n    var isItalic = parts[parts.length - 1] === 'Italic';\n    if(isItalic) parts.pop();\n    isItalic = isItalic || style === 'italic';\n\n    var str = parts.join(' ');\n    if(weight === 'bold' && parts.indexOf('Bold') === -1) {\n        str += ' Bold';\n    } else if(weight <= 1000) { // numeric font-weight\n        // See supportedFonts\n\n        if(parts[0] === 'Metropolis') {\n            str = 'Metropolis';\n            if(weight > 850) str += ' Black';\n            else if(weight > 750) str += ' Extra Bold';\n            else if(weight > 650) str += ' Bold';\n            else if(weight > 550) str += ' Semi Bold';\n            else if(weight > 450) str += ' Medium';\n            else if(weight > 350) str += ' Regular';\n            else if(weight > 250) str += ' Light';\n            else if(weight > 150) str += ' Extra Light';\n            else str += ' Thin';\n        } else if(parts.slice(0, 2).join(' ') === 'Open Sans') {\n            str = 'Open Sans';\n            if(weight > 750) str += ' Extrabold';\n            else if(weight > 650) str += ' Bold';\n            else if(weight > 550) str += ' Semibold';\n            else if(weight > 350) str += ' Regular';\n            else str += ' Light';\n        } else if(parts.slice(0, 3).join(' ') === 'Klokantech Noto Sans') {\n            str = 'Klokantech Noto Sans';\n            if(parts[3] === 'CJK') str += ' CJK';\n            str += (weight > 500) ? ' Bold' : ' Regular';\n        }\n    }\n\n    if(isItalic) str += ' Italic';\n\n    if(str === 'Open Sans Regular Italic') str = 'Open Sans Italic';\n    else if(str === 'Open Sans Regular Bold') str = 'Open Sans Bold';\n    else if(str === 'Open Sans Regular Bold Italic') str = 'Open Sans Bold Italic';\n    else if(str === 'Klokantech Noto Sans Regular Italic') str = 'Klokantech Noto Sans Italic';\n\n    // Ensure the result is a supported font\n    if(!isSupportedFont(str)) {\n        str = family;\n    }\n\n    var textFont = str.split(', ');\n    return textFont;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}