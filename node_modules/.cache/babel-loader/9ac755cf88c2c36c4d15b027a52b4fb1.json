{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.createREGL = factory();\n})(this, function () {\n  'use strict';\n\n  var extend = function (base, opts) {\n    var keys = Object.keys(opts);\n    for (var i = 0; i < keys.length; ++i) {\n      base[keys[i]] = opts[keys[i]];\n    }\n    return base;\n  };\n  var VARIABLE_COUNTER = 0;\n  var DYN_FUNC = 0;\n  var DYN_CONSTANT = 5;\n  var DYN_ARRAY = 6;\n  function DynamicVariable(type, data) {\n    this.id = VARIABLE_COUNTER++;\n    this.type = type;\n    this.data = data;\n  }\n  function escapeStr(str) {\n    return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n  }\n  function splitParts(str) {\n    if (str.length === 0) {\n      return [];\n    }\n    var firstChar = str.charAt(0);\n    var lastChar = str.charAt(str.length - 1);\n    if (str.length > 1 && firstChar === lastChar && (firstChar === '\"' || firstChar === \"'\")) {\n      return ['\"' + escapeStr(str.substr(1, str.length - 2)) + '\"'];\n    }\n    var parts = /\\[(false|true|null|\\d+|'[^']*'|\"[^\"]*\")\\]/.exec(str);\n    if (parts) {\n      return splitParts(str.substr(0, parts.index)).concat(splitParts(parts[1])).concat(splitParts(str.substr(parts.index + parts[0].length)));\n    }\n    var subparts = str.split('.');\n    if (subparts.length === 1) {\n      return ['\"' + escapeStr(str) + '\"'];\n    }\n    var result = [];\n    for (var i = 0; i < subparts.length; ++i) {\n      result = result.concat(splitParts(subparts[i]));\n    }\n    return result;\n  }\n  function toAccessorString(str) {\n    return '[' + splitParts(str).join('][') + ']';\n  }\n  function defineDynamic(type, data) {\n    return new DynamicVariable(type, toAccessorString(data + ''));\n  }\n  function isDynamic(x) {\n    return typeof x === 'function' && !x._reglType || x instanceof DynamicVariable;\n  }\n  function unbox(x, path) {\n    if (typeof x === 'function') {\n      return new DynamicVariable(DYN_FUNC, x);\n    } else if (typeof x === 'number' || typeof x === 'boolean') {\n      return new DynamicVariable(DYN_CONSTANT, x);\n    } else if (Array.isArray(x)) {\n      return new DynamicVariable(DYN_ARRAY, x.map(function (y, i) {\n        return unbox(y, path + '[' + i + ']');\n      }));\n    } else if (x instanceof DynamicVariable) {\n      return x;\n    }\n  }\n  var dynamic = {\n    DynamicVariable: DynamicVariable,\n    define: defineDynamic,\n    isDynamic: isDynamic,\n    unbox: unbox,\n    accessor: toAccessorString\n  };\n\n  /* globals requestAnimationFrame, cancelAnimationFrame */\n  var raf = {\n    next: typeof requestAnimationFrame === 'function' ? function (cb) {\n      return requestAnimationFrame(cb);\n    } : function (cb) {\n      return setTimeout(cb, 16);\n    },\n    cancel: typeof cancelAnimationFrame === 'function' ? function (raf) {\n      return cancelAnimationFrame(raf);\n    } : clearTimeout\n  };\n\n  /* globals performance */\n  var clock = typeof performance !== 'undefined' && performance.now ? function () {\n    return performance.now();\n  } : function () {\n    return +new Date();\n  };\n  function createStringStore() {\n    var stringIds = {\n      '': 0\n    };\n    var stringValues = [''];\n    return {\n      id: function (str) {\n        var result = stringIds[str];\n        if (result) {\n          return result;\n        }\n        result = stringIds[str] = stringValues.length;\n        stringValues.push(str);\n        return result;\n      },\n      str: function (id) {\n        return stringValues[id];\n      }\n    };\n  }\n\n  // Context and canvas creation helper functions\n\n  function createCanvas(element, onDone, pixelRatio) {\n    var canvas = document.createElement('canvas');\n    extend(canvas.style, {\n      border: 0,\n      margin: 0,\n      padding: 0,\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    });\n    element.appendChild(canvas);\n    if (element === document.body) {\n      canvas.style.position = 'absolute';\n      extend(element.style, {\n        margin: 0,\n        padding: 0\n      });\n    }\n    function resize() {\n      var w = window.innerWidth;\n      var h = window.innerHeight;\n      if (element !== document.body) {\n        var bounds = canvas.getBoundingClientRect();\n        w = bounds.right - bounds.left;\n        h = bounds.bottom - bounds.top;\n      }\n      canvas.width = pixelRatio * w;\n      canvas.height = pixelRatio * h;\n    }\n    var resizeObserver;\n    if (element !== document.body && typeof ResizeObserver === 'function') {\n      // ignore 'ResizeObserver' is not defined\n      // eslint-disable-next-line\n      resizeObserver = new ResizeObserver(function () {\n        // setTimeout to avoid flicker\n        setTimeout(resize);\n      });\n      resizeObserver.observe(element);\n    } else {\n      window.addEventListener('resize', resize, false);\n    }\n    function onDestroy() {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      } else {\n        window.removeEventListener('resize', resize);\n      }\n      element.removeChild(canvas);\n    }\n    resize();\n    return {\n      canvas: canvas,\n      onDestroy: onDestroy\n    };\n  }\n  function createContext(canvas, contextAttributes) {\n    function get(name) {\n      try {\n        return canvas.getContext(name, contextAttributes);\n      } catch (e) {\n        return null;\n      }\n    }\n    return get('webgl') || get('experimental-webgl') || get('webgl-experimental');\n  }\n  function isHTMLElement(obj) {\n    return typeof obj.nodeName === 'string' && typeof obj.appendChild === 'function' && typeof obj.getBoundingClientRect === 'function';\n  }\n  function isWebGLContext(obj) {\n    return typeof obj.drawArrays === 'function' || typeof obj.drawElements === 'function';\n  }\n  function parseExtensions(input) {\n    if (typeof input === 'string') {\n      return input.split();\n    }\n    return input;\n  }\n  function getElement(desc) {\n    if (typeof desc === 'string') {\n      return document.querySelector(desc);\n    }\n    return desc;\n  }\n  function parseArgs(args_) {\n    var args = args_ || {};\n    var element, container, canvas, gl;\n    var contextAttributes = {};\n    var extensions = [];\n    var optionalExtensions = [];\n    var pixelRatio = typeof window === 'undefined' ? 1 : window.devicePixelRatio;\n    var profile = false;\n    var cachedCode = {};\n    var onDone = function (err) {\n      if (err) {}\n    };\n    var onDestroy = function () {};\n    if (typeof args === 'string') {\n      element = document.querySelector(args);\n    } else if (typeof args === 'object') {\n      if (isHTMLElement(args)) {\n        element = args;\n      } else if (isWebGLContext(args)) {\n        gl = args;\n        canvas = gl.canvas;\n      } else {\n        if ('gl' in args) {\n          gl = args.gl;\n        } else if ('canvas' in args) {\n          canvas = getElement(args.canvas);\n        } else if ('container' in args) {\n          container = getElement(args.container);\n        }\n        if ('attributes' in args) {\n          contextAttributes = args.attributes;\n        }\n        if ('extensions' in args) {\n          extensions = parseExtensions(args.extensions);\n        }\n        if ('optionalExtensions' in args) {\n          optionalExtensions = parseExtensions(args.optionalExtensions);\n        }\n        if ('onDone' in args) {\n          onDone = args.onDone;\n        }\n        if ('profile' in args) {\n          profile = !!args.profile;\n        }\n        if ('pixelRatio' in args) {\n          pixelRatio = +args.pixelRatio;\n        }\n        if ('cachedCode' in args) {\n          cachedCode = args.cachedCode;\n        }\n      }\n    } else {}\n    if (element) {\n      if (element.nodeName.toLowerCase() === 'canvas') {\n        canvas = element;\n      } else {\n        container = element;\n      }\n    }\n    if (!gl) {\n      if (!canvas) {\n        var result = createCanvas(container || document.body, onDone, pixelRatio);\n        if (!result) {\n          return null;\n        }\n        canvas = result.canvas;\n        onDestroy = result.onDestroy;\n      }\n      // workaround for chromium bug, premultiplied alpha value is platform dependent\n      if (contextAttributes.premultipliedAlpha === undefined) contextAttributes.premultipliedAlpha = true;\n      gl = createContext(canvas, contextAttributes);\n    }\n    if (!gl) {\n      onDestroy();\n      onDone('webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org');\n      return null;\n    }\n    return {\n      gl: gl,\n      canvas: canvas,\n      container: container,\n      extensions: extensions,\n      optionalExtensions: optionalExtensions,\n      pixelRatio: pixelRatio,\n      profile: profile,\n      cachedCode: cachedCode,\n      onDone: onDone,\n      onDestroy: onDestroy\n    };\n  }\n  function createExtensionCache(gl, config) {\n    var extensions = {};\n    function tryLoadExtension(name_) {\n      var name = name_.toLowerCase();\n      var ext;\n      try {\n        ext = extensions[name] = gl.getExtension(name);\n      } catch (e) {}\n      return !!ext;\n    }\n    for (var i = 0; i < config.extensions.length; ++i) {\n      var name = config.extensions[i];\n      if (!tryLoadExtension(name)) {\n        config.onDestroy();\n        config.onDone('\"' + name + '\" extension is not supported by the current WebGL context, try upgrading your system or a different browser');\n        return null;\n      }\n    }\n    config.optionalExtensions.forEach(tryLoadExtension);\n    return {\n      extensions: extensions,\n      restore: function () {\n        Object.keys(extensions).forEach(function (name) {\n          if (extensions[name] && !tryLoadExtension(name)) {\n            throw new Error('(regl): error restoring extension ' + name);\n          }\n        });\n      }\n    };\n  }\n  function loop(n, f) {\n    var result = Array(n);\n    for (var i = 0; i < n; ++i) {\n      result[i] = f(i);\n    }\n    return result;\n  }\n  var GL_BYTE = 5120;\n  var GL_UNSIGNED_BYTE$1 = 5121;\n  var GL_SHORT = 5122;\n  var GL_UNSIGNED_SHORT = 5123;\n  var GL_INT = 5124;\n  var GL_UNSIGNED_INT = 5125;\n  var GL_FLOAT$1 = 5126;\n  function nextPow16(v) {\n    for (var i = 16; i <= 1 << 28; i *= 16) {\n      if (v <= i) {\n        return i;\n      }\n    }\n    return 0;\n  }\n  function log2(v) {\n    var r, shift;\n    r = (v > 0xFFFF) << 4;\n    v >>>= r;\n    shift = (v > 0xFF) << 3;\n    v >>>= shift;\n    r |= shift;\n    shift = (v > 0xF) << 2;\n    v >>>= shift;\n    r |= shift;\n    shift = (v > 0x3) << 1;\n    v >>>= shift;\n    r |= shift;\n    return r | v >> 1;\n  }\n  function createPool() {\n    var bufferPool = loop(8, function () {\n      return [];\n    });\n    function alloc(n) {\n      var sz = nextPow16(n);\n      var bin = bufferPool[log2(sz) >> 2];\n      if (bin.length > 0) {\n        return bin.pop();\n      }\n      return new ArrayBuffer(sz);\n    }\n    function free(buf) {\n      bufferPool[log2(buf.byteLength) >> 2].push(buf);\n    }\n    function allocType(type, n) {\n      var result = null;\n      switch (type) {\n        case GL_BYTE:\n          result = new Int8Array(alloc(n), 0, n);\n          break;\n        case GL_UNSIGNED_BYTE$1:\n          result = new Uint8Array(alloc(n), 0, n);\n          break;\n        case GL_SHORT:\n          result = new Int16Array(alloc(2 * n), 0, n);\n          break;\n        case GL_UNSIGNED_SHORT:\n          result = new Uint16Array(alloc(2 * n), 0, n);\n          break;\n        case GL_INT:\n          result = new Int32Array(alloc(4 * n), 0, n);\n          break;\n        case GL_UNSIGNED_INT:\n          result = new Uint32Array(alloc(4 * n), 0, n);\n          break;\n        case GL_FLOAT$1:\n          result = new Float32Array(alloc(4 * n), 0, n);\n          break;\n        default:\n          return null;\n      }\n      if (result.length !== n) {\n        return result.subarray(0, n);\n      }\n      return result;\n    }\n    function freeType(array) {\n      free(array.buffer);\n    }\n    return {\n      alloc: alloc,\n      free: free,\n      allocType: allocType,\n      freeType: freeType\n    };\n  }\n  var pool = createPool();\n\n  // zero pool for initial zero data\n  pool.zero = createPool();\n  var GL_SUBPIXEL_BITS = 0x0D50;\n  var GL_RED_BITS = 0x0D52;\n  var GL_GREEN_BITS = 0x0D53;\n  var GL_BLUE_BITS = 0x0D54;\n  var GL_ALPHA_BITS = 0x0D55;\n  var GL_DEPTH_BITS = 0x0D56;\n  var GL_STENCIL_BITS = 0x0D57;\n  var GL_ALIASED_POINT_SIZE_RANGE = 0x846D;\n  var GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;\n  var GL_MAX_TEXTURE_SIZE = 0x0D33;\n  var GL_MAX_VIEWPORT_DIMS = 0x0D3A;\n  var GL_MAX_VERTEX_ATTRIBS = 0x8869;\n  var GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n  var GL_MAX_VARYING_VECTORS = 0x8DFC;\n  var GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n  var GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n  var GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n  var GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n  var GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n  var GL_MAX_RENDERBUFFER_SIZE = 0x84E8;\n  var GL_VENDOR = 0x1F00;\n  var GL_RENDERER = 0x1F01;\n  var GL_VERSION = 0x1F02;\n  var GL_SHADING_LANGUAGE_VERSION = 0x8B8C;\n  var GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n  var GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;\n  var GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824;\n  var GL_TEXTURE_2D = 0x0DE1;\n  var GL_TEXTURE_CUBE_MAP = 0x8513;\n  var GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n  var GL_TEXTURE0 = 0x84C0;\n  var GL_RGBA = 0x1908;\n  var GL_FLOAT = 0x1406;\n  var GL_UNSIGNED_BYTE = 0x1401;\n  var GL_FRAMEBUFFER = 0x8D40;\n  var GL_FRAMEBUFFER_COMPLETE = 0x8CD5;\n  var GL_COLOR_ATTACHMENT0 = 0x8CE0;\n  var GL_COLOR_BUFFER_BIT$1 = 0x4000;\n  var wrapLimits = function (gl, extensions) {\n    var maxAnisotropic = 1;\n    if (extensions.ext_texture_filter_anisotropic) {\n      maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    }\n    var maxDrawbuffers = 1;\n    var maxColorAttachments = 1;\n    if (extensions.webgl_draw_buffers) {\n      maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL);\n      maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL);\n    }\n\n    // detect if reading float textures is available (Safari doesn't support)\n    var readFloat = !!extensions.oes_texture_float;\n    if (readFloat) {\n      var readFloatTexture = gl.createTexture();\n      gl.bindTexture(GL_TEXTURE_2D, readFloatTexture);\n      gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT, null);\n      var fbo = gl.createFramebuffer();\n      gl.bindFramebuffer(GL_FRAMEBUFFER, fbo);\n      gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0);\n      gl.bindTexture(GL_TEXTURE_2D, null);\n      if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false;else {\n        gl.viewport(0, 0, 1, 1);\n        gl.clearColor(1.0, 0.0, 0.0, 1.0);\n        gl.clear(GL_COLOR_BUFFER_BIT$1);\n        var pixels = pool.allocType(GL_FLOAT, 4);\n        gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT, pixels);\n        if (gl.getError()) readFloat = false;else {\n          gl.deleteFramebuffer(fbo);\n          gl.deleteTexture(readFloatTexture);\n          readFloat = pixels[0] === 1.0;\n        }\n        pool.freeType(pixels);\n      }\n    }\n\n    // detect non power of two cube textures support (IE doesn't support)\n    var isIE = typeof navigator !== 'undefined' && (/MSIE/.test(navigator.userAgent) || /Trident\\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent));\n    var npotTextureCube = true;\n    if (!isIE) {\n      var cubeTexture = gl.createTexture();\n      var data = pool.allocType(GL_UNSIGNED_BYTE, 36);\n      gl.activeTexture(GL_TEXTURE0);\n      gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture);\n      gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE, data);\n      pool.freeType(data);\n      gl.bindTexture(GL_TEXTURE_CUBE_MAP, null);\n      gl.deleteTexture(cubeTexture);\n      npotTextureCube = !gl.getError();\n    }\n    return {\n      // drawing buffer bit depth\n      colorBits: [gl.getParameter(GL_RED_BITS), gl.getParameter(GL_GREEN_BITS), gl.getParameter(GL_BLUE_BITS), gl.getParameter(GL_ALPHA_BITS)],\n      depthBits: gl.getParameter(GL_DEPTH_BITS),\n      stencilBits: gl.getParameter(GL_STENCIL_BITS),\n      subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),\n      // supported extensions\n      extensions: Object.keys(extensions).filter(function (ext) {\n        return !!extensions[ext];\n      }),\n      // max aniso samples\n      maxAnisotropic: maxAnisotropic,\n      // max draw buffers\n      maxDrawbuffers: maxDrawbuffers,\n      maxColorAttachments: maxColorAttachments,\n      // point and line size ranges\n      pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),\n      lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),\n      maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),\n      maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n      maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),\n      maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),\n      maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),\n      maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),\n      maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),\n      maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),\n      maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n      maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),\n      maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),\n      // vendor info\n      glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),\n      renderer: gl.getParameter(GL_RENDERER),\n      vendor: gl.getParameter(GL_VENDOR),\n      version: gl.getParameter(GL_VERSION),\n      // quirks\n      readFloat: readFloat,\n      npotTextureCube: npotTextureCube\n    };\n  };\n  var isTypedArray = function (x) {\n    return x instanceof Uint8Array || x instanceof Uint16Array || x instanceof Uint32Array || x instanceof Int8Array || x instanceof Int16Array || x instanceof Int32Array || x instanceof Float32Array || x instanceof Float64Array || x instanceof Uint8ClampedArray;\n  };\n  function isNDArrayLike(obj) {\n    return !!obj && typeof obj === 'object' && Array.isArray(obj.shape) && Array.isArray(obj.stride) && typeof obj.offset === 'number' && obj.shape.length === obj.stride.length && (Array.isArray(obj.data) || isTypedArray(obj.data));\n  }\n  var values = function (obj) {\n    return Object.keys(obj).map(function (key) {\n      return obj[key];\n    });\n  };\n  var flattenUtils = {\n    shape: arrayShape$1,\n    flatten: flattenArray\n  };\n  function flatten1D(array, nx, out) {\n    for (var i = 0; i < nx; ++i) {\n      out[i] = array[i];\n    }\n  }\n  function flatten2D(array, nx, ny, out) {\n    var ptr = 0;\n    for (var i = 0; i < nx; ++i) {\n      var row = array[i];\n      for (var j = 0; j < ny; ++j) {\n        out[ptr++] = row[j];\n      }\n    }\n  }\n  function flatten3D(array, nx, ny, nz, out, ptr_) {\n    var ptr = ptr_;\n    for (var i = 0; i < nx; ++i) {\n      var row = array[i];\n      for (var j = 0; j < ny; ++j) {\n        var col = row[j];\n        for (var k = 0; k < nz; ++k) {\n          out[ptr++] = col[k];\n        }\n      }\n    }\n  }\n  function flattenRec(array, shape, level, out, ptr) {\n    var stride = 1;\n    for (var i = level + 1; i < shape.length; ++i) {\n      stride *= shape[i];\n    }\n    var n = shape[level];\n    if (shape.length - level === 4) {\n      var nx = shape[level + 1];\n      var ny = shape[level + 2];\n      var nz = shape[level + 3];\n      for (i = 0; i < n; ++i) {\n        flatten3D(array[i], nx, ny, nz, out, ptr);\n        ptr += stride;\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        flattenRec(array[i], shape, level + 1, out, ptr);\n        ptr += stride;\n      }\n    }\n  }\n  function flattenArray(array, shape, type, out_) {\n    var sz = 1;\n    if (shape.length) {\n      for (var i = 0; i < shape.length; ++i) {\n        sz *= shape[i];\n      }\n    } else {\n      sz = 0;\n    }\n    var out = out_ || pool.allocType(type, sz);\n    switch (shape.length) {\n      case 0:\n        break;\n      case 1:\n        flatten1D(array, shape[0], out);\n        break;\n      case 2:\n        flatten2D(array, shape[0], shape[1], out);\n        break;\n      case 3:\n        flatten3D(array, shape[0], shape[1], shape[2], out, 0);\n        break;\n      default:\n        flattenRec(array, shape, 0, out, 0);\n    }\n    return out;\n  }\n  function arrayShape$1(array_) {\n    var shape = [];\n    for (var array = array_; array.length; array = array[0]) {\n      shape.push(array.length);\n    }\n    return shape;\n  }\n  var arrayTypes = {\n    \"[object Int8Array]\": 5120,\n    \"[object Int16Array]\": 5122,\n    \"[object Int32Array]\": 5124,\n    \"[object Uint8Array]\": 5121,\n    \"[object Uint8ClampedArray]\": 5121,\n    \"[object Uint16Array]\": 5123,\n    \"[object Uint32Array]\": 5125,\n    \"[object Float32Array]\": 5126,\n    \"[object Float64Array]\": 5121,\n    \"[object ArrayBuffer]\": 5121\n  };\n  var int8 = 5120;\n  var int16 = 5122;\n  var int32 = 5124;\n  var uint8 = 5121;\n  var uint16 = 5123;\n  var uint32 = 5125;\n  var float = 5126;\n  var float32 = 5126;\n  var glTypes = {\n    int8: int8,\n    int16: int16,\n    int32: int32,\n    uint8: uint8,\n    uint16: uint16,\n    uint32: uint32,\n    float: float,\n    float32: float32\n  };\n  var dynamic$1 = 35048;\n  var stream = 35040;\n  var usageTypes = {\n    dynamic: dynamic$1,\n    stream: stream,\n    \"static\": 35044\n  };\n  var arrayFlatten = flattenUtils.flatten;\n  var arrayShape = flattenUtils.shape;\n  var GL_STATIC_DRAW = 0x88E4;\n  var GL_STREAM_DRAW = 0x88E0;\n  var GL_UNSIGNED_BYTE$2 = 5121;\n  var GL_FLOAT$2 = 5126;\n  var DTYPES_SIZES = [];\n  DTYPES_SIZES[5120] = 1; // int8\n  DTYPES_SIZES[5122] = 2; // int16\n  DTYPES_SIZES[5124] = 4; // int32\n  DTYPES_SIZES[5121] = 1; // uint8\n  DTYPES_SIZES[5123] = 2; // uint16\n  DTYPES_SIZES[5125] = 4; // uint32\n  DTYPES_SIZES[5126] = 4; // float32\n\n  function typedArrayCode(data) {\n    return arrayTypes[Object.prototype.toString.call(data)] | 0;\n  }\n  function copyArray(out, inp) {\n    for (var i = 0; i < inp.length; ++i) {\n      out[i] = inp[i];\n    }\n  }\n  function transpose(result, data, shapeX, shapeY, strideX, strideY, offset) {\n    var ptr = 0;\n    for (var i = 0; i < shapeX; ++i) {\n      for (var j = 0; j < shapeY; ++j) {\n        result[ptr++] = data[strideX * i + strideY * j + offset];\n      }\n    }\n  }\n  function wrapBufferState(gl, stats, config, destroyBuffer) {\n    var bufferCount = 0;\n    var bufferSet = {};\n    function REGLBuffer(type) {\n      this.id = bufferCount++;\n      this.buffer = gl.createBuffer();\n      this.type = type;\n      this.usage = GL_STATIC_DRAW;\n      this.byteLength = 0;\n      this.dimension = 1;\n      this.dtype = GL_UNSIGNED_BYTE$2;\n      this.persistentData = null;\n      if (config.profile) {\n        this.stats = {\n          size: 0\n        };\n      }\n    }\n    REGLBuffer.prototype.bind = function () {\n      gl.bindBuffer(this.type, this.buffer);\n    };\n    REGLBuffer.prototype.destroy = function () {\n      destroy(this);\n    };\n    var streamPool = [];\n    function createStream(type, data) {\n      var buffer = streamPool.pop();\n      if (!buffer) {\n        buffer = new REGLBuffer(type);\n      }\n      buffer.bind();\n      initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false);\n      return buffer;\n    }\n    function destroyStream(stream$$1) {\n      streamPool.push(stream$$1);\n    }\n    function initBufferFromTypedArray(buffer, data, usage) {\n      buffer.byteLength = data.byteLength;\n      gl.bufferData(buffer.type, data, usage);\n    }\n    function initBufferFromData(buffer, data, usage, dtype, dimension, persist) {\n      var shape;\n      buffer.usage = usage;\n      if (Array.isArray(data)) {\n        buffer.dtype = dtype || GL_FLOAT$2;\n        if (data.length > 0) {\n          var flatData;\n          if (Array.isArray(data[0])) {\n            shape = arrayShape(data);\n            var dim = 1;\n            for (var i = 1; i < shape.length; ++i) {\n              dim *= shape[i];\n            }\n            buffer.dimension = dim;\n            flatData = arrayFlatten(data, shape, buffer.dtype);\n            initBufferFromTypedArray(buffer, flatData, usage);\n            if (persist) {\n              buffer.persistentData = flatData;\n            } else {\n              pool.freeType(flatData);\n            }\n          } else if (typeof data[0] === 'number') {\n            buffer.dimension = dimension;\n            var typedData = pool.allocType(buffer.dtype, data.length);\n            copyArray(typedData, data);\n            initBufferFromTypedArray(buffer, typedData, usage);\n            if (persist) {\n              buffer.persistentData = typedData;\n            } else {\n              pool.freeType(typedData);\n            }\n          } else if (isTypedArray(data[0])) {\n            buffer.dimension = data[0].length;\n            buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$2;\n            flatData = arrayFlatten(data, [data.length, data[0].length], buffer.dtype);\n            initBufferFromTypedArray(buffer, flatData, usage);\n            if (persist) {\n              buffer.persistentData = flatData;\n            } else {\n              pool.freeType(flatData);\n            }\n          } else {}\n        }\n      } else if (isTypedArray(data)) {\n        buffer.dtype = dtype || typedArrayCode(data);\n        buffer.dimension = dimension;\n        initBufferFromTypedArray(buffer, data, usage);\n        if (persist) {\n          buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer));\n        }\n      } else if (isNDArrayLike(data)) {\n        shape = data.shape;\n        var stride = data.stride;\n        var offset = data.offset;\n        var shapeX = 0;\n        var shapeY = 0;\n        var strideX = 0;\n        var strideY = 0;\n        if (shape.length === 1) {\n          shapeX = shape[0];\n          shapeY = 1;\n          strideX = stride[0];\n          strideY = 0;\n        } else if (shape.length === 2) {\n          shapeX = shape[0];\n          shapeY = shape[1];\n          strideX = stride[0];\n          strideY = stride[1];\n        } else {}\n        buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$2;\n        buffer.dimension = shapeY;\n        var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY);\n        transpose(transposeData, data.data, shapeX, shapeY, strideX, strideY, offset);\n        initBufferFromTypedArray(buffer, transposeData, usage);\n        if (persist) {\n          buffer.persistentData = transposeData;\n        } else {\n          pool.freeType(transposeData);\n        }\n      } else if (data instanceof ArrayBuffer) {\n        buffer.dtype = GL_UNSIGNED_BYTE$2;\n        buffer.dimension = dimension;\n        initBufferFromTypedArray(buffer, data, usage);\n        if (persist) {\n          buffer.persistentData = new Uint8Array(new Uint8Array(data));\n        }\n      } else {}\n    }\n    function destroy(buffer) {\n      stats.bufferCount--;\n\n      // remove attribute link\n      destroyBuffer(buffer);\n      var handle = buffer.buffer;\n      gl.deleteBuffer(handle);\n      buffer.buffer = null;\n      delete bufferSet[buffer.id];\n    }\n    function createBuffer(options, type, deferInit, persistent) {\n      stats.bufferCount++;\n      var buffer = new REGLBuffer(type);\n      bufferSet[buffer.id] = buffer;\n      function reglBuffer(options) {\n        var usage = GL_STATIC_DRAW;\n        var data = null;\n        var byteLength = 0;\n        var dtype = 0;\n        var dimension = 1;\n        if (Array.isArray(options) || isTypedArray(options) || isNDArrayLike(options) || options instanceof ArrayBuffer) {\n          data = options;\n        } else if (typeof options === 'number') {\n          byteLength = options | 0;\n        } else if (options) {\n          if ('data' in options) {\n            data = options.data;\n          }\n          if ('usage' in options) {\n            usage = usageTypes[options.usage];\n          }\n          if ('type' in options) {\n            dtype = glTypes[options.type];\n          }\n          if ('dimension' in options) {\n            dimension = options.dimension | 0;\n          }\n          if ('length' in options) {\n            byteLength = options.length | 0;\n          }\n        }\n        buffer.bind();\n        if (!data) {\n          // #475\n          if (byteLength) gl.bufferData(buffer.type, byteLength, usage);\n          buffer.dtype = dtype || GL_UNSIGNED_BYTE$2;\n          buffer.usage = usage;\n          buffer.dimension = dimension;\n          buffer.byteLength = byteLength;\n        } else {\n          initBufferFromData(buffer, data, usage, dtype, dimension, persistent);\n        }\n        if (config.profile) {\n          buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype];\n        }\n        return reglBuffer;\n      }\n      function setSubData(data, offset) {\n        gl.bufferSubData(buffer.type, offset, data);\n      }\n      function subdata(data, offset_) {\n        var offset = (offset_ || 0) | 0;\n        var shape;\n        buffer.bind();\n        if (isTypedArray(data) || data instanceof ArrayBuffer) {\n          setSubData(data, offset);\n        } else if (Array.isArray(data)) {\n          if (data.length > 0) {\n            if (typeof data[0] === 'number') {\n              var converted = pool.allocType(buffer.dtype, data.length);\n              copyArray(converted, data);\n              setSubData(converted, offset);\n              pool.freeType(converted);\n            } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n              shape = arrayShape(data);\n              var flatData = arrayFlatten(data, shape, buffer.dtype);\n              setSubData(flatData, offset);\n              pool.freeType(flatData);\n            } else {}\n          }\n        } else if (isNDArrayLike(data)) {\n          shape = data.shape;\n          var stride = data.stride;\n          var shapeX = 0;\n          var shapeY = 0;\n          var strideX = 0;\n          var strideY = 0;\n          if (shape.length === 1) {\n            shapeX = shape[0];\n            shapeY = 1;\n            strideX = stride[0];\n            strideY = 0;\n          } else if (shape.length === 2) {\n            shapeX = shape[0];\n            shapeY = shape[1];\n            strideX = stride[0];\n            strideY = stride[1];\n          } else {}\n          var dtype = Array.isArray(data.data) ? buffer.dtype : typedArrayCode(data.data);\n          var transposeData = pool.allocType(dtype, shapeX * shapeY);\n          transpose(transposeData, data.data, shapeX, shapeY, strideX, strideY, data.offset);\n          setSubData(transposeData, offset);\n          pool.freeType(transposeData);\n        } else {}\n        return reglBuffer;\n      }\n      if (!deferInit) {\n        reglBuffer(options);\n      }\n      reglBuffer._reglType = 'buffer';\n      reglBuffer._buffer = buffer;\n      reglBuffer.subdata = subdata;\n      if (config.profile) {\n        reglBuffer.stats = buffer.stats;\n      }\n      reglBuffer.destroy = function () {\n        destroy(buffer);\n      };\n      return reglBuffer;\n    }\n    function restoreBuffers() {\n      values(bufferSet).forEach(function (buffer) {\n        buffer.buffer = gl.createBuffer();\n        gl.bindBuffer(buffer.type, buffer.buffer);\n        gl.bufferData(buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage);\n      });\n    }\n    if (config.profile) {\n      stats.getTotalBufferSize = function () {\n        var total = 0;\n        // TODO: Right now, the streams are not part of the total count.\n        Object.keys(bufferSet).forEach(function (key) {\n          total += bufferSet[key].stats.size;\n        });\n        return total;\n      };\n    }\n    return {\n      create: createBuffer,\n      createStream: createStream,\n      destroyStream: destroyStream,\n      clear: function () {\n        values(bufferSet).forEach(destroy);\n        streamPool.forEach(destroy);\n      },\n      getBuffer: function (wrapper) {\n        if (wrapper && wrapper._buffer instanceof REGLBuffer) {\n          return wrapper._buffer;\n        }\n        return null;\n      },\n      restore: restoreBuffers,\n      _initBuffer: initBufferFromData\n    };\n  }\n  var points = 0;\n  var point = 0;\n  var lines = 1;\n  var line = 1;\n  var triangles = 4;\n  var triangle = 4;\n  var primTypes = {\n    points: points,\n    point: point,\n    lines: lines,\n    line: line,\n    triangles: triangles,\n    triangle: triangle,\n    \"line loop\": 2,\n    \"line strip\": 3,\n    \"triangle strip\": 5,\n    \"triangle fan\": 6\n  };\n  var GL_POINTS = 0;\n  var GL_LINES = 1;\n  var GL_TRIANGLES = 4;\n  var GL_BYTE$1 = 5120;\n  var GL_UNSIGNED_BYTE$3 = 5121;\n  var GL_SHORT$1 = 5122;\n  var GL_UNSIGNED_SHORT$1 = 5123;\n  var GL_INT$1 = 5124;\n  var GL_UNSIGNED_INT$1 = 5125;\n  var GL_ELEMENT_ARRAY_BUFFER = 34963;\n  var GL_STREAM_DRAW$1 = 0x88E0;\n  var GL_STATIC_DRAW$1 = 0x88E4;\n  function wrapElementsState(gl, extensions, bufferState, stats) {\n    var elementSet = {};\n    var elementCount = 0;\n    var elementTypes = {\n      'uint8': GL_UNSIGNED_BYTE$3,\n      'uint16': GL_UNSIGNED_SHORT$1\n    };\n    if (extensions.oes_element_index_uint) {\n      elementTypes.uint32 = GL_UNSIGNED_INT$1;\n    }\n    function REGLElementBuffer(buffer) {\n      this.id = elementCount++;\n      elementSet[this.id] = this;\n      this.buffer = buffer;\n      this.primType = GL_TRIANGLES;\n      this.vertCount = 0;\n      this.type = 0;\n    }\n    REGLElementBuffer.prototype.bind = function () {\n      this.buffer.bind();\n    };\n    var bufferPool = [];\n    function createElementStream(data) {\n      var result = bufferPool.pop();\n      if (!result) {\n        result = new REGLElementBuffer(bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true, false)._buffer);\n      }\n      initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0);\n      return result;\n    }\n    function destroyElementStream(elements) {\n      bufferPool.push(elements);\n    }\n    function initElements(elements, data, usage, prim, count, byteLength, type) {\n      elements.buffer.bind();\n      var dtype;\n      if (data) {\n        var predictedType = type;\n        if (!type && (!isTypedArray(data) || isNDArrayLike(data) && !isTypedArray(data.data))) {\n          predictedType = extensions.oes_element_index_uint ? GL_UNSIGNED_INT$1 : GL_UNSIGNED_SHORT$1;\n        }\n        bufferState._initBuffer(elements.buffer, data, usage, predictedType, 3);\n      } else {\n        gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage);\n        elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$3;\n        elements.buffer.usage = usage;\n        elements.buffer.dimension = 3;\n        elements.buffer.byteLength = byteLength;\n      }\n      dtype = type;\n      if (!type) {\n        switch (elements.buffer.dtype) {\n          case GL_UNSIGNED_BYTE$3:\n          case GL_BYTE$1:\n            dtype = GL_UNSIGNED_BYTE$3;\n            break;\n          case GL_UNSIGNED_SHORT$1:\n          case GL_SHORT$1:\n            dtype = GL_UNSIGNED_SHORT$1;\n            break;\n          case GL_UNSIGNED_INT$1:\n          case GL_INT$1:\n            dtype = GL_UNSIGNED_INT$1;\n            break;\n          default:\n        }\n        elements.buffer.dtype = dtype;\n      }\n      elements.type = dtype;\n\n      // Check oes_element_index_uint extension\n\n      // try to guess default primitive type and arguments\n      var vertCount = count;\n      if (vertCount < 0) {\n        vertCount = elements.buffer.byteLength;\n        if (dtype === GL_UNSIGNED_SHORT$1) {\n          vertCount >>= 1;\n        } else if (dtype === GL_UNSIGNED_INT$1) {\n          vertCount >>= 2;\n        }\n      }\n      elements.vertCount = vertCount;\n\n      // try to guess primitive type from cell dimension\n      var primType = prim;\n      if (prim < 0) {\n        primType = GL_TRIANGLES;\n        var dimension = elements.buffer.dimension;\n        if (dimension === 1) primType = GL_POINTS;\n        if (dimension === 2) primType = GL_LINES;\n        if (dimension === 3) primType = GL_TRIANGLES;\n      }\n      elements.primType = primType;\n    }\n    function destroyElements(elements) {\n      stats.elementsCount--;\n      delete elementSet[elements.id];\n      elements.buffer.destroy();\n      elements.buffer = null;\n    }\n    function createElements(options, persistent) {\n      var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true);\n      var elements = new REGLElementBuffer(buffer._buffer);\n      stats.elementsCount++;\n      function reglElements(options) {\n        if (!options) {\n          buffer();\n          elements.primType = GL_TRIANGLES;\n          elements.vertCount = 0;\n          elements.type = GL_UNSIGNED_BYTE$3;\n        } else if (typeof options === 'number') {\n          buffer(options);\n          elements.primType = GL_TRIANGLES;\n          elements.vertCount = options | 0;\n          elements.type = GL_UNSIGNED_BYTE$3;\n        } else {\n          var data = null;\n          var usage = GL_STATIC_DRAW$1;\n          var primType = -1;\n          var vertCount = -1;\n          var byteLength = 0;\n          var dtype = 0;\n          if (Array.isArray(options) || isTypedArray(options) || isNDArrayLike(options)) {\n            data = options;\n          } else {\n            if ('data' in options) {\n              data = options.data;\n            }\n            if ('usage' in options) {\n              usage = usageTypes[options.usage];\n            }\n            if ('primitive' in options) {\n              primType = primTypes[options.primitive];\n            }\n            if ('count' in options) {\n              vertCount = options.count | 0;\n            }\n            if ('type' in options) {\n              dtype = elementTypes[options.type];\n            }\n            if ('length' in options) {\n              byteLength = options.length | 0;\n            } else {\n              byteLength = vertCount;\n              if (dtype === GL_UNSIGNED_SHORT$1 || dtype === GL_SHORT$1) {\n                byteLength *= 2;\n              } else if (dtype === GL_UNSIGNED_INT$1 || dtype === GL_INT$1) {\n                byteLength *= 4;\n              }\n            }\n          }\n          initElements(elements, data, usage, primType, vertCount, byteLength, dtype);\n        }\n        return reglElements;\n      }\n      reglElements(options);\n      reglElements._reglType = 'elements';\n      reglElements._elements = elements;\n      reglElements.subdata = function (data, offset) {\n        buffer.subdata(data, offset);\n        return reglElements;\n      };\n      reglElements.destroy = function () {\n        destroyElements(elements);\n      };\n      return reglElements;\n    }\n    return {\n      create: createElements,\n      createStream: createElementStream,\n      destroyStream: destroyElementStream,\n      getElements: function (elements) {\n        if (typeof elements === 'function' && elements._elements instanceof REGLElementBuffer) {\n          return elements._elements;\n        }\n        return null;\n      },\n      clear: function () {\n        values(elementSet).forEach(destroyElements);\n      }\n    };\n  }\n  var FLOAT = new Float32Array(1);\n  var INT = new Uint32Array(FLOAT.buffer);\n  var GL_UNSIGNED_SHORT$3 = 5123;\n  function convertToHalfFloat(array) {\n    var ushorts = pool.allocType(GL_UNSIGNED_SHORT$3, array.length);\n    for (var i = 0; i < array.length; ++i) {\n      if (isNaN(array[i])) {\n        ushorts[i] = 0xffff;\n      } else if (array[i] === Infinity) {\n        ushorts[i] = 0x7c00;\n      } else if (array[i] === -Infinity) {\n        ushorts[i] = 0xfc00;\n      } else {\n        FLOAT[0] = array[i];\n        var x = INT[0];\n        var sgn = x >>> 31 << 15;\n        var exp = (x << 1 >>> 24) - 127;\n        var frac = x >> 13 & (1 << 10) - 1;\n        if (exp < -24) {\n          // round non-representable denormals to 0\n          ushorts[i] = sgn;\n        } else if (exp < -14) {\n          // handle denormals\n          var s = -14 - exp;\n          ushorts[i] = sgn + (frac + (1 << 10) >> s);\n        } else if (exp > 15) {\n          // round overflow to +/- Infinity\n          ushorts[i] = sgn + 0x7c00;\n        } else {\n          // otherwise convert directly\n          ushorts[i] = sgn + (exp + 15 << 10) + frac;\n        }\n      }\n    }\n    return ushorts;\n  }\n  function isArrayLike(s) {\n    return Array.isArray(s) || isTypedArray(s);\n  }\n  var GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n  var GL_TEXTURE_2D$1 = 0x0DE1;\n  var GL_TEXTURE_CUBE_MAP$1 = 0x8513;\n  var GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515;\n  var GL_RGBA$1 = 0x1908;\n  var GL_ALPHA = 0x1906;\n  var GL_RGB = 0x1907;\n  var GL_LUMINANCE = 0x1909;\n  var GL_LUMINANCE_ALPHA = 0x190A;\n  var GL_RGBA4 = 0x8056;\n  var GL_RGB5_A1 = 0x8057;\n  var GL_RGB565 = 0x8D62;\n  var GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n  var GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n  var GL_UNSIGNED_SHORT_5_6_5 = 0x8363;\n  var GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA;\n  var GL_DEPTH_COMPONENT = 0x1902;\n  var GL_DEPTH_STENCIL = 0x84F9;\n  var GL_SRGB_EXT = 0x8C40;\n  var GL_SRGB_ALPHA_EXT = 0x8C42;\n  var GL_HALF_FLOAT_OES = 0x8D61;\n  var GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\n  var GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\n  var GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\n  var GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n  var GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92;\n  var GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93;\n  var GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE;\n  var GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;\n  var GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01;\n  var GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;\n  var GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;\n  var GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;\n  var GL_UNSIGNED_BYTE$4 = 0x1401;\n  var GL_UNSIGNED_SHORT$2 = 0x1403;\n  var GL_UNSIGNED_INT$2 = 0x1405;\n  var GL_FLOAT$3 = 0x1406;\n  var GL_TEXTURE_WRAP_S = 0x2802;\n  var GL_TEXTURE_WRAP_T = 0x2803;\n  var GL_REPEAT = 0x2901;\n  var GL_CLAMP_TO_EDGE = 0x812F;\n  var GL_MIRRORED_REPEAT = 0x8370;\n  var GL_TEXTURE_MAG_FILTER = 0x2800;\n  var GL_TEXTURE_MIN_FILTER = 0x2801;\n  var GL_NEAREST = 0x2600;\n  var GL_LINEAR = 0x2601;\n  var GL_NEAREST_MIPMAP_NEAREST = 0x2700;\n  var GL_LINEAR_MIPMAP_NEAREST = 0x2701;\n  var GL_NEAREST_MIPMAP_LINEAR = 0x2702;\n  var GL_LINEAR_MIPMAP_LINEAR = 0x2703;\n  var GL_GENERATE_MIPMAP_HINT = 0x8192;\n  var GL_DONT_CARE = 0x1100;\n  var GL_FASTEST = 0x1101;\n  var GL_NICEST = 0x1102;\n  var GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\n  var GL_UNPACK_ALIGNMENT = 0x0CF5;\n  var GL_UNPACK_FLIP_Y_WEBGL = 0x9240;\n  var GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n  var GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n  var GL_BROWSER_DEFAULT_WEBGL = 0x9244;\n  var GL_TEXTURE0$1 = 0x84C0;\n  var MIPMAP_FILTERS = [GL_NEAREST_MIPMAP_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_NEAREST, GL_LINEAR_MIPMAP_LINEAR];\n  var CHANNELS_FORMAT = [0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA$1];\n  var FORMAT_CHANNELS = {};\n  FORMAT_CHANNELS[GL_LUMINANCE] = FORMAT_CHANNELS[GL_ALPHA] = FORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1;\n  FORMAT_CHANNELS[GL_DEPTH_STENCIL] = FORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2;\n  FORMAT_CHANNELS[GL_RGB] = FORMAT_CHANNELS[GL_SRGB_EXT] = 3;\n  FORMAT_CHANNELS[GL_RGBA$1] = FORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4;\n  function objectName(str) {\n    return '[object ' + str + ']';\n  }\n  var CANVAS_CLASS = objectName('HTMLCanvasElement');\n  var OFFSCREENCANVAS_CLASS = objectName('OffscreenCanvas');\n  var CONTEXT2D_CLASS = objectName('CanvasRenderingContext2D');\n  var BITMAP_CLASS = objectName('ImageBitmap');\n  var IMAGE_CLASS = objectName('HTMLImageElement');\n  var VIDEO_CLASS = objectName('HTMLVideoElement');\n  var PIXEL_CLASSES = Object.keys(arrayTypes).concat([CANVAS_CLASS, OFFSCREENCANVAS_CLASS, CONTEXT2D_CLASS, BITMAP_CLASS, IMAGE_CLASS, VIDEO_CLASS]);\n\n  // for every texture type, store\n  // the size in bytes.\n  var TYPE_SIZES = [];\n  TYPE_SIZES[GL_UNSIGNED_BYTE$4] = 1;\n  TYPE_SIZES[GL_FLOAT$3] = 4;\n  TYPE_SIZES[GL_HALF_FLOAT_OES] = 2;\n  TYPE_SIZES[GL_UNSIGNED_SHORT$2] = 2;\n  TYPE_SIZES[GL_UNSIGNED_INT$2] = 4;\n  var FORMAT_SIZES_SPECIAL = [];\n  FORMAT_SIZES_SPECIAL[GL_RGBA4] = 2;\n  FORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2;\n  FORMAT_SIZES_SPECIAL[GL_RGB565] = 2;\n  FORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25;\n  FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5;\n  function isNumericArray(arr) {\n    return Array.isArray(arr) && (arr.length === 0 || typeof arr[0] === 'number');\n  }\n  function isRectArray(arr) {\n    if (!Array.isArray(arr)) {\n      return false;\n    }\n    var width = arr.length;\n    if (width === 0 || !isArrayLike(arr[0])) {\n      return false;\n    }\n    return true;\n  }\n  function classString(x) {\n    return Object.prototype.toString.call(x);\n  }\n  function isCanvasElement(object) {\n    return classString(object) === CANVAS_CLASS;\n  }\n  function isOffscreenCanvas(object) {\n    return classString(object) === OFFSCREENCANVAS_CLASS;\n  }\n  function isContext2D(object) {\n    return classString(object) === CONTEXT2D_CLASS;\n  }\n  function isBitmap(object) {\n    return classString(object) === BITMAP_CLASS;\n  }\n  function isImageElement(object) {\n    return classString(object) === IMAGE_CLASS;\n  }\n  function isVideoElement(object) {\n    return classString(object) === VIDEO_CLASS;\n  }\n  function isPixelData(object) {\n    if (!object) {\n      return false;\n    }\n    var className = classString(object);\n    if (PIXEL_CLASSES.indexOf(className) >= 0) {\n      return true;\n    }\n    return isNumericArray(object) || isRectArray(object) || isNDArrayLike(object);\n  }\n  function typedArrayCode$1(data) {\n    return arrayTypes[Object.prototype.toString.call(data)] | 0;\n  }\n  function convertData(result, data) {\n    var n = data.length;\n    switch (result.type) {\n      case GL_UNSIGNED_BYTE$4:\n      case GL_UNSIGNED_SHORT$2:\n      case GL_UNSIGNED_INT$2:\n      case GL_FLOAT$3:\n        var converted = pool.allocType(result.type, n);\n        converted.set(data);\n        result.data = converted;\n        break;\n      case GL_HALF_FLOAT_OES:\n        result.data = convertToHalfFloat(data);\n        break;\n      default:\n    }\n  }\n  function preConvert(image, n) {\n    return pool.allocType(image.type === GL_HALF_FLOAT_OES ? GL_FLOAT$3 : image.type, n);\n  }\n  function postConvert(image, data) {\n    if (image.type === GL_HALF_FLOAT_OES) {\n      image.data = convertToHalfFloat(data);\n      pool.freeType(data);\n    } else {\n      image.data = data;\n    }\n  }\n  function transposeData(image, array, strideX, strideY, strideC, offset) {\n    var w = image.width;\n    var h = image.height;\n    var c = image.channels;\n    var n = w * h * c;\n    var data = preConvert(image, n);\n    var p = 0;\n    for (var i = 0; i < h; ++i) {\n      for (var j = 0; j < w; ++j) {\n        for (var k = 0; k < c; ++k) {\n          data[p++] = array[strideX * j + strideY * i + strideC * k + offset];\n        }\n      }\n    }\n    postConvert(image, data);\n  }\n  function getTextureSize(format, type, width, height, isMipmap, isCube) {\n    var s;\n    if (typeof FORMAT_SIZES_SPECIAL[format] !== 'undefined') {\n      // we have a special array for dealing with weird color formats such as RGB5A1\n      s = FORMAT_SIZES_SPECIAL[format];\n    } else {\n      s = FORMAT_CHANNELS[format] * TYPE_SIZES[type];\n    }\n    if (isCube) {\n      s *= 6;\n    }\n    if (isMipmap) {\n      // compute the total size of all the mipmaps.\n      var total = 0;\n      var w = width;\n      while (w >= 1) {\n        // we can only use mipmaps on a square image,\n        // so we can simply use the width and ignore the height:\n        total += s * w * w;\n        w /= 2;\n      }\n      return total;\n    } else {\n      return s * width * height;\n    }\n  }\n  function createTextureSet(gl, extensions, limits, reglPoll, contextState, stats, config) {\n    // -------------------------------------------------------\n    // Initialize constants and parameter tables here\n    // -------------------------------------------------------\n    var mipmapHint = {\n      \"don't care\": GL_DONT_CARE,\n      'dont care': GL_DONT_CARE,\n      'nice': GL_NICEST,\n      'fast': GL_FASTEST\n    };\n    var wrapModes = {\n      'repeat': GL_REPEAT,\n      'clamp': GL_CLAMP_TO_EDGE,\n      'mirror': GL_MIRRORED_REPEAT\n    };\n    var magFilters = {\n      'nearest': GL_NEAREST,\n      'linear': GL_LINEAR\n    };\n    var minFilters = extend({\n      'mipmap': GL_LINEAR_MIPMAP_LINEAR,\n      'nearest mipmap nearest': GL_NEAREST_MIPMAP_NEAREST,\n      'linear mipmap nearest': GL_LINEAR_MIPMAP_NEAREST,\n      'nearest mipmap linear': GL_NEAREST_MIPMAP_LINEAR,\n      'linear mipmap linear': GL_LINEAR_MIPMAP_LINEAR\n    }, magFilters);\n    var colorSpace = {\n      'none': 0,\n      'browser': GL_BROWSER_DEFAULT_WEBGL\n    };\n    var textureTypes = {\n      'uint8': GL_UNSIGNED_BYTE$4,\n      'rgba4': GL_UNSIGNED_SHORT_4_4_4_4,\n      'rgb565': GL_UNSIGNED_SHORT_5_6_5,\n      'rgb5 a1': GL_UNSIGNED_SHORT_5_5_5_1\n    };\n    var textureFormats = {\n      'alpha': GL_ALPHA,\n      'luminance': GL_LUMINANCE,\n      'luminance alpha': GL_LUMINANCE_ALPHA,\n      'rgb': GL_RGB,\n      'rgba': GL_RGBA$1,\n      'rgba4': GL_RGBA4,\n      'rgb5 a1': GL_RGB5_A1,\n      'rgb565': GL_RGB565\n    };\n    var compressedTextureFormats = {};\n    if (extensions.ext_srgb) {\n      textureFormats.srgb = GL_SRGB_EXT;\n      textureFormats.srgba = GL_SRGB_ALPHA_EXT;\n    }\n    if (extensions.oes_texture_float) {\n      textureTypes.float32 = textureTypes.float = GL_FLOAT$3;\n    }\n    if (extensions.oes_texture_half_float) {\n      textureTypes['float16'] = textureTypes['half float'] = GL_HALF_FLOAT_OES;\n    }\n    if (extensions.webgl_depth_texture) {\n      extend(textureFormats, {\n        'depth': GL_DEPTH_COMPONENT,\n        'depth stencil': GL_DEPTH_STENCIL\n      });\n      extend(textureTypes, {\n        'uint16': GL_UNSIGNED_SHORT$2,\n        'uint32': GL_UNSIGNED_INT$2,\n        'depth stencil': GL_UNSIGNED_INT_24_8_WEBGL\n      });\n    }\n    if (extensions.webgl_compressed_texture_s3tc) {\n      extend(compressedTextureFormats, {\n        'rgb s3tc dxt1': GL_COMPRESSED_RGB_S3TC_DXT1_EXT,\n        'rgba s3tc dxt1': GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,\n        'rgba s3tc dxt3': GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,\n        'rgba s3tc dxt5': GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n      });\n    }\n    if (extensions.webgl_compressed_texture_atc) {\n      extend(compressedTextureFormats, {\n        'rgb atc': GL_COMPRESSED_RGB_ATC_WEBGL,\n        'rgba atc explicit alpha': GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n        'rgba atc interpolated alpha': GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n      });\n    }\n    if (extensions.webgl_compressed_texture_pvrtc) {\n      extend(compressedTextureFormats, {\n        'rgb pvrtc 4bppv1': GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n        'rgb pvrtc 2bppv1': GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\n        'rgba pvrtc 4bppv1': GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n        'rgba pvrtc 2bppv1': GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n      });\n    }\n    if (extensions.webgl_compressed_texture_etc1) {\n      compressedTextureFormats['rgb etc1'] = GL_COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    // Copy over all texture formats\n    var supportedCompressedFormats = Array.prototype.slice.call(gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS));\n    Object.keys(compressedTextureFormats).forEach(function (name) {\n      var format = compressedTextureFormats[name];\n      if (supportedCompressedFormats.indexOf(format) >= 0) {\n        textureFormats[name] = format;\n      }\n    });\n    var supportedFormats = Object.keys(textureFormats);\n    limits.textureFormats = supportedFormats;\n\n    // associate with every format string its\n    // corresponding GL-value.\n    var textureFormatsInvert = [];\n    Object.keys(textureFormats).forEach(function (key) {\n      var val = textureFormats[key];\n      textureFormatsInvert[val] = key;\n    });\n\n    // associate with every type string its\n    // corresponding GL-value.\n    var textureTypesInvert = [];\n    Object.keys(textureTypes).forEach(function (key) {\n      var val = textureTypes[key];\n      textureTypesInvert[val] = key;\n    });\n    var magFiltersInvert = [];\n    Object.keys(magFilters).forEach(function (key) {\n      var val = magFilters[key];\n      magFiltersInvert[val] = key;\n    });\n    var minFiltersInvert = [];\n    Object.keys(minFilters).forEach(function (key) {\n      var val = minFilters[key];\n      minFiltersInvert[val] = key;\n    });\n    var wrapModesInvert = [];\n    Object.keys(wrapModes).forEach(function (key) {\n      var val = wrapModes[key];\n      wrapModesInvert[val] = key;\n    });\n\n    // colorFormats[] gives the format (channels) associated to an\n    // internalformat\n    var colorFormats = supportedFormats.reduce(function (color, key) {\n      var glenum = textureFormats[key];\n      if (glenum === GL_LUMINANCE || glenum === GL_ALPHA || glenum === GL_LUMINANCE || glenum === GL_LUMINANCE_ALPHA || glenum === GL_DEPTH_COMPONENT || glenum === GL_DEPTH_STENCIL || extensions.ext_srgb && (glenum === GL_SRGB_EXT || glenum === GL_SRGB_ALPHA_EXT)) {\n        color[glenum] = glenum;\n      } else if (glenum === GL_RGB5_A1 || key.indexOf('rgba') >= 0) {\n        color[glenum] = GL_RGBA$1;\n      } else {\n        color[glenum] = GL_RGB;\n      }\n      return color;\n    }, {});\n    function TexFlags() {\n      // format info\n      this.internalformat = GL_RGBA$1;\n      this.format = GL_RGBA$1;\n      this.type = GL_UNSIGNED_BYTE$4;\n      this.compressed = false;\n\n      // pixel storage\n      this.premultiplyAlpha = false;\n      this.flipY = false;\n      this.unpackAlignment = 1;\n      this.colorSpace = GL_BROWSER_DEFAULT_WEBGL;\n\n      // shape info\n      this.width = 0;\n      this.height = 0;\n      this.channels = 0;\n    }\n    function copyFlags(result, other) {\n      result.internalformat = other.internalformat;\n      result.format = other.format;\n      result.type = other.type;\n      result.compressed = other.compressed;\n      result.premultiplyAlpha = other.premultiplyAlpha;\n      result.flipY = other.flipY;\n      result.unpackAlignment = other.unpackAlignment;\n      result.colorSpace = other.colorSpace;\n      result.width = other.width;\n      result.height = other.height;\n      result.channels = other.channels;\n    }\n    function parseFlags(flags, options) {\n      if (typeof options !== 'object' || !options) {\n        return;\n      }\n      if ('premultiplyAlpha' in options) {\n        flags.premultiplyAlpha = options.premultiplyAlpha;\n      }\n      if ('flipY' in options) {\n        flags.flipY = options.flipY;\n      }\n      if ('alignment' in options) {\n        flags.unpackAlignment = options.alignment;\n      }\n      if ('colorSpace' in options) {\n        flags.colorSpace = colorSpace[options.colorSpace];\n      }\n      if ('type' in options) {\n        var type = options.type;\n        flags.type = textureTypes[type];\n      }\n      var w = flags.width;\n      var h = flags.height;\n      var c = flags.channels;\n      var hasChannels = false;\n      if ('shape' in options) {\n        w = options.shape[0];\n        h = options.shape[1];\n        if (options.shape.length === 3) {\n          c = options.shape[2];\n          hasChannels = true;\n        }\n      } else {\n        if ('radius' in options) {\n          w = h = options.radius;\n        }\n        if ('width' in options) {\n          w = options.width;\n        }\n        if ('height' in options) {\n          h = options.height;\n        }\n        if ('channels' in options) {\n          c = options.channels;\n          hasChannels = true;\n        }\n      }\n      flags.width = w | 0;\n      flags.height = h | 0;\n      flags.channels = c | 0;\n      var hasFormat = false;\n      if ('format' in options) {\n        var formatStr = options.format;\n        var internalformat = flags.internalformat = textureFormats[formatStr];\n        flags.format = colorFormats[internalformat];\n        if (formatStr in textureTypes) {\n          if (!('type' in options)) {\n            flags.type = textureTypes[formatStr];\n          }\n        }\n        if (formatStr in compressedTextureFormats) {\n          flags.compressed = true;\n        }\n        hasFormat = true;\n      }\n\n      // Reconcile channels and format\n      if (!hasChannels && hasFormat) {\n        flags.channels = FORMAT_CHANNELS[flags.format];\n      } else if (hasChannels && !hasFormat) {\n        if (flags.channels !== CHANNELS_FORMAT[flags.format]) {\n          flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels];\n        }\n      } else if (hasFormat && hasChannels) {}\n    }\n    function setFlags(flags) {\n      gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY);\n      gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha);\n      gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace);\n      gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment);\n    }\n\n    // -------------------------------------------------------\n    // Tex image data\n    // -------------------------------------------------------\n    function TexImage() {\n      TexFlags.call(this);\n      this.xOffset = 0;\n      this.yOffset = 0;\n\n      // data\n      this.data = null;\n      this.needsFree = false;\n\n      // html element\n      this.element = null;\n\n      // copyTexImage info\n      this.needsCopy = false;\n    }\n    function parseImage(image, options) {\n      var data = null;\n      if (isPixelData(options)) {\n        data = options;\n      } else if (options) {\n        parseFlags(image, options);\n        if ('x' in options) {\n          image.xOffset = options.x | 0;\n        }\n        if ('y' in options) {\n          image.yOffset = options.y | 0;\n        }\n        if (isPixelData(options.data)) {\n          data = options.data;\n        }\n      }\n      if (options.copy) {\n        var viewW = contextState.viewportWidth;\n        var viewH = contextState.viewportHeight;\n        image.width = image.width || viewW - image.xOffset;\n        image.height = image.height || viewH - image.yOffset;\n        image.needsCopy = true;\n      } else if (!data) {\n        image.width = image.width || 1;\n        image.height = image.height || 1;\n        image.channels = image.channels || 4;\n      } else if (isTypedArray(data)) {\n        image.channels = image.channels || 4;\n        image.data = data;\n        if (!('type' in options) && image.type === GL_UNSIGNED_BYTE$4) {\n          image.type = typedArrayCode$1(data);\n        }\n      } else if (isNumericArray(data)) {\n        image.channels = image.channels || 4;\n        convertData(image, data);\n        image.alignment = 1;\n        image.needsFree = true;\n      } else if (isNDArrayLike(data)) {\n        var array = data.data;\n        if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$4) {\n          image.type = typedArrayCode$1(array);\n        }\n        var shape = data.shape;\n        var stride = data.stride;\n        var shapeX, shapeY, shapeC, strideX, strideY, strideC;\n        if (shape.length === 3) {\n          shapeC = shape[2];\n          strideC = stride[2];\n        } else {\n          shapeC = 1;\n          strideC = 1;\n        }\n        shapeX = shape[0];\n        shapeY = shape[1];\n        strideX = stride[0];\n        strideY = stride[1];\n        image.alignment = 1;\n        image.width = shapeX;\n        image.height = shapeY;\n        image.channels = shapeC;\n        image.format = image.internalformat = CHANNELS_FORMAT[shapeC];\n        image.needsFree = true;\n        transposeData(image, array, strideX, strideY, strideC, data.offset);\n      } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {\n        if (isCanvasElement(data) || isOffscreenCanvas(data)) {\n          image.element = data;\n        } else {\n          image.element = data.canvas;\n        }\n        image.width = image.element.width;\n        image.height = image.element.height;\n        image.channels = 4;\n      } else if (isBitmap(data)) {\n        image.element = data;\n        image.width = data.width;\n        image.height = data.height;\n        image.channels = 4;\n      } else if (isImageElement(data)) {\n        image.element = data;\n        image.width = data.naturalWidth;\n        image.height = data.naturalHeight;\n        image.channels = 4;\n      } else if (isVideoElement(data)) {\n        image.element = data;\n        image.width = data.videoWidth;\n        image.height = data.videoHeight;\n        image.channels = 4;\n      } else if (isRectArray(data)) {\n        var w = image.width || data[0].length;\n        var h = image.height || data.length;\n        var c = image.channels;\n        if (isArrayLike(data[0][0])) {\n          c = c || data[0][0].length;\n        } else {\n          c = c || 1;\n        }\n        var arrayShape = flattenUtils.shape(data);\n        var n = 1;\n        for (var dd = 0; dd < arrayShape.length; ++dd) {\n          n *= arrayShape[dd];\n        }\n        var allocData = preConvert(image, n);\n        flattenUtils.flatten(data, arrayShape, '', allocData);\n        postConvert(image, allocData);\n        image.alignment = 1;\n        image.width = w;\n        image.height = h;\n        image.channels = c;\n        image.format = image.internalformat = CHANNELS_FORMAT[c];\n        image.needsFree = true;\n      }\n      if (image.type === GL_FLOAT$3) {} else if (image.type === GL_HALF_FLOAT_OES) {}\n\n      // do compressed texture  validation here.\n    }\n    function setImage(info, target, miplevel) {\n      var element = info.element;\n      var data = info.data;\n      var internalformat = info.internalformat;\n      var format = info.format;\n      var type = info.type;\n      var width = info.width;\n      var height = info.height;\n      setFlags(info);\n      if (element) {\n        gl.texImage2D(target, miplevel, format, format, type, element);\n      } else if (info.compressed) {\n        gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data);\n      } else if (info.needsCopy) {\n        reglPoll();\n        gl.copyTexImage2D(target, miplevel, format, info.xOffset, info.yOffset, width, height, 0);\n      } else {\n        gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null);\n      }\n    }\n    function setSubImage(info, target, x, y, miplevel) {\n      var element = info.element;\n      var data = info.data;\n      var internalformat = info.internalformat;\n      var format = info.format;\n      var type = info.type;\n      var width = info.width;\n      var height = info.height;\n      setFlags(info);\n      if (element) {\n        gl.texSubImage2D(target, miplevel, x, y, format, type, element);\n      } else if (info.compressed) {\n        gl.compressedTexSubImage2D(target, miplevel, x, y, internalformat, width, height, data);\n      } else if (info.needsCopy) {\n        reglPoll();\n        gl.copyTexSubImage2D(target, miplevel, x, y, info.xOffset, info.yOffset, width, height);\n      } else {\n        gl.texSubImage2D(target, miplevel, x, y, width, height, format, type, data);\n      }\n    }\n\n    // texImage pool\n    var imagePool = [];\n    function allocImage() {\n      return imagePool.pop() || new TexImage();\n    }\n    function freeImage(image) {\n      if (image.needsFree) {\n        pool.freeType(image.data);\n      }\n      TexImage.call(image);\n      imagePool.push(image);\n    }\n\n    // -------------------------------------------------------\n    // Mip map\n    // -------------------------------------------------------\n    function MipMap() {\n      TexFlags.call(this);\n      this.genMipmaps = false;\n      this.mipmapHint = GL_DONT_CARE;\n      this.mipmask = 0;\n      this.images = Array(16);\n    }\n    function parseMipMapFromShape(mipmap, width, height) {\n      var img = mipmap.images[0] = allocImage();\n      mipmap.mipmask = 1;\n      img.width = mipmap.width = width;\n      img.height = mipmap.height = height;\n      img.channels = mipmap.channels = 4;\n    }\n    function parseMipMapFromObject(mipmap, options) {\n      var imgData = null;\n      if (isPixelData(options)) {\n        imgData = mipmap.images[0] = allocImage();\n        copyFlags(imgData, mipmap);\n        parseImage(imgData, options);\n        mipmap.mipmask = 1;\n      } else {\n        parseFlags(mipmap, options);\n        if (Array.isArray(options.mipmap)) {\n          var mipData = options.mipmap;\n          for (var i = 0; i < mipData.length; ++i) {\n            imgData = mipmap.images[i] = allocImage();\n            copyFlags(imgData, mipmap);\n            imgData.width >>= i;\n            imgData.height >>= i;\n            parseImage(imgData, mipData[i]);\n            mipmap.mipmask |= 1 << i;\n          }\n        } else {\n          imgData = mipmap.images[0] = allocImage();\n          copyFlags(imgData, mipmap);\n          parseImage(imgData, options);\n          mipmap.mipmask = 1;\n        }\n      }\n      copyFlags(mipmap, mipmap.images[0]);\n\n      // For textures of the compressed format WEBGL_compressed_texture_s3tc\n      // we must have that\n      //\n      // \"When level equals zero width and height must be a multiple of 4.\n      // When level is greater than 0 width and height must be 0, 1, 2 or a multiple of 4. \"\n      //\n      // but we do not yet support having multiple mipmap levels for compressed textures,\n      // so we only test for level zero.\n\n      if (mipmap.compressed && (mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)) {}\n    }\n    function setMipMap(mipmap, target) {\n      var images = mipmap.images;\n      for (var i = 0; i < images.length; ++i) {\n        if (!images[i]) {\n          return;\n        }\n        setImage(images[i], target, i);\n      }\n    }\n    var mipPool = [];\n    function allocMipMap() {\n      var result = mipPool.pop() || new MipMap();\n      TexFlags.call(result);\n      result.mipmask = 0;\n      for (var i = 0; i < 16; ++i) {\n        result.images[i] = null;\n      }\n      return result;\n    }\n    function freeMipMap(mipmap) {\n      var images = mipmap.images;\n      for (var i = 0; i < images.length; ++i) {\n        if (images[i]) {\n          freeImage(images[i]);\n        }\n        images[i] = null;\n      }\n      mipPool.push(mipmap);\n    }\n\n    // -------------------------------------------------------\n    // Tex info\n    // -------------------------------------------------------\n    function TexInfo() {\n      this.minFilter = GL_NEAREST;\n      this.magFilter = GL_NEAREST;\n      this.wrapS = GL_CLAMP_TO_EDGE;\n      this.wrapT = GL_CLAMP_TO_EDGE;\n      this.anisotropic = 1;\n      this.genMipmaps = false;\n      this.mipmapHint = GL_DONT_CARE;\n    }\n    function parseTexInfo(info, options) {\n      if ('min' in options) {\n        var minFilter = options.min;\n        info.minFilter = minFilters[minFilter];\n        if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !('faces' in options)) {\n          info.genMipmaps = true;\n        }\n      }\n      if ('mag' in options) {\n        var magFilter = options.mag;\n        info.magFilter = magFilters[magFilter];\n      }\n      var wrapS = info.wrapS;\n      var wrapT = info.wrapT;\n      if ('wrap' in options) {\n        var wrap = options.wrap;\n        if (typeof wrap === 'string') {\n          wrapS = wrapT = wrapModes[wrap];\n        } else if (Array.isArray(wrap)) {\n          wrapS = wrapModes[wrap[0]];\n          wrapT = wrapModes[wrap[1]];\n        }\n      } else {\n        if ('wrapS' in options) {\n          var optWrapS = options.wrapS;\n          wrapS = wrapModes[optWrapS];\n        }\n        if ('wrapT' in options) {\n          var optWrapT = options.wrapT;\n          wrapT = wrapModes[optWrapT];\n        }\n      }\n      info.wrapS = wrapS;\n      info.wrapT = wrapT;\n      if ('anisotropic' in options) {\n        var anisotropic = options.anisotropic;\n        info.anisotropic = options.anisotropic;\n      }\n      if ('mipmap' in options) {\n        var hasMipMap = false;\n        switch (typeof options.mipmap) {\n          case 'string':\n            info.mipmapHint = mipmapHint[options.mipmap];\n            info.genMipmaps = true;\n            hasMipMap = true;\n            break;\n          case 'boolean':\n            hasMipMap = info.genMipmaps = options.mipmap;\n            break;\n          case 'object':\n            info.genMipmaps = false;\n            hasMipMap = true;\n            break;\n          default:\n        }\n        if (hasMipMap && !('min' in options)) {\n          info.minFilter = GL_NEAREST_MIPMAP_NEAREST;\n        }\n      }\n    }\n    function setTexInfo(info, target) {\n      gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter);\n      gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter);\n      gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS);\n      gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT);\n      if (extensions.ext_texture_filter_anisotropic) {\n        gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic);\n      }\n      if (info.genMipmaps) {\n        gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint);\n        gl.generateMipmap(target);\n      }\n    }\n\n    // -------------------------------------------------------\n    // Full texture object\n    // -------------------------------------------------------\n    var textureCount = 0;\n    var textureSet = {};\n    var numTexUnits = limits.maxTextureUnits;\n    var textureUnits = Array(numTexUnits).map(function () {\n      return null;\n    });\n    function REGLTexture(target) {\n      TexFlags.call(this);\n      this.mipmask = 0;\n      this.internalformat = GL_RGBA$1;\n      this.id = textureCount++;\n      this.refCount = 1;\n      this.target = target;\n      this.texture = gl.createTexture();\n      this.unit = -1;\n      this.bindCount = 0;\n      this.texInfo = new TexInfo();\n      if (config.profile) {\n        this.stats = {\n          size: 0\n        };\n      }\n    }\n    function tempBind(texture) {\n      gl.activeTexture(GL_TEXTURE0$1);\n      gl.bindTexture(texture.target, texture.texture);\n    }\n    function tempRestore() {\n      var prev = textureUnits[0];\n      if (prev) {\n        gl.bindTexture(prev.target, prev.texture);\n      } else {\n        gl.bindTexture(GL_TEXTURE_2D$1, null);\n      }\n    }\n    function destroy(texture) {\n      var handle = texture.texture;\n      var unit = texture.unit;\n      var target = texture.target;\n      if (unit >= 0) {\n        gl.activeTexture(GL_TEXTURE0$1 + unit);\n        gl.bindTexture(target, null);\n        textureUnits[unit] = null;\n      }\n      gl.deleteTexture(handle);\n      texture.texture = null;\n      texture.params = null;\n      texture.pixels = null;\n      texture.refCount = 0;\n      delete textureSet[texture.id];\n      stats.textureCount--;\n    }\n    extend(REGLTexture.prototype, {\n      bind: function () {\n        var texture = this;\n        texture.bindCount += 1;\n        var unit = texture.unit;\n        if (unit < 0) {\n          for (var i = 0; i < numTexUnits; ++i) {\n            var other = textureUnits[i];\n            if (other) {\n              if (other.bindCount > 0) {\n                continue;\n              }\n              other.unit = -1;\n            }\n            textureUnits[i] = texture;\n            unit = i;\n            break;\n          }\n          if (unit >= numTexUnits) {}\n          if (config.profile && stats.maxTextureUnits < unit + 1) {\n            stats.maxTextureUnits = unit + 1; // +1, since the units are zero-based\n          }\n          texture.unit = unit;\n          gl.activeTexture(GL_TEXTURE0$1 + unit);\n          gl.bindTexture(texture.target, texture.texture);\n        }\n        return unit;\n      },\n      unbind: function () {\n        this.bindCount -= 1;\n      },\n      decRef: function () {\n        if (--this.refCount <= 0) {\n          destroy(this);\n        }\n      }\n    });\n    function createTexture2D(a, b) {\n      var texture = new REGLTexture(GL_TEXTURE_2D$1);\n      textureSet[texture.id] = texture;\n      stats.textureCount++;\n      function reglTexture2D(a, b) {\n        var texInfo = texture.texInfo;\n        TexInfo.call(texInfo);\n        var mipData = allocMipMap();\n        if (typeof a === 'number') {\n          if (typeof b === 'number') {\n            parseMipMapFromShape(mipData, a | 0, b | 0);\n          } else {\n            parseMipMapFromShape(mipData, a | 0, a | 0);\n          }\n        } else if (a) {\n          parseTexInfo(texInfo, a);\n          parseMipMapFromObject(mipData, a);\n        } else {\n          // empty textures get assigned a default shape of 1x1\n          parseMipMapFromShape(mipData, 1, 1);\n        }\n        if (texInfo.genMipmaps) {\n          mipData.mipmask = (mipData.width << 1) - 1;\n        }\n        texture.mipmask = mipData.mipmask;\n        copyFlags(texture, mipData);\n        texture.internalformat = mipData.internalformat;\n        reglTexture2D.width = mipData.width;\n        reglTexture2D.height = mipData.height;\n        tempBind(texture);\n        setMipMap(mipData, GL_TEXTURE_2D$1);\n        setTexInfo(texInfo, GL_TEXTURE_2D$1);\n        tempRestore();\n        freeMipMap(mipData);\n        if (config.profile) {\n          texture.stats.size = getTextureSize(texture.internalformat, texture.type, mipData.width, mipData.height, texInfo.genMipmaps, false);\n        }\n        reglTexture2D.format = textureFormatsInvert[texture.internalformat];\n        reglTexture2D.type = textureTypesInvert[texture.type];\n        reglTexture2D.mag = magFiltersInvert[texInfo.magFilter];\n        reglTexture2D.min = minFiltersInvert[texInfo.minFilter];\n        reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS];\n        reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT];\n        return reglTexture2D;\n      }\n      function subimage(image, x_, y_, level_) {\n        var x = x_ | 0;\n        var y = y_ | 0;\n        var level = level_ | 0;\n        var imageData = allocImage();\n        copyFlags(imageData, texture);\n        imageData.width = 0;\n        imageData.height = 0;\n        parseImage(imageData, image);\n        imageData.width = imageData.width || (texture.width >> level) - x;\n        imageData.height = imageData.height || (texture.height >> level) - y;\n        tempBind(texture);\n        setSubImage(imageData, GL_TEXTURE_2D$1, x, y, level);\n        tempRestore();\n        freeImage(imageData);\n        return reglTexture2D;\n      }\n      function resize(w_, h_) {\n        var w = w_ | 0;\n        var h = h_ | 0 || w;\n        if (w === texture.width && h === texture.height) {\n          return reglTexture2D;\n        }\n        reglTexture2D.width = texture.width = w;\n        reglTexture2D.height = texture.height = h;\n        tempBind(texture);\n        for (var i = 0; texture.mipmask >> i; ++i) {\n          var _w = w >> i;\n          var _h = h >> i;\n          if (!_w || !_h) break;\n          gl.texImage2D(GL_TEXTURE_2D$1, i, texture.format, _w, _h, 0, texture.format, texture.type, null);\n        }\n        tempRestore();\n\n        // also, recompute the texture size.\n        if (config.profile) {\n          texture.stats.size = getTextureSize(texture.internalformat, texture.type, w, h, false, false);\n        }\n        return reglTexture2D;\n      }\n      reglTexture2D(a, b);\n      reglTexture2D.subimage = subimage;\n      reglTexture2D.resize = resize;\n      reglTexture2D._reglType = 'texture2d';\n      reglTexture2D._texture = texture;\n      if (config.profile) {\n        reglTexture2D.stats = texture.stats;\n      }\n      reglTexture2D.destroy = function () {\n        texture.decRef();\n      };\n      return reglTexture2D;\n    }\n    function createTextureCube(a0, a1, a2, a3, a4, a5) {\n      var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1);\n      textureSet[texture.id] = texture;\n      stats.cubeCount++;\n      var faces = new Array(6);\n      function reglTextureCube(a0, a1, a2, a3, a4, a5) {\n        var i;\n        var texInfo = texture.texInfo;\n        TexInfo.call(texInfo);\n        for (i = 0; i < 6; ++i) {\n          faces[i] = allocMipMap();\n        }\n        if (typeof a0 === 'number' || !a0) {\n          var s = a0 | 0 || 1;\n          for (i = 0; i < 6; ++i) {\n            parseMipMapFromShape(faces[i], s, s);\n          }\n        } else if (typeof a0 === 'object') {\n          if (a1) {\n            parseMipMapFromObject(faces[0], a0);\n            parseMipMapFromObject(faces[1], a1);\n            parseMipMapFromObject(faces[2], a2);\n            parseMipMapFromObject(faces[3], a3);\n            parseMipMapFromObject(faces[4], a4);\n            parseMipMapFromObject(faces[5], a5);\n          } else {\n            parseTexInfo(texInfo, a0);\n            parseFlags(texture, a0);\n            if ('faces' in a0) {\n              var faceInput = a0.faces;\n              for (i = 0; i < 6; ++i) {\n                copyFlags(faces[i], texture);\n                parseMipMapFromObject(faces[i], faceInput[i]);\n              }\n            } else {\n              for (i = 0; i < 6; ++i) {\n                parseMipMapFromObject(faces[i], a0);\n              }\n            }\n          }\n        } else {}\n        copyFlags(texture, faces[0]);\n        if (texInfo.genMipmaps) {\n          texture.mipmask = (faces[0].width << 1) - 1;\n        } else {\n          texture.mipmask = faces[0].mipmask;\n        }\n        texture.internalformat = faces[0].internalformat;\n        reglTextureCube.width = faces[0].width;\n        reglTextureCube.height = faces[0].height;\n        tempBind(texture);\n        for (i = 0; i < 6; ++i) {\n          setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i);\n        }\n        setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1);\n        tempRestore();\n        if (config.profile) {\n          texture.stats.size = getTextureSize(texture.internalformat, texture.type, reglTextureCube.width, reglTextureCube.height, texInfo.genMipmaps, true);\n        }\n        reglTextureCube.format = textureFormatsInvert[texture.internalformat];\n        reglTextureCube.type = textureTypesInvert[texture.type];\n        reglTextureCube.mag = magFiltersInvert[texInfo.magFilter];\n        reglTextureCube.min = minFiltersInvert[texInfo.minFilter];\n        reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS];\n        reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT];\n        for (i = 0; i < 6; ++i) {\n          freeMipMap(faces[i]);\n        }\n        return reglTextureCube;\n      }\n      function subimage(face, image, x_, y_, level_) {\n        var x = x_ | 0;\n        var y = y_ | 0;\n        var level = level_ | 0;\n        var imageData = allocImage();\n        copyFlags(imageData, texture);\n        imageData.width = 0;\n        imageData.height = 0;\n        parseImage(imageData, image);\n        imageData.width = imageData.width || (texture.width >> level) - x;\n        imageData.height = imageData.height || (texture.height >> level) - y;\n        tempBind(texture);\n        setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x, y, level);\n        tempRestore();\n        freeImage(imageData);\n        return reglTextureCube;\n      }\n      function resize(radius_) {\n        var radius = radius_ | 0;\n        if (radius === texture.width) {\n          return;\n        }\n        reglTextureCube.width = texture.width = radius;\n        reglTextureCube.height = texture.height = radius;\n        tempBind(texture);\n        for (var i = 0; i < 6; ++i) {\n          for (var j = 0; texture.mipmask >> j; ++j) {\n            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i, j, texture.format, radius >> j, radius >> j, 0, texture.format, texture.type, null);\n          }\n        }\n        tempRestore();\n        if (config.profile) {\n          texture.stats.size = getTextureSize(texture.internalformat, texture.type, reglTextureCube.width, reglTextureCube.height, false, true);\n        }\n        return reglTextureCube;\n      }\n      reglTextureCube(a0, a1, a2, a3, a4, a5);\n      reglTextureCube.subimage = subimage;\n      reglTextureCube.resize = resize;\n      reglTextureCube._reglType = 'textureCube';\n      reglTextureCube._texture = texture;\n      if (config.profile) {\n        reglTextureCube.stats = texture.stats;\n      }\n      reglTextureCube.destroy = function () {\n        texture.decRef();\n      };\n      return reglTextureCube;\n    }\n\n    // Called when regl is destroyed\n    function destroyTextures() {\n      for (var i = 0; i < numTexUnits; ++i) {\n        gl.activeTexture(GL_TEXTURE0$1 + i);\n        gl.bindTexture(GL_TEXTURE_2D$1, null);\n        textureUnits[i] = null;\n      }\n      values(textureSet).forEach(destroy);\n      stats.cubeCount = 0;\n      stats.textureCount = 0;\n    }\n    if (config.profile) {\n      stats.getTotalTextureSize = function () {\n        var total = 0;\n        Object.keys(textureSet).forEach(function (key) {\n          total += textureSet[key].stats.size;\n        });\n        return total;\n      };\n    }\n    function restoreTextures() {\n      for (var i = 0; i < numTexUnits; ++i) {\n        var tex = textureUnits[i];\n        if (tex) {\n          tex.bindCount = 0;\n          tex.unit = -1;\n          textureUnits[i] = null;\n        }\n      }\n      values(textureSet).forEach(function (texture) {\n        texture.texture = gl.createTexture();\n        gl.bindTexture(texture.target, texture.texture);\n        for (var i = 0; i < 32; ++i) {\n          if ((texture.mipmask & 1 << i) === 0) {\n            continue;\n          }\n          if (texture.target === GL_TEXTURE_2D$1) {\n            gl.texImage2D(GL_TEXTURE_2D$1, i, texture.internalformat, texture.width >> i, texture.height >> i, 0, texture.internalformat, texture.type, null);\n          } else {\n            for (var j = 0; j < 6; ++j) {\n              gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j, i, texture.internalformat, texture.width >> i, texture.height >> i, 0, texture.internalformat, texture.type, null);\n            }\n          }\n        }\n        setTexInfo(texture.texInfo, texture.target);\n      });\n    }\n    function refreshTextures() {\n      for (var i = 0; i < numTexUnits; ++i) {\n        var tex = textureUnits[i];\n        if (tex) {\n          tex.bindCount = 0;\n          tex.unit = -1;\n          textureUnits[i] = null;\n        }\n        gl.activeTexture(GL_TEXTURE0$1 + i);\n        gl.bindTexture(GL_TEXTURE_2D$1, null);\n        gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null);\n      }\n    }\n    return {\n      create2D: createTexture2D,\n      createCube: createTextureCube,\n      clear: destroyTextures,\n      getTexture: function (wrapper) {\n        return null;\n      },\n      restore: restoreTextures,\n      refresh: refreshTextures\n    };\n  }\n  var GL_RENDERBUFFER = 0x8D41;\n  var GL_RGBA4$1 = 0x8056;\n  var GL_RGB5_A1$1 = 0x8057;\n  var GL_RGB565$1 = 0x8D62;\n  var GL_DEPTH_COMPONENT16 = 0x81A5;\n  var GL_STENCIL_INDEX8 = 0x8D48;\n  var GL_DEPTH_STENCIL$1 = 0x84F9;\n  var GL_SRGB8_ALPHA8_EXT = 0x8C43;\n  var GL_RGBA32F_EXT = 0x8814;\n  var GL_RGBA16F_EXT = 0x881A;\n  var GL_RGB16F_EXT = 0x881B;\n  var FORMAT_SIZES = [];\n  FORMAT_SIZES[GL_RGBA4$1] = 2;\n  FORMAT_SIZES[GL_RGB5_A1$1] = 2;\n  FORMAT_SIZES[GL_RGB565$1] = 2;\n  FORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2;\n  FORMAT_SIZES[GL_STENCIL_INDEX8] = 1;\n  FORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4;\n  FORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4;\n  FORMAT_SIZES[GL_RGBA32F_EXT] = 16;\n  FORMAT_SIZES[GL_RGBA16F_EXT] = 8;\n  FORMAT_SIZES[GL_RGB16F_EXT] = 6;\n  function getRenderbufferSize(format, width, height) {\n    return FORMAT_SIZES[format] * width * height;\n  }\n  var wrapRenderbuffers = function (gl, extensions, limits, stats, config) {\n    var formatTypes = {\n      'rgba4': GL_RGBA4$1,\n      'rgb565': GL_RGB565$1,\n      'rgb5 a1': GL_RGB5_A1$1,\n      'depth': GL_DEPTH_COMPONENT16,\n      'stencil': GL_STENCIL_INDEX8,\n      'depth stencil': GL_DEPTH_STENCIL$1\n    };\n    if (extensions.ext_srgb) {\n      formatTypes['srgba'] = GL_SRGB8_ALPHA8_EXT;\n    }\n    if (extensions.ext_color_buffer_half_float) {\n      formatTypes['rgba16f'] = GL_RGBA16F_EXT;\n      formatTypes['rgb16f'] = GL_RGB16F_EXT;\n    }\n    if (extensions.webgl_color_buffer_float) {\n      formatTypes['rgba32f'] = GL_RGBA32F_EXT;\n    }\n    var formatTypesInvert = [];\n    Object.keys(formatTypes).forEach(function (key) {\n      var val = formatTypes[key];\n      formatTypesInvert[val] = key;\n    });\n    var renderbufferCount = 0;\n    var renderbufferSet = {};\n    function REGLRenderbuffer(renderbuffer) {\n      this.id = renderbufferCount++;\n      this.refCount = 1;\n      this.renderbuffer = renderbuffer;\n      this.format = GL_RGBA4$1;\n      this.width = 0;\n      this.height = 0;\n      if (config.profile) {\n        this.stats = {\n          size: 0\n        };\n      }\n    }\n    REGLRenderbuffer.prototype.decRef = function () {\n      if (--this.refCount <= 0) {\n        destroy(this);\n      }\n    };\n    function destroy(rb) {\n      var handle = rb.renderbuffer;\n      gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n      gl.deleteRenderbuffer(handle);\n      rb.renderbuffer = null;\n      rb.refCount = 0;\n      delete renderbufferSet[rb.id];\n      stats.renderbufferCount--;\n    }\n    function createRenderbuffer(a, b) {\n      var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer());\n      renderbufferSet[renderbuffer.id] = renderbuffer;\n      stats.renderbufferCount++;\n      function reglRenderbuffer(a, b) {\n        var w = 0;\n        var h = 0;\n        var format = GL_RGBA4$1;\n        if (typeof a === 'object' && a) {\n          var options = a;\n          if ('shape' in options) {\n            var shape = options.shape;\n            w = shape[0] | 0;\n            h = shape[1] | 0;\n          } else {\n            if ('radius' in options) {\n              w = h = options.radius | 0;\n            }\n            if ('width' in options) {\n              w = options.width | 0;\n            }\n            if ('height' in options) {\n              h = options.height | 0;\n            }\n          }\n          if ('format' in options) {\n            format = formatTypes[options.format];\n          }\n        } else if (typeof a === 'number') {\n          w = a | 0;\n          if (typeof b === 'number') {\n            h = b | 0;\n          } else {\n            h = w;\n          }\n        } else if (!a) {\n          w = h = 1;\n        } else {}\n\n        // check shape\n\n        if (w === renderbuffer.width && h === renderbuffer.height && format === renderbuffer.format) {\n          return;\n        }\n        reglRenderbuffer.width = renderbuffer.width = w;\n        reglRenderbuffer.height = renderbuffer.height = h;\n        renderbuffer.format = format;\n        gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);\n        gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h);\n        if (config.profile) {\n          renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);\n        }\n        reglRenderbuffer.format = formatTypesInvert[renderbuffer.format];\n        return reglRenderbuffer;\n      }\n      function resize(w_, h_) {\n        var w = w_ | 0;\n        var h = h_ | 0 || w;\n        if (w === renderbuffer.width && h === renderbuffer.height) {\n          return reglRenderbuffer;\n        }\n\n        // check shape\n\n        reglRenderbuffer.width = renderbuffer.width = w;\n        reglRenderbuffer.height = renderbuffer.height = h;\n        gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);\n        gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h);\n\n        // also, recompute size.\n        if (config.profile) {\n          renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);\n        }\n        return reglRenderbuffer;\n      }\n      reglRenderbuffer(a, b);\n      reglRenderbuffer.resize = resize;\n      reglRenderbuffer._reglType = 'renderbuffer';\n      reglRenderbuffer._renderbuffer = renderbuffer;\n      if (config.profile) {\n        reglRenderbuffer.stats = renderbuffer.stats;\n      }\n      reglRenderbuffer.destroy = function () {\n        renderbuffer.decRef();\n      };\n      return reglRenderbuffer;\n    }\n    if (config.profile) {\n      stats.getTotalRenderbufferSize = function () {\n        var total = 0;\n        Object.keys(renderbufferSet).forEach(function (key) {\n          total += renderbufferSet[key].stats.size;\n        });\n        return total;\n      };\n    }\n    function restoreRenderbuffers() {\n      values(renderbufferSet).forEach(function (rb) {\n        rb.renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer);\n        gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height);\n      });\n      gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n    }\n    return {\n      create: createRenderbuffer,\n      clear: function () {\n        values(renderbufferSet).forEach(destroy);\n      },\n      restore: restoreRenderbuffers\n    };\n  };\n\n  // We store these constants so that the minifier can inline them\n  var GL_FRAMEBUFFER$1 = 0x8D40;\n  var GL_RENDERBUFFER$1 = 0x8D41;\n  var GL_TEXTURE_2D$2 = 0x0DE1;\n  var GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 0x8515;\n  var GL_COLOR_ATTACHMENT0$1 = 0x8CE0;\n  var GL_DEPTH_ATTACHMENT = 0x8D00;\n  var GL_STENCIL_ATTACHMENT = 0x8D20;\n  var GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;\n  var GL_FRAMEBUFFER_COMPLETE$1 = 0x8CD5;\n  var GL_HALF_FLOAT_OES$1 = 0x8D61;\n  var GL_UNSIGNED_BYTE$5 = 0x1401;\n  var GL_FLOAT$4 = 0x1406;\n  var GL_RGB$1 = 0x1907;\n  var GL_RGBA$2 = 0x1908;\n\n  // for every texture format, store\n  // the number of channels\n  var textureFormatChannels = [];\n  textureFormatChannels[GL_RGBA$2] = 4;\n  textureFormatChannels[GL_RGB$1] = 3;\n\n  // for every texture type, store\n  // the size in bytes.\n  var textureTypeSizes = [];\n  textureTypeSizes[GL_UNSIGNED_BYTE$5] = 1;\n  textureTypeSizes[GL_FLOAT$4] = 4;\n  textureTypeSizes[GL_HALF_FLOAT_OES$1] = 2;\n  function wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats) {\n    var framebufferState = {\n      cur: null,\n      next: null,\n      dirty: false,\n      setFBO: null\n    };\n    var colorTextureFormats = ['rgba'];\n    var colorRenderbufferFormats = ['rgba4', 'rgb565', 'rgb5 a1'];\n    if (extensions.ext_srgb) {\n      colorRenderbufferFormats.push('srgba');\n    }\n    if (extensions.ext_color_buffer_half_float) {\n      colorRenderbufferFormats.push('rgba16f', 'rgb16f');\n    }\n    if (extensions.webgl_color_buffer_float) {\n      colorRenderbufferFormats.push('rgba32f');\n    }\n    var colorTypes = ['uint8'];\n    if (extensions.oes_texture_half_float) {\n      colorTypes.push('half float', 'float16');\n    }\n    if (extensions.oes_texture_float) {\n      colorTypes.push('float', 'float32');\n    }\n    function FramebufferAttachment(target, texture, renderbuffer) {\n      this.target = target;\n      this.texture = texture;\n      this.renderbuffer = renderbuffer;\n      var w = 0;\n      var h = 0;\n      if (texture) {\n        w = texture.width;\n        h = texture.height;\n      } else if (renderbuffer) {\n        w = renderbuffer.width;\n        h = renderbuffer.height;\n      }\n      this.width = w;\n      this.height = h;\n    }\n    function decRef(attachment) {\n      if (attachment) {\n        if (attachment.texture) {\n          attachment.texture._texture.decRef();\n        }\n        if (attachment.renderbuffer) {\n          attachment.renderbuffer._renderbuffer.decRef();\n        }\n      }\n    }\n    function incRefAndCheckShape(attachment, width, height) {\n      if (!attachment) {\n        return;\n      }\n      if (attachment.texture) {\n        var texture = attachment.texture._texture;\n        var tw = Math.max(1, texture.width);\n        var th = Math.max(1, texture.height);\n        texture.refCount += 1;\n      } else {\n        var renderbuffer = attachment.renderbuffer._renderbuffer;\n        renderbuffer.refCount += 1;\n      }\n    }\n    function attach(location, attachment) {\n      if (attachment) {\n        if (attachment.texture) {\n          gl.framebufferTexture2D(GL_FRAMEBUFFER$1, location, attachment.target, attachment.texture._texture.texture, 0);\n        } else {\n          gl.framebufferRenderbuffer(GL_FRAMEBUFFER$1, location, GL_RENDERBUFFER$1, attachment.renderbuffer._renderbuffer.renderbuffer);\n        }\n      }\n    }\n    function parseAttachment(attachment) {\n      var target = GL_TEXTURE_2D$2;\n      var texture = null;\n      var renderbuffer = null;\n      var data = attachment;\n      if (typeof attachment === 'object') {\n        data = attachment.data;\n        if ('target' in attachment) {\n          target = attachment.target | 0;\n        }\n      }\n      var type = data._reglType;\n      if (type === 'texture2d') {\n        texture = data;\n      } else if (type === 'textureCube') {\n        texture = data;\n      } else if (type === 'renderbuffer') {\n        renderbuffer = data;\n        target = GL_RENDERBUFFER$1;\n      } else {}\n      return new FramebufferAttachment(target, texture, renderbuffer);\n    }\n    function allocAttachment(width, height, isTexture, format, type) {\n      if (isTexture) {\n        var texture = textureState.create2D({\n          width: width,\n          height: height,\n          format: format,\n          type: type\n        });\n        texture._texture.refCount = 0;\n        return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null);\n      } else {\n        var rb = renderbufferState.create({\n          width: width,\n          height: height,\n          format: format\n        });\n        rb._renderbuffer.refCount = 0;\n        return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb);\n      }\n    }\n    function unwrapAttachment(attachment) {\n      return attachment && (attachment.texture || attachment.renderbuffer);\n    }\n    function resizeAttachment(attachment, w, h) {\n      if (attachment) {\n        if (attachment.texture) {\n          attachment.texture.resize(w, h);\n        } else if (attachment.renderbuffer) {\n          attachment.renderbuffer.resize(w, h);\n        }\n        attachment.width = w;\n        attachment.height = h;\n      }\n    }\n    var framebufferCount = 0;\n    var framebufferSet = {};\n    function REGLFramebuffer() {\n      this.id = framebufferCount++;\n      framebufferSet[this.id] = this;\n      this.framebuffer = gl.createFramebuffer();\n      this.width = 0;\n      this.height = 0;\n      this.colorAttachments = [];\n      this.depthAttachment = null;\n      this.stencilAttachment = null;\n      this.depthStencilAttachment = null;\n    }\n    function decFBORefs(framebuffer) {\n      framebuffer.colorAttachments.forEach(decRef);\n      decRef(framebuffer.depthAttachment);\n      decRef(framebuffer.stencilAttachment);\n      decRef(framebuffer.depthStencilAttachment);\n    }\n    function destroy(framebuffer) {\n      var handle = framebuffer.framebuffer;\n      gl.deleteFramebuffer(handle);\n      framebuffer.framebuffer = null;\n      stats.framebufferCount--;\n      delete framebufferSet[framebuffer.id];\n    }\n    function updateFramebuffer(framebuffer) {\n      var i;\n      gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer);\n      var colorAttachments = framebuffer.colorAttachments;\n      for (i = 0; i < colorAttachments.length; ++i) {\n        attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i]);\n      }\n      for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {\n        gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_COLOR_ATTACHMENT0$1 + i, GL_TEXTURE_2D$2, null, 0);\n      }\n      gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_DEPTH_STENCIL_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);\n      gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);\n      gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_STENCIL_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);\n      attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment);\n      attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment);\n      attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment);\n\n      // Check status code\n      var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1);\n      if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) {}\n      gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null);\n      framebufferState.cur = framebufferState.next;\n\n      // FIXME: Clear error code here.  This is a work around for a bug in\n      // headless-gl\n      gl.getError();\n    }\n    function createFBO(a0, a1) {\n      var framebuffer = new REGLFramebuffer();\n      stats.framebufferCount++;\n      function reglFramebuffer(a, b) {\n        var i;\n        var width = 0;\n        var height = 0;\n        var needsDepth = true;\n        var needsStencil = true;\n        var colorBuffer = null;\n        var colorTexture = true;\n        var colorFormat = 'rgba';\n        var colorType = 'uint8';\n        var colorCount = 1;\n        var depthBuffer = null;\n        var stencilBuffer = null;\n        var depthStencilBuffer = null;\n        var depthStencilTexture = false;\n        if (typeof a === 'number') {\n          width = a | 0;\n          height = b | 0 || width;\n        } else if (!a) {\n          width = height = 1;\n        } else {\n          var options = a;\n          if ('shape' in options) {\n            var shape = options.shape;\n            width = shape[0];\n            height = shape[1];\n          } else {\n            if ('radius' in options) {\n              width = height = options.radius;\n            }\n            if ('width' in options) {\n              width = options.width;\n            }\n            if ('height' in options) {\n              height = options.height;\n            }\n          }\n          if ('color' in options || 'colors' in options) {\n            colorBuffer = options.color || options.colors;\n            if (Array.isArray(colorBuffer)) {}\n          }\n          if (!colorBuffer) {\n            if ('colorCount' in options) {\n              colorCount = options.colorCount | 0;\n            }\n            if ('colorTexture' in options) {\n              colorTexture = !!options.colorTexture;\n              colorFormat = 'rgba4';\n            }\n            if ('colorType' in options) {\n              colorType = options.colorType;\n              if (!colorTexture) {\n                if (colorType === 'half float' || colorType === 'float16') {\n                  colorFormat = 'rgba16f';\n                } else if (colorType === 'float' || colorType === 'float32') {\n                  colorFormat = 'rgba32f';\n                }\n              } else {}\n            }\n            if ('colorFormat' in options) {\n              colorFormat = options.colorFormat;\n              if (colorTextureFormats.indexOf(colorFormat) >= 0) {\n                colorTexture = true;\n              } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {\n                colorTexture = false;\n              } else {}\n            }\n          }\n          if ('depthTexture' in options || 'depthStencilTexture' in options) {\n            depthStencilTexture = !!(options.depthTexture || options.depthStencilTexture);\n          }\n          if ('depth' in options) {\n            if (typeof options.depth === 'boolean') {\n              needsDepth = options.depth;\n            } else {\n              depthBuffer = options.depth;\n              needsStencil = false;\n            }\n          }\n          if ('stencil' in options) {\n            if (typeof options.stencil === 'boolean') {\n              needsStencil = options.stencil;\n            } else {\n              stencilBuffer = options.stencil;\n              needsDepth = false;\n            }\n          }\n          if ('depthStencil' in options) {\n            if (typeof options.depthStencil === 'boolean') {\n              needsDepth = needsStencil = options.depthStencil;\n            } else {\n              depthStencilBuffer = options.depthStencil;\n              needsDepth = false;\n              needsStencil = false;\n            }\n          }\n        }\n\n        // parse attachments\n        var colorAttachments = null;\n        var depthAttachment = null;\n        var stencilAttachment = null;\n        var depthStencilAttachment = null;\n\n        // Set up color attachments\n        if (Array.isArray(colorBuffer)) {\n          colorAttachments = colorBuffer.map(parseAttachment);\n        } else if (colorBuffer) {\n          colorAttachments = [parseAttachment(colorBuffer)];\n        } else {\n          colorAttachments = new Array(colorCount);\n          for (i = 0; i < colorCount; ++i) {\n            colorAttachments[i] = allocAttachment(width, height, colorTexture, colorFormat, colorType);\n          }\n        }\n        width = width || colorAttachments[0].width;\n        height = height || colorAttachments[0].height;\n        if (depthBuffer) {\n          depthAttachment = parseAttachment(depthBuffer);\n        } else if (needsDepth && !needsStencil) {\n          depthAttachment = allocAttachment(width, height, depthStencilTexture, 'depth', 'uint32');\n        }\n        if (stencilBuffer) {\n          stencilAttachment = parseAttachment(stencilBuffer);\n        } else if (needsStencil && !needsDepth) {\n          stencilAttachment = allocAttachment(width, height, false, 'stencil', 'uint8');\n        }\n        if (depthStencilBuffer) {\n          depthStencilAttachment = parseAttachment(depthStencilBuffer);\n        } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {\n          depthStencilAttachment = allocAttachment(width, height, depthStencilTexture, 'depth stencil', 'depth stencil');\n        }\n        var commonColorAttachmentSize = null;\n        for (i = 0; i < colorAttachments.length; ++i) {\n          incRefAndCheckShape(colorAttachments[i], width, height);\n          if (colorAttachments[i] && colorAttachments[i].texture) {\n            var colorAttachmentSize = textureFormatChannels[colorAttachments[i].texture._texture.format] * textureTypeSizes[colorAttachments[i].texture._texture.type];\n            if (commonColorAttachmentSize === null) {\n              commonColorAttachmentSize = colorAttachmentSize;\n            } else {\n              // We need to make sure that all color attachments have the same number of bitplanes\n              // (that is, the same numer of bits per pixel)\n              // This is required by the GLES2.0 standard. See the beginning of Chapter 4 in that document.\n            }\n          }\n        }\n        incRefAndCheckShape(depthAttachment, width, height);\n        incRefAndCheckShape(stencilAttachment, width, height);\n        incRefAndCheckShape(depthStencilAttachment, width, height);\n\n        // decrement references\n        decFBORefs(framebuffer);\n        framebuffer.width = width;\n        framebuffer.height = height;\n        framebuffer.colorAttachments = colorAttachments;\n        framebuffer.depthAttachment = depthAttachment;\n        framebuffer.stencilAttachment = stencilAttachment;\n        framebuffer.depthStencilAttachment = depthStencilAttachment;\n        reglFramebuffer.color = colorAttachments.map(unwrapAttachment);\n        reglFramebuffer.depth = unwrapAttachment(depthAttachment);\n        reglFramebuffer.stencil = unwrapAttachment(stencilAttachment);\n        reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment);\n        reglFramebuffer.width = framebuffer.width;\n        reglFramebuffer.height = framebuffer.height;\n        updateFramebuffer(framebuffer);\n        return reglFramebuffer;\n      }\n      function resize(w_, h_) {\n        var w = Math.max(w_ | 0, 1);\n        var h = Math.max(h_ | 0 || w, 1);\n        if (w === framebuffer.width && h === framebuffer.height) {\n          return reglFramebuffer;\n        }\n\n        // resize all buffers\n        var colorAttachments = framebuffer.colorAttachments;\n        for (var i = 0; i < colorAttachments.length; ++i) {\n          resizeAttachment(colorAttachments[i], w, h);\n        }\n        resizeAttachment(framebuffer.depthAttachment, w, h);\n        resizeAttachment(framebuffer.stencilAttachment, w, h);\n        resizeAttachment(framebuffer.depthStencilAttachment, w, h);\n        framebuffer.width = reglFramebuffer.width = w;\n        framebuffer.height = reglFramebuffer.height = h;\n        updateFramebuffer(framebuffer);\n        return reglFramebuffer;\n      }\n      reglFramebuffer(a0, a1);\n      return extend(reglFramebuffer, {\n        resize: resize,\n        _reglType: 'framebuffer',\n        _framebuffer: framebuffer,\n        destroy: function () {\n          destroy(framebuffer);\n          decFBORefs(framebuffer);\n        },\n        use: function (block) {\n          framebufferState.setFBO({\n            framebuffer: reglFramebuffer\n          }, block);\n        }\n      });\n    }\n    function createCubeFBO(options) {\n      var faces = Array(6);\n      function reglFramebufferCube(a) {\n        var i;\n        var params = {\n          color: null\n        };\n        var radius = 0;\n        var colorBuffer = null;\n        var colorFormat = 'rgba';\n        var colorType = 'uint8';\n        var colorCount = 1;\n        if (typeof a === 'number') {\n          radius = a | 0;\n        } else if (!a) {\n          radius = 1;\n        } else {\n          var options = a;\n          if ('shape' in options) {\n            var shape = options.shape;\n            radius = shape[0];\n          } else {\n            if ('radius' in options) {\n              radius = options.radius | 0;\n            }\n            if ('width' in options) {\n              radius = options.width | 0;\n              if ('height' in options) {}\n            } else if ('height' in options) {\n              radius = options.height | 0;\n            }\n          }\n          if ('color' in options || 'colors' in options) {\n            colorBuffer = options.color || options.colors;\n            if (Array.isArray(colorBuffer)) {}\n          }\n          if (!colorBuffer) {\n            if ('colorCount' in options) {\n              colorCount = options.colorCount | 0;\n            }\n            if ('colorType' in options) {\n              colorType = options.colorType;\n            }\n            if ('colorFormat' in options) {\n              colorFormat = options.colorFormat;\n            }\n          }\n          if ('depth' in options) {\n            params.depth = options.depth;\n          }\n          if ('stencil' in options) {\n            params.stencil = options.stencil;\n          }\n          if ('depthStencil' in options) {\n            params.depthStencil = options.depthStencil;\n          }\n        }\n        var colorCubes;\n        if (colorBuffer) {\n          if (Array.isArray(colorBuffer)) {\n            colorCubes = [];\n            for (i = 0; i < colorBuffer.length; ++i) {\n              colorCubes[i] = colorBuffer[i];\n            }\n          } else {\n            colorCubes = [colorBuffer];\n          }\n        } else {\n          colorCubes = Array(colorCount);\n          var cubeMapParams = {\n            radius: radius,\n            format: colorFormat,\n            type: colorType\n          };\n          for (i = 0; i < colorCount; ++i) {\n            colorCubes[i] = textureState.createCube(cubeMapParams);\n          }\n        }\n\n        // Check color cubes\n        params.color = Array(colorCubes.length);\n        for (i = 0; i < colorCubes.length; ++i) {\n          var cube = colorCubes[i];\n          radius = radius || cube.width;\n          params.color[i] = {\n            target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,\n            data: colorCubes[i]\n          };\n        }\n        for (i = 0; i < 6; ++i) {\n          for (var j = 0; j < colorCubes.length; ++j) {\n            params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i;\n          }\n          // reuse depth-stencil attachments across all cube maps\n          if (i > 0) {\n            params.depth = faces[0].depth;\n            params.stencil = faces[0].stencil;\n            params.depthStencil = faces[0].depthStencil;\n          }\n          if (faces[i]) {\n            faces[i](params);\n          } else {\n            faces[i] = createFBO(params);\n          }\n        }\n        return extend(reglFramebufferCube, {\n          width: radius,\n          height: radius,\n          color: colorCubes\n        });\n      }\n      function resize(radius_) {\n        var i;\n        var radius = radius_ | 0;\n        if (radius === reglFramebufferCube.width) {\n          return reglFramebufferCube;\n        }\n        var colors = reglFramebufferCube.color;\n        for (i = 0; i < colors.length; ++i) {\n          colors[i].resize(radius);\n        }\n        for (i = 0; i < 6; ++i) {\n          faces[i].resize(radius);\n        }\n        reglFramebufferCube.width = reglFramebufferCube.height = radius;\n        return reglFramebufferCube;\n      }\n      reglFramebufferCube(options);\n      return extend(reglFramebufferCube, {\n        faces: faces,\n        resize: resize,\n        _reglType: 'framebufferCube',\n        destroy: function () {\n          faces.forEach(function (f) {\n            f.destroy();\n          });\n        }\n      });\n    }\n    function restoreFramebuffers() {\n      framebufferState.cur = null;\n      framebufferState.next = null;\n      framebufferState.dirty = true;\n      values(framebufferSet).forEach(function (fb) {\n        fb.framebuffer = gl.createFramebuffer();\n        updateFramebuffer(fb);\n      });\n    }\n    return extend(framebufferState, {\n      getFramebuffer: function (object) {\n        if (typeof object === 'function' && object._reglType === 'framebuffer') {\n          var fbo = object._framebuffer;\n          if (fbo instanceof REGLFramebuffer) {\n            return fbo;\n          }\n        }\n        return null;\n      },\n      create: createFBO,\n      createCube: createCubeFBO,\n      clear: function () {\n        values(framebufferSet).forEach(destroy);\n      },\n      restore: restoreFramebuffers\n    });\n  }\n  var GL_FLOAT$5 = 5126;\n  var GL_ARRAY_BUFFER$1 = 34962;\n  var GL_ELEMENT_ARRAY_BUFFER$1 = 34963;\n  function AttributeRecord() {\n    this.state = 0;\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = 0.0;\n    this.w = 0.0;\n    this.buffer = null;\n    this.size = 0;\n    this.normalized = false;\n    this.type = GL_FLOAT$5;\n    this.offset = 0;\n    this.stride = 0;\n    this.divisor = 0;\n  }\n  function wrapAttributeState(gl, extensions, limits, stats, bufferState, elementState, drawState) {\n    var NUM_ATTRIBUTES = limits.maxAttributes;\n    var attributeBindings = new Array(NUM_ATTRIBUTES);\n    for (var i = 0; i < NUM_ATTRIBUTES; ++i) {\n      attributeBindings[i] = new AttributeRecord();\n    }\n    var vaoCount = 0;\n    var vaoSet = {};\n    var state = {\n      Record: AttributeRecord,\n      scope: {},\n      state: attributeBindings,\n      currentVAO: null,\n      targetVAO: null,\n      restore: extVAO() ? restoreVAO : function () {},\n      createVAO: createVAO,\n      getVAO: getVAO,\n      destroyBuffer: destroyBuffer,\n      setVAO: extVAO() ? setVAOEXT : setVAOEmulated,\n      clear: extVAO() ? destroyVAOEXT : function () {}\n    };\n    function destroyBuffer(buffer) {\n      for (var i = 0; i < attributeBindings.length; ++i) {\n        var record = attributeBindings[i];\n        if (record.buffer === buffer) {\n          gl.disableVertexAttribArray(i);\n          record.buffer = null;\n        }\n      }\n    }\n    function extVAO() {\n      return extensions.oes_vertex_array_object;\n    }\n    function extInstanced() {\n      return extensions.angle_instanced_arrays;\n    }\n    function getVAO(vao) {\n      if (typeof vao === 'function' && vao._vao) {\n        return vao._vao;\n      }\n      return null;\n    }\n    function setVAOEXT(vao) {\n      if (vao === state.currentVAO) {\n        return;\n      }\n      var ext = extVAO();\n      if (vao) {\n        ext.bindVertexArrayOES(vao.vao);\n      } else {\n        ext.bindVertexArrayOES(null);\n      }\n      state.currentVAO = vao;\n    }\n    function setVAOEmulated(vao) {\n      if (vao === state.currentVAO) {\n        return;\n      }\n      if (vao) {\n        vao.bindAttrs();\n      } else {\n        var exti = extInstanced();\n        for (var i = 0; i < attributeBindings.length; ++i) {\n          var binding = attributeBindings[i];\n          if (binding.buffer) {\n            gl.enableVertexAttribArray(i);\n            binding.buffer.bind();\n            gl.vertexAttribPointer(i, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset);\n            if (exti && binding.divisor) {\n              exti.vertexAttribDivisorANGLE(i, binding.divisor);\n            }\n          } else {\n            gl.disableVertexAttribArray(i);\n            gl.vertexAttrib4f(i, binding.x, binding.y, binding.z, binding.w);\n          }\n        }\n        if (drawState.elements) {\n          gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, drawState.elements.buffer.buffer);\n        } else {\n          gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null);\n        }\n      }\n      state.currentVAO = vao;\n    }\n    function destroyVAOEXT() {\n      values(vaoSet).forEach(function (vao) {\n        vao.destroy();\n      });\n    }\n    function REGLVAO() {\n      this.id = ++vaoCount;\n      this.attributes = [];\n      this.elements = null;\n      this.ownsElements = false;\n      this.count = 0;\n      this.offset = 0;\n      this.instances = -1;\n      this.primitive = 4;\n      var extension = extVAO();\n      if (extension) {\n        this.vao = extension.createVertexArrayOES();\n      } else {\n        this.vao = null;\n      }\n      vaoSet[this.id] = this;\n      this.buffers = [];\n    }\n    REGLVAO.prototype.bindAttrs = function () {\n      var exti = extInstanced();\n      var attributes = this.attributes;\n      for (var i = 0; i < attributes.length; ++i) {\n        var attr = attributes[i];\n        if (attr.buffer) {\n          gl.enableVertexAttribArray(i);\n          gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer);\n          gl.vertexAttribPointer(i, attr.size, attr.type, attr.normalized, attr.stride, attr.offset);\n          if (exti && attr.divisor) {\n            exti.vertexAttribDivisorANGLE(i, attr.divisor);\n          }\n        } else {\n          gl.disableVertexAttribArray(i);\n          gl.vertexAttrib4f(i, attr.x, attr.y, attr.z, attr.w);\n        }\n      }\n      for (var j = attributes.length; j < NUM_ATTRIBUTES; ++j) {\n        gl.disableVertexAttribArray(j);\n      }\n      var elements = elementState.getElements(this.elements);\n      if (elements) {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, elements.buffer.buffer);\n      } else {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null);\n      }\n    };\n    REGLVAO.prototype.refresh = function () {\n      var ext = extVAO();\n      if (ext) {\n        ext.bindVertexArrayOES(this.vao);\n        this.bindAttrs();\n        state.currentVAO = null;\n        ext.bindVertexArrayOES(null);\n      }\n    };\n    REGLVAO.prototype.destroy = function () {\n      if (this.vao) {\n        var extension = extVAO();\n        if (this === state.currentVAO) {\n          state.currentVAO = null;\n          extension.bindVertexArrayOES(null);\n        }\n        extension.deleteVertexArrayOES(this.vao);\n        this.vao = null;\n      }\n      if (this.ownsElements) {\n        this.elements.destroy();\n        this.elements = null;\n        this.ownsElements = false;\n      }\n      if (vaoSet[this.id]) {\n        delete vaoSet[this.id];\n        stats.vaoCount -= 1;\n      }\n    };\n    function restoreVAO() {\n      var ext = extVAO();\n      if (ext) {\n        values(vaoSet).forEach(function (vao) {\n          vao.refresh();\n        });\n      }\n    }\n    function createVAO(_attr) {\n      var vao = new REGLVAO();\n      stats.vaoCount += 1;\n      function updateVAO(options) {\n        var attributes;\n        if (Array.isArray(options)) {\n          attributes = options;\n          if (vao.elements && vao.ownsElements) {\n            vao.elements.destroy();\n          }\n          vao.elements = null;\n          vao.ownsElements = false;\n          vao.offset = 0;\n          vao.count = 0;\n          vao.instances = -1;\n          vao.primitive = 4;\n        } else {\n          if (options.elements) {\n            var elements = options.elements;\n            if (vao.ownsElements) {\n              if (typeof elements === 'function' && elements._reglType === 'elements') {\n                vao.elements.destroy();\n                vao.ownsElements = false;\n              } else {\n                vao.elements(elements);\n                vao.ownsElements = false;\n              }\n            } else if (elementState.getElements(options.elements)) {\n              vao.elements = options.elements;\n              vao.ownsElements = false;\n            } else {\n              vao.elements = elementState.create(options.elements);\n              vao.ownsElements = true;\n            }\n          } else {\n            vao.elements = null;\n            vao.ownsElements = false;\n          }\n          attributes = options.attributes;\n\n          // set default vao\n          vao.offset = 0;\n          vao.count = -1;\n          vao.instances = -1;\n          vao.primitive = 4;\n\n          // copy element properties\n          if (vao.elements) {\n            vao.count = vao.elements._elements.vertCount;\n            vao.primitive = vao.elements._elements.primType;\n          }\n          if ('offset' in options) {\n            vao.offset = options.offset | 0;\n          }\n          if ('count' in options) {\n            vao.count = options.count | 0;\n          }\n          if ('instances' in options) {\n            vao.instances = options.instances | 0;\n          }\n          if ('primitive' in options) {\n            vao.primitive = primTypes[options.primitive];\n          }\n        }\n        var bufUpdated = {};\n        var nattributes = vao.attributes;\n        nattributes.length = attributes.length;\n        for (var i = 0; i < attributes.length; ++i) {\n          var spec = attributes[i];\n          var rec = nattributes[i] = new AttributeRecord();\n          var data = spec.data || spec;\n          if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {\n            var buf;\n            if (vao.buffers[i]) {\n              buf = vao.buffers[i];\n              if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) {\n                buf.subdata(data);\n              } else {\n                buf.destroy();\n                vao.buffers[i] = null;\n              }\n            }\n            if (!vao.buffers[i]) {\n              buf = vao.buffers[i] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true);\n            }\n            rec.buffer = bufferState.getBuffer(buf);\n            rec.size = rec.buffer.dimension | 0;\n            rec.normalized = false;\n            rec.type = rec.buffer.dtype;\n            rec.offset = 0;\n            rec.stride = 0;\n            rec.divisor = 0;\n            rec.state = 1;\n            bufUpdated[i] = 1;\n          } else if (bufferState.getBuffer(spec)) {\n            rec.buffer = bufferState.getBuffer(spec);\n            rec.size = rec.buffer.dimension | 0;\n            rec.normalized = false;\n            rec.type = rec.buffer.dtype;\n            rec.offset = 0;\n            rec.stride = 0;\n            rec.divisor = 0;\n            rec.state = 1;\n          } else if (bufferState.getBuffer(spec.buffer)) {\n            rec.buffer = bufferState.getBuffer(spec.buffer);\n            rec.size = (+spec.size || rec.buffer.dimension) | 0;\n            rec.normalized = !!spec.normalized || false;\n            if ('type' in spec) {\n              rec.type = glTypes[spec.type];\n            } else {\n              rec.type = rec.buffer.dtype;\n            }\n            rec.offset = (spec.offset || 0) | 0;\n            rec.stride = (spec.stride || 0) | 0;\n            rec.divisor = (spec.divisor || 0) | 0;\n            rec.state = 1;\n          } else if ('x' in spec) {\n            rec.x = +spec.x || 0;\n            rec.y = +spec.y || 0;\n            rec.z = +spec.z || 0;\n            rec.w = +spec.w || 0;\n            rec.state = 2;\n          } else {}\n        }\n\n        // retire unused buffers\n        for (var j = 0; j < vao.buffers.length; ++j) {\n          if (!bufUpdated[j] && vao.buffers[j]) {\n            vao.buffers[j].destroy();\n            vao.buffers[j] = null;\n          }\n        }\n        vao.refresh();\n        return updateVAO;\n      }\n      updateVAO.destroy = function () {\n        for (var j = 0; j < vao.buffers.length; ++j) {\n          if (vao.buffers[j]) {\n            vao.buffers[j].destroy();\n          }\n        }\n        vao.buffers.length = 0;\n        if (vao.ownsElements) {\n          vao.elements.destroy();\n          vao.elements = null;\n          vao.ownsElements = false;\n        }\n        vao.destroy();\n      };\n      updateVAO._vao = vao;\n      updateVAO._reglType = 'vao';\n      return updateVAO(_attr);\n    }\n    return state;\n  }\n  var GL_FRAGMENT_SHADER = 35632;\n  var GL_VERTEX_SHADER = 35633;\n  var GL_ACTIVE_UNIFORMS = 0x8B86;\n  var GL_ACTIVE_ATTRIBUTES = 0x8B89;\n  function wrapShaderState(gl, stringStore, stats, config) {\n    // ===================================================\n    // glsl compilation and linking\n    // ===================================================\n    var fragShaders = {};\n    var vertShaders = {};\n    function ActiveInfo(name, id, location, info) {\n      this.name = name;\n      this.id = id;\n      this.location = location;\n      this.info = info;\n    }\n    function insertActiveInfo(list, info) {\n      for (var i = 0; i < list.length; ++i) {\n        if (list[i].id === info.id) {\n          list[i].location = info.location;\n          return;\n        }\n      }\n      list.push(info);\n    }\n    function getShader(type, id, command) {\n      var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders;\n      var shader = cache[id];\n      if (!shader) {\n        var source = stringStore.str(id);\n        shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        cache[id] = shader;\n      }\n      return shader;\n    }\n\n    // ===================================================\n    // program linking\n    // ===================================================\n    var programCache = {};\n    var programList = [];\n    var PROGRAM_COUNTER = 0;\n    function REGLProgram(fragId, vertId) {\n      this.id = PROGRAM_COUNTER++;\n      this.fragId = fragId;\n      this.vertId = vertId;\n      this.program = null;\n      this.uniforms = [];\n      this.attributes = [];\n      this.refCount = 1;\n      if (config.profile) {\n        this.stats = {\n          uniformsCount: 0,\n          attributesCount: 0\n        };\n      }\n    }\n    function linkProgram(desc, command, attributeLocations) {\n      var i, info;\n\n      // -------------------------------\n      // compile & link\n      // -------------------------------\n      var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId);\n      var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId);\n      var program = desc.program = gl.createProgram();\n      gl.attachShader(program, fragShader);\n      gl.attachShader(program, vertShader);\n      if (attributeLocations) {\n        for (i = 0; i < attributeLocations.length; ++i) {\n          var binding = attributeLocations[i];\n          gl.bindAttribLocation(program, binding[0], binding[1]);\n        }\n      }\n      gl.linkProgram(program);\n\n      // -------------------------------\n      // grab uniforms\n      // -------------------------------\n      var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS);\n      if (config.profile) {\n        desc.stats.uniformsCount = numUniforms;\n      }\n      var uniforms = desc.uniforms;\n      for (i = 0; i < numUniforms; ++i) {\n        info = gl.getActiveUniform(program, i);\n        if (info) {\n          if (info.size > 1) {\n            for (var j = 0; j < info.size; ++j) {\n              var name = info.name.replace('[0]', '[' + j + ']');\n              insertActiveInfo(uniforms, new ActiveInfo(name, stringStore.id(name), gl.getUniformLocation(program, name), info));\n            }\n          } else {\n            insertActiveInfo(uniforms, new ActiveInfo(info.name, stringStore.id(info.name), gl.getUniformLocation(program, info.name), info));\n          }\n        }\n      }\n\n      // -------------------------------\n      // grab attributes\n      // -------------------------------\n      var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES);\n      if (config.profile) {\n        desc.stats.attributesCount = numAttributes;\n      }\n      var attributes = desc.attributes;\n      for (i = 0; i < numAttributes; ++i) {\n        info = gl.getActiveAttrib(program, i);\n        if (info) {\n          insertActiveInfo(attributes, new ActiveInfo(info.name, stringStore.id(info.name), gl.getAttribLocation(program, info.name), info));\n        }\n      }\n    }\n    if (config.profile) {\n      stats.getMaxUniformsCount = function () {\n        var m = 0;\n        programList.forEach(function (desc) {\n          if (desc.stats.uniformsCount > m) {\n            m = desc.stats.uniformsCount;\n          }\n        });\n        return m;\n      };\n      stats.getMaxAttributesCount = function () {\n        var m = 0;\n        programList.forEach(function (desc) {\n          if (desc.stats.attributesCount > m) {\n            m = desc.stats.attributesCount;\n          }\n        });\n        return m;\n      };\n    }\n    function restoreShaders() {\n      fragShaders = {};\n      vertShaders = {};\n      for (var i = 0; i < programList.length; ++i) {\n        linkProgram(programList[i], null, programList[i].attributes.map(function (info) {\n          return [info.location, info.name];\n        }));\n      }\n    }\n    return {\n      clear: function () {\n        var deleteShader = gl.deleteShader.bind(gl);\n        values(fragShaders).forEach(deleteShader);\n        fragShaders = {};\n        values(vertShaders).forEach(deleteShader);\n        vertShaders = {};\n        programList.forEach(function (desc) {\n          gl.deleteProgram(desc.program);\n        });\n        programList.length = 0;\n        programCache = {};\n        stats.shaderCount = 0;\n      },\n      program: function (vertId, fragId, command, attribLocations) {\n        var cache = programCache[fragId];\n        if (!cache) {\n          cache = programCache[fragId] = {};\n        }\n        var prevProgram = cache[vertId];\n        if (prevProgram) {\n          prevProgram.refCount++;\n          if (!attribLocations) {\n            return prevProgram;\n          }\n        }\n        var program = new REGLProgram(fragId, vertId);\n        stats.shaderCount++;\n        linkProgram(program, command, attribLocations);\n        if (!prevProgram) {\n          cache[vertId] = program;\n        }\n        programList.push(program);\n        return extend(program, {\n          destroy: function () {\n            program.refCount--;\n            if (program.refCount <= 0) {\n              gl.deleteProgram(program.program);\n              var idx = programList.indexOf(program);\n              programList.splice(idx, 1);\n              stats.shaderCount--;\n            }\n            // no program is linked to this vert anymore\n            if (cache[program.vertId].refCount <= 0) {\n              gl.deleteShader(vertShaders[program.vertId]);\n              delete vertShaders[program.vertId];\n              delete programCache[program.fragId][program.vertId];\n            }\n            // no program is linked to this frag anymore\n            if (!Object.keys(programCache[program.fragId]).length) {\n              gl.deleteShader(fragShaders[program.fragId]);\n              delete fragShaders[program.fragId];\n              delete programCache[program.fragId];\n            }\n          }\n        });\n      },\n      restore: restoreShaders,\n      shader: getShader,\n      frag: -1,\n      vert: -1\n    };\n  }\n  var GL_RGBA$3 = 6408;\n  var GL_UNSIGNED_BYTE$6 = 5121;\n  var GL_PACK_ALIGNMENT = 0x0D05;\n  var GL_FLOAT$6 = 0x1406; // 5126\n\n  function wrapReadPixels(gl, framebufferState, reglPoll, context, glAttributes, extensions, limits) {\n    function readPixelsImpl(input) {\n      var type;\n      if (framebufferState.next === null) {\n        type = GL_UNSIGNED_BYTE$6;\n      } else {\n        type = framebufferState.next.colorAttachments[0].texture._texture.type;\n      }\n      var x = 0;\n      var y = 0;\n      var width = context.framebufferWidth;\n      var height = context.framebufferHeight;\n      var data = null;\n      if (isTypedArray(input)) {\n        data = input;\n      } else if (input) {\n        x = input.x | 0;\n        y = input.y | 0;\n        width = (input.width || context.framebufferWidth - x) | 0;\n        height = (input.height || context.framebufferHeight - y) | 0;\n        data = input.data || null;\n      }\n\n      // sanity check input.data\n      if (data) {\n        if (type === GL_UNSIGNED_BYTE$6) {} else if (type === GL_FLOAT$6) {}\n      }\n\n      // Update WebGL state\n      reglPoll();\n\n      // Compute size\n      var size = width * height * 4;\n\n      // Allocate data\n      if (!data) {\n        if (type === GL_UNSIGNED_BYTE$6) {\n          data = new Uint8Array(size);\n        } else if (type === GL_FLOAT$6) {\n          data = data || new Float32Array(size);\n        }\n      }\n\n      // Type check\n\n      // Run read pixels\n      gl.pixelStorei(GL_PACK_ALIGNMENT, 4);\n      gl.readPixels(x, y, width, height, GL_RGBA$3, type, data);\n      return data;\n    }\n    function readPixelsFBO(options) {\n      var result;\n      framebufferState.setFBO({\n        framebuffer: options.framebuffer\n      }, function () {\n        result = readPixelsImpl(options);\n      });\n      return result;\n    }\n    function readPixels(options) {\n      if (!options || !('framebuffer' in options)) {\n        return readPixelsImpl(options);\n      } else {\n        return readPixelsFBO(options);\n      }\n    }\n    return readPixels;\n  }\n\n  /*\n   * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n   * in FIPS 180-2\n   * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.\n   * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n   * Distributed under the BSD License\n   * See http://pajhome.org.uk/crypt/md5 for details.\n   * Also http://anmar.eu.org/projects/jssha2/\n   */\n\n  /*\n   * Configurable variables. You may need to tweak these to be compatible with\n   * the server-side, but the defaults work in most cases.\n   */\n  var hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */\n  var b64pad = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n  /*\n   * These are the functions you'll usually want to call\n   * They take string arguments and return either hex or base-64 encoded strings\n   */\n  function hex_sha256(s) {\n    return rstr2hex(rstr_sha256(str2rstr_utf8(s)));\n  }\n  /*\n   * Calculate the sha256 of a raw string\n   */\n  function rstr_sha256(s) {\n    return binb2rstr(binb_sha256(rstr2binb(s), s.length * 8));\n  }\n\n  /*\n   * Calculate the HMAC-sha256 of a key and some data (raw strings)\n   */\n  function rstr_hmac_sha256(key, data) {\n    var bkey = rstr2binb(key);\n    if (bkey.length > 16) bkey = binb_sha256(bkey, key.length * 8);\n    var ipad = Array(16),\n      opad = Array(16);\n    for (var i = 0; i < 16; i++) {\n      ipad[i] = bkey[i] ^ 0x36363636;\n      opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n    var hash = binb_sha256(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n    return binb2rstr(binb_sha256(opad.concat(hash), 512 + 256));\n  }\n\n  /*\n   * Convert a raw string to a hex string\n   */\n  function rstr2hex(input) {\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var output = \"\";\n    var x;\n    for (var i = 0; i < input.length; i++) {\n      x = input.charCodeAt(i);\n      output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);\n    }\n    return output;\n  }\n\n  /*\n   * Convert a raw string to a base-64 string\n   */\n  function rstr2b64(input) {\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    var output = \"\";\n    var len = input.length;\n    for (var i = 0; i < len; i += 3) {\n      var triplet = input.charCodeAt(i) << 16 | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n      for (var j = 0; j < 4; j++) {\n        if (i * 8 + j * 6 > input.length * 8) output += b64pad;else output += tab.charAt(triplet >>> 6 * (3 - j) & 0x3F);\n      }\n    }\n    return output;\n  }\n\n  /*\n   * Convert a raw string to an arbitrary string encoding\n   */\n  function rstr2any(input, encoding) {\n    var divisor = encoding.length;\n    var remainders = Array();\n    var i, q, x, quotient;\n\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */\n    var dividend = Array(Math.ceil(input.length / 2));\n    for (i = 0; i < dividend.length; i++) {\n      dividend[i] = input.charCodeAt(i * 2) << 8 | input.charCodeAt(i * 2 + 1);\n    }\n\n    /*\n     * Repeatedly perform a long division. The binary array forms the dividend,\n     * the length of the encoding is the divisor. Once computed, the quotient\n     * forms the dividend for the next step. We stop when the dividend is zero.\n     * All remainders are stored for later use.\n     */\n    while (dividend.length > 0) {\n      quotient = Array();\n      x = 0;\n      for (i = 0; i < dividend.length; i++) {\n        x = (x << 16) + dividend[i];\n        q = Math.floor(x / divisor);\n        x -= q * divisor;\n        if (quotient.length > 0 || q > 0) quotient[quotient.length] = q;\n      }\n      remainders[remainders.length] = x;\n      dividend = quotient;\n    }\n\n    /* Convert the remainders to the output string */\n    var output = \"\";\n    for (i = remainders.length - 1; i >= 0; i--) output += encoding.charAt(remainders[i]);\n\n    /* Append leading zero equivalents */\n    var full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\n    for (i = output.length; i < full_length; i++) output = encoding[0] + output;\n    return output;\n  }\n\n  /*\n   * Encode a string as utf-8.\n   * For efficiency, this assumes the input is valid utf-16.\n   */\n  function str2rstr_utf8(input) {\n    var output = \"\";\n    var i = -1;\n    var x, y;\n    while (++i < input.length) {\n      /* Decode utf-16 surrogate pairs */\n      x = input.charCodeAt(i);\n      y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n      if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n        x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n        i++;\n      }\n\n      /* Encode output as utf-8 */\n      if (x <= 0x7F) output += String.fromCharCode(x);else if (x <= 0x7FF) output += String.fromCharCode(0xC0 | x >>> 6 & 0x1F, 0x80 | x & 0x3F);else if (x <= 0xFFFF) output += String.fromCharCode(0xE0 | x >>> 12 & 0x0F, 0x80 | x >>> 6 & 0x3F, 0x80 | x & 0x3F);else if (x <= 0x1FFFFF) output += String.fromCharCode(0xF0 | x >>> 18 & 0x07, 0x80 | x >>> 12 & 0x3F, 0x80 | x >>> 6 & 0x3F, 0x80 | x & 0x3F);\n    }\n    return output;\n  }\n\n  /*\n   * Convert a raw string to an array of big-endian words\n   * Characters >255 have their high-byte silently ignored.\n   */\n  function rstr2binb(input) {\n    var output = Array(input.length >> 2);\n    for (var i = 0; i < output.length; i++) output[i] = 0;\n    for (var i = 0; i < input.length * 8; i += 8) output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << 24 - i % 32;\n    return output;\n  }\n\n  /*\n   * Convert an array of big-endian words to a string\n   */\n  function binb2rstr(input) {\n    var output = \"\";\n    for (var i = 0; i < input.length * 32; i += 8) output += String.fromCharCode(input[i >> 5] >>> 24 - i % 32 & 0xFF);\n    return output;\n  }\n\n  /*\n   * Main sha256 function, with its support functions\n   */\n  function sha256_S(X, n) {\n    return X >>> n | X << 32 - n;\n  }\n  function sha256_R(X, n) {\n    return X >>> n;\n  }\n  function sha256_Ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function sha256_Maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sha256_Sigma0256(x) {\n    return sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22);\n  }\n  function sha256_Sigma1256(x) {\n    return sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25);\n  }\n  function sha256_Gamma0256(x) {\n    return sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3);\n  }\n  function sha256_Gamma1256(x) {\n    return sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10);\n  }\n  var sha256_K = new Array(1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993, -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987, 1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885, -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872, -1866530822, -1538233109, -1090935817, -965641998);\n  function binb_sha256(m, l) {\n    var HASH = new Array(1779033703, -1150833019, 1013904242, -1521486534, 1359893119, -1694144372, 528734635, 1541459225);\n    var W = new Array(64);\n    var a, b, c, d, e, f, g, h;\n    var i, j, T1, T2;\n\n    /* append padding */\n    m[l >> 5] |= 0x80 << 24 - l % 32;\n    m[(l + 64 >> 9 << 4) + 15] = l;\n    for (i = 0; i < m.length; i += 16) {\n      a = HASH[0];\n      b = HASH[1];\n      c = HASH[2];\n      d = HASH[3];\n      e = HASH[4];\n      f = HASH[5];\n      g = HASH[6];\n      h = HASH[7];\n      for (j = 0; j < 64; j++) {\n        if (j < 16) W[j] = m[j + i];else W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]), sha256_Gamma0256(W[j - 15])), W[j - 16]);\n        T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)), sha256_K[j]), W[j]);\n        T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));\n        h = g;\n        g = f;\n        f = e;\n        e = safe_add(d, T1);\n        d = c;\n        c = b;\n        b = a;\n        a = safe_add(T1, T2);\n      }\n      HASH[0] = safe_add(a, HASH[0]);\n      HASH[1] = safe_add(b, HASH[1]);\n      HASH[2] = safe_add(c, HASH[2]);\n      HASH[3] = safe_add(d, HASH[3]);\n      HASH[4] = safe_add(e, HASH[4]);\n      HASH[5] = safe_add(f, HASH[5]);\n      HASH[6] = safe_add(g, HASH[6]);\n      HASH[7] = safe_add(h, HASH[7]);\n    }\n    return HASH;\n  }\n  function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return msw << 16 | lsw & 0xFFFF;\n  }\n  function slice(x) {\n    return Array.prototype.slice.call(x);\n  }\n  function join(x) {\n    return slice(x).join('');\n  }\n  function createEnvironment(options) {\n    var cache = options && options.cache;\n\n    // Unique variable id counter\n    var varCounter = 0;\n\n    // Linked values are passed from this scope into the generated code block\n    // Calling link() passes a value into the generated scope and returns\n    // the variable name which it is bound to\n    var linkedNames = [];\n    var linkedValues = [];\n    var isStable = [];\n    function link(value, options) {\n      var stable = options && options.stable;\n      if (!stable) {\n        for (var i = 0; i < linkedValues.length; ++i) {\n          if (linkedValues[i] === value && !isStable[i]) {\n            return linkedNames[i];\n          }\n        }\n      }\n      var name = 'g' + varCounter++;\n      linkedNames.push(name);\n      linkedValues.push(value);\n      isStable.push(stable);\n      return name;\n    }\n\n    // create a code block\n    function block() {\n      var code = [];\n      function push() {\n        code.push.apply(code, slice(arguments));\n      }\n      var vars = [];\n      function def() {\n        var name = 'v' + varCounter++;\n        vars.push(name);\n        if (arguments.length > 0) {\n          code.push(name, '=');\n          code.push.apply(code, slice(arguments));\n          code.push(';');\n        }\n        return name;\n      }\n      return extend(push, {\n        def: def,\n        toString: function () {\n          return join([vars.length > 0 ? 'var ' + vars.join(',') + ';' : '', join(code)]);\n        }\n      });\n    }\n    function scope() {\n      var entry = block();\n      var exit = block();\n      var entryToString = entry.toString;\n      var exitToString = exit.toString;\n      function save(object, prop) {\n        exit(object, prop, '=', entry.def(object, prop), ';');\n      }\n      return extend(function () {\n        entry.apply(entry, slice(arguments));\n      }, {\n        def: entry.def,\n        entry: entry,\n        exit: exit,\n        save: save,\n        set: function (object, prop, value) {\n          save(object, prop);\n          entry(object, prop, '=', value, ';');\n        },\n        toString: function () {\n          return entryToString() + exitToString();\n        }\n      });\n    }\n    function conditional() {\n      var pred = join(arguments);\n      var thenBlock = scope();\n      var elseBlock = scope();\n      var thenToString = thenBlock.toString;\n      var elseToString = elseBlock.toString;\n      return extend(thenBlock, {\n        then: function () {\n          thenBlock.apply(thenBlock, slice(arguments));\n          return this;\n        },\n        else: function () {\n          elseBlock.apply(elseBlock, slice(arguments));\n          return this;\n        },\n        toString: function () {\n          var elseClause = elseToString();\n          if (elseClause) {\n            elseClause = 'else{' + elseClause + '}';\n          }\n          return join(['if(', pred, '){', thenToString(), '}', elseClause]);\n        }\n      });\n    }\n\n    // procedure list\n    var globalBlock = block();\n    var procedures = {};\n    function proc(name, count) {\n      var args = [];\n      function arg() {\n        var name = 'a' + args.length;\n        args.push(name);\n        return name;\n      }\n      count = count || 0;\n      for (var i = 0; i < count; ++i) {\n        arg();\n      }\n      var body = scope();\n      var bodyToString = body.toString;\n      var result = procedures[name] = extend(body, {\n        arg: arg,\n        toString: function () {\n          return join(['function(', args.join(), '){', bodyToString(), '}']);\n        }\n      });\n      return result;\n    }\n    function compile() {\n      var code = ['\"use strict\";', globalBlock, 'return {'];\n      Object.keys(procedures).forEach(function (name) {\n        code.push('\"', name, '\":', procedures[name].toString(), ',');\n      });\n      code.push('}');\n      var src = join(code).replace(/;/g, ';\\n').replace(/}/g, '}\\n').replace(/{/g, '{\\n');\n      var key;\n      if (cache) {\n        key = hex_sha256(src);\n        if (cache[key]) {\n          return cache[key].apply(null, linkedValues);\n        }\n      }\n      var proc = Function.apply(null, linkedNames.concat(src));\n      if (cache) {\n        cache[key] = proc;\n      }\n      return proc.apply(null, linkedValues);\n    }\n    return {\n      global: globalBlock,\n      link: link,\n      block: block,\n      proc: proc,\n      scope: scope,\n      cond: conditional,\n      compile: compile\n    };\n  }\n\n  // \"cute\" names for vector components\n  var CUTE_COMPONENTS = 'xyzw'.split('');\n  var GL_UNSIGNED_BYTE$7 = 5121;\n  var ATTRIB_STATE_POINTER = 1;\n  var ATTRIB_STATE_CONSTANT = 2;\n  var DYN_FUNC$1 = 0;\n  var DYN_PROP$1 = 1;\n  var DYN_CONTEXT$1 = 2;\n  var DYN_STATE$1 = 3;\n  var DYN_THUNK = 4;\n  var DYN_CONSTANT$1 = 5;\n  var DYN_ARRAY$1 = 6;\n  var S_DITHER = 'dither';\n  var S_BLEND_ENABLE = 'blend.enable';\n  var S_BLEND_COLOR = 'blend.color';\n  var S_BLEND_EQUATION = 'blend.equation';\n  var S_BLEND_FUNC = 'blend.func';\n  var S_DEPTH_ENABLE = 'depth.enable';\n  var S_DEPTH_FUNC = 'depth.func';\n  var S_DEPTH_RANGE = 'depth.range';\n  var S_DEPTH_MASK = 'depth.mask';\n  var S_COLOR_MASK = 'colorMask';\n  var S_CULL_ENABLE = 'cull.enable';\n  var S_CULL_FACE = 'cull.face';\n  var S_FRONT_FACE = 'frontFace';\n  var S_LINE_WIDTH = 'lineWidth';\n  var S_POLYGON_OFFSET_ENABLE = 'polygonOffset.enable';\n  var S_POLYGON_OFFSET_OFFSET = 'polygonOffset.offset';\n  var S_SAMPLE_ALPHA = 'sample.alpha';\n  var S_SAMPLE_ENABLE = 'sample.enable';\n  var S_SAMPLE_COVERAGE = 'sample.coverage';\n  var S_STENCIL_ENABLE = 'stencil.enable';\n  var S_STENCIL_MASK = 'stencil.mask';\n  var S_STENCIL_FUNC = 'stencil.func';\n  var S_STENCIL_OPFRONT = 'stencil.opFront';\n  var S_STENCIL_OPBACK = 'stencil.opBack';\n  var S_SCISSOR_ENABLE = 'scissor.enable';\n  var S_SCISSOR_BOX = 'scissor.box';\n  var S_VIEWPORT = 'viewport';\n  var S_PROFILE = 'profile';\n  var S_FRAMEBUFFER = 'framebuffer';\n  var S_VERT = 'vert';\n  var S_FRAG = 'frag';\n  var S_ELEMENTS = 'elements';\n  var S_PRIMITIVE = 'primitive';\n  var S_COUNT = 'count';\n  var S_OFFSET = 'offset';\n  var S_INSTANCES = 'instances';\n  var S_VAO = 'vao';\n  var SUFFIX_WIDTH = 'Width';\n  var SUFFIX_HEIGHT = 'Height';\n  var S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH;\n  var S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT;\n  var S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH;\n  var S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT;\n  var S_DRAWINGBUFFER = 'drawingBuffer';\n  var S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH;\n  var S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT;\n  var NESTED_OPTIONS = [S_BLEND_FUNC, S_BLEND_EQUATION, S_STENCIL_FUNC, S_STENCIL_OPFRONT, S_STENCIL_OPBACK, S_SAMPLE_COVERAGE, S_VIEWPORT, S_SCISSOR_BOX, S_POLYGON_OFFSET_OFFSET];\n  var GL_ARRAY_BUFFER$2 = 34962;\n  var GL_ELEMENT_ARRAY_BUFFER$2 = 34963;\n  var GL_CULL_FACE = 0x0B44;\n  var GL_BLEND = 0x0BE2;\n  var GL_DITHER = 0x0BD0;\n  var GL_STENCIL_TEST = 0x0B90;\n  var GL_DEPTH_TEST = 0x0B71;\n  var GL_SCISSOR_TEST = 0x0C11;\n  var GL_POLYGON_OFFSET_FILL = 0x8037;\n  var GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n  var GL_SAMPLE_COVERAGE = 0x80A0;\n  var GL_FLOAT$7 = 5126;\n  var GL_FLOAT_VEC2 = 35664;\n  var GL_FLOAT_VEC3 = 35665;\n  var GL_FLOAT_VEC4 = 35666;\n  var GL_INT$2 = 5124;\n  var GL_INT_VEC2 = 35667;\n  var GL_INT_VEC3 = 35668;\n  var GL_INT_VEC4 = 35669;\n  var GL_BOOL = 35670;\n  var GL_BOOL_VEC2 = 35671;\n  var GL_BOOL_VEC3 = 35672;\n  var GL_BOOL_VEC4 = 35673;\n  var GL_FLOAT_MAT2 = 35674;\n  var GL_FLOAT_MAT3 = 35675;\n  var GL_FLOAT_MAT4 = 35676;\n  var GL_SAMPLER_2D = 35678;\n  var GL_SAMPLER_CUBE = 35680;\n  var GL_TRIANGLES$1 = 4;\n  var GL_FRONT = 1028;\n  var GL_BACK = 1029;\n  var GL_CW = 0x0900;\n  var GL_CCW = 0x0901;\n  var GL_MIN_EXT = 0x8007;\n  var GL_MAX_EXT = 0x8008;\n  var GL_ALWAYS = 519;\n  var GL_KEEP = 7680;\n  var GL_ZERO = 0;\n  var GL_ONE = 1;\n  var GL_FUNC_ADD = 0x8006;\n  var GL_LESS = 513;\n  var GL_FRAMEBUFFER$2 = 0x8D40;\n  var GL_COLOR_ATTACHMENT0$2 = 0x8CE0;\n  var blendFuncs = {\n    '0': 0,\n    '1': 1,\n    'zero': 0,\n    'one': 1,\n    'src color': 768,\n    'one minus src color': 769,\n    'src alpha': 770,\n    'one minus src alpha': 771,\n    'dst color': 774,\n    'one minus dst color': 775,\n    'dst alpha': 772,\n    'one minus dst alpha': 773,\n    'constant color': 32769,\n    'one minus constant color': 32770,\n    'constant alpha': 32771,\n    'one minus constant alpha': 32772,\n    'src alpha saturate': 776\n  };\n  var compareFuncs = {\n    'never': 512,\n    'less': 513,\n    '<': 513,\n    'equal': 514,\n    '=': 514,\n    '==': 514,\n    '===': 514,\n    'lequal': 515,\n    '<=': 515,\n    'greater': 516,\n    '>': 516,\n    'notequal': 517,\n    '!=': 517,\n    '!==': 517,\n    'gequal': 518,\n    '>=': 518,\n    'always': 519\n  };\n  var stencilOps = {\n    '0': 0,\n    'zero': 0,\n    'keep': 7680,\n    'replace': 7681,\n    'increment': 7682,\n    'decrement': 7683,\n    'increment wrap': 34055,\n    'decrement wrap': 34056,\n    'invert': 5386\n  };\n  var orientationType = {\n    'cw': GL_CW,\n    'ccw': GL_CCW\n  };\n  function isBufferArgs(x) {\n    return Array.isArray(x) || isTypedArray(x) || isNDArrayLike(x);\n  }\n\n  // Make sure viewport is processed first\n  function sortState(state) {\n    return state.sort(function (a, b) {\n      if (a === S_VIEWPORT) {\n        return -1;\n      } else if (b === S_VIEWPORT) {\n        return 1;\n      }\n      return a < b ? -1 : 1;\n    });\n  }\n  function Declaration(thisDep, contextDep, propDep, append) {\n    this.thisDep = thisDep;\n    this.contextDep = contextDep;\n    this.propDep = propDep;\n    this.append = append;\n  }\n  function isStatic(decl) {\n    return decl && !(decl.thisDep || decl.contextDep || decl.propDep);\n  }\n  function createStaticDecl(append) {\n    return new Declaration(false, false, false, append);\n  }\n  function createDynamicDecl(dyn, append) {\n    var type = dyn.type;\n    if (type === DYN_FUNC$1) {\n      var numArgs = dyn.data.length;\n      return new Declaration(true, numArgs >= 1, numArgs >= 2, append);\n    } else if (type === DYN_THUNK) {\n      var data = dyn.data;\n      return new Declaration(data.thisDep, data.contextDep, data.propDep, append);\n    } else if (type === DYN_CONSTANT$1) {\n      return new Declaration(false, false, false, append);\n    } else if (type === DYN_ARRAY$1) {\n      var thisDep = false;\n      var contextDep = false;\n      var propDep = false;\n      for (var i = 0; i < dyn.data.length; ++i) {\n        var subDyn = dyn.data[i];\n        if (subDyn.type === DYN_PROP$1) {\n          propDep = true;\n        } else if (subDyn.type === DYN_CONTEXT$1) {\n          contextDep = true;\n        } else if (subDyn.type === DYN_STATE$1) {\n          thisDep = true;\n        } else if (subDyn.type === DYN_FUNC$1) {\n          thisDep = true;\n          var subArgs = subDyn.data;\n          if (subArgs >= 1) {\n            contextDep = true;\n          }\n          if (subArgs >= 2) {\n            propDep = true;\n          }\n        } else if (subDyn.type === DYN_THUNK) {\n          thisDep = thisDep || subDyn.data.thisDep;\n          contextDep = contextDep || subDyn.data.contextDep;\n          propDep = propDep || subDyn.data.propDep;\n        }\n      }\n      return new Declaration(thisDep, contextDep, propDep, append);\n    } else {\n      return new Declaration(type === DYN_STATE$1, type === DYN_CONTEXT$1, type === DYN_PROP$1, append);\n    }\n  }\n  var SCOPE_DECL = new Declaration(false, false, false, function () {});\n  function reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, cachedCode, config) {\n    var AttributeRecord = attributeState.Record;\n    var blendEquations = {\n      'add': 32774,\n      'subtract': 32778,\n      'reverse subtract': 32779\n    };\n    if (extensions.ext_blend_minmax) {\n      blendEquations.min = GL_MIN_EXT;\n      blendEquations.max = GL_MAX_EXT;\n    }\n    var extInstancing = extensions.angle_instanced_arrays;\n    var extDrawBuffers = extensions.webgl_draw_buffers;\n    var extVertexArrays = extensions.oes_vertex_array_object;\n\n    // ===================================================\n    // ===================================================\n    // WEBGL STATE\n    // ===================================================\n    // ===================================================\n    var currentState = {\n      dirty: true,\n      profile: config.profile\n    };\n    var nextState = {};\n    var GL_STATE_NAMES = [];\n    var GL_FLAGS = {};\n    var GL_VARIABLES = {};\n    function propName(name) {\n      return name.replace('.', '_');\n    }\n    function stateFlag(sname, cap, init) {\n      var name = propName(sname);\n      GL_STATE_NAMES.push(sname);\n      nextState[name] = currentState[name] = !!init;\n      GL_FLAGS[name] = cap;\n    }\n    function stateVariable(sname, func, init) {\n      var name = propName(sname);\n      GL_STATE_NAMES.push(sname);\n      if (Array.isArray(init)) {\n        currentState[name] = init.slice();\n        nextState[name] = init.slice();\n      } else {\n        currentState[name] = nextState[name] = init;\n      }\n      GL_VARIABLES[name] = func;\n    }\n    function hasVariableReference(exp) {\n      if (!isNaN(exp)) {\n        return false;\n      }\n      // strengthen this function if variable values can be non-(null/number) literals.\n      return true;\n    }\n\n    // Dithering\n    stateFlag(S_DITHER, GL_DITHER);\n\n    // Blending\n    stateFlag(S_BLEND_ENABLE, GL_BLEND);\n    stateVariable(S_BLEND_COLOR, 'blendColor', [0, 0, 0, 0]);\n    stateVariable(S_BLEND_EQUATION, 'blendEquationSeparate', [GL_FUNC_ADD, GL_FUNC_ADD]);\n    stateVariable(S_BLEND_FUNC, 'blendFuncSeparate', [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO]);\n\n    // Depth\n    stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true);\n    stateVariable(S_DEPTH_FUNC, 'depthFunc', GL_LESS);\n    stateVariable(S_DEPTH_RANGE, 'depthRange', [0, 1]);\n    stateVariable(S_DEPTH_MASK, 'depthMask', true);\n\n    // Color mask\n    stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true]);\n\n    // Face culling\n    stateFlag(S_CULL_ENABLE, GL_CULL_FACE);\n    stateVariable(S_CULL_FACE, 'cullFace', GL_BACK);\n\n    // Front face orientation\n    stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW);\n\n    // Line width\n    stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1);\n\n    // Polygon offset\n    stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL);\n    stateVariable(S_POLYGON_OFFSET_OFFSET, 'polygonOffset', [0, 0]);\n\n    // Sample coverage\n    stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE);\n    stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE);\n    stateVariable(S_SAMPLE_COVERAGE, 'sampleCoverage', [1, false]);\n\n    // Stencil\n    stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST);\n    stateVariable(S_STENCIL_MASK, 'stencilMask', -1);\n    stateVariable(S_STENCIL_FUNC, 'stencilFunc', [GL_ALWAYS, 0, -1]);\n    stateVariable(S_STENCIL_OPFRONT, 'stencilOpSeparate', [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP]);\n    stateVariable(S_STENCIL_OPBACK, 'stencilOpSeparate', [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP]);\n\n    // Scissor\n    stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST);\n    stateVariable(S_SCISSOR_BOX, 'scissor', [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);\n\n    // Viewport\n    stateVariable(S_VIEWPORT, S_VIEWPORT, [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);\n\n    // ===================================================\n    // ===================================================\n    // ENVIRONMENT\n    // ===================================================\n    // ===================================================\n    var sharedState = {\n      gl: gl,\n      context: contextState,\n      strings: stringStore,\n      next: nextState,\n      current: currentState,\n      draw: drawState,\n      elements: elementState,\n      buffer: bufferState,\n      shader: shaderState,\n      attributes: attributeState.state,\n      vao: attributeState,\n      uniforms: uniformState,\n      framebuffer: framebufferState,\n      extensions: extensions,\n      timer: timer,\n      isBufferArgs: isBufferArgs\n    };\n    var sharedConstants = {\n      primTypes: primTypes,\n      compareFuncs: compareFuncs,\n      blendFuncs: blendFuncs,\n      blendEquations: blendEquations,\n      stencilOps: stencilOps,\n      glTypes: glTypes,\n      orientationType: orientationType\n    };\n    if (extDrawBuffers) {\n      sharedConstants.backBuffer = [GL_BACK];\n      sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function (i) {\n        if (i === 0) {\n          return [0];\n        }\n        return loop(i, function (j) {\n          return GL_COLOR_ATTACHMENT0$2 + j;\n        });\n      });\n    }\n    var drawCallCounter = 0;\n    function createREGLEnvironment() {\n      var env = createEnvironment({\n        cache: cachedCode\n      });\n      var link = env.link;\n      var global = env.global;\n      env.id = drawCallCounter++;\n      env.batchId = '0';\n\n      // link shared state\n      var SHARED = link(sharedState);\n      var shared = env.shared = {\n        props: 'a0'\n      };\n      Object.keys(sharedState).forEach(function (prop) {\n        shared[prop] = global.def(SHARED, '.', prop);\n      });\n\n      // Inject runtime assertion stuff for debug builds\n\n      // Copy GL state variables over\n      var nextVars = env.next = {};\n      var currentVars = env.current = {};\n      Object.keys(GL_VARIABLES).forEach(function (variable) {\n        if (Array.isArray(currentState[variable])) {\n          nextVars[variable] = global.def(shared.next, '.', variable);\n          currentVars[variable] = global.def(shared.current, '.', variable);\n        }\n      });\n\n      // Initialize shared constants\n      var constants = env.constants = {};\n      Object.keys(sharedConstants).forEach(function (name) {\n        constants[name] = global.def(JSON.stringify(sharedConstants[name]));\n      });\n\n      // Helper function for calling a block\n      env.invoke = function (block, x) {\n        switch (x.type) {\n          case DYN_FUNC$1:\n            var argList = ['this', shared.context, shared.props, env.batchId];\n            return block.def(link(x.data), '.call(', argList.slice(0, Math.max(x.data.length + 1, 4)), ')');\n          case DYN_PROP$1:\n            return block.def(shared.props, x.data);\n          case DYN_CONTEXT$1:\n            return block.def(shared.context, x.data);\n          case DYN_STATE$1:\n            return block.def('this', x.data);\n          case DYN_THUNK:\n            x.data.append(env, block);\n            return x.data.ref;\n          case DYN_CONSTANT$1:\n            return x.data.toString();\n          case DYN_ARRAY$1:\n            return x.data.map(function (y) {\n              return env.invoke(block, y);\n            });\n        }\n      };\n      env.attribCache = {};\n      var scopeAttribs = {};\n      env.scopeAttrib = function (name) {\n        var id = stringStore.id(name);\n        if (id in scopeAttribs) {\n          return scopeAttribs[id];\n        }\n        var binding = attributeState.scope[id];\n        if (!binding) {\n          binding = attributeState.scope[id] = new AttributeRecord();\n        }\n        var result = scopeAttribs[id] = link(binding);\n        return result;\n      };\n      return env;\n    }\n\n    // ===================================================\n    // ===================================================\n    // PARSING\n    // ===================================================\n    // ===================================================\n    function parseProfile(options) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n      var profileEnable;\n      if (S_PROFILE in staticOptions) {\n        var value = !!staticOptions[S_PROFILE];\n        profileEnable = createStaticDecl(function (env, scope) {\n          return value;\n        });\n        profileEnable.enable = value;\n      } else if (S_PROFILE in dynamicOptions) {\n        var dyn = dynamicOptions[S_PROFILE];\n        profileEnable = createDynamicDecl(dyn, function (env, scope) {\n          return env.invoke(scope, dyn);\n        });\n      }\n      return profileEnable;\n    }\n    function parseFramebuffer(options, env) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n      if (S_FRAMEBUFFER in staticOptions) {\n        var framebuffer = staticOptions[S_FRAMEBUFFER];\n        if (framebuffer) {\n          framebuffer = framebufferState.getFramebuffer(framebuffer);\n          return createStaticDecl(function (env, block) {\n            var FRAMEBUFFER = env.link(framebuffer);\n            var shared = env.shared;\n            block.set(shared.framebuffer, '.next', FRAMEBUFFER);\n            var CONTEXT = shared.context;\n            block.set(CONTEXT, '.' + S_FRAMEBUFFER_WIDTH, FRAMEBUFFER + '.width');\n            block.set(CONTEXT, '.' + S_FRAMEBUFFER_HEIGHT, FRAMEBUFFER + '.height');\n            return FRAMEBUFFER;\n          });\n        } else {\n          return createStaticDecl(function (env, scope) {\n            var shared = env.shared;\n            scope.set(shared.framebuffer, '.next', 'null');\n            var CONTEXT = shared.context;\n            scope.set(CONTEXT, '.' + S_FRAMEBUFFER_WIDTH, CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH);\n            scope.set(CONTEXT, '.' + S_FRAMEBUFFER_HEIGHT, CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT);\n            return 'null';\n          });\n        }\n      } else if (S_FRAMEBUFFER in dynamicOptions) {\n        var dyn = dynamicOptions[S_FRAMEBUFFER];\n        return createDynamicDecl(dyn, function (env, scope) {\n          var FRAMEBUFFER_FUNC = env.invoke(scope, dyn);\n          var shared = env.shared;\n          var FRAMEBUFFER_STATE = shared.framebuffer;\n          var FRAMEBUFFER = scope.def(FRAMEBUFFER_STATE, '.getFramebuffer(', FRAMEBUFFER_FUNC, ')');\n          scope.set(FRAMEBUFFER_STATE, '.next', FRAMEBUFFER);\n          var CONTEXT = shared.context;\n          scope.set(CONTEXT, '.' + S_FRAMEBUFFER_WIDTH, FRAMEBUFFER + '?' + FRAMEBUFFER + '.width:' + CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH);\n          scope.set(CONTEXT, '.' + S_FRAMEBUFFER_HEIGHT, FRAMEBUFFER + '?' + FRAMEBUFFER + '.height:' + CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT);\n          return FRAMEBUFFER;\n        });\n      } else {\n        return null;\n      }\n    }\n    function parseViewportScissor(options, framebuffer, env) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n      function parseBox(param) {\n        if (param in staticOptions) {\n          var box = staticOptions[param];\n          var isStatic = true;\n          var x = box.x | 0;\n          var y = box.y | 0;\n          var w, h;\n          if ('width' in box) {\n            w = box.width | 0;\n          } else {\n            isStatic = false;\n          }\n          if ('height' in box) {\n            h = box.height | 0;\n          } else {\n            isStatic = false;\n          }\n          return new Declaration(!isStatic && framebuffer && framebuffer.thisDep, !isStatic && framebuffer && framebuffer.contextDep, !isStatic && framebuffer && framebuffer.propDep, function (env, scope) {\n            var CONTEXT = env.shared.context;\n            var BOX_W = w;\n            if (!('width' in box)) {\n              BOX_W = scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', x);\n            }\n            var BOX_H = h;\n            if (!('height' in box)) {\n              BOX_H = scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', y);\n            }\n            return [x, y, BOX_W, BOX_H];\n          });\n        } else if (param in dynamicOptions) {\n          var dynBox = dynamicOptions[param];\n          var result = createDynamicDecl(dynBox, function (env, scope) {\n            var BOX = env.invoke(scope, dynBox);\n            var CONTEXT = env.shared.context;\n            var BOX_X = scope.def(BOX, '.x|0');\n            var BOX_Y = scope.def(BOX, '.y|0');\n            var BOX_W = scope.def('\"width\" in ', BOX, '?', BOX, '.width|0:', '(', CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', BOX_X, ')');\n            var BOX_H = scope.def('\"height\" in ', BOX, '?', BOX, '.height|0:', '(', CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', BOX_Y, ')');\n            return [BOX_X, BOX_Y, BOX_W, BOX_H];\n          });\n          if (framebuffer) {\n            result.thisDep = result.thisDep || framebuffer.thisDep;\n            result.contextDep = result.contextDep || framebuffer.contextDep;\n            result.propDep = result.propDep || framebuffer.propDep;\n          }\n          return result;\n        } else if (framebuffer) {\n          return new Declaration(framebuffer.thisDep, framebuffer.contextDep, framebuffer.propDep, function (env, scope) {\n            var CONTEXT = env.shared.context;\n            return [0, 0, scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH), scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT)];\n          });\n        } else {\n          return null;\n        }\n      }\n      var viewport = parseBox(S_VIEWPORT);\n      if (viewport) {\n        var prevViewport = viewport;\n        viewport = new Declaration(viewport.thisDep, viewport.contextDep, viewport.propDep, function (env, scope) {\n          var VIEWPORT = prevViewport.append(env, scope);\n          var CONTEXT = env.shared.context;\n          scope.set(CONTEXT, '.' + S_VIEWPORT_WIDTH, VIEWPORT[2]);\n          scope.set(CONTEXT, '.' + S_VIEWPORT_HEIGHT, VIEWPORT[3]);\n          return VIEWPORT;\n        });\n      }\n      return {\n        viewport: viewport,\n        scissor_box: parseBox(S_SCISSOR_BOX)\n      };\n    }\n    function parseAttribLocations(options, attributes) {\n      var staticOptions = options.static;\n      var staticProgram = typeof staticOptions[S_FRAG] === 'string' && typeof staticOptions[S_VERT] === 'string';\n      if (staticProgram) {\n        if (Object.keys(attributes.dynamic).length > 0) {\n          return null;\n        }\n        var staticAttributes = attributes.static;\n        var sAttributes = Object.keys(staticAttributes);\n        if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === 'number') {\n          var bindings = [];\n          for (var i = 0; i < sAttributes.length; ++i) {\n            bindings.push([staticAttributes[sAttributes[i]] | 0, sAttributes[i]]);\n          }\n          return bindings;\n        }\n      }\n      return null;\n    }\n    function parseProgram(options, env, attribLocations) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n      function parseShader(name) {\n        if (name in staticOptions) {\n          var id = stringStore.id(staticOptions[name]);\n          var result = createStaticDecl(function () {\n            return id;\n          });\n          result.id = id;\n          return result;\n        } else if (name in dynamicOptions) {\n          var dyn = dynamicOptions[name];\n          return createDynamicDecl(dyn, function (env, scope) {\n            var str = env.invoke(scope, dyn);\n            var id = scope.def(env.shared.strings, '.id(', str, ')');\n            return id;\n          });\n        }\n        return null;\n      }\n      var frag = parseShader(S_FRAG);\n      var vert = parseShader(S_VERT);\n      var program = null;\n      var progVar;\n      if (isStatic(frag) && isStatic(vert)) {\n        program = shaderState.program(vert.id, frag.id, null, attribLocations);\n        progVar = createStaticDecl(function (env, scope) {\n          return env.link(program);\n        });\n      } else {\n        progVar = new Declaration(frag && frag.thisDep || vert && vert.thisDep, frag && frag.contextDep || vert && vert.contextDep, frag && frag.propDep || vert && vert.propDep, function (env, scope) {\n          var SHADER_STATE = env.shared.shader;\n          var fragId;\n          if (frag) {\n            fragId = frag.append(env, scope);\n          } else {\n            fragId = scope.def(SHADER_STATE, '.', S_FRAG);\n          }\n          var vertId;\n          if (vert) {\n            vertId = vert.append(env, scope);\n          } else {\n            vertId = scope.def(SHADER_STATE, '.', S_VERT);\n          }\n          var progDef = SHADER_STATE + '.program(' + vertId + ',' + fragId;\n          return scope.def(progDef + ')');\n        });\n      }\n      return {\n        frag: frag,\n        vert: vert,\n        progVar: progVar,\n        program: program\n      };\n    }\n    function parseDraw(options, env) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n\n      // TODO: should use VAO to get default values for offset properties\n      // should move vao parse into here and out of the old stuff\n\n      var staticDraw = {};\n      var vaoActive = false;\n      function parseVAO() {\n        if (S_VAO in staticOptions) {\n          var vao = staticOptions[S_VAO];\n          if (vao !== null && attributeState.getVAO(vao) === null) {\n            vao = attributeState.createVAO(vao);\n          }\n          vaoActive = true;\n          staticDraw.vao = vao;\n          return createStaticDecl(function (env) {\n            var vaoRef = attributeState.getVAO(vao);\n            if (vaoRef) {\n              return env.link(vaoRef);\n            } else {\n              return 'null';\n            }\n          });\n        } else if (S_VAO in dynamicOptions) {\n          vaoActive = true;\n          var dyn = dynamicOptions[S_VAO];\n          return createDynamicDecl(dyn, function (env, scope) {\n            var vaoRef = env.invoke(scope, dyn);\n            return scope.def(env.shared.vao + '.getVAO(' + vaoRef + ')');\n          });\n        }\n        return null;\n      }\n      var vao = parseVAO();\n      var elementsActive = false;\n      function parseElements() {\n        if (S_ELEMENTS in staticOptions) {\n          var elements = staticOptions[S_ELEMENTS];\n          staticDraw.elements = elements;\n          if (isBufferArgs(elements)) {\n            var e = staticDraw.elements = elementState.create(elements, true);\n            elements = elementState.getElements(e);\n            elementsActive = true;\n          } else if (elements) {\n            elements = elementState.getElements(elements);\n            elementsActive = true;\n          }\n          var result = createStaticDecl(function (env, scope) {\n            if (elements) {\n              var result = env.link(elements);\n              env.ELEMENTS = result;\n              return result;\n            }\n            env.ELEMENTS = null;\n            return null;\n          });\n          result.value = elements;\n          return result;\n        } else if (S_ELEMENTS in dynamicOptions) {\n          elementsActive = true;\n          var dyn = dynamicOptions[S_ELEMENTS];\n          return createDynamicDecl(dyn, function (env, scope) {\n            var shared = env.shared;\n            var IS_BUFFER_ARGS = shared.isBufferArgs;\n            var ELEMENT_STATE = shared.elements;\n            var elementDefn = env.invoke(scope, dyn);\n            var elements = scope.def('null');\n            var elementStream = scope.def(IS_BUFFER_ARGS, '(', elementDefn, ')');\n            var ifte = env.cond(elementStream).then(elements, '=', ELEMENT_STATE, '.createStream(', elementDefn, ');').else(elements, '=', ELEMENT_STATE, '.getElements(', elementDefn, ');');\n            scope.entry(ifte);\n            scope.exit(env.cond(elementStream).then(ELEMENT_STATE, '.destroyStream(', elements, ');'));\n            env.ELEMENTS = elements;\n            return elements;\n          });\n        } else if (vaoActive) {\n          return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.elements + '.getElements(' + env.shared.vao + '.currentVAO.elements):null');\n          });\n        }\n        return null;\n      }\n      var elements = parseElements();\n      function parsePrimitive() {\n        if (S_PRIMITIVE in staticOptions) {\n          var primitive = staticOptions[S_PRIMITIVE];\n          staticDraw.primitive = primitive;\n          return createStaticDecl(function (env, scope) {\n            return primTypes[primitive];\n          });\n        } else if (S_PRIMITIVE in dynamicOptions) {\n          var dynPrimitive = dynamicOptions[S_PRIMITIVE];\n          return createDynamicDecl(dynPrimitive, function (env, scope) {\n            var PRIM_TYPES = env.constants.primTypes;\n            var prim = env.invoke(scope, dynPrimitive);\n            return scope.def(PRIM_TYPES, '[', prim, ']');\n          });\n        } else if (elementsActive) {\n          if (isStatic(elements)) {\n            if (elements.value) {\n              return createStaticDecl(function (env, scope) {\n                return scope.def(env.ELEMENTS, '.primType');\n              });\n            } else {\n              return createStaticDecl(function () {\n                return GL_TRIANGLES$1;\n              });\n            }\n          } else {\n            return new Declaration(elements.thisDep, elements.contextDep, elements.propDep, function (env, scope) {\n              var elements = env.ELEMENTS;\n              return scope.def(elements, '?', elements, '.primType:', GL_TRIANGLES$1);\n            });\n          }\n        } else if (vaoActive) {\n          return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.primitive:' + GL_TRIANGLES$1);\n          });\n        }\n        return null;\n      }\n      function parseParam(param, isOffset) {\n        if (param in staticOptions) {\n          var value = staticOptions[param] | 0;\n          if (isOffset) {\n            staticDraw.offset = value;\n          } else {\n            staticDraw.instances = value;\n          }\n          return createStaticDecl(function (env, scope) {\n            if (isOffset) {\n              env.OFFSET = value;\n            }\n            return value;\n          });\n        } else if (param in dynamicOptions) {\n          var dynValue = dynamicOptions[param];\n          return createDynamicDecl(dynValue, function (env, scope) {\n            var result = env.invoke(scope, dynValue);\n            if (isOffset) {\n              env.OFFSET = result;\n            }\n            return result;\n          });\n        } else if (isOffset) {\n          if (elementsActive) {\n            return createStaticDecl(function (env, scope) {\n              env.OFFSET = 0;\n              return 0;\n            });\n          } else if (vaoActive) {\n            return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {\n              return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.offset:0');\n            });\n          }\n        } else if (vaoActive) {\n          return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.instances:-1');\n          });\n        }\n        return null;\n      }\n      var OFFSET = parseParam(S_OFFSET, true);\n      function parseVertCount() {\n        if (S_COUNT in staticOptions) {\n          var count = staticOptions[S_COUNT] | 0;\n          staticDraw.count = count;\n          return createStaticDecl(function () {\n            return count;\n          });\n        } else if (S_COUNT in dynamicOptions) {\n          var dynCount = dynamicOptions[S_COUNT];\n          return createDynamicDecl(dynCount, function (env, scope) {\n            var result = env.invoke(scope, dynCount);\n            return result;\n          });\n        } else if (elementsActive) {\n          if (isStatic(elements)) {\n            if (elements) {\n              if (OFFSET) {\n                return new Declaration(OFFSET.thisDep, OFFSET.contextDep, OFFSET.propDep, function (env, scope) {\n                  var result = scope.def(env.ELEMENTS, '.vertCount-', env.OFFSET);\n                  return result;\n                });\n              } else {\n                return createStaticDecl(function (env, scope) {\n                  return scope.def(env.ELEMENTS, '.vertCount');\n                });\n              }\n            } else {\n              var result = createStaticDecl(function () {\n                return -1;\n              });\n              return result;\n            }\n          } else {\n            var variable = new Declaration(elements.thisDep || OFFSET.thisDep, elements.contextDep || OFFSET.contextDep, elements.propDep || OFFSET.propDep, function (env, scope) {\n              var elements = env.ELEMENTS;\n              if (env.OFFSET) {\n                return scope.def(elements, '?', elements, '.vertCount-', env.OFFSET, ':-1');\n              }\n              return scope.def(elements, '?', elements, '.vertCount:-1');\n            });\n            return variable;\n          }\n        } else if (vaoActive) {\n          var countVariable = new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {\n            return scope.def(env.shared.vao, '.currentVAO?', env.shared.vao, '.currentVAO.count:-1');\n          });\n          return countVariable;\n        }\n        return null;\n      }\n      var primitive = parsePrimitive();\n      var count = parseVertCount();\n      var instances = parseParam(S_INSTANCES, false);\n      return {\n        elements: elements,\n        primitive: primitive,\n        count: count,\n        instances: instances,\n        offset: OFFSET,\n        vao: vao,\n        vaoActive: vaoActive,\n        elementsActive: elementsActive,\n        // static draw props\n        static: staticDraw\n      };\n    }\n    function parseGLState(options, env) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n      var STATE = {};\n      GL_STATE_NAMES.forEach(function (prop) {\n        var param = propName(prop);\n        function parseParam(parseStatic, parseDynamic) {\n          if (prop in staticOptions) {\n            var value = parseStatic(staticOptions[prop]);\n            STATE[param] = createStaticDecl(function () {\n              return value;\n            });\n          } else if (prop in dynamicOptions) {\n            var dyn = dynamicOptions[prop];\n            STATE[param] = createDynamicDecl(dyn, function (env, scope) {\n              return parseDynamic(env, scope, env.invoke(scope, dyn));\n            });\n          }\n        }\n        switch (prop) {\n          case S_CULL_ENABLE:\n          case S_BLEND_ENABLE:\n          case S_DITHER:\n          case S_STENCIL_ENABLE:\n          case S_DEPTH_ENABLE:\n          case S_SCISSOR_ENABLE:\n          case S_POLYGON_OFFSET_ENABLE:\n          case S_SAMPLE_ALPHA:\n          case S_SAMPLE_ENABLE:\n          case S_DEPTH_MASK:\n            return parseParam(function (value) {\n              return value;\n            }, function (env, scope, value) {\n              return value;\n            });\n          case S_DEPTH_FUNC:\n            return parseParam(function (value) {\n              return compareFuncs[value];\n            }, function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs;\n              return scope.def(COMPARE_FUNCS, '[', value, ']');\n            });\n          case S_DEPTH_RANGE:\n            return parseParam(function (value) {\n              return value;\n            }, function (env, scope, value) {\n              var Z_NEAR = scope.def('+', value, '[0]');\n              var Z_FAR = scope.def('+', value, '[1]');\n              return [Z_NEAR, Z_FAR];\n            });\n          case S_BLEND_FUNC:\n            return parseParam(function (value) {\n              var srcRGB = 'srcRGB' in value ? value.srcRGB : value.src;\n              var srcAlpha = 'srcAlpha' in value ? value.srcAlpha : value.src;\n              var dstRGB = 'dstRGB' in value ? value.dstRGB : value.dst;\n              var dstAlpha = 'dstAlpha' in value ? value.dstAlpha : value.dst;\n              return [blendFuncs[srcRGB], blendFuncs[dstRGB], blendFuncs[srcAlpha], blendFuncs[dstAlpha]];\n            }, function (env, scope, value) {\n              var BLEND_FUNCS = env.constants.blendFuncs;\n              function read(prefix, suffix) {\n                var func = scope.def('\"', prefix, suffix, '\" in ', value, '?', value, '.', prefix, suffix, ':', value, '.', prefix);\n                return func;\n              }\n              var srcRGB = read('src', 'RGB');\n              var dstRGB = read('dst', 'RGB');\n              var SRC_RGB = scope.def(BLEND_FUNCS, '[', srcRGB, ']');\n              var SRC_ALPHA = scope.def(BLEND_FUNCS, '[', read('src', 'Alpha'), ']');\n              var DST_RGB = scope.def(BLEND_FUNCS, '[', dstRGB, ']');\n              var DST_ALPHA = scope.def(BLEND_FUNCS, '[', read('dst', 'Alpha'), ']');\n              return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA];\n            });\n          case S_BLEND_EQUATION:\n            return parseParam(function (value) {\n              if (typeof value === 'string') {\n                return [blendEquations[value], blendEquations[value]];\n              } else if (typeof value === 'object') {\n                return [blendEquations[value.rgb], blendEquations[value.alpha]];\n              } else {}\n            }, function (env, scope, value) {\n              var BLEND_EQUATIONS = env.constants.blendEquations;\n              var RGB = scope.def();\n              var ALPHA = scope.def();\n              var ifte = env.cond('typeof ', value, '===\"string\"');\n              ifte.then(RGB, '=', ALPHA, '=', BLEND_EQUATIONS, '[', value, '];');\n              ifte.else(RGB, '=', BLEND_EQUATIONS, '[', value, '.rgb];', ALPHA, '=', BLEND_EQUATIONS, '[', value, '.alpha];');\n              scope(ifte);\n              return [RGB, ALPHA];\n            });\n          case S_BLEND_COLOR:\n            return parseParam(function (value) {\n              return loop(4, function (i) {\n                return +value[i];\n              });\n            }, function (env, scope, value) {\n              return loop(4, function (i) {\n                return scope.def('+', value, '[', i, ']');\n              });\n            });\n          case S_STENCIL_MASK:\n            return parseParam(function (value) {\n              return value | 0;\n            }, function (env, scope, value) {\n              return scope.def(value, '|0');\n            });\n          case S_STENCIL_FUNC:\n            return parseParam(function (value) {\n              var cmp = value.cmp || 'keep';\n              var ref = value.ref || 0;\n              var mask = 'mask' in value ? value.mask : -1;\n              return [compareFuncs[cmp], ref, mask];\n            }, function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs;\n              var cmp = scope.def('\"cmp\" in ', value, '?', COMPARE_FUNCS, '[', value, '.cmp]', ':', GL_KEEP);\n              var ref = scope.def(value, '.ref|0');\n              var mask = scope.def('\"mask\" in ', value, '?', value, '.mask|0:-1');\n              return [cmp, ref, mask];\n            });\n          case S_STENCIL_OPFRONT:\n          case S_STENCIL_OPBACK:\n            return parseParam(function (value) {\n              var fail = value.fail || 'keep';\n              var zfail = value.zfail || 'keep';\n              var zpass = value.zpass || 'keep';\n              return [prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT, stencilOps[fail], stencilOps[zfail], stencilOps[zpass]];\n            }, function (env, scope, value) {\n              var STENCIL_OPS = env.constants.stencilOps;\n              function read(name) {\n                return scope.def('\"', name, '\" in ', value, '?', STENCIL_OPS, '[', value, '.', name, ']:', GL_KEEP);\n              }\n              return [prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT, read('fail'), read('zfail'), read('zpass')];\n            });\n          case S_POLYGON_OFFSET_OFFSET:\n            return parseParam(function (value) {\n              var factor = value.factor | 0;\n              var units = value.units | 0;\n              return [factor, units];\n            }, function (env, scope, value) {\n              var FACTOR = scope.def(value, '.factor|0');\n              var UNITS = scope.def(value, '.units|0');\n              return [FACTOR, UNITS];\n            });\n          case S_CULL_FACE:\n            return parseParam(function (value) {\n              var face = 0;\n              if (value === 'front') {\n                face = GL_FRONT;\n              } else if (value === 'back') {\n                face = GL_BACK;\n              }\n              return face;\n            }, function (env, scope, value) {\n              return scope.def(value, '===\"front\"?', GL_FRONT, ':', GL_BACK);\n            });\n          case S_LINE_WIDTH:\n            return parseParam(function (value) {\n              return value;\n            }, function (env, scope, value) {\n              return value;\n            });\n          case S_FRONT_FACE:\n            return parseParam(function (value) {\n              return orientationType[value];\n            }, function (env, scope, value) {\n              return scope.def(value + '===\"cw\"?' + GL_CW + ':' + GL_CCW);\n            });\n          case S_COLOR_MASK:\n            return parseParam(function (value) {\n              return value.map(function (v) {\n                return !!v;\n              });\n            }, function (env, scope, value) {\n              return loop(4, function (i) {\n                return '!!' + value + '[' + i + ']';\n              });\n            });\n          case S_SAMPLE_COVERAGE:\n            return parseParam(function (value) {\n              var sampleValue = 'value' in value ? value.value : 1;\n              var sampleInvert = !!value.invert;\n              return [sampleValue, sampleInvert];\n            }, function (env, scope, value) {\n              var VALUE = scope.def('\"value\" in ', value, '?+', value, '.value:1');\n              var INVERT = scope.def('!!', value, '.invert');\n              return [VALUE, INVERT];\n            });\n        }\n      });\n      return STATE;\n    }\n    function parseUniforms(uniforms, env) {\n      var staticUniforms = uniforms.static;\n      var dynamicUniforms = uniforms.dynamic;\n      var UNIFORMS = {};\n      Object.keys(staticUniforms).forEach(function (name) {\n        var value = staticUniforms[name];\n        var result;\n        if (typeof value === 'number' || typeof value === 'boolean') {\n          result = createStaticDecl(function () {\n            return value;\n          });\n        } else if (typeof value === 'function') {\n          var reglType = value._reglType;\n          if (reglType === 'texture2d' || reglType === 'textureCube') {\n            result = createStaticDecl(function (env) {\n              return env.link(value);\n            });\n          } else if (reglType === 'framebuffer' || reglType === 'framebufferCube') {\n            result = createStaticDecl(function (env) {\n              return env.link(value.color[0]);\n            });\n          } else {}\n        } else if (isArrayLike(value)) {\n          result = createStaticDecl(function (env) {\n            var ITEM = env.global.def('[', loop(value.length, function (i) {\n              return value[i];\n            }), ']');\n            return ITEM;\n          });\n        } else {}\n        result.value = value;\n        UNIFORMS[name] = result;\n      });\n      Object.keys(dynamicUniforms).forEach(function (key) {\n        var dyn = dynamicUniforms[key];\n        UNIFORMS[key] = createDynamicDecl(dyn, function (env, scope) {\n          return env.invoke(scope, dyn);\n        });\n      });\n      return UNIFORMS;\n    }\n    function parseAttributes(attributes, env) {\n      var staticAttributes = attributes.static;\n      var dynamicAttributes = attributes.dynamic;\n      var attributeDefs = {};\n      Object.keys(staticAttributes).forEach(function (attribute) {\n        var value = staticAttributes[attribute];\n        var id = stringStore.id(attribute);\n        var record = new AttributeRecord();\n        if (isBufferArgs(value)) {\n          record.state = ATTRIB_STATE_POINTER;\n          record.buffer = bufferState.getBuffer(bufferState.create(value, GL_ARRAY_BUFFER$2, false, true));\n          record.type = 0;\n        } else {\n          var buffer = bufferState.getBuffer(value);\n          if (buffer) {\n            record.state = ATTRIB_STATE_POINTER;\n            record.buffer = buffer;\n            record.type = 0;\n          } else {\n            if ('constant' in value) {\n              var constant = value.constant;\n              record.buffer = 'null';\n              record.state = ATTRIB_STATE_CONSTANT;\n              if (typeof constant === 'number') {\n                record.x = constant;\n              } else {\n                CUTE_COMPONENTS.forEach(function (c, i) {\n                  if (i < constant.length) {\n                    record[c] = constant[i];\n                  }\n                });\n              }\n            } else {\n              if (isBufferArgs(value.buffer)) {\n                buffer = bufferState.getBuffer(bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true));\n              } else {\n                buffer = bufferState.getBuffer(value.buffer);\n              }\n              var offset = value.offset | 0;\n              var stride = value.stride | 0;\n              var size = value.size | 0;\n              var normalized = !!value.normalized;\n              var type = 0;\n              if ('type' in value) {\n                type = glTypes[value.type];\n              }\n              var divisor = value.divisor | 0;\n              record.buffer = buffer;\n              record.state = ATTRIB_STATE_POINTER;\n              record.size = size;\n              record.normalized = normalized;\n              record.type = type || buffer.dtype;\n              record.offset = offset;\n              record.stride = stride;\n              record.divisor = divisor;\n            }\n          }\n        }\n        attributeDefs[attribute] = createStaticDecl(function (env, scope) {\n          var cache = env.attribCache;\n          if (id in cache) {\n            return cache[id];\n          }\n          var result = {\n            isStream: false\n          };\n          Object.keys(record).forEach(function (key) {\n            result[key] = record[key];\n          });\n          if (record.buffer) {\n            result.buffer = env.link(record.buffer);\n            result.type = result.type || result.buffer + '.dtype';\n          }\n          cache[id] = result;\n          return result;\n        });\n      });\n      Object.keys(dynamicAttributes).forEach(function (attribute) {\n        var dyn = dynamicAttributes[attribute];\n        function appendAttributeCode(env, block) {\n          var VALUE = env.invoke(block, dyn);\n          var shared = env.shared;\n          var constants = env.constants;\n          var IS_BUFFER_ARGS = shared.isBufferArgs;\n          var BUFFER_STATE = shared.buffer;\n\n          // Perform validation on attribute\n\n          // allocate names for result\n          var result = {\n            isStream: block.def(false)\n          };\n          var defaultRecord = new AttributeRecord();\n          defaultRecord.state = ATTRIB_STATE_POINTER;\n          Object.keys(defaultRecord).forEach(function (key) {\n            result[key] = block.def('' + defaultRecord[key]);\n          });\n          var BUFFER = result.buffer;\n          var TYPE = result.type;\n          block('if(', IS_BUFFER_ARGS, '(', VALUE, ')){', result.isStream, '=true;', BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, ');', TYPE, '=', BUFFER, '.dtype;', '}else{', BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, ');', 'if(', BUFFER, '){', TYPE, '=', BUFFER, '.dtype;', '}else if(\"constant\" in ', VALUE, '){', result.state, '=', ATTRIB_STATE_CONSTANT, ';', 'if(typeof ' + VALUE + '.constant === \"number\"){', result[CUTE_COMPONENTS[0]], '=', VALUE, '.constant;', CUTE_COMPONENTS.slice(1).map(function (n) {\n            return result[n];\n          }).join('='), '=0;', '}else{', CUTE_COMPONENTS.map(function (name, i) {\n            return result[name] + '=' + VALUE + '.constant.length>' + i + '?' + VALUE + '.constant[' + i + ']:0;';\n          }).join(''), '}}else{', 'if(', IS_BUFFER_ARGS, '(', VALUE, '.buffer)){', BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, '.buffer);', '}else{', BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, '.buffer);', '}', TYPE, '=\"type\" in ', VALUE, '?', constants.glTypes, '[', VALUE, '.type]:', BUFFER, '.dtype;', result.normalized, '=!!', VALUE, '.normalized;');\n          function emitReadRecord(name) {\n            block(result[name], '=', VALUE, '.', name, '|0;');\n          }\n          emitReadRecord('size');\n          emitReadRecord('offset');\n          emitReadRecord('stride');\n          emitReadRecord('divisor');\n          block('}}');\n          block.exit('if(', result.isStream, '){', BUFFER_STATE, '.destroyStream(', BUFFER, ');', '}');\n          return result;\n        }\n        attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode);\n      });\n      return attributeDefs;\n    }\n    function parseContext(context) {\n      var staticContext = context.static;\n      var dynamicContext = context.dynamic;\n      var result = {};\n      Object.keys(staticContext).forEach(function (name) {\n        var value = staticContext[name];\n        result[name] = createStaticDecl(function (env, scope) {\n          if (typeof value === 'number' || typeof value === 'boolean') {\n            return '' + value;\n          } else {\n            return env.link(value);\n          }\n        });\n      });\n      Object.keys(dynamicContext).forEach(function (name) {\n        var dyn = dynamicContext[name];\n        result[name] = createDynamicDecl(dyn, function (env, scope) {\n          return env.invoke(scope, dyn);\n        });\n      });\n      return result;\n    }\n    function parseArguments(options, attributes, uniforms, context, env) {\n      var staticOptions = options.static;\n      var dynamicOptions = options.dynamic;\n      var attribLocations = parseAttribLocations(options, attributes);\n      var framebuffer = parseFramebuffer(options, env);\n      var viewportAndScissor = parseViewportScissor(options, framebuffer, env);\n      var draw = parseDraw(options, env);\n      var state = parseGLState(options, env);\n      var shader = parseProgram(options, env, attribLocations);\n      function copyBox(name) {\n        var defn = viewportAndScissor[name];\n        if (defn) {\n          state[name] = defn;\n        }\n      }\n      copyBox(S_VIEWPORT);\n      copyBox(propName(S_SCISSOR_BOX));\n      var dirty = Object.keys(state).length > 0;\n      var result = {\n        framebuffer: framebuffer,\n        draw: draw,\n        shader: shader,\n        state: state,\n        dirty: dirty,\n        scopeVAO: null,\n        drawVAO: null,\n        useVAO: false,\n        attributes: {}\n      };\n      result.profile = parseProfile(options, env);\n      result.uniforms = parseUniforms(uniforms, env);\n      result.drawVAO = result.scopeVAO = draw.vao;\n      // special case: check if we can statically allocate a vertex array object for this program\n      if (!result.drawVAO && shader.program && !attribLocations && extensions.angle_instanced_arrays && draw.static.elements) {\n        var useVAO = true;\n        var staticBindings = shader.program.attributes.map(function (attr) {\n          var binding = attributes.static[attr];\n          useVAO = useVAO && !!binding;\n          return binding;\n        });\n        if (useVAO && staticBindings.length > 0) {\n          var vao = attributeState.getVAO(attributeState.createVAO({\n            attributes: staticBindings,\n            elements: draw.static.elements\n          }));\n          result.drawVAO = new Declaration(null, null, null, function (env, scope) {\n            return env.link(vao);\n          });\n          result.useVAO = true;\n        }\n      }\n      if (attribLocations) {\n        result.useVAO = true;\n      } else {\n        result.attributes = parseAttributes(attributes, env);\n      }\n      result.context = parseContext(context, env);\n      return result;\n    }\n\n    // ===================================================\n    // ===================================================\n    // COMMON UPDATE FUNCTIONS\n    // ===================================================\n    // ===================================================\n    function emitContext(env, scope, context) {\n      var shared = env.shared;\n      var CONTEXT = shared.context;\n      var contextEnter = env.scope();\n      Object.keys(context).forEach(function (name) {\n        scope.save(CONTEXT, '.' + name);\n        var defn = context[name];\n        var value = defn.append(env, scope);\n        if (Array.isArray(value)) {\n          contextEnter(CONTEXT, '.', name, '=[', value.join(), '];');\n        } else {\n          contextEnter(CONTEXT, '.', name, '=', value, ';');\n        }\n      });\n      scope(contextEnter);\n    }\n\n    // ===================================================\n    // ===================================================\n    // COMMON DRAWING FUNCTIONS\n    // ===================================================\n    // ===================================================\n    function emitPollFramebuffer(env, scope, framebuffer, skipCheck) {\n      var shared = env.shared;\n      var GL = shared.gl;\n      var FRAMEBUFFER_STATE = shared.framebuffer;\n      var EXT_DRAW_BUFFERS;\n      if (extDrawBuffers) {\n        EXT_DRAW_BUFFERS = scope.def(shared.extensions, '.webgl_draw_buffers');\n      }\n      var constants = env.constants;\n      var DRAW_BUFFERS = constants.drawBuffer;\n      var BACK_BUFFER = constants.backBuffer;\n      var NEXT;\n      if (framebuffer) {\n        NEXT = framebuffer.append(env, scope);\n      } else {\n        NEXT = scope.def(FRAMEBUFFER_STATE, '.next');\n      }\n      if (!skipCheck) {\n        scope('if(', NEXT, '!==', FRAMEBUFFER_STATE, '.cur){');\n      }\n      scope('if(', NEXT, '){', GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',', NEXT, '.framebuffer);');\n      if (extDrawBuffers) {\n        scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', DRAW_BUFFERS, '[', NEXT, '.colorAttachments.length]);');\n      }\n      scope('}else{', GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',null);');\n      if (extDrawBuffers) {\n        scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', BACK_BUFFER, ');');\n      }\n      scope('}', FRAMEBUFFER_STATE, '.cur=', NEXT, ';');\n      if (!skipCheck) {\n        scope('}');\n      }\n    }\n    function emitPollState(env, scope, args) {\n      var shared = env.shared;\n      var GL = shared.gl;\n      var CURRENT_VARS = env.current;\n      var NEXT_VARS = env.next;\n      var CURRENT_STATE = shared.current;\n      var NEXT_STATE = shared.next;\n      var block = env.cond(CURRENT_STATE, '.dirty');\n      GL_STATE_NAMES.forEach(function (prop) {\n        var param = propName(prop);\n        if (param in args.state) {\n          return;\n        }\n        var NEXT, CURRENT;\n        if (param in NEXT_VARS) {\n          NEXT = NEXT_VARS[param];\n          CURRENT = CURRENT_VARS[param];\n          var parts = loop(currentState[param].length, function (i) {\n            return block.def(NEXT, '[', i, ']');\n          });\n          block(env.cond(parts.map(function (p, i) {\n            return p + '!==' + CURRENT + '[' + i + ']';\n          }).join('||')).then(GL, '.', GL_VARIABLES[param], '(', parts, ');', parts.map(function (p, i) {\n            return CURRENT + '[' + i + ']=' + p;\n          }).join(';'), ';'));\n        } else {\n          NEXT = block.def(NEXT_STATE, '.', param);\n          var ifte = env.cond(NEXT, '!==', CURRENT_STATE, '.', param);\n          block(ifte);\n          if (param in GL_FLAGS) {\n            ifte(env.cond(NEXT).then(GL, '.enable(', GL_FLAGS[param], ');').else(GL, '.disable(', GL_FLAGS[param], ');'), CURRENT_STATE, '.', param, '=', NEXT, ';');\n          } else {\n            ifte(GL, '.', GL_VARIABLES[param], '(', NEXT, ');', CURRENT_STATE, '.', param, '=', NEXT, ';');\n          }\n        }\n      });\n      if (Object.keys(args.state).length === 0) {\n        block(CURRENT_STATE, '.dirty=false;');\n      }\n      scope(block);\n    }\n    function emitSetOptions(env, scope, options, filter) {\n      var shared = env.shared;\n      var CURRENT_VARS = env.current;\n      var CURRENT_STATE = shared.current;\n      var GL = shared.gl;\n      var VALUE;\n      sortState(Object.keys(options)).forEach(function (param) {\n        var defn = options[param];\n        if (filter && !filter(defn)) {\n          return;\n        }\n        var variable = defn.append(env, scope);\n        if (GL_FLAGS[param]) {\n          var flag = GL_FLAGS[param];\n          if (isStatic(defn)) {\n            VALUE = env.link(variable, {\n              stable: true\n            });\n            scope(env.cond(VALUE).then(GL, '.enable(', flag, ');').else(GL, '.disable(', flag, ');'));\n            scope(CURRENT_STATE, '.', param, '=', VALUE, ';');\n          } else {\n            scope(env.cond(variable).then(GL, '.enable(', flag, ');').else(GL, '.disable(', flag, ');'));\n            scope(CURRENT_STATE, '.', param, '=', variable, ';');\n          }\n        } else if (isArrayLike(variable)) {\n          var CURRENT = CURRENT_VARS[param];\n          scope(GL, '.', GL_VARIABLES[param], '(', variable, ');', variable.map(function (v, i) {\n            return CURRENT + '[' + i + ']=' + v;\n          }).join(';'), ';');\n        } else {\n          if (isStatic(defn)) {\n            VALUE = env.link(variable, {\n              stable: true\n            });\n            scope(GL, '.', GL_VARIABLES[param], '(', VALUE, ');', CURRENT_STATE, '.', param, '=', VALUE, ';');\n          } else {\n            scope(GL, '.', GL_VARIABLES[param], '(', variable, ');', CURRENT_STATE, '.', param, '=', variable, ';');\n          }\n        }\n      });\n    }\n    function injectExtensions(env, scope) {\n      if (extInstancing) {\n        env.instancing = scope.def(env.shared.extensions, '.angle_instanced_arrays');\n      }\n    }\n    function emitProfile(env, scope, args, useScope, incrementCounter) {\n      var shared = env.shared;\n      var STATS = env.stats;\n      var CURRENT_STATE = shared.current;\n      var TIMER = shared.timer;\n      var profileArg = args.profile;\n      function perfCounter() {\n        if (typeof performance === 'undefined') {\n          return 'Date.now()';\n        } else {\n          return 'performance.now()';\n        }\n      }\n      var CPU_START, QUERY_COUNTER;\n      function emitProfileStart(block) {\n        CPU_START = scope.def();\n        block(CPU_START, '=', perfCounter(), ';');\n        if (typeof incrementCounter === 'string') {\n          block(STATS, '.count+=', incrementCounter, ';');\n        } else {\n          block(STATS, '.count++;');\n        }\n        if (timer) {\n          if (useScope) {\n            QUERY_COUNTER = scope.def();\n            block(QUERY_COUNTER, '=', TIMER, '.getNumPendingQueries();');\n          } else {\n            block(TIMER, '.beginQuery(', STATS, ');');\n          }\n        }\n      }\n      function emitProfileEnd(block) {\n        block(STATS, '.cpuTime+=', perfCounter(), '-', CPU_START, ';');\n        if (timer) {\n          if (useScope) {\n            block(TIMER, '.pushScopeStats(', QUERY_COUNTER, ',', TIMER, '.getNumPendingQueries(),', STATS, ');');\n          } else {\n            block(TIMER, '.endQuery();');\n          }\n        }\n      }\n      function scopeProfile(value) {\n        var prev = scope.def(CURRENT_STATE, '.profile');\n        scope(CURRENT_STATE, '.profile=', value, ';');\n        scope.exit(CURRENT_STATE, '.profile=', prev, ';');\n      }\n      var USE_PROFILE;\n      if (profileArg) {\n        if (isStatic(profileArg)) {\n          if (profileArg.enable) {\n            emitProfileStart(scope);\n            emitProfileEnd(scope.exit);\n            scopeProfile('true');\n          } else {\n            scopeProfile('false');\n          }\n          return;\n        }\n        USE_PROFILE = profileArg.append(env, scope);\n        scopeProfile(USE_PROFILE);\n      } else {\n        USE_PROFILE = scope.def(CURRENT_STATE, '.profile');\n      }\n      var start = env.block();\n      emitProfileStart(start);\n      scope('if(', USE_PROFILE, '){', start, '}');\n      var end = env.block();\n      emitProfileEnd(end);\n      scope.exit('if(', USE_PROFILE, '){', end, '}');\n    }\n    function emitAttributes(env, scope, args, attributes, filter) {\n      var shared = env.shared;\n      function typeLength(x) {\n        switch (x) {\n          case GL_FLOAT_VEC2:\n          case GL_INT_VEC2:\n          case GL_BOOL_VEC2:\n            return 2;\n          case GL_FLOAT_VEC3:\n          case GL_INT_VEC3:\n          case GL_BOOL_VEC3:\n            return 3;\n          case GL_FLOAT_VEC4:\n          case GL_INT_VEC4:\n          case GL_BOOL_VEC4:\n            return 4;\n          default:\n            return 1;\n        }\n      }\n      function emitBindAttribute(ATTRIBUTE, size, record) {\n        var GL = shared.gl;\n        var LOCATION = scope.def(ATTRIBUTE, '.location');\n        var BINDING = scope.def(shared.attributes, '[', LOCATION, ']');\n        var STATE = record.state;\n        var BUFFER = record.buffer;\n        var CONST_COMPONENTS = [record.x, record.y, record.z, record.w];\n        var COMMON_KEYS = ['buffer', 'normalized', 'offset', 'stride'];\n        function emitBuffer() {\n          scope('if(!', BINDING, '.buffer){', GL, '.enableVertexAttribArray(', LOCATION, ');}');\n          var TYPE = record.type;\n          var SIZE;\n          if (!record.size) {\n            SIZE = size;\n          } else {\n            SIZE = scope.def(record.size, '||', size);\n          }\n          scope('if(', BINDING, '.type!==', TYPE, '||', BINDING, '.size!==', SIZE, '||', COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '!==' + record[key];\n          }).join('||'), '){', GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', BUFFER, '.buffer);', GL, '.vertexAttribPointer(', [LOCATION, SIZE, TYPE, record.normalized, record.stride, record.offset], ');', BINDING, '.type=', TYPE, ';', BINDING, '.size=', SIZE, ';', COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '=' + record[key] + ';';\n          }).join(''), '}');\n          if (extInstancing) {\n            var DIVISOR = record.divisor;\n            scope('if(', BINDING, '.divisor!==', DIVISOR, '){', env.instancing, '.vertexAttribDivisorANGLE(', [LOCATION, DIVISOR], ');', BINDING, '.divisor=', DIVISOR, ';}');\n          }\n        }\n        function emitConstant() {\n          scope('if(', BINDING, '.buffer){', GL, '.disableVertexAttribArray(', LOCATION, ');', BINDING, '.buffer=null;', '}if(', CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '!==' + CONST_COMPONENTS[i];\n          }).join('||'), '){', GL, '.vertexAttrib4f(', LOCATION, ',', CONST_COMPONENTS, ');', CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '=' + CONST_COMPONENTS[i] + ';';\n          }).join(''), '}');\n        }\n        if (STATE === ATTRIB_STATE_POINTER) {\n          emitBuffer();\n        } else if (STATE === ATTRIB_STATE_CONSTANT) {\n          emitConstant();\n        } else {\n          scope('if(', STATE, '===', ATTRIB_STATE_POINTER, '){');\n          emitBuffer();\n          scope('}else{');\n          emitConstant();\n          scope('}');\n        }\n      }\n      attributes.forEach(function (attribute) {\n        var name = attribute.name;\n        var arg = args.attributes[name];\n        var record;\n        if (arg) {\n          if (!filter(arg)) {\n            return;\n          }\n          record = arg.append(env, scope);\n        } else {\n          if (!filter(SCOPE_DECL)) {\n            return;\n          }\n          var scopeAttrib = env.scopeAttrib(name);\n          record = {};\n          Object.keys(new AttributeRecord()).forEach(function (key) {\n            record[key] = scope.def(scopeAttrib, '.', key);\n          });\n        }\n        emitBindAttribute(env.link(attribute), typeLength(attribute.info.type), record);\n      });\n    }\n    function emitUniforms(env, scope, args, uniforms, filter, isBatchInnerLoop) {\n      var shared = env.shared;\n      var GL = shared.gl;\n      var infix;\n      for (var i = 0; i < uniforms.length; ++i) {\n        var uniform = uniforms[i];\n        var name = uniform.name;\n        var type = uniform.info.type;\n        var arg = args.uniforms[name];\n        var UNIFORM = env.link(uniform);\n        var LOCATION = UNIFORM + '.location';\n        var VALUE;\n        if (arg) {\n          if (!filter(arg)) {\n            continue;\n          }\n          if (isStatic(arg)) {\n            var value = arg.value;\n            if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {\n              var TEX_VALUE = env.link(value._texture || value.color[0]._texture);\n              scope(GL, '.uniform1i(', LOCATION, ',', TEX_VALUE + '.bind());');\n              scope.exit(TEX_VALUE, '.unbind();');\n            } else if (type === GL_FLOAT_MAT2 || type === GL_FLOAT_MAT3 || type === GL_FLOAT_MAT4) {\n              var MAT_VALUE = env.global.def('new Float32Array([' + Array.prototype.slice.call(value) + '])');\n              var dim = 2;\n              if (type === GL_FLOAT_MAT3) {\n                dim = 3;\n              } else if (type === GL_FLOAT_MAT4) {\n                dim = 4;\n              }\n              scope(GL, '.uniformMatrix', dim, 'fv(', LOCATION, ',false,', MAT_VALUE, ');');\n            } else {\n              switch (type) {\n                case GL_FLOAT$7:\n                  infix = '1f';\n                  break;\n                case GL_FLOAT_VEC2:\n                  infix = '2f';\n                  break;\n                case GL_FLOAT_VEC3:\n                  infix = '3f';\n                  break;\n                case GL_FLOAT_VEC4:\n                  infix = '4f';\n                  break;\n                case GL_BOOL:\n                  infix = '1i';\n                  break;\n                case GL_INT$2:\n                  infix = '1i';\n                  break;\n                case GL_BOOL_VEC2:\n                  infix = '2i';\n                  break;\n                case GL_INT_VEC2:\n                  infix = '2i';\n                  break;\n                case GL_BOOL_VEC3:\n                  infix = '3i';\n                  break;\n                case GL_INT_VEC3:\n                  infix = '3i';\n                  break;\n                case GL_BOOL_VEC4:\n                  infix = '4i';\n                  break;\n                case GL_INT_VEC4:\n                  infix = '4i';\n                  break;\n              }\n              scope(GL, '.uniform', infix, '(', LOCATION, ',', isArrayLike(value) ? Array.prototype.slice.call(value) : value, ');');\n            }\n            continue;\n          } else {\n            VALUE = arg.append(env, scope);\n          }\n        } else {\n          if (!filter(SCOPE_DECL)) {\n            continue;\n          }\n          VALUE = scope.def(shared.uniforms, '[', stringStore.id(name), ']');\n        }\n        if (type === GL_SAMPLER_2D) {\n          scope('if(', VALUE, '&&', VALUE, '._reglType===\"framebuffer\"){', VALUE, '=', VALUE, '.color[0];', '}');\n        } else if (type === GL_SAMPLER_CUBE) {\n          scope('if(', VALUE, '&&', VALUE, '._reglType===\"framebufferCube\"){', VALUE, '=', VALUE, '.color[0];', '}');\n        }\n\n        // perform type validation\n\n        var unroll = 1;\n        switch (type) {\n          case GL_SAMPLER_2D:\n          case GL_SAMPLER_CUBE:\n            var TEX = scope.def(VALUE, '._texture');\n            scope(GL, '.uniform1i(', LOCATION, ',', TEX, '.bind());');\n            scope.exit(TEX, '.unbind();');\n            continue;\n          case GL_INT$2:\n          case GL_BOOL:\n            infix = '1i';\n            break;\n          case GL_INT_VEC2:\n          case GL_BOOL_VEC2:\n            infix = '2i';\n            unroll = 2;\n            break;\n          case GL_INT_VEC3:\n          case GL_BOOL_VEC3:\n            infix = '3i';\n            unroll = 3;\n            break;\n          case GL_INT_VEC4:\n          case GL_BOOL_VEC4:\n            infix = '4i';\n            unroll = 4;\n            break;\n          case GL_FLOAT$7:\n            infix = '1f';\n            break;\n          case GL_FLOAT_VEC2:\n            infix = '2f';\n            unroll = 2;\n            break;\n          case GL_FLOAT_VEC3:\n            infix = '3f';\n            unroll = 3;\n            break;\n          case GL_FLOAT_VEC4:\n            infix = '4f';\n            unroll = 4;\n            break;\n          case GL_FLOAT_MAT2:\n            infix = 'Matrix2fv';\n            break;\n          case GL_FLOAT_MAT3:\n            infix = 'Matrix3fv';\n            break;\n          case GL_FLOAT_MAT4:\n            infix = 'Matrix4fv';\n            break;\n        }\n        if (infix.charAt(0) === 'M') {\n          scope(GL, '.uniform', infix, '(', LOCATION, ',');\n          var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2);\n          var STORAGE = env.global.def('new Float32Array(', matSize, ')');\n          if (Array.isArray(VALUE)) {\n            scope('false,(', loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE[i];\n            }), ',', STORAGE, ')');\n          } else {\n            scope('false,(Array.isArray(', VALUE, ')||', VALUE, ' instanceof Float32Array)?', VALUE, ':(', loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE + '[' + i + ']';\n            }), ',', STORAGE, ')');\n          }\n          scope(');');\n        } else if (unroll > 1) {\n          var prev = [];\n          var cur = [];\n          for (var j = 0; j < unroll; ++j) {\n            if (Array.isArray(VALUE)) {\n              cur.push(VALUE[j]);\n            } else {\n              cur.push(scope.def(VALUE + '[' + j + ']'));\n            }\n            if (isBatchInnerLoop) {\n              prev.push(scope.def());\n            }\n          }\n          if (isBatchInnerLoop) {\n            scope('if(!', env.batchId, '||', prev.map(function (p, i) {\n              return p + '!==' + cur[i];\n            }).join('||'), '){', prev.map(function (p, i) {\n              return p + '=' + cur[i] + ';';\n            }).join(''));\n          }\n          scope(GL, '.uniform', infix, '(', LOCATION, ',', cur.join(','), ');');\n          if (isBatchInnerLoop) {\n            scope('}');\n          }\n        } else {\n          if (isBatchInnerLoop) {\n            var prevS = scope.def();\n            scope('if(!', env.batchId, '||', prevS, '!==', VALUE, '){', prevS, '=', VALUE, ';');\n          }\n          scope(GL, '.uniform', infix, '(', LOCATION, ',', VALUE, ');');\n          if (isBatchInnerLoop) {\n            scope('}');\n          }\n        }\n      }\n    }\n    function emitDraw(env, outer, inner, args) {\n      var shared = env.shared;\n      var GL = shared.gl;\n      var DRAW_STATE = shared.draw;\n      var drawOptions = args.draw;\n      function emitElements() {\n        var defn = drawOptions.elements;\n        var ELEMENTS;\n        var scope = outer;\n        if (defn) {\n          if (defn.contextDep && args.contextDynamic || defn.propDep) {\n            scope = inner;\n          }\n          ELEMENTS = defn.append(env, scope);\n          if (drawOptions.elementsActive) {\n            scope('if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);');\n          }\n        } else {\n          ELEMENTS = scope.def();\n          scope(ELEMENTS, '=', DRAW_STATE, '.', S_ELEMENTS, ';', 'if(', ELEMENTS, '){', GL, '.bindBuffer(', GL_ELEMENT_ARRAY_BUFFER$2, ',', ELEMENTS, '.buffer.buffer);}', 'else if(', shared.vao, '.currentVAO){', ELEMENTS, '=', env.shared.elements + '.getElements(' + shared.vao, '.currentVAO.elements);', !extVertexArrays ? 'if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);' : '', '}');\n        }\n        return ELEMENTS;\n      }\n      function emitCount() {\n        var defn = drawOptions.count;\n        var COUNT;\n        var scope = outer;\n        if (defn) {\n          if (defn.contextDep && args.contextDynamic || defn.propDep) {\n            scope = inner;\n          }\n          COUNT = defn.append(env, scope);\n        } else {\n          COUNT = scope.def(DRAW_STATE, '.', S_COUNT);\n        }\n        return COUNT;\n      }\n      var ELEMENTS = emitElements();\n      function emitValue(name) {\n        var defn = drawOptions[name];\n        if (defn) {\n          if (defn.contextDep && args.contextDynamic || defn.propDep) {\n            return defn.append(env, inner);\n          } else {\n            return defn.append(env, outer);\n          }\n        } else {\n          return outer.def(DRAW_STATE, '.', name);\n        }\n      }\n      var PRIMITIVE = emitValue(S_PRIMITIVE);\n      var OFFSET = emitValue(S_OFFSET);\n      var COUNT = emitCount();\n      if (typeof COUNT === 'number') {\n        if (COUNT === 0) {\n          return;\n        }\n      } else {\n        inner('if(', COUNT, '){');\n        inner.exit('}');\n      }\n      var INSTANCES, EXT_INSTANCING;\n      if (extInstancing) {\n        INSTANCES = emitValue(S_INSTANCES);\n        EXT_INSTANCING = env.instancing;\n      }\n      var ELEMENT_TYPE = ELEMENTS + '.type';\n      var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements) && !drawOptions.vaoActive;\n      function emitInstancing() {\n        function drawElements() {\n          inner(EXT_INSTANCING, '.drawElementsInstancedANGLE(', [PRIMITIVE, COUNT, ELEMENT_TYPE, OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)', INSTANCES], ');');\n        }\n        function drawArrays() {\n          inner(EXT_INSTANCING, '.drawArraysInstancedANGLE(', [PRIMITIVE, OFFSET, COUNT, INSTANCES], ');');\n        }\n        if (ELEMENTS && ELEMENTS !== 'null') {\n          if (!elementsStatic) {\n            inner('if(', ELEMENTS, '){');\n            drawElements();\n            inner('}else{');\n            drawArrays();\n            inner('}');\n          } else {\n            drawElements();\n          }\n        } else {\n          drawArrays();\n        }\n      }\n      function emitRegular() {\n        function drawElements() {\n          inner(GL + '.drawElements(' + [PRIMITIVE, COUNT, ELEMENT_TYPE, OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)'] + ');');\n        }\n        function drawArrays() {\n          inner(GL + '.drawArrays(' + [PRIMITIVE, OFFSET, COUNT] + ');');\n        }\n        if (ELEMENTS && ELEMENTS !== 'null') {\n          if (!elementsStatic) {\n            inner('if(', ELEMENTS, '){');\n            drawElements();\n            inner('}else{');\n            drawArrays();\n            inner('}');\n          } else {\n            drawElements();\n          }\n        } else {\n          drawArrays();\n        }\n      }\n      if (extInstancing && (typeof INSTANCES !== 'number' || INSTANCES >= 0)) {\n        if (typeof INSTANCES === 'string') {\n          inner('if(', INSTANCES, '>0){');\n          emitInstancing();\n          inner('}else if(', INSTANCES, '<0){');\n          emitRegular();\n          inner('}');\n        } else {\n          emitInstancing();\n        }\n      } else {\n        emitRegular();\n      }\n    }\n    function createBody(emitBody, parentEnv, args, program, count) {\n      var env = createREGLEnvironment();\n      var scope = env.proc('body', count);\n      if (extInstancing) {\n        env.instancing = scope.def(env.shared.extensions, '.angle_instanced_arrays');\n      }\n      emitBody(env, scope, args, program);\n      return env.compile().body;\n    }\n\n    // ===================================================\n    // ===================================================\n    // DRAW PROC\n    // ===================================================\n    // ===================================================\n    function emitDrawBody(env, draw, args, program) {\n      injectExtensions(env, draw);\n      if (args.useVAO) {\n        if (args.drawVAO) {\n          draw(env.shared.vao, '.setVAO(', args.drawVAO.append(env, draw), ');');\n        } else {\n          draw(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);');\n        }\n      } else {\n        draw(env.shared.vao, '.setVAO(null);');\n        emitAttributes(env, draw, args, program.attributes, function () {\n          return true;\n        });\n      }\n      emitUniforms(env, draw, args, program.uniforms, function () {\n        return true;\n      }, false);\n      emitDraw(env, draw, draw, args);\n    }\n    function emitDrawProc(env, args) {\n      var draw = env.proc('draw', 1);\n      injectExtensions(env, draw);\n      emitContext(env, draw, args.context);\n      emitPollFramebuffer(env, draw, args.framebuffer);\n      emitPollState(env, draw, args);\n      emitSetOptions(env, draw, args.state);\n      emitProfile(env, draw, args, false, true);\n      var program = args.shader.progVar.append(env, draw);\n      draw(env.shared.gl, '.useProgram(', program, '.program);');\n      if (args.shader.program) {\n        emitDrawBody(env, draw, args, args.shader.program);\n      } else {\n        draw(env.shared.vao, '.setVAO(null);');\n        var drawCache = env.global.def('{}');\n        var PROG_ID = draw.def(program, '.id');\n        var CACHED_PROC = draw.def(drawCache, '[', PROG_ID, ']');\n        draw(env.cond(CACHED_PROC).then(CACHED_PROC, '.call(this,a0);').else(CACHED_PROC, '=', drawCache, '[', PROG_ID, ']=', env.link(function (program) {\n          return createBody(emitDrawBody, env, args, program, 1);\n        }), '(', program, ');', CACHED_PROC, '.call(this,a0);'));\n      }\n      if (Object.keys(args.state).length > 0) {\n        draw(env.shared.current, '.dirty=true;');\n      }\n      if (env.shared.vao) {\n        draw(env.shared.vao, '.setVAO(null);');\n      }\n    }\n\n    // ===================================================\n    // ===================================================\n    // BATCH PROC\n    // ===================================================\n    // ===================================================\n\n    function emitBatchDynamicShaderBody(env, scope, args, program) {\n      env.batchId = 'a1';\n      injectExtensions(env, scope);\n      function all() {\n        return true;\n      }\n      emitAttributes(env, scope, args, program.attributes, all);\n      emitUniforms(env, scope, args, program.uniforms, all, false);\n      emitDraw(env, scope, scope, args);\n    }\n    function emitBatchBody(env, scope, args, program) {\n      injectExtensions(env, scope);\n      var contextDynamic = args.contextDep;\n      var BATCH_ID = scope.def();\n      var PROP_LIST = 'a0';\n      var NUM_PROPS = 'a1';\n      var PROPS = scope.def();\n      env.shared.props = PROPS;\n      env.batchId = BATCH_ID;\n      var outer = env.scope();\n      var inner = env.scope();\n      scope(outer.entry, 'for(', BATCH_ID, '=0;', BATCH_ID, '<', NUM_PROPS, ';++', BATCH_ID, '){', PROPS, '=', PROP_LIST, '[', BATCH_ID, '];', inner, '}', outer.exit);\n      function isInnerDefn(defn) {\n        return defn.contextDep && contextDynamic || defn.propDep;\n      }\n      function isOuterDefn(defn) {\n        return !isInnerDefn(defn);\n      }\n      if (args.needsContext) {\n        emitContext(env, inner, args.context);\n      }\n      if (args.needsFramebuffer) {\n        emitPollFramebuffer(env, inner, args.framebuffer);\n      }\n      emitSetOptions(env, inner, args.state, isInnerDefn);\n      if (args.profile && isInnerDefn(args.profile)) {\n        emitProfile(env, inner, args, false, true);\n      }\n      if (!program) {\n        var progCache = env.global.def('{}');\n        var PROGRAM = args.shader.progVar.append(env, inner);\n        var PROG_ID = inner.def(PROGRAM, '.id');\n        var CACHED_PROC = inner.def(progCache, '[', PROG_ID, ']');\n        inner(env.shared.gl, '.useProgram(', PROGRAM, '.program);', 'if(!', CACHED_PROC, '){', CACHED_PROC, '=', progCache, '[', PROG_ID, ']=', env.link(function (program) {\n          return createBody(emitBatchDynamicShaderBody, env, args, program, 2);\n        }), '(', PROGRAM, ');}', CACHED_PROC, '.call(this,a0[', BATCH_ID, '],', BATCH_ID, ');');\n      } else {\n        if (args.useVAO) {\n          if (args.drawVAO) {\n            if (isInnerDefn(args.drawVAO)) {\n              // vao is a prop\n              inner(env.shared.vao, '.setVAO(', args.drawVAO.append(env, inner), ');');\n            } else {\n              // vao is invariant\n              outer(env.shared.vao, '.setVAO(', args.drawVAO.append(env, outer), ');');\n            }\n          } else {\n            // scoped vao binding\n            outer(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);');\n          }\n        } else {\n          outer(env.shared.vao, '.setVAO(null);');\n          emitAttributes(env, outer, args, program.attributes, isOuterDefn);\n          emitAttributes(env, inner, args, program.attributes, isInnerDefn);\n        }\n        emitUniforms(env, outer, args, program.uniforms, isOuterDefn, false);\n        emitUniforms(env, inner, args, program.uniforms, isInnerDefn, true);\n        emitDraw(env, outer, inner, args);\n      }\n    }\n    function emitBatchProc(env, args) {\n      var batch = env.proc('batch', 2);\n      env.batchId = '0';\n      injectExtensions(env, batch);\n\n      // Check if any context variables depend on props\n      var contextDynamic = false;\n      var needsContext = true;\n      Object.keys(args.context).forEach(function (name) {\n        contextDynamic = contextDynamic || args.context[name].propDep;\n      });\n      if (!contextDynamic) {\n        emitContext(env, batch, args.context);\n        needsContext = false;\n      }\n\n      // framebuffer state affects framebufferWidth/height context vars\n      var framebuffer = args.framebuffer;\n      var needsFramebuffer = false;\n      if (framebuffer) {\n        if (framebuffer.propDep) {\n          contextDynamic = needsFramebuffer = true;\n        } else if (framebuffer.contextDep && contextDynamic) {\n          needsFramebuffer = true;\n        }\n        if (!needsFramebuffer) {\n          emitPollFramebuffer(env, batch, framebuffer);\n        }\n      } else {\n        emitPollFramebuffer(env, batch, null);\n      }\n\n      // viewport is weird because it can affect context vars\n      if (args.state.viewport && args.state.viewport.propDep) {\n        contextDynamic = true;\n      }\n      function isInnerDefn(defn) {\n        return defn.contextDep && contextDynamic || defn.propDep;\n      }\n\n      // set webgl options\n      emitPollState(env, batch, args);\n      emitSetOptions(env, batch, args.state, function (defn) {\n        return !isInnerDefn(defn);\n      });\n      if (!args.profile || !isInnerDefn(args.profile)) {\n        emitProfile(env, batch, args, false, 'a1');\n      }\n\n      // Save these values to args so that the batch body routine can use them\n      args.contextDep = contextDynamic;\n      args.needsContext = needsContext;\n      args.needsFramebuffer = needsFramebuffer;\n\n      // determine if shader is dynamic\n      var progDefn = args.shader.progVar;\n      if (progDefn.contextDep && contextDynamic || progDefn.propDep) {\n        emitBatchBody(env, batch, args, null);\n      } else {\n        var PROGRAM = progDefn.append(env, batch);\n        batch(env.shared.gl, '.useProgram(', PROGRAM, '.program);');\n        if (args.shader.program) {\n          emitBatchBody(env, batch, args, args.shader.program);\n        } else {\n          batch(env.shared.vao, '.setVAO(null);');\n          var batchCache = env.global.def('{}');\n          var PROG_ID = batch.def(PROGRAM, '.id');\n          var CACHED_PROC = batch.def(batchCache, '[', PROG_ID, ']');\n          batch(env.cond(CACHED_PROC).then(CACHED_PROC, '.call(this,a0,a1);').else(CACHED_PROC, '=', batchCache, '[', PROG_ID, ']=', env.link(function (program) {\n            return createBody(emitBatchBody, env, args, program, 2);\n          }), '(', PROGRAM, ');', CACHED_PROC, '.call(this,a0,a1);'));\n        }\n      }\n      if (Object.keys(args.state).length > 0) {\n        batch(env.shared.current, '.dirty=true;');\n      }\n      if (env.shared.vao) {\n        batch(env.shared.vao, '.setVAO(null);');\n      }\n    }\n\n    // ===================================================\n    // ===================================================\n    // SCOPE COMMAND\n    // ===================================================\n    // ===================================================\n    function emitScopeProc(env, args) {\n      var scope = env.proc('scope', 3);\n      env.batchId = 'a2';\n      var shared = env.shared;\n      var CURRENT_STATE = shared.current;\n      emitContext(env, scope, args.context);\n      if (args.framebuffer) {\n        args.framebuffer.append(env, scope);\n      }\n      sortState(Object.keys(args.state)).forEach(function (name) {\n        var defn = args.state[name];\n        var value = defn.append(env, scope);\n        if (isArrayLike(value)) {\n          value.forEach(function (v, i) {\n            if (hasVariableReference(v)) {\n              scope.set(env.next[name], '[' + i + ']', v);\n            } else {\n              scope.set(env.next[name], '[' + i + ']', env.link(v, {\n                stable: true\n              }));\n            }\n          });\n        } else {\n          if (isStatic(defn)) {\n            scope.set(shared.next, '.' + name, env.link(value, {\n              stable: true\n            }));\n          } else {\n            scope.set(shared.next, '.' + name, value);\n          }\n        }\n      });\n      emitProfile(env, scope, args, true, true);\n      [S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(function (opt) {\n        var variable = args.draw[opt];\n        if (!variable) {\n          return;\n        }\n        var VARIABLE = variable.append(env, scope);\n        if (hasVariableReference(VARIABLE)) {\n          scope.set(shared.draw, '.' + opt, VARIABLE);\n        } else {\n          scope.set(shared.draw, '.' + opt, env.link(VARIABLE), {\n            stable: true\n          });\n        }\n      });\n      Object.keys(args.uniforms).forEach(function (opt) {\n        var value = args.uniforms[opt].append(env, scope);\n        if (Array.isArray(value)) {\n          value = '[' + value.map(function (v) {\n            if (hasVariableReference(v)) {\n              return v;\n            } else {\n              return env.link(v, {\n                stable: true\n              });\n            }\n          }) + ']';\n        }\n        scope.set(shared.uniforms, '[' + env.link(stringStore.id(opt), {\n          stable: true\n        }) + ']', value);\n      });\n      Object.keys(args.attributes).forEach(function (name) {\n        var record = args.attributes[name].append(env, scope);\n        var scopeAttrib = env.scopeAttrib(name);\n        Object.keys(new AttributeRecord()).forEach(function (prop) {\n          scope.set(scopeAttrib, '.' + prop, record[prop]);\n        });\n      });\n      if (args.scopeVAO) {\n        var VARIABLE = args.scopeVAO.append(env, scope);\n        if (hasVariableReference(VARIABLE)) {\n          scope.set(shared.vao, '.targetVAO', VARIABLE);\n        } else {\n          scope.set(shared.vao, '.targetVAO', env.link(VARIABLE, {\n            stable: true\n          }));\n        }\n      }\n      function saveShader(name) {\n        var shader = args.shader[name];\n        if (shader) {\n          var VARIABLE = shader.append(env, scope);\n          if (hasVariableReference(VARIABLE)) {\n            scope.set(shared.shader, '.' + name, VARIABLE);\n          } else {\n            scope.set(shared.shader, '.' + name, env.link(VARIABLE, {\n              stable: true\n            }));\n          }\n        }\n      }\n      saveShader(S_VERT);\n      saveShader(S_FRAG);\n      if (Object.keys(args.state).length > 0) {\n        scope(CURRENT_STATE, '.dirty=true;');\n        scope.exit(CURRENT_STATE, '.dirty=true;');\n      }\n      scope('a1(', env.shared.context, ',a0,', env.batchId, ');');\n    }\n    function isDynamicObject(object) {\n      if (typeof object !== 'object' || isArrayLike(object)) {\n        return;\n      }\n      var props = Object.keys(object);\n      for (var i = 0; i < props.length; ++i) {\n        if (dynamic.isDynamic(object[props[i]])) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function splatObject(env, options, name) {\n      var object = options.static[name];\n      if (!object || !isDynamicObject(object)) {\n        return;\n      }\n      var globals = env.global;\n      var keys = Object.keys(object);\n      var thisDep = false;\n      var contextDep = false;\n      var propDep = false;\n      var objectRef = env.global.def('{}');\n      keys.forEach(function (key) {\n        var value = object[key];\n        if (dynamic.isDynamic(value)) {\n          if (typeof value === 'function') {\n            value = object[key] = dynamic.unbox(value);\n          }\n          var deps = createDynamicDecl(value, null);\n          thisDep = thisDep || deps.thisDep;\n          propDep = propDep || deps.propDep;\n          contextDep = contextDep || deps.contextDep;\n        } else {\n          globals(objectRef, '.', key, '=');\n          switch (typeof value) {\n            case 'number':\n              globals(value);\n              break;\n            case 'string':\n              globals('\"', value, '\"');\n              break;\n            case 'object':\n              if (Array.isArray(value)) {\n                globals('[', value.join(), ']');\n              }\n              break;\n            default:\n              globals(env.link(value));\n              break;\n          }\n          globals(';');\n        }\n      });\n      function appendBlock(env, block) {\n        keys.forEach(function (key) {\n          var value = object[key];\n          if (!dynamic.isDynamic(value)) {\n            return;\n          }\n          var ref = env.invoke(block, value);\n          block(objectRef, '.', key, '=', ref, ';');\n        });\n      }\n      options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {\n        thisDep: thisDep,\n        contextDep: contextDep,\n        propDep: propDep,\n        ref: objectRef,\n        append: appendBlock\n      });\n      delete options.static[name];\n    }\n\n    // ===========================================================================\n    // ===========================================================================\n    // MAIN DRAW COMMAND\n    // ===========================================================================\n    // ===========================================================================\n    function compileCommand(options, attributes, uniforms, context, stats) {\n      var env = createREGLEnvironment();\n\n      // link stats, so that we can easily access it in the program.\n      env.stats = env.link(stats);\n\n      // splat options and attributes to allow for dynamic nested properties\n      Object.keys(attributes.static).forEach(function (key) {\n        splatObject(env, attributes, key);\n      });\n      NESTED_OPTIONS.forEach(function (name) {\n        splatObject(env, options, name);\n      });\n      var args = parseArguments(options, attributes, uniforms, context, env);\n      if (args.shader.program) {\n        args.shader.program.attributes.sort(function (a, b) {\n          return a.name < b.name ? -1 : 1;\n        });\n        args.shader.program.uniforms.sort(function (a, b) {\n          return a.name < b.name ? -1 : 1;\n        });\n      }\n      emitDrawProc(env, args);\n      emitScopeProc(env, args);\n      emitBatchProc(env, args);\n      return extend(env.compile(), {\n        destroy: function () {\n          args.shader.program.destroy();\n        }\n      });\n    }\n\n    // ===========================================================================\n    // ===========================================================================\n    // POLL / REFRESH\n    // ===========================================================================\n    // ===========================================================================\n    return {\n      next: nextState,\n      current: currentState,\n      procs: function () {\n        var env = createREGLEnvironment();\n        var poll = env.proc('poll');\n        var refresh = env.proc('refresh');\n        var common = env.block();\n        poll(common);\n        refresh(common);\n        var shared = env.shared;\n        var GL = shared.gl;\n        var NEXT_STATE = shared.next;\n        var CURRENT_STATE = shared.current;\n        common(CURRENT_STATE, '.dirty=false;');\n        emitPollFramebuffer(env, poll);\n        emitPollFramebuffer(env, refresh, null, true);\n\n        // Refresh updates all attribute state changes\n        var INSTANCING;\n        if (extInstancing) {\n          INSTANCING = env.link(extInstancing);\n        }\n\n        // update vertex array bindings\n        if (extensions.oes_vertex_array_object) {\n          refresh(env.link(extensions.oes_vertex_array_object), '.bindVertexArrayOES(null);');\n        }\n        var BINDING = refresh.def(shared.attributes);\n        var TEMP_BINDING = refresh.def(0);\n        var ifte = env.cond(TEMP_BINDING, '.buffer');\n        ifte.then(GL, '.enableVertexAttribArray(i);', GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', TEMP_BINDING, '.buffer.buffer);', GL, '.vertexAttribPointer(i,', TEMP_BINDING, '.size,', TEMP_BINDING, '.type,', TEMP_BINDING, '.normalized,', TEMP_BINDING, '.stride,', TEMP_BINDING, '.offset);').else(GL, '.disableVertexAttribArray(i);', GL, '.vertexAttrib4f(i,', TEMP_BINDING, '.x,', TEMP_BINDING, '.y,', TEMP_BINDING, '.z,', TEMP_BINDING, '.w);', TEMP_BINDING, '.buffer=null;');\n        var MAX_ATTRIBUTES = env.link(limits.maxAttributes, {\n          stable: true\n        });\n        refresh('for(var i=0;i<', MAX_ATTRIBUTES, ';++i){', TEMP_BINDING, '=', BINDING, '[i];', ifte, '}');\n        if (extInstancing) {\n          refresh('for(var i=0;i<', MAX_ATTRIBUTES, ';++i){', INSTANCING, '.vertexAttribDivisorANGLE(i,', BINDING, '[i].divisor);', '}');\n        }\n        refresh(env.shared.vao, '.currentVAO=null;', env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);');\n        Object.keys(GL_FLAGS).forEach(function (flag) {\n          var cap = GL_FLAGS[flag];\n          var NEXT = common.def(NEXT_STATE, '.', flag);\n          var block = env.block();\n          block('if(', NEXT, '){', GL, '.enable(', cap, ')}else{', GL, '.disable(', cap, ')}', CURRENT_STATE, '.', flag, '=', NEXT, ';');\n          refresh(block);\n          poll('if(', NEXT, '!==', CURRENT_STATE, '.', flag, '){', block, '}');\n        });\n        Object.keys(GL_VARIABLES).forEach(function (name) {\n          var func = GL_VARIABLES[name];\n          var init = currentState[name];\n          var NEXT, CURRENT;\n          var block = env.block();\n          block(GL, '.', func, '(');\n          if (isArrayLike(init)) {\n            var n = init.length;\n            NEXT = env.global.def(NEXT_STATE, '.', name);\n            CURRENT = env.global.def(CURRENT_STATE, '.', name);\n            block(loop(n, function (i) {\n              return NEXT + '[' + i + ']';\n            }), ');', loop(n, function (i) {\n              return CURRENT + '[' + i + ']=' + NEXT + '[' + i + '];';\n            }).join(''));\n            poll('if(', loop(n, function (i) {\n              return NEXT + '[' + i + ']!==' + CURRENT + '[' + i + ']';\n            }).join('||'), '){', block, '}');\n          } else {\n            NEXT = common.def(NEXT_STATE, '.', name);\n            CURRENT = common.def(CURRENT_STATE, '.', name);\n            block(NEXT, ');', CURRENT_STATE, '.', name, '=', NEXT, ';');\n            poll('if(', NEXT, '!==', CURRENT, '){', block, '}');\n          }\n          refresh(block);\n        });\n        return env.compile();\n      }(),\n      compile: compileCommand\n    };\n  }\n  function stats() {\n    return {\n      vaoCount: 0,\n      bufferCount: 0,\n      elementsCount: 0,\n      framebufferCount: 0,\n      shaderCount: 0,\n      textureCount: 0,\n      cubeCount: 0,\n      renderbufferCount: 0,\n      maxTextureUnits: 0\n    };\n  }\n  var GL_QUERY_RESULT_EXT = 0x8866;\n  var GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;\n  var GL_TIME_ELAPSED_EXT = 0x88BF;\n  var createTimer = function (gl, extensions) {\n    if (!extensions.ext_disjoint_timer_query) {\n      return null;\n    }\n\n    // QUERY POOL BEGIN\n    var queryPool = [];\n    function allocQuery() {\n      return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT();\n    }\n    function freeQuery(query) {\n      queryPool.push(query);\n    }\n    // QUERY POOL END\n\n    var pendingQueries = [];\n    function beginQuery(stats) {\n      var query = allocQuery();\n      extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query);\n      pendingQueries.push(query);\n      pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats);\n    }\n    function endQuery() {\n      extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT);\n    }\n\n    //\n    // Pending stats pool.\n    //\n    function PendingStats() {\n      this.startQueryIndex = -1;\n      this.endQueryIndex = -1;\n      this.sum = 0;\n      this.stats = null;\n    }\n    var pendingStatsPool = [];\n    function allocPendingStats() {\n      return pendingStatsPool.pop() || new PendingStats();\n    }\n    function freePendingStats(pendingStats) {\n      pendingStatsPool.push(pendingStats);\n    }\n    // Pending stats pool end\n\n    var pendingStats = [];\n    function pushScopeStats(start, end, stats) {\n      var ps = allocPendingStats();\n      ps.startQueryIndex = start;\n      ps.endQueryIndex = end;\n      ps.sum = 0;\n      ps.stats = stats;\n      pendingStats.push(ps);\n    }\n\n    // we should call this at the beginning of the frame,\n    // in order to update gpuTime\n    var timeSum = [];\n    var queryPtr = [];\n    function update() {\n      var ptr, i;\n      var n = pendingQueries.length;\n      if (n === 0) {\n        return;\n      }\n\n      // Reserve space\n      queryPtr.length = Math.max(queryPtr.length, n + 1);\n      timeSum.length = Math.max(timeSum.length, n + 1);\n      timeSum[0] = 0;\n      queryPtr[0] = 0;\n\n      // Update all pending timer queries\n      var queryTime = 0;\n      ptr = 0;\n      for (i = 0; i < pendingQueries.length; ++i) {\n        var query = pendingQueries[i];\n        if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {\n          queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT);\n          freeQuery(query);\n        } else {\n          pendingQueries[ptr++] = query;\n        }\n        timeSum[i + 1] = queryTime;\n        queryPtr[i + 1] = ptr;\n      }\n      pendingQueries.length = ptr;\n\n      // Update all pending stat queries\n      ptr = 0;\n      for (i = 0; i < pendingStats.length; ++i) {\n        var stats = pendingStats[i];\n        var start = stats.startQueryIndex;\n        var end = stats.endQueryIndex;\n        stats.sum += timeSum[end] - timeSum[start];\n        var startPtr = queryPtr[start];\n        var endPtr = queryPtr[end];\n        if (endPtr === startPtr) {\n          stats.stats.gpuTime += stats.sum / 1e6;\n          freePendingStats(stats);\n        } else {\n          stats.startQueryIndex = startPtr;\n          stats.endQueryIndex = endPtr;\n          pendingStats[ptr++] = stats;\n        }\n      }\n      pendingStats.length = ptr;\n    }\n    return {\n      beginQuery: beginQuery,\n      endQuery: endQuery,\n      pushScopeStats: pushScopeStats,\n      update: update,\n      getNumPendingQueries: function () {\n        return pendingQueries.length;\n      },\n      clear: function () {\n        queryPool.push.apply(queryPool, pendingQueries);\n        for (var i = 0; i < queryPool.length; i++) {\n          extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i]);\n        }\n        pendingQueries.length = 0;\n        queryPool.length = 0;\n      },\n      restore: function () {\n        pendingQueries.length = 0;\n        queryPool.length = 0;\n      }\n    };\n  };\n  var GL_COLOR_BUFFER_BIT = 16384;\n  var GL_DEPTH_BUFFER_BIT = 256;\n  var GL_STENCIL_BUFFER_BIT = 1024;\n  var GL_ARRAY_BUFFER = 34962;\n  var CONTEXT_LOST_EVENT = 'webglcontextlost';\n  var CONTEXT_RESTORED_EVENT = 'webglcontextrestored';\n  var DYN_PROP = 1;\n  var DYN_CONTEXT = 2;\n  var DYN_STATE = 3;\n  function find(haystack, needle) {\n    for (var i = 0; i < haystack.length; ++i) {\n      if (haystack[i] === needle) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  function wrapREGL(args) {\n    var config = parseArgs(args);\n    if (!config) {\n      return null;\n    }\n    var gl = config.gl;\n    var glAttributes = gl.getContextAttributes();\n    var contextLost = gl.isContextLost();\n    var extensionState = createExtensionCache(gl, config);\n    if (!extensionState) {\n      return null;\n    }\n    var stringStore = createStringStore();\n    var stats$$1 = stats();\n    var cachedCode = config.cachedCode || {};\n    var extensions = extensionState.extensions;\n    var timer = createTimer(gl, extensions);\n    var START_TIME = clock();\n    var WIDTH = gl.drawingBufferWidth;\n    var HEIGHT = gl.drawingBufferHeight;\n    var contextState = {\n      tick: 0,\n      time: 0,\n      viewportWidth: WIDTH,\n      viewportHeight: HEIGHT,\n      framebufferWidth: WIDTH,\n      framebufferHeight: HEIGHT,\n      drawingBufferWidth: WIDTH,\n      drawingBufferHeight: HEIGHT,\n      pixelRatio: config.pixelRatio\n    };\n    var uniformState = {};\n    var drawState = {\n      elements: null,\n      primitive: 4,\n      // GL_TRIANGLES\n      count: -1,\n      offset: 0,\n      instances: -1\n    };\n    var limits = wrapLimits(gl, extensions);\n    var bufferState = wrapBufferState(gl, stats$$1, config, destroyBuffer);\n    var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1);\n    var attributeState = wrapAttributeState(gl, extensions, limits, stats$$1, bufferState, elementState, drawState);\n    function destroyBuffer(buffer) {\n      return attributeState.destroyBuffer(buffer);\n    }\n    var shaderState = wrapShaderState(gl, stringStore, stats$$1, config);\n    var textureState = createTextureSet(gl, extensions, limits, function () {\n      core.procs.poll();\n    }, contextState, stats$$1, config);\n    var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config);\n    var framebufferState = wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats$$1);\n    var core = reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, cachedCode, config);\n    var readPixels = wrapReadPixels(gl, framebufferState, core.procs.poll, contextState, glAttributes, extensions, limits);\n    var nextState = core.next;\n    var canvas = gl.canvas;\n    var rafCallbacks = [];\n    var lossCallbacks = [];\n    var restoreCallbacks = [];\n    var destroyCallbacks = [config.onDestroy];\n    var activeRAF = null;\n    function handleRAF() {\n      if (rafCallbacks.length === 0) {\n        if (timer) {\n          timer.update();\n        }\n        activeRAF = null;\n        return;\n      }\n\n      // schedule next animation frame\n      activeRAF = raf.next(handleRAF);\n\n      // poll for changes\n      poll();\n\n      // fire a callback for all pending rafs\n      for (var i = rafCallbacks.length - 1; i >= 0; --i) {\n        var cb = rafCallbacks[i];\n        if (cb) {\n          cb(contextState, null, 0);\n        }\n      }\n\n      // flush all pending webgl calls\n      gl.flush();\n\n      // poll GPU timers *after* gl.flush so we don't delay command dispatch\n      if (timer) {\n        timer.update();\n      }\n    }\n    function startRAF() {\n      if (!activeRAF && rafCallbacks.length > 0) {\n        activeRAF = raf.next(handleRAF);\n      }\n    }\n    function stopRAF() {\n      if (activeRAF) {\n        raf.cancel(handleRAF);\n        activeRAF = null;\n      }\n    }\n    function handleContextLoss(event) {\n      event.preventDefault();\n\n      // set context lost flag\n      contextLost = true;\n\n      // pause request animation frame\n      stopRAF();\n\n      // lose context\n      lossCallbacks.forEach(function (cb) {\n        cb();\n      });\n    }\n    function handleContextRestored(event) {\n      // clear error code\n      gl.getError();\n\n      // clear context lost flag\n      contextLost = false;\n\n      // refresh state\n      extensionState.restore();\n      shaderState.restore();\n      bufferState.restore();\n      textureState.restore();\n      renderbufferState.restore();\n      framebufferState.restore();\n      attributeState.restore();\n      if (timer) {\n        timer.restore();\n      }\n\n      // refresh state\n      core.procs.refresh();\n\n      // restart RAF\n      startRAF();\n\n      // restore context\n      restoreCallbacks.forEach(function (cb) {\n        cb();\n      });\n    }\n    if (canvas) {\n      canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false);\n      canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false);\n    }\n    function destroy() {\n      rafCallbacks.length = 0;\n      stopRAF();\n      if (canvas) {\n        canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss);\n        canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored);\n      }\n      shaderState.clear();\n      framebufferState.clear();\n      renderbufferState.clear();\n      attributeState.clear();\n      textureState.clear();\n      elementState.clear();\n      bufferState.clear();\n      if (timer) {\n        timer.clear();\n      }\n      destroyCallbacks.forEach(function (cb) {\n        cb();\n      });\n    }\n    function compileProcedure(options) {\n      function flattenNestedOptions(options) {\n        var result = extend({}, options);\n        delete result.uniforms;\n        delete result.attributes;\n        delete result.context;\n        delete result.vao;\n        if ('stencil' in result && result.stencil.op) {\n          result.stencil.opBack = result.stencil.opFront = result.stencil.op;\n          delete result.stencil.op;\n        }\n        function merge(name) {\n          if (name in result) {\n            var child = result[name];\n            delete result[name];\n            Object.keys(child).forEach(function (prop) {\n              result[name + '.' + prop] = child[prop];\n            });\n          }\n        }\n        merge('blend');\n        merge('depth');\n        merge('cull');\n        merge('stencil');\n        merge('polygonOffset');\n        merge('scissor');\n        merge('sample');\n        if ('vao' in options) {\n          result.vao = options.vao;\n        }\n        return result;\n      }\n      function separateDynamic(object, useArrays) {\n        var staticItems = {};\n        var dynamicItems = {};\n        Object.keys(object).forEach(function (option) {\n          var value = object[option];\n          if (dynamic.isDynamic(value)) {\n            dynamicItems[option] = dynamic.unbox(value, option);\n            return;\n          } else if (useArrays && Array.isArray(value)) {\n            for (var i = 0; i < value.length; ++i) {\n              if (dynamic.isDynamic(value[i])) {\n                dynamicItems[option] = dynamic.unbox(value, option);\n                return;\n              }\n            }\n          }\n          staticItems[option] = value;\n        });\n        return {\n          dynamic: dynamicItems,\n          static: staticItems\n        };\n      }\n\n      // Treat context variables separate from other dynamic variables\n      var context = separateDynamic(options.context || {}, true);\n      var uniforms = separateDynamic(options.uniforms || {}, true);\n      var attributes = separateDynamic(options.attributes || {}, false);\n      var opts = separateDynamic(flattenNestedOptions(options), false);\n      var stats$$1 = {\n        gpuTime: 0.0,\n        cpuTime: 0.0,\n        count: 0\n      };\n      var compiled = core.compile(opts, attributes, uniforms, context, stats$$1);\n      var draw = compiled.draw;\n      var batch = compiled.batch;\n      var scope = compiled.scope;\n\n      // FIXME: we should modify code generation for batch commands so this\n      // isn't necessary\n      var EMPTY_ARRAY = [];\n      function reserve(count) {\n        while (EMPTY_ARRAY.length < count) {\n          EMPTY_ARRAY.push(null);\n        }\n        return EMPTY_ARRAY;\n      }\n      function REGLCommand(args, body) {\n        var i;\n        if (contextLost) {}\n        if (typeof args === 'function') {\n          return scope.call(this, null, args, 0);\n        } else if (typeof body === 'function') {\n          if (typeof args === 'number') {\n            for (i = 0; i < args; ++i) {\n              scope.call(this, null, body, i);\n            }\n          } else if (Array.isArray(args)) {\n            for (i = 0; i < args.length; ++i) {\n              scope.call(this, args[i], body, i);\n            }\n          } else {\n            return scope.call(this, args, body, 0);\n          }\n        } else if (typeof args === 'number') {\n          if (args > 0) {\n            return batch.call(this, reserve(args | 0), args | 0);\n          }\n        } else if (Array.isArray(args)) {\n          if (args.length) {\n            return batch.call(this, args, args.length);\n          }\n        } else {\n          return draw.call(this, args);\n        }\n      }\n      return extend(REGLCommand, {\n        stats: stats$$1,\n        destroy: function () {\n          compiled.destroy();\n        }\n      });\n    }\n    var setFBO = framebufferState.setFBO = compileProcedure({\n      framebuffer: dynamic.define.call(null, DYN_PROP, 'framebuffer')\n    });\n    function clearImpl(_, options) {\n      var clearFlags = 0;\n      core.procs.poll();\n      var c = options.color;\n      if (c) {\n        gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0);\n        clearFlags |= GL_COLOR_BUFFER_BIT;\n      }\n      if ('depth' in options) {\n        gl.clearDepth(+options.depth);\n        clearFlags |= GL_DEPTH_BUFFER_BIT;\n      }\n      if ('stencil' in options) {\n        gl.clearStencil(options.stencil | 0);\n        clearFlags |= GL_STENCIL_BUFFER_BIT;\n      }\n      gl.clear(clearFlags);\n    }\n    function clear(options) {\n      if ('framebuffer' in options) {\n        if (options.framebuffer && options.framebuffer_reglType === 'framebufferCube') {\n          for (var i = 0; i < 6; ++i) {\n            setFBO(extend({\n              framebuffer: options.framebuffer.faces[i]\n            }, options), clearImpl);\n          }\n        } else {\n          setFBO(options, clearImpl);\n        }\n      } else {\n        clearImpl(null, options);\n      }\n    }\n    function frame(cb) {\n      rafCallbacks.push(cb);\n      function cancel() {\n        // FIXME:  should we check something other than equals cb here?\n        // what if a user calls frame twice with the same callback...\n        //\n        var i = find(rafCallbacks, cb);\n        function pendingCancel() {\n          var index = find(rafCallbacks, pendingCancel);\n          rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1];\n          rafCallbacks.length -= 1;\n          if (rafCallbacks.length <= 0) {\n            stopRAF();\n          }\n        }\n        rafCallbacks[i] = pendingCancel;\n      }\n      startRAF();\n      return {\n        cancel: cancel\n      };\n    }\n\n    // poll viewport\n    function pollViewport() {\n      var viewport = nextState.viewport;\n      var scissorBox = nextState.scissor_box;\n      viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0;\n      contextState.viewportWidth = contextState.framebufferWidth = contextState.drawingBufferWidth = viewport[2] = scissorBox[2] = gl.drawingBufferWidth;\n      contextState.viewportHeight = contextState.framebufferHeight = contextState.drawingBufferHeight = viewport[3] = scissorBox[3] = gl.drawingBufferHeight;\n    }\n    function poll() {\n      contextState.tick += 1;\n      contextState.time = now();\n      pollViewport();\n      core.procs.poll();\n    }\n    function refresh() {\n      textureState.refresh();\n      pollViewport();\n      core.procs.refresh();\n      if (timer) {\n        timer.update();\n      }\n    }\n    function now() {\n      return (clock() - START_TIME) / 1000.0;\n    }\n    refresh();\n    function addListener(event, callback) {\n      var callbacks;\n      switch (event) {\n        case 'frame':\n          return frame(callback);\n        case 'lost':\n          callbacks = lossCallbacks;\n          break;\n        case 'restore':\n          callbacks = restoreCallbacks;\n          break;\n        case 'destroy':\n          callbacks = destroyCallbacks;\n          break;\n        default:\n      }\n      callbacks.push(callback);\n      return {\n        cancel: function () {\n          for (var i = 0; i < callbacks.length; ++i) {\n            if (callbacks[i] === callback) {\n              callbacks[i] = callbacks[callbacks.length - 1];\n              callbacks.pop();\n              return;\n            }\n          }\n        }\n      };\n    }\n    function getCachedCode() {\n      return cachedCode;\n    }\n    function preloadCachedCode(moreCache) {\n      Object.entries(moreCache).forEach(function (kv) {\n        cachedCode[kv[0]] = kv[1];\n      });\n    }\n    var regl = extend(compileProcedure, {\n      // Clear current FBO\n      clear: clear,\n      // Short cuts for dynamic variables\n      prop: dynamic.define.bind(null, DYN_PROP),\n      context: dynamic.define.bind(null, DYN_CONTEXT),\n      this: dynamic.define.bind(null, DYN_STATE),\n      // executes an empty draw command\n      draw: compileProcedure({}),\n      // Resources\n      buffer: function (options) {\n        return bufferState.create(options, GL_ARRAY_BUFFER, false, false);\n      },\n      elements: function (options) {\n        return elementState.create(options, false);\n      },\n      texture: textureState.create2D,\n      cube: textureState.createCube,\n      renderbuffer: renderbufferState.create,\n      framebuffer: framebufferState.create,\n      framebufferCube: framebufferState.createCube,\n      vao: attributeState.createVAO,\n      // Expose context attributes\n      attributes: glAttributes,\n      // Frame rendering\n      frame: frame,\n      on: addListener,\n      // System limits\n      limits: limits,\n      hasExtension: function (name) {\n        return limits.extensions.indexOf(name.toLowerCase()) >= 0;\n      },\n      // Read pixels\n      read: readPixels,\n      // Destroy regl and all associated resources\n      destroy: destroy,\n      // Direct GL state manipulation\n      _gl: gl,\n      _refresh: refresh,\n      poll: function () {\n        poll();\n        if (timer) {\n          timer.update();\n        }\n      },\n      // Current time\n      now: now,\n      // regl Statistics Information\n      stats: stats$$1,\n      // cache generated code\n      getCachedCode: getCachedCode,\n      preloadCachedCode: preloadCachedCode\n    });\n    config.onDone(null, regl);\n    return regl;\n  }\n  return wrapREGL;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","createREGL","extend","base","opts","keys","Object","i","length","VARIABLE_COUNTER","DYN_FUNC","DYN_CONSTANT","DYN_ARRAY","DynamicVariable","type","data","id","escapeStr","str","replace","splitParts","firstChar","charAt","lastChar","substr","parts","exec","index","concat","subparts","split","result","toAccessorString","join","defineDynamic","isDynamic","x","_reglType","unbox","path","Array","isArray","map","y","dynamic","accessor","raf","next","requestAnimationFrame","cb","setTimeout","cancel","cancelAnimationFrame","clearTimeout","clock","performance","now","Date","createStringStore","stringIds","stringValues","push","createCanvas","element","onDone","pixelRatio","canvas","document","createElement","style","border","margin","padding","top","left","width","height","appendChild","body","position","resize","w","window","innerWidth","h","innerHeight","bounds","getBoundingClientRect","right","bottom","resizeObserver","ResizeObserver","observe","addEventListener","onDestroy","disconnect","removeEventListener","removeChild","createContext","contextAttributes","get","name","getContext","e","isHTMLElement","obj","nodeName","isWebGLContext","drawArrays","drawElements","parseExtensions","input","getElement","desc","querySelector","parseArgs","args_","args","container","gl","extensions","optionalExtensions","devicePixelRatio","profile","cachedCode","err","attributes","toLowerCase","premultipliedAlpha","undefined","createExtensionCache","config","tryLoadExtension","name_","ext","getExtension","forEach","restore","Error","loop","n","f","GL_BYTE","GL_UNSIGNED_BYTE$1","GL_SHORT","GL_UNSIGNED_SHORT","GL_INT","GL_UNSIGNED_INT","GL_FLOAT$1","nextPow16","v","log2","r","shift","createPool","bufferPool","alloc","sz","bin","pop","ArrayBuffer","free","buf","byteLength","allocType","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","subarray","freeType","array","buffer","pool","zero","GL_SUBPIXEL_BITS","GL_RED_BITS","GL_GREEN_BITS","GL_BLUE_BITS","GL_ALPHA_BITS","GL_DEPTH_BITS","GL_STENCIL_BITS","GL_ALIASED_POINT_SIZE_RANGE","GL_ALIASED_LINE_WIDTH_RANGE","GL_MAX_TEXTURE_SIZE","GL_MAX_VIEWPORT_DIMS","GL_MAX_VERTEX_ATTRIBS","GL_MAX_VERTEX_UNIFORM_VECTORS","GL_MAX_VARYING_VECTORS","GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS","GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS","GL_MAX_TEXTURE_IMAGE_UNITS","GL_MAX_FRAGMENT_UNIFORM_VECTORS","GL_MAX_CUBE_MAP_TEXTURE_SIZE","GL_MAX_RENDERBUFFER_SIZE","GL_VENDOR","GL_RENDERER","GL_VERSION","GL_SHADING_LANGUAGE_VERSION","GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT","GL_MAX_COLOR_ATTACHMENTS_WEBGL","GL_MAX_DRAW_BUFFERS_WEBGL","GL_TEXTURE_2D","GL_TEXTURE_CUBE_MAP","GL_TEXTURE_CUBE_MAP_POSITIVE_X","GL_TEXTURE0","GL_RGBA","GL_FLOAT","GL_UNSIGNED_BYTE","GL_FRAMEBUFFER","GL_FRAMEBUFFER_COMPLETE","GL_COLOR_ATTACHMENT0","GL_COLOR_BUFFER_BIT$1","wrapLimits","maxAnisotropic","ext_texture_filter_anisotropic","getParameter","maxDrawbuffers","maxColorAttachments","webgl_draw_buffers","readFloat","oes_texture_float","readFloatTexture","createTexture","bindTexture","texImage2D","fbo","createFramebuffer","bindFramebuffer","framebufferTexture2D","checkFramebufferStatus","viewport","clearColor","clear","pixels","readPixels","getError","deleteFramebuffer","deleteTexture","isIE","navigator","test","userAgent","appVersion","npotTextureCube","cubeTexture","activeTexture","colorBits","depthBits","stencilBits","subpixelBits","filter","pointSizeDims","lineWidthDims","maxViewportDims","maxCombinedTextureUnits","maxCubeMapSize","maxRenderbufferSize","maxTextureUnits","maxTextureSize","maxAttributes","maxVertexUniforms","maxVertexTextureUnits","maxVaryingVectors","maxFragmentUniforms","glsl","renderer","vendor","version","isTypedArray","Float64Array","Uint8ClampedArray","isNDArrayLike","shape","stride","offset","values","key","flattenUtils","arrayShape$1","flatten","flattenArray","flatten1D","nx","out","flatten2D","ny","ptr","row","j","flatten3D","nz","ptr_","col","k","flattenRec","level","out_","array_","arrayTypes","int8","int16","int32","uint8","uint16","uint32","float","float32","glTypes","dynamic$1","stream","usageTypes","arrayFlatten","arrayShape","GL_STATIC_DRAW","GL_STREAM_DRAW","GL_UNSIGNED_BYTE$2","GL_FLOAT$2","DTYPES_SIZES","typedArrayCode","prototype","toString","call","copyArray","inp","transpose","shapeX","shapeY","strideX","strideY","wrapBufferState","stats","destroyBuffer","bufferCount","bufferSet","REGLBuffer","createBuffer","usage","dimension","dtype","persistentData","size","bind","bindBuffer","destroy","streamPool","createStream","initBufferFromData","destroyStream","stream$$1","initBufferFromTypedArray","bufferData","persist","flatData","dim","typedData","transposeData","handle","deleteBuffer","options","deferInit","persistent","reglBuffer","setSubData","bufferSubData","subdata","offset_","converted","_buffer","restoreBuffers","getTotalBufferSize","total","create","getBuffer","wrapper","_initBuffer","points","point","lines","line","triangles","triangle","primTypes","GL_POINTS","GL_LINES","GL_TRIANGLES","GL_BYTE$1","GL_UNSIGNED_BYTE$3","GL_SHORT$1","GL_UNSIGNED_SHORT$1","GL_INT$1","GL_UNSIGNED_INT$1","GL_ELEMENT_ARRAY_BUFFER","GL_STREAM_DRAW$1","GL_STATIC_DRAW$1","wrapElementsState","bufferState","elementSet","elementCount","elementTypes","oes_element_index_uint","REGLElementBuffer","primType","vertCount","createElementStream","initElements","destroyElementStream","elements","prim","count","predictedType","destroyElements","elementsCount","createElements","reglElements","primitive","_elements","getElements","FLOAT","INT","GL_UNSIGNED_SHORT$3","convertToHalfFloat","ushorts","isNaN","Infinity","sgn","exp","frac","s","isArrayLike","GL_COMPRESSED_TEXTURE_FORMATS","GL_TEXTURE_2D$1","GL_TEXTURE_CUBE_MAP$1","GL_TEXTURE_CUBE_MAP_POSITIVE_X$1","GL_RGBA$1","GL_ALPHA","GL_RGB","GL_LUMINANCE","GL_LUMINANCE_ALPHA","GL_RGBA4","GL_RGB5_A1","GL_RGB565","GL_UNSIGNED_SHORT_4_4_4_4","GL_UNSIGNED_SHORT_5_5_5_1","GL_UNSIGNED_SHORT_5_6_5","GL_UNSIGNED_INT_24_8_WEBGL","GL_DEPTH_COMPONENT","GL_DEPTH_STENCIL","GL_SRGB_EXT","GL_SRGB_ALPHA_EXT","GL_HALF_FLOAT_OES","GL_COMPRESSED_RGB_S3TC_DXT1_EXT","GL_COMPRESSED_RGBA_S3TC_DXT1_EXT","GL_COMPRESSED_RGBA_S3TC_DXT3_EXT","GL_COMPRESSED_RGBA_S3TC_DXT5_EXT","GL_COMPRESSED_RGB_ATC_WEBGL","GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL","GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL","GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG","GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG","GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","GL_COMPRESSED_RGB_ETC1_WEBGL","GL_UNSIGNED_BYTE$4","GL_UNSIGNED_SHORT$2","GL_UNSIGNED_INT$2","GL_FLOAT$3","GL_TEXTURE_WRAP_S","GL_TEXTURE_WRAP_T","GL_REPEAT","GL_CLAMP_TO_EDGE","GL_MIRRORED_REPEAT","GL_TEXTURE_MAG_FILTER","GL_TEXTURE_MIN_FILTER","GL_NEAREST","GL_LINEAR","GL_NEAREST_MIPMAP_NEAREST","GL_LINEAR_MIPMAP_NEAREST","GL_NEAREST_MIPMAP_LINEAR","GL_LINEAR_MIPMAP_LINEAR","GL_GENERATE_MIPMAP_HINT","GL_DONT_CARE","GL_FASTEST","GL_NICEST","GL_TEXTURE_MAX_ANISOTROPY_EXT","GL_UNPACK_ALIGNMENT","GL_UNPACK_FLIP_Y_WEBGL","GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL","GL_UNPACK_COLORSPACE_CONVERSION_WEBGL","GL_BROWSER_DEFAULT_WEBGL","GL_TEXTURE0$1","MIPMAP_FILTERS","CHANNELS_FORMAT","FORMAT_CHANNELS","objectName","CANVAS_CLASS","OFFSCREENCANVAS_CLASS","CONTEXT2D_CLASS","BITMAP_CLASS","IMAGE_CLASS","VIDEO_CLASS","PIXEL_CLASSES","TYPE_SIZES","FORMAT_SIZES_SPECIAL","isNumericArray","arr","isRectArray","classString","isCanvasElement","object","isOffscreenCanvas","isContext2D","isBitmap","isImageElement","isVideoElement","isPixelData","className","indexOf","typedArrayCode$1","convertData","set","preConvert","image","postConvert","strideC","c","channels","p","getTextureSize","format","isMipmap","isCube","createTextureSet","limits","reglPoll","contextState","mipmapHint","wrapModes","magFilters","minFilters","colorSpace","textureTypes","textureFormats","compressedTextureFormats","ext_srgb","srgb","srgba","oes_texture_half_float","webgl_depth_texture","webgl_compressed_texture_s3tc","webgl_compressed_texture_atc","webgl_compressed_texture_pvrtc","webgl_compressed_texture_etc1","supportedCompressedFormats","slice","supportedFormats","textureFormatsInvert","val","textureTypesInvert","magFiltersInvert","minFiltersInvert","wrapModesInvert","colorFormats","reduce","color","glenum","TexFlags","internalformat","compressed","premultiplyAlpha","flipY","unpackAlignment","copyFlags","other","parseFlags","flags","alignment","hasChannels","radius","hasFormat","formatStr","setFlags","pixelStorei","TexImage","xOffset","yOffset","needsFree","needsCopy","parseImage","copy","viewW","viewportWidth","viewH","viewportHeight","shapeC","naturalWidth","naturalHeight","videoWidth","videoHeight","dd","allocData","setImage","info","target","miplevel","compressedTexImage2D","copyTexImage2D","setSubImage","texSubImage2D","compressedTexSubImage2D","copyTexSubImage2D","imagePool","allocImage","freeImage","MipMap","genMipmaps","mipmask","images","parseMipMapFromShape","mipmap","img","parseMipMapFromObject","imgData","mipData","setMipMap","mipPool","allocMipMap","freeMipMap","TexInfo","minFilter","magFilter","wrapS","wrapT","anisotropic","parseTexInfo","min","mag","wrap","optWrapS","optWrapT","hasMipMap","setTexInfo","texParameteri","hint","generateMipmap","textureCount","textureSet","numTexUnits","textureUnits","REGLTexture","refCount","texture","unit","bindCount","texInfo","tempBind","tempRestore","prev","params","unbind","decRef","createTexture2D","a","b","reglTexture2D","subimage","x_","y_","level_","imageData","w_","h_","_w","_h","_texture","createTextureCube","a0","a1","a2","a3","a4","a5","cubeCount","faces","reglTextureCube","faceInput","face","radius_","destroyTextures","getTotalTextureSize","restoreTextures","tex","refreshTextures","create2D","createCube","getTexture","refresh","GL_RENDERBUFFER","GL_RGBA4$1","GL_RGB5_A1$1","GL_RGB565$1","GL_DEPTH_COMPONENT16","GL_STENCIL_INDEX8","GL_DEPTH_STENCIL$1","GL_SRGB8_ALPHA8_EXT","GL_RGBA32F_EXT","GL_RGBA16F_EXT","GL_RGB16F_EXT","FORMAT_SIZES","getRenderbufferSize","wrapRenderbuffers","formatTypes","ext_color_buffer_half_float","webgl_color_buffer_float","formatTypesInvert","renderbufferCount","renderbufferSet","REGLRenderbuffer","renderbuffer","rb","bindRenderbuffer","deleteRenderbuffer","createRenderbuffer","reglRenderbuffer","renderbufferStorage","_renderbuffer","getTotalRenderbufferSize","restoreRenderbuffers","GL_FRAMEBUFFER$1","GL_RENDERBUFFER$1","GL_TEXTURE_2D$2","GL_TEXTURE_CUBE_MAP_POSITIVE_X$2","GL_COLOR_ATTACHMENT0$1","GL_DEPTH_ATTACHMENT","GL_STENCIL_ATTACHMENT","GL_DEPTH_STENCIL_ATTACHMENT","GL_FRAMEBUFFER_COMPLETE$1","GL_HALF_FLOAT_OES$1","GL_UNSIGNED_BYTE$5","GL_FLOAT$4","GL_RGB$1","GL_RGBA$2","textureFormatChannels","textureTypeSizes","wrapFBOState","textureState","renderbufferState","framebufferState","cur","dirty","setFBO","colorTextureFormats","colorRenderbufferFormats","colorTypes","FramebufferAttachment","attachment","incRefAndCheckShape","tw","Math","max","th","attach","location","framebufferRenderbuffer","parseAttachment","allocAttachment","isTexture","unwrapAttachment","resizeAttachment","framebufferCount","framebufferSet","REGLFramebuffer","framebuffer","colorAttachments","depthAttachment","stencilAttachment","depthStencilAttachment","decFBORefs","updateFramebuffer","status","isContextLost","createFBO","reglFramebuffer","needsDepth","needsStencil","colorBuffer","colorTexture","colorFormat","colorType","colorCount","depthBuffer","stencilBuffer","depthStencilBuffer","depthStencilTexture","colors","depthTexture","depth","stencil","depthStencil","commonColorAttachmentSize","colorAttachmentSize","_framebuffer","use","block","createCubeFBO","reglFramebufferCube","colorCubes","cubeMapParams","cube","restoreFramebuffers","fb","getFramebuffer","GL_FLOAT$5","GL_ARRAY_BUFFER$1","GL_ELEMENT_ARRAY_BUFFER$1","AttributeRecord","state","z","normalized","divisor","wrapAttributeState","elementState","drawState","NUM_ATTRIBUTES","attributeBindings","vaoCount","vaoSet","Record","scope","currentVAO","targetVAO","extVAO","restoreVAO","createVAO","getVAO","setVAO","setVAOEXT","setVAOEmulated","destroyVAOEXT","record","disableVertexAttribArray","oes_vertex_array_object","extInstanced","angle_instanced_arrays","vao","_vao","bindVertexArrayOES","bindAttrs","exti","binding","enableVertexAttribArray","vertexAttribPointer","offfset","vertexAttribDivisorANGLE","vertexAttrib4f","REGLVAO","ownsElements","instances","extension","createVertexArrayOES","buffers","attr","deleteVertexArrayOES","_attr","updateVAO","bufUpdated","nattributes","spec","rec","GL_FRAGMENT_SHADER","GL_VERTEX_SHADER","GL_ACTIVE_UNIFORMS","GL_ACTIVE_ATTRIBUTES","wrapShaderState","stringStore","fragShaders","vertShaders","ActiveInfo","insertActiveInfo","list","getShader","command","cache","shader","source","createShader","shaderSource","compileShader","programCache","programList","PROGRAM_COUNTER","REGLProgram","fragId","vertId","program","uniforms","uniformsCount","attributesCount","linkProgram","attributeLocations","fragShader","vertShader","createProgram","attachShader","bindAttribLocation","numUniforms","getProgramParameter","getActiveUniform","getUniformLocation","numAttributes","getActiveAttrib","getAttribLocation","getMaxUniformsCount","m","getMaxAttributesCount","restoreShaders","deleteShader","deleteProgram","shaderCount","attribLocations","prevProgram","idx","splice","frag","vert","GL_RGBA$3","GL_UNSIGNED_BYTE$6","GL_PACK_ALIGNMENT","GL_FLOAT$6","wrapReadPixels","context","glAttributes","readPixelsImpl","framebufferWidth","framebufferHeight","readPixelsFBO","hexcase","b64pad","hex_sha256","rstr2hex","rstr_sha256","str2rstr_utf8","binb2rstr","binb_sha256","rstr2binb","rstr_hmac_sha256","bkey","ipad","opad","hash","hex_tab","output","charCodeAt","rstr2b64","tab","len","triplet","rstr2any","encoding","remainders","q","quotient","dividend","ceil","floor","full_length","log","String","fromCharCode","sha256_S","X","sha256_R","sha256_Ch","sha256_Maj","sha256_Sigma0256","sha256_Sigma1256","sha256_Gamma0256","sha256_Gamma1256","sha256_K","l","HASH","W","d","g","T1","T2","safe_add","lsw","msw","createEnvironment","varCounter","linkedNames","linkedValues","isStable","link","value","stable","code","apply","arguments","vars","def","entry","exit","entryToString","exitToString","save","prop","conditional","pred","thenBlock","elseBlock","thenToString","elseToString","then","else","elseClause","globalBlock","procedures","proc","arg","bodyToString","compile","src","Function","cond","CUTE_COMPONENTS","GL_UNSIGNED_BYTE$7","ATTRIB_STATE_POINTER","ATTRIB_STATE_CONSTANT","DYN_FUNC$1","DYN_PROP$1","DYN_CONTEXT$1","DYN_STATE$1","DYN_THUNK","DYN_CONSTANT$1","DYN_ARRAY$1","S_DITHER","S_BLEND_ENABLE","S_BLEND_COLOR","S_BLEND_EQUATION","S_BLEND_FUNC","S_DEPTH_ENABLE","S_DEPTH_FUNC","S_DEPTH_RANGE","S_DEPTH_MASK","S_COLOR_MASK","S_CULL_ENABLE","S_CULL_FACE","S_FRONT_FACE","S_LINE_WIDTH","S_POLYGON_OFFSET_ENABLE","S_POLYGON_OFFSET_OFFSET","S_SAMPLE_ALPHA","S_SAMPLE_ENABLE","S_SAMPLE_COVERAGE","S_STENCIL_ENABLE","S_STENCIL_MASK","S_STENCIL_FUNC","S_STENCIL_OPFRONT","S_STENCIL_OPBACK","S_SCISSOR_ENABLE","S_SCISSOR_BOX","S_VIEWPORT","S_PROFILE","S_FRAMEBUFFER","S_VERT","S_FRAG","S_ELEMENTS","S_PRIMITIVE","S_COUNT","S_OFFSET","S_INSTANCES","S_VAO","SUFFIX_WIDTH","SUFFIX_HEIGHT","S_FRAMEBUFFER_WIDTH","S_FRAMEBUFFER_HEIGHT","S_VIEWPORT_WIDTH","S_VIEWPORT_HEIGHT","S_DRAWINGBUFFER","S_DRAWINGBUFFER_WIDTH","S_DRAWINGBUFFER_HEIGHT","NESTED_OPTIONS","GL_ARRAY_BUFFER$2","GL_ELEMENT_ARRAY_BUFFER$2","GL_CULL_FACE","GL_BLEND","GL_DITHER","GL_STENCIL_TEST","GL_DEPTH_TEST","GL_SCISSOR_TEST","GL_POLYGON_OFFSET_FILL","GL_SAMPLE_ALPHA_TO_COVERAGE","GL_SAMPLE_COVERAGE","GL_FLOAT$7","GL_FLOAT_VEC2","GL_FLOAT_VEC3","GL_FLOAT_VEC4","GL_INT$2","GL_INT_VEC2","GL_INT_VEC3","GL_INT_VEC4","GL_BOOL","GL_BOOL_VEC2","GL_BOOL_VEC3","GL_BOOL_VEC4","GL_FLOAT_MAT2","GL_FLOAT_MAT3","GL_FLOAT_MAT4","GL_SAMPLER_2D","GL_SAMPLER_CUBE","GL_TRIANGLES$1","GL_FRONT","GL_BACK","GL_CW","GL_CCW","GL_MIN_EXT","GL_MAX_EXT","GL_ALWAYS","GL_KEEP","GL_ZERO","GL_ONE","GL_FUNC_ADD","GL_LESS","GL_FRAMEBUFFER$2","GL_COLOR_ATTACHMENT0$2","blendFuncs","compareFuncs","stencilOps","orientationType","isBufferArgs","sortState","sort","Declaration","thisDep","contextDep","propDep","append","isStatic","decl","createStaticDecl","createDynamicDecl","dyn","numArgs","subDyn","subArgs","SCOPE_DECL","reglCore","uniformState","attributeState","shaderState","timer","blendEquations","ext_blend_minmax","extInstancing","extDrawBuffers","extVertexArrays","currentState","nextState","GL_STATE_NAMES","GL_FLAGS","GL_VARIABLES","propName","stateFlag","sname","cap","init","stateVariable","func","hasVariableReference","drawingBufferWidth","drawingBufferHeight","sharedState","strings","current","draw","sharedConstants","backBuffer","drawBuffer","drawCallCounter","createREGLEnvironment","env","batchId","SHARED","shared","props","nextVars","currentVars","variable","constants","JSON","stringify","invoke","argList","ref","attribCache","scopeAttribs","scopeAttrib","parseProfile","staticOptions","static","dynamicOptions","profileEnable","enable","parseFramebuffer","FRAMEBUFFER","CONTEXT","FRAMEBUFFER_FUNC","FRAMEBUFFER_STATE","parseViewportScissor","parseBox","param","box","BOX_W","BOX_H","dynBox","BOX","BOX_X","BOX_Y","prevViewport","VIEWPORT","scissor_box","parseAttribLocations","staticProgram","staticAttributes","sAttributes","bindings","parseProgram","parseShader","progVar","SHADER_STATE","progDef","parseDraw","staticDraw","vaoActive","parseVAO","vaoRef","elementsActive","parseElements","ELEMENTS","IS_BUFFER_ARGS","ELEMENT_STATE","elementDefn","elementStream","ifte","parsePrimitive","dynPrimitive","PRIM_TYPES","parseParam","isOffset","OFFSET","dynValue","parseVertCount","dynCount","countVariable","parseGLState","STATE","parseStatic","parseDynamic","COMPARE_FUNCS","Z_NEAR","Z_FAR","srcRGB","srcAlpha","dstRGB","dst","dstAlpha","BLEND_FUNCS","read","prefix","suffix","SRC_RGB","SRC_ALPHA","DST_RGB","DST_ALPHA","rgb","alpha","BLEND_EQUATIONS","RGB","ALPHA","cmp","mask","fail","zfail","zpass","STENCIL_OPS","factor","units","FACTOR","UNITS","sampleValue","sampleInvert","invert","VALUE","INVERT","parseUniforms","staticUniforms","dynamicUniforms","UNIFORMS","reglType","ITEM","parseAttributes","dynamicAttributes","attributeDefs","attribute","constant","isStream","appendAttributeCode","BUFFER_STATE","defaultRecord","BUFFER","TYPE","emitReadRecord","parseContext","staticContext","dynamicContext","parseArguments","viewportAndScissor","copyBox","defn","scopeVAO","drawVAO","useVAO","staticBindings","emitContext","contextEnter","emitPollFramebuffer","skipCheck","GL","EXT_DRAW_BUFFERS","DRAW_BUFFERS","BACK_BUFFER","NEXT","emitPollState","CURRENT_VARS","NEXT_VARS","CURRENT_STATE","NEXT_STATE","CURRENT","emitSetOptions","flag","injectExtensions","instancing","emitProfile","useScope","incrementCounter","STATS","TIMER","profileArg","perfCounter","CPU_START","QUERY_COUNTER","emitProfileStart","emitProfileEnd","scopeProfile","USE_PROFILE","start","end","emitAttributes","typeLength","emitBindAttribute","ATTRIBUTE","LOCATION","BINDING","CONST_COMPONENTS","COMMON_KEYS","emitBuffer","SIZE","DIVISOR","emitConstant","emitUniforms","isBatchInnerLoop","infix","uniform","UNIFORM","TEX_VALUE","MAT_VALUE","unroll","TEX","matSize","pow","STORAGE","prevS","emitDraw","outer","inner","DRAW_STATE","drawOptions","emitElements","contextDynamic","emitCount","COUNT","emitValue","PRIMITIVE","INSTANCES","EXT_INSTANCING","ELEMENT_TYPE","elementsStatic","emitInstancing","emitRegular","createBody","emitBody","parentEnv","emitDrawBody","emitDrawProc","drawCache","PROG_ID","CACHED_PROC","emitBatchDynamicShaderBody","all","emitBatchBody","BATCH_ID","PROP_LIST","NUM_PROPS","PROPS","isInnerDefn","isOuterDefn","needsContext","needsFramebuffer","progCache","PROGRAM","emitBatchProc","batch","progDefn","batchCache","emitScopeProc","opt","VARIABLE","saveShader","isDynamicObject","splatObject","globals","objectRef","deps","appendBlock","compileCommand","procs","poll","common","INSTANCING","TEMP_BINDING","MAX_ATTRIBUTES","GL_QUERY_RESULT_EXT","GL_QUERY_RESULT_AVAILABLE_EXT","GL_TIME_ELAPSED_EXT","createTimer","ext_disjoint_timer_query","queryPool","allocQuery","createQueryEXT","freeQuery","query","pendingQueries","beginQuery","beginQueryEXT","pushScopeStats","endQuery","endQueryEXT","PendingStats","startQueryIndex","endQueryIndex","sum","pendingStatsPool","allocPendingStats","freePendingStats","pendingStats","ps","timeSum","queryPtr","update","queryTime","getQueryObjectEXT","startPtr","endPtr","gpuTime","getNumPendingQueries","deleteQueryEXT","GL_COLOR_BUFFER_BIT","GL_DEPTH_BUFFER_BIT","GL_STENCIL_BUFFER_BIT","GL_ARRAY_BUFFER","CONTEXT_LOST_EVENT","CONTEXT_RESTORED_EVENT","DYN_PROP","DYN_CONTEXT","DYN_STATE","find","haystack","needle","wrapREGL","getContextAttributes","contextLost","extensionState","stats$$1","START_TIME","WIDTH","HEIGHT","tick","time","core","rafCallbacks","lossCallbacks","restoreCallbacks","destroyCallbacks","activeRAF","handleRAF","flush","startRAF","stopRAF","handleContextLoss","event","preventDefault","handleContextRestored","compileProcedure","flattenNestedOptions","op","opBack","opFront","merge","child","separateDynamic","useArrays","staticItems","dynamicItems","option","cpuTime","compiled","EMPTY_ARRAY","reserve","REGLCommand","clearImpl","_","clearFlags","clearDepth","clearStencil","framebuffer_reglType","frame","pendingCancel","pollViewport","scissorBox","addListener","callback","callbacks","getCachedCode","preloadCachedCode","moreCache","entries","kv","regl","this","framebufferCube","on","hasExtension","_gl","_refresh"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/regl/dist/regl.unchecked.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.createREGL = factory());\n}(this, (function () { 'use strict';\n\nvar extend = function (base, opts) {\n  var keys = Object.keys(opts)\n  for (var i = 0; i < keys.length; ++i) {\n    base[keys[i]] = opts[keys[i]]\n  }\n  return base\n}\n\nvar VARIABLE_COUNTER = 0\n\nvar DYN_FUNC = 0\nvar DYN_CONSTANT = 5\nvar DYN_ARRAY = 6\n\nfunction DynamicVariable (type, data) {\n  this.id = (VARIABLE_COUNTER++)\n  this.type = type\n  this.data = data\n}\n\nfunction escapeStr (str) {\n  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n}\n\nfunction splitParts (str) {\n  if (str.length === 0) {\n    return []\n  }\n\n  var firstChar = str.charAt(0)\n  var lastChar = str.charAt(str.length - 1)\n\n  if (str.length > 1 &&\n      firstChar === lastChar &&\n      (firstChar === '\"' || firstChar === \"'\")) {\n    return ['\"' + escapeStr(str.substr(1, str.length - 2)) + '\"']\n  }\n\n  var parts = /\\[(false|true|null|\\d+|'[^']*'|\"[^\"]*\")\\]/.exec(str)\n  if (parts) {\n    return (\n      splitParts(str.substr(0, parts.index))\n        .concat(splitParts(parts[1]))\n        .concat(splitParts(str.substr(parts.index + parts[0].length)))\n    )\n  }\n\n  var subparts = str.split('.')\n  if (subparts.length === 1) {\n    return ['\"' + escapeStr(str) + '\"']\n  }\n\n  var result = []\n  for (var i = 0; i < subparts.length; ++i) {\n    result = result.concat(splitParts(subparts[i]))\n  }\n  return result\n}\n\nfunction toAccessorString (str) {\n  return '[' + splitParts(str).join('][') + ']'\n}\n\nfunction defineDynamic (type, data) {\n  return new DynamicVariable(type, toAccessorString(data + ''))\n}\n\nfunction isDynamic (x) {\n  return (typeof x === 'function' && !x._reglType) || (x instanceof DynamicVariable)\n}\n\nfunction unbox (x, path) {\n  if (typeof x === 'function') {\n    return new DynamicVariable(DYN_FUNC, x)\n  } else if (typeof x === 'number' || typeof x === 'boolean') {\n    return new DynamicVariable(DYN_CONSTANT, x)\n  } else if (Array.isArray(x)) {\n    return new DynamicVariable(DYN_ARRAY, x.map(function (y, i) { return unbox(y, path + '[' + i + ']') }))\n  } else if (x instanceof DynamicVariable) {\n    return x\n  }\n  \n}\n\nvar dynamic = {\n  DynamicVariable: DynamicVariable,\n  define: defineDynamic,\n  isDynamic: isDynamic,\n  unbox: unbox,\n  accessor: toAccessorString\n};\n\n/* globals requestAnimationFrame, cancelAnimationFrame */\nvar raf = {\n  next: typeof requestAnimationFrame === 'function'\n    ? function (cb) { return requestAnimationFrame(cb) }\n    : function (cb) { return setTimeout(cb, 16) },\n  cancel: typeof cancelAnimationFrame === 'function'\n    ? function (raf) { return cancelAnimationFrame(raf) }\n    : clearTimeout\n};\n\n/* globals performance */\nvar clock = (typeof performance !== 'undefined' && performance.now)\n    ? function () { return performance.now() }\n    : function () { return +(new Date()) };\n\nfunction createStringStore () {\n  var stringIds = { '': 0 }\n  var stringValues = ['']\n  return {\n    id: function (str) {\n      var result = stringIds[str]\n      if (result) {\n        return result\n      }\n      result = stringIds[str] = stringValues.length\n      stringValues.push(str)\n      return result\n    },\n\n    str: function (id) {\n      return stringValues[id]\n    }\n  }\n}\n\n// Context and canvas creation helper functions\n\nfunction createCanvas (element, onDone, pixelRatio) {\n  var canvas = document.createElement('canvas')\n  extend(canvas.style, {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%'\n  })\n  element.appendChild(canvas)\n\n  if (element === document.body) {\n    canvas.style.position = 'absolute'\n    extend(element.style, {\n      margin: 0,\n      padding: 0\n    })\n  }\n\n  function resize () {\n    var w = window.innerWidth\n    var h = window.innerHeight\n    if (element !== document.body) {\n      var bounds = canvas.getBoundingClientRect()\n      w = bounds.right - bounds.left\n      h = bounds.bottom - bounds.top\n    }\n    canvas.width = pixelRatio * w\n    canvas.height = pixelRatio * h\n  }\n\n  var resizeObserver\n  if (element !== document.body && typeof ResizeObserver === 'function') {\n    // ignore 'ResizeObserver' is not defined\n    // eslint-disable-next-line\n    resizeObserver = new ResizeObserver(function () {\n      // setTimeout to avoid flicker\n      setTimeout(resize)\n    })\n    resizeObserver.observe(element)\n  } else {\n    window.addEventListener('resize', resize, false)\n  }\n\n  function onDestroy () {\n    if (resizeObserver) {\n      resizeObserver.disconnect()\n    } else {\n      window.removeEventListener('resize', resize)\n    }\n    element.removeChild(canvas)\n  }\n\n  resize()\n\n  return {\n    canvas: canvas,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createContext (canvas, contextAttributes) {\n  function get (name) {\n    try {\n      return canvas.getContext(name, contextAttributes)\n    } catch (e) {\n      return null\n    }\n  }\n  return (\n    get('webgl') ||\n    get('experimental-webgl') ||\n    get('webgl-experimental')\n  )\n}\n\nfunction isHTMLElement (obj) {\n  return (\n    typeof obj.nodeName === 'string' &&\n    typeof obj.appendChild === 'function' &&\n    typeof obj.getBoundingClientRect === 'function'\n  )\n}\n\nfunction isWebGLContext (obj) {\n  return (\n    typeof obj.drawArrays === 'function' ||\n    typeof obj.drawElements === 'function'\n  )\n}\n\nfunction parseExtensions (input) {\n  if (typeof input === 'string') {\n    return input.split()\n  }\n  \n  return input\n}\n\nfunction getElement (desc) {\n  if (typeof desc === 'string') {\n    \n    return document.querySelector(desc)\n  }\n  return desc\n}\n\nfunction parseArgs (args_) {\n  var args = args_ || {}\n  var element, container, canvas, gl\n  var contextAttributes = {}\n  var extensions = []\n  var optionalExtensions = []\n  var pixelRatio = (typeof window === 'undefined' ? 1 : window.devicePixelRatio)\n  var profile = false\n  var cachedCode = {}\n  var onDone = function (err) {\n    if (err) {\n      \n    }\n  }\n  var onDestroy = function () {}\n  if (typeof args === 'string') {\n    \n    element = document.querySelector(args)\n    \n  } else if (typeof args === 'object') {\n    if (isHTMLElement(args)) {\n      element = args\n    } else if (isWebGLContext(args)) {\n      gl = args\n      canvas = gl.canvas\n    } else {\n      \n      if ('gl' in args) {\n        gl = args.gl\n      } else if ('canvas' in args) {\n        canvas = getElement(args.canvas)\n      } else if ('container' in args) {\n        container = getElement(args.container)\n      }\n      if ('attributes' in args) {\n        contextAttributes = args.attributes\n        \n      }\n      if ('extensions' in args) {\n        extensions = parseExtensions(args.extensions)\n      }\n      if ('optionalExtensions' in args) {\n        optionalExtensions = parseExtensions(args.optionalExtensions)\n      }\n      if ('onDone' in args) {\n        \n        onDone = args.onDone\n      }\n      if ('profile' in args) {\n        profile = !!args.profile\n      }\n      if ('pixelRatio' in args) {\n        pixelRatio = +args.pixelRatio\n        \n      }\n      if ('cachedCode' in args) {\n        \n        cachedCode = args.cachedCode\n      }\n    }\n  } else {\n    \n  }\n\n  if (element) {\n    if (element.nodeName.toLowerCase() === 'canvas') {\n      canvas = element\n    } else {\n      container = element\n    }\n  }\n\n  if (!gl) {\n    if (!canvas) {\n      \n      var result = createCanvas(container || document.body, onDone, pixelRatio)\n      if (!result) {\n        return null\n      }\n      canvas = result.canvas\n      onDestroy = result.onDestroy\n    }\n    // workaround for chromium bug, premultiplied alpha value is platform dependent\n    if (contextAttributes.premultipliedAlpha === undefined) contextAttributes.premultipliedAlpha = true\n    gl = createContext(canvas, contextAttributes)\n  }\n\n  if (!gl) {\n    onDestroy()\n    onDone('webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org')\n    return null\n  }\n\n  return {\n    gl: gl,\n    canvas: canvas,\n    container: container,\n    extensions: extensions,\n    optionalExtensions: optionalExtensions,\n    pixelRatio: pixelRatio,\n    profile: profile,\n    cachedCode: cachedCode,\n    onDone: onDone,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createExtensionCache (gl, config) {\n  var extensions = {}\n\n  function tryLoadExtension (name_) {\n    \n    var name = name_.toLowerCase()\n    var ext\n    try {\n      ext = extensions[name] = gl.getExtension(name)\n    } catch (e) {}\n    return !!ext\n  }\n\n  for (var i = 0; i < config.extensions.length; ++i) {\n    var name = config.extensions[i]\n    if (!tryLoadExtension(name)) {\n      config.onDestroy()\n      config.onDone('\"' + name + '\" extension is not supported by the current WebGL context, try upgrading your system or a different browser')\n      return null\n    }\n  }\n\n  config.optionalExtensions.forEach(tryLoadExtension)\n\n  return {\n    extensions: extensions,\n    restore: function () {\n      Object.keys(extensions).forEach(function (name) {\n        if (extensions[name] && !tryLoadExtension(name)) {\n          throw new Error('(regl): error restoring extension ' + name)\n        }\n      })\n    }\n  }\n}\n\nfunction loop (n, f) {\n  var result = Array(n)\n  for (var i = 0; i < n; ++i) {\n    result[i] = f(i)\n  }\n  return result\n}\n\nvar GL_BYTE = 5120\nvar GL_UNSIGNED_BYTE$1 = 5121\nvar GL_SHORT = 5122\nvar GL_UNSIGNED_SHORT = 5123\nvar GL_INT = 5124\nvar GL_UNSIGNED_INT = 5125\nvar GL_FLOAT$1 = 5126\n\nfunction nextPow16 (v) {\n  for (var i = 16; i <= (1 << 28); i *= 16) {\n    if (v <= i) {\n      return i\n    }\n  }\n  return 0\n}\n\nfunction log2 (v) {\n  var r, shift\n  r = (v > 0xFFFF) << 4\n  v >>>= r\n  shift = (v > 0xFF) << 3\n  v >>>= shift; r |= shift\n  shift = (v > 0xF) << 2\n  v >>>= shift; r |= shift\n  shift = (v > 0x3) << 1\n  v >>>= shift; r |= shift\n  return r | (v >> 1)\n}\n\nfunction createPool () {\n  var bufferPool = loop(8, function () {\n    return []\n  })\n\n  function alloc (n) {\n    var sz = nextPow16(n)\n    var bin = bufferPool[log2(sz) >> 2]\n    if (bin.length > 0) {\n      return bin.pop()\n    }\n    return new ArrayBuffer(sz)\n  }\n\n  function free (buf) {\n    bufferPool[log2(buf.byteLength) >> 2].push(buf)\n  }\n\n  function allocType (type, n) {\n    var result = null\n    switch (type) {\n      case GL_BYTE:\n        result = new Int8Array(alloc(n), 0, n)\n        break\n      case GL_UNSIGNED_BYTE$1:\n        result = new Uint8Array(alloc(n), 0, n)\n        break\n      case GL_SHORT:\n        result = new Int16Array(alloc(2 * n), 0, n)\n        break\n      case GL_UNSIGNED_SHORT:\n        result = new Uint16Array(alloc(2 * n), 0, n)\n        break\n      case GL_INT:\n        result = new Int32Array(alloc(4 * n), 0, n)\n        break\n      case GL_UNSIGNED_INT:\n        result = new Uint32Array(alloc(4 * n), 0, n)\n        break\n      case GL_FLOAT$1:\n        result = new Float32Array(alloc(4 * n), 0, n)\n        break\n      default:\n        return null\n    }\n    if (result.length !== n) {\n      return result.subarray(0, n)\n    }\n    return result\n  }\n\n  function freeType (array) {\n    free(array.buffer)\n  }\n\n  return {\n    alloc: alloc,\n    free: free,\n    allocType: allocType,\n    freeType: freeType\n  }\n}\n\nvar pool = createPool()\n\n// zero pool for initial zero data\npool.zero = createPool()\n\nvar GL_SUBPIXEL_BITS = 0x0D50\nvar GL_RED_BITS = 0x0D52\nvar GL_GREEN_BITS = 0x0D53\nvar GL_BLUE_BITS = 0x0D54\nvar GL_ALPHA_BITS = 0x0D55\nvar GL_DEPTH_BITS = 0x0D56\nvar GL_STENCIL_BITS = 0x0D57\n\nvar GL_ALIASED_POINT_SIZE_RANGE = 0x846D\nvar GL_ALIASED_LINE_WIDTH_RANGE = 0x846E\n\nvar GL_MAX_TEXTURE_SIZE = 0x0D33\nvar GL_MAX_VIEWPORT_DIMS = 0x0D3A\nvar GL_MAX_VERTEX_ATTRIBS = 0x8869\nvar GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB\nvar GL_MAX_VARYING_VECTORS = 0x8DFC\nvar GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D\nvar GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C\nvar GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872\nvar GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD\nvar GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C\nvar GL_MAX_RENDERBUFFER_SIZE = 0x84E8\n\nvar GL_VENDOR = 0x1F00\nvar GL_RENDERER = 0x1F01\nvar GL_VERSION = 0x1F02\nvar GL_SHADING_LANGUAGE_VERSION = 0x8B8C\n\nvar GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF\n\nvar GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF\nvar GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824\n\nvar GL_TEXTURE_2D = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP = 0x8513\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515\nvar GL_TEXTURE0 = 0x84C0\nvar GL_RGBA = 0x1908\nvar GL_FLOAT = 0x1406\nvar GL_UNSIGNED_BYTE = 0x1401\nvar GL_FRAMEBUFFER = 0x8D40\nvar GL_FRAMEBUFFER_COMPLETE = 0x8CD5\nvar GL_COLOR_ATTACHMENT0 = 0x8CE0\nvar GL_COLOR_BUFFER_BIT$1 = 0x4000\n\nvar wrapLimits = function (gl, extensions) {\n  var maxAnisotropic = 1\n  if (extensions.ext_texture_filter_anisotropic) {\n    maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n  }\n\n  var maxDrawbuffers = 1\n  var maxColorAttachments = 1\n  if (extensions.webgl_draw_buffers) {\n    maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL)\n    maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL)\n  }\n\n  // detect if reading float textures is available (Safari doesn't support)\n  var readFloat = !!extensions.oes_texture_float\n  if (readFloat) {\n    var readFloatTexture = gl.createTexture()\n    gl.bindTexture(GL_TEXTURE_2D, readFloatTexture)\n    gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT, null)\n\n    var fbo = gl.createFramebuffer()\n    gl.bindFramebuffer(GL_FRAMEBUFFER, fbo)\n    gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0)\n    gl.bindTexture(GL_TEXTURE_2D, null)\n\n    if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false\n\n    else {\n      gl.viewport(0, 0, 1, 1)\n      gl.clearColor(1.0, 0.0, 0.0, 1.0)\n      gl.clear(GL_COLOR_BUFFER_BIT$1)\n      var pixels = pool.allocType(GL_FLOAT, 4)\n      gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT, pixels)\n\n      if (gl.getError()) readFloat = false\n      else {\n        gl.deleteFramebuffer(fbo)\n        gl.deleteTexture(readFloatTexture)\n\n        readFloat = pixels[0] === 1.0\n      }\n\n      pool.freeType(pixels)\n    }\n  }\n\n  // detect non power of two cube textures support (IE doesn't support)\n  var isIE = typeof navigator !== 'undefined' && (/MSIE/.test(navigator.userAgent) || /Trident\\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent))\n\n  var npotTextureCube = true\n\n  if (!isIE) {\n    var cubeTexture = gl.createTexture()\n    var data = pool.allocType(GL_UNSIGNED_BYTE, 36)\n    gl.activeTexture(GL_TEXTURE0)\n    gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture)\n    gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)\n    pool.freeType(data)\n    gl.bindTexture(GL_TEXTURE_CUBE_MAP, null)\n    gl.deleteTexture(cubeTexture)\n    npotTextureCube = !gl.getError()\n  }\n\n  return {\n    // drawing buffer bit depth\n    colorBits: [\n      gl.getParameter(GL_RED_BITS),\n      gl.getParameter(GL_GREEN_BITS),\n      gl.getParameter(GL_BLUE_BITS),\n      gl.getParameter(GL_ALPHA_BITS)\n    ],\n    depthBits: gl.getParameter(GL_DEPTH_BITS),\n    stencilBits: gl.getParameter(GL_STENCIL_BITS),\n    subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),\n\n    // supported extensions\n    extensions: Object.keys(extensions).filter(function (ext) {\n      return !!extensions[ext]\n    }),\n\n    // max aniso samples\n    maxAnisotropic: maxAnisotropic,\n\n    // max draw buffers\n    maxDrawbuffers: maxDrawbuffers,\n    maxColorAttachments: maxColorAttachments,\n\n    // point and line size ranges\n    pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),\n    lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),\n    maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),\n    maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n    maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),\n    maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),\n    maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),\n    maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),\n    maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),\n    maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),\n    maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n    maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),\n    maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),\n\n    // vendor info\n    glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),\n    renderer: gl.getParameter(GL_RENDERER),\n    vendor: gl.getParameter(GL_VENDOR),\n    version: gl.getParameter(GL_VERSION),\n\n    // quirks\n    readFloat: readFloat,\n    npotTextureCube: npotTextureCube\n  }\n}\n\nvar isTypedArray = function (x) {\n  return (\n    x instanceof Uint8Array ||\n    x instanceof Uint16Array ||\n    x instanceof Uint32Array ||\n    x instanceof Int8Array ||\n    x instanceof Int16Array ||\n    x instanceof Int32Array ||\n    x instanceof Float32Array ||\n    x instanceof Float64Array ||\n    x instanceof Uint8ClampedArray\n  )\n}\n\nfunction isNDArrayLike (obj) {\n  return (\n    !!obj &&\n    typeof obj === 'object' &&\n    Array.isArray(obj.shape) &&\n    Array.isArray(obj.stride) &&\n    typeof obj.offset === 'number' &&\n    obj.shape.length === obj.stride.length &&\n    (Array.isArray(obj.data) ||\n      isTypedArray(obj.data)))\n}\n\nvar values = function (obj) {\n  return Object.keys(obj).map(function (key) { return obj[key] })\n}\n\nvar flattenUtils = {\n  shape: arrayShape$1,\n  flatten: flattenArray\n};\n\nfunction flatten1D (array, nx, out) {\n  for (var i = 0; i < nx; ++i) {\n    out[i] = array[i]\n  }\n}\n\nfunction flatten2D (array, nx, ny, out) {\n  var ptr = 0\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i]\n    for (var j = 0; j < ny; ++j) {\n      out[ptr++] = row[j]\n    }\n  }\n}\n\nfunction flatten3D (array, nx, ny, nz, out, ptr_) {\n  var ptr = ptr_\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i]\n    for (var j = 0; j < ny; ++j) {\n      var col = row[j]\n      for (var k = 0; k < nz; ++k) {\n        out[ptr++] = col[k]\n      }\n    }\n  }\n}\n\nfunction flattenRec (array, shape, level, out, ptr) {\n  var stride = 1\n  for (var i = level + 1; i < shape.length; ++i) {\n    stride *= shape[i]\n  }\n  var n = shape[level]\n  if (shape.length - level === 4) {\n    var nx = shape[level + 1]\n    var ny = shape[level + 2]\n    var nz = shape[level + 3]\n    for (i = 0; i < n; ++i) {\n      flatten3D(array[i], nx, ny, nz, out, ptr)\n      ptr += stride\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      flattenRec(array[i], shape, level + 1, out, ptr)\n      ptr += stride\n    }\n  }\n}\n\nfunction flattenArray (array, shape, type, out_) {\n  var sz = 1\n  if (shape.length) {\n    for (var i = 0; i < shape.length; ++i) {\n      sz *= shape[i]\n    }\n  } else {\n    sz = 0\n  }\n  var out = out_ || pool.allocType(type, sz)\n  switch (shape.length) {\n    case 0:\n      break\n    case 1:\n      flatten1D(array, shape[0], out)\n      break\n    case 2:\n      flatten2D(array, shape[0], shape[1], out)\n      break\n    case 3:\n      flatten3D(array, shape[0], shape[1], shape[2], out, 0)\n      break\n    default:\n      flattenRec(array, shape, 0, out, 0)\n  }\n  return out\n}\n\nfunction arrayShape$1 (array_) {\n  var shape = []\n  for (var array = array_; array.length; array = array[0]) {\n    shape.push(array.length)\n  }\n  return shape\n}\n\nvar arrayTypes = {\n\t\"[object Int8Array]\": 5120,\n\t\"[object Int16Array]\": 5122,\n\t\"[object Int32Array]\": 5124,\n\t\"[object Uint8Array]\": 5121,\n\t\"[object Uint8ClampedArray]\": 5121,\n\t\"[object Uint16Array]\": 5123,\n\t\"[object Uint32Array]\": 5125,\n\t\"[object Float32Array]\": 5126,\n\t\"[object Float64Array]\": 5121,\n\t\"[object ArrayBuffer]\": 5121\n};\n\nvar int8 = 5120;\nvar int16 = 5122;\nvar int32 = 5124;\nvar uint8 = 5121;\nvar uint16 = 5123;\nvar uint32 = 5125;\nvar float = 5126;\nvar float32 = 5126;\nvar glTypes = {\n\tint8: int8,\n\tint16: int16,\n\tint32: int32,\n\tuint8: uint8,\n\tuint16: uint16,\n\tuint32: uint32,\n\tfloat: float,\n\tfloat32: float32\n};\n\nvar dynamic$1 = 35048;\nvar stream = 35040;\nvar usageTypes = {\n\tdynamic: dynamic$1,\n\tstream: stream,\n\t\"static\": 35044\n};\n\nvar arrayFlatten = flattenUtils.flatten\nvar arrayShape = flattenUtils.shape\n\nvar GL_STATIC_DRAW = 0x88E4\nvar GL_STREAM_DRAW = 0x88E0\n\nvar GL_UNSIGNED_BYTE$2 = 5121\nvar GL_FLOAT$2 = 5126\n\nvar DTYPES_SIZES = []\nDTYPES_SIZES[5120] = 1 // int8\nDTYPES_SIZES[5122] = 2 // int16\nDTYPES_SIZES[5124] = 4 // int32\nDTYPES_SIZES[5121] = 1 // uint8\nDTYPES_SIZES[5123] = 2 // uint16\nDTYPES_SIZES[5125] = 4 // uint32\nDTYPES_SIZES[5126] = 4 // float32\n\nfunction typedArrayCode (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction copyArray (out, inp) {\n  for (var i = 0; i < inp.length; ++i) {\n    out[i] = inp[i]\n  }\n}\n\nfunction transpose (\n  result, data, shapeX, shapeY, strideX, strideY, offset) {\n  var ptr = 0\n  for (var i = 0; i < shapeX; ++i) {\n    for (var j = 0; j < shapeY; ++j) {\n      result[ptr++] = data[strideX * i + strideY * j + offset]\n    }\n  }\n}\n\nfunction wrapBufferState (gl, stats, config, destroyBuffer) {\n  var bufferCount = 0\n  var bufferSet = {}\n\n  function REGLBuffer (type) {\n    this.id = bufferCount++\n    this.buffer = gl.createBuffer()\n    this.type = type\n    this.usage = GL_STATIC_DRAW\n    this.byteLength = 0\n    this.dimension = 1\n    this.dtype = GL_UNSIGNED_BYTE$2\n\n    this.persistentData = null\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  REGLBuffer.prototype.bind = function () {\n    gl.bindBuffer(this.type, this.buffer)\n  }\n\n  REGLBuffer.prototype.destroy = function () {\n    destroy(this)\n  }\n\n  var streamPool = []\n\n  function createStream (type, data) {\n    var buffer = streamPool.pop()\n    if (!buffer) {\n      buffer = new REGLBuffer(type)\n    }\n    buffer.bind()\n    initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false)\n    return buffer\n  }\n\n  function destroyStream (stream$$1) {\n    streamPool.push(stream$$1)\n  }\n\n  function initBufferFromTypedArray (buffer, data, usage) {\n    buffer.byteLength = data.byteLength\n    gl.bufferData(buffer.type, data, usage)\n  }\n\n  function initBufferFromData (buffer, data, usage, dtype, dimension, persist) {\n    var shape\n    buffer.usage = usage\n    if (Array.isArray(data)) {\n      buffer.dtype = dtype || GL_FLOAT$2\n      if (data.length > 0) {\n        var flatData\n        if (Array.isArray(data[0])) {\n          shape = arrayShape(data)\n          var dim = 1\n          for (var i = 1; i < shape.length; ++i) {\n            dim *= shape[i]\n          }\n          buffer.dimension = dim\n          flatData = arrayFlatten(data, shape, buffer.dtype)\n          initBufferFromTypedArray(buffer, flatData, usage)\n          if (persist) {\n            buffer.persistentData = flatData\n          } else {\n            pool.freeType(flatData)\n          }\n        } else if (typeof data[0] === 'number') {\n          buffer.dimension = dimension\n          var typedData = pool.allocType(buffer.dtype, data.length)\n          copyArray(typedData, data)\n          initBufferFromTypedArray(buffer, typedData, usage)\n          if (persist) {\n            buffer.persistentData = typedData\n          } else {\n            pool.freeType(typedData)\n          }\n        } else if (isTypedArray(data[0])) {\n          buffer.dimension = data[0].length\n          buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$2\n          flatData = arrayFlatten(\n            data,\n            [data.length, data[0].length],\n            buffer.dtype)\n          initBufferFromTypedArray(buffer, flatData, usage)\n          if (persist) {\n            buffer.persistentData = flatData\n          } else {\n            pool.freeType(flatData)\n          }\n        } else {\n          \n        }\n      }\n    } else if (isTypedArray(data)) {\n      buffer.dtype = dtype || typedArrayCode(data)\n      buffer.dimension = dimension\n      initBufferFromTypedArray(buffer, data, usage)\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer))\n      }\n    } else if (isNDArrayLike(data)) {\n      shape = data.shape\n      var stride = data.stride\n      var offset = data.offset\n\n      var shapeX = 0\n      var shapeY = 0\n      var strideX = 0\n      var strideY = 0\n      if (shape.length === 1) {\n        shapeX = shape[0]\n        shapeY = 1\n        strideX = stride[0]\n        strideY = 0\n      } else if (shape.length === 2) {\n        shapeX = shape[0]\n        shapeY = shape[1]\n        strideX = stride[0]\n        strideY = stride[1]\n      } else {\n        \n      }\n\n      buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$2\n      buffer.dimension = shapeY\n\n      var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY)\n      transpose(transposeData,\n        data.data,\n        shapeX, shapeY,\n        strideX, strideY,\n        offset)\n      initBufferFromTypedArray(buffer, transposeData, usage)\n      if (persist) {\n        buffer.persistentData = transposeData\n      } else {\n        pool.freeType(transposeData)\n      }\n    } else if (data instanceof ArrayBuffer) {\n      buffer.dtype = GL_UNSIGNED_BYTE$2\n      buffer.dimension = dimension\n      initBufferFromTypedArray(buffer, data, usage)\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data))\n      }\n    } else {\n      \n    }\n  }\n\n  function destroy (buffer) {\n    stats.bufferCount--\n\n    // remove attribute link\n    destroyBuffer(buffer)\n\n    var handle = buffer.buffer\n    \n    gl.deleteBuffer(handle)\n    buffer.buffer = null\n    delete bufferSet[buffer.id]\n  }\n\n  function createBuffer (options, type, deferInit, persistent) {\n    stats.bufferCount++\n\n    var buffer = new REGLBuffer(type)\n    bufferSet[buffer.id] = buffer\n\n    function reglBuffer (options) {\n      var usage = GL_STATIC_DRAW\n      var data = null\n      var byteLength = 0\n      var dtype = 0\n      var dimension = 1\n      if (Array.isArray(options) ||\n          isTypedArray(options) ||\n          isNDArrayLike(options) ||\n          options instanceof ArrayBuffer) {\n        data = options\n      } else if (typeof options === 'number') {\n        byteLength = options | 0\n      } else if (options) {\n        \n\n        if ('data' in options) {\n          \n          data = options.data\n        }\n\n        if ('usage' in options) {\n          \n          usage = usageTypes[options.usage]\n        }\n\n        if ('type' in options) {\n          \n          dtype = glTypes[options.type]\n        }\n\n        if ('dimension' in options) {\n          \n          dimension = options.dimension | 0\n        }\n\n        if ('length' in options) {\n          \n          byteLength = options.length | 0\n        }\n      }\n\n      buffer.bind()\n      if (!data) {\n        // #475\n        if (byteLength) gl.bufferData(buffer.type, byteLength, usage)\n        buffer.dtype = dtype || GL_UNSIGNED_BYTE$2\n        buffer.usage = usage\n        buffer.dimension = dimension\n        buffer.byteLength = byteLength\n      } else {\n        initBufferFromData(buffer, data, usage, dtype, dimension, persistent)\n      }\n\n      if (config.profile) {\n        buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype]\n      }\n\n      return reglBuffer\n    }\n\n    function setSubData (data, offset) {\n      \n\n      gl.bufferSubData(buffer.type, offset, data)\n    }\n\n    function subdata (data, offset_) {\n      var offset = (offset_ || 0) | 0\n      var shape\n      buffer.bind()\n      if (isTypedArray(data) || data instanceof ArrayBuffer) {\n        setSubData(data, offset)\n      } else if (Array.isArray(data)) {\n        if (data.length > 0) {\n          if (typeof data[0] === 'number') {\n            var converted = pool.allocType(buffer.dtype, data.length)\n            copyArray(converted, data)\n            setSubData(converted, offset)\n            pool.freeType(converted)\n          } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n            shape = arrayShape(data)\n            var flatData = arrayFlatten(data, shape, buffer.dtype)\n            setSubData(flatData, offset)\n            pool.freeType(flatData)\n          } else {\n            \n          }\n        }\n      } else if (isNDArrayLike(data)) {\n        shape = data.shape\n        var stride = data.stride\n\n        var shapeX = 0\n        var shapeY = 0\n        var strideX = 0\n        var strideY = 0\n        if (shape.length === 1) {\n          shapeX = shape[0]\n          shapeY = 1\n          strideX = stride[0]\n          strideY = 0\n        } else if (shape.length === 2) {\n          shapeX = shape[0]\n          shapeY = shape[1]\n          strideX = stride[0]\n          strideY = stride[1]\n        } else {\n          \n        }\n        var dtype = Array.isArray(data.data)\n          ? buffer.dtype\n          : typedArrayCode(data.data)\n\n        var transposeData = pool.allocType(dtype, shapeX * shapeY)\n        transpose(transposeData,\n          data.data,\n          shapeX, shapeY,\n          strideX, strideY,\n          data.offset)\n        setSubData(transposeData, offset)\n        pool.freeType(transposeData)\n      } else {\n        \n      }\n      return reglBuffer\n    }\n\n    if (!deferInit) {\n      reglBuffer(options)\n    }\n\n    reglBuffer._reglType = 'buffer'\n    reglBuffer._buffer = buffer\n    reglBuffer.subdata = subdata\n    if (config.profile) {\n      reglBuffer.stats = buffer.stats\n    }\n    reglBuffer.destroy = function () { destroy(buffer) }\n\n    return reglBuffer\n  }\n\n  function restoreBuffers () {\n    values(bufferSet).forEach(function (buffer) {\n      buffer.buffer = gl.createBuffer()\n      gl.bindBuffer(buffer.type, buffer.buffer)\n      gl.bufferData(\n        buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage)\n    })\n  }\n\n  if (config.profile) {\n    stats.getTotalBufferSize = function () {\n      var total = 0\n      // TODO: Right now, the streams are not part of the total count.\n      Object.keys(bufferSet).forEach(function (key) {\n        total += bufferSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  return {\n    create: createBuffer,\n\n    createStream: createStream,\n    destroyStream: destroyStream,\n\n    clear: function () {\n      values(bufferSet).forEach(destroy)\n      streamPool.forEach(destroy)\n    },\n\n    getBuffer: function (wrapper) {\n      if (wrapper && wrapper._buffer instanceof REGLBuffer) {\n        return wrapper._buffer\n      }\n      return null\n    },\n\n    restore: restoreBuffers,\n\n    _initBuffer: initBufferFromData\n  }\n}\n\nvar points = 0;\nvar point = 0;\nvar lines = 1;\nvar line = 1;\nvar triangles = 4;\nvar triangle = 4;\nvar primTypes = {\n\tpoints: points,\n\tpoint: point,\n\tlines: lines,\n\tline: line,\n\ttriangles: triangles,\n\ttriangle: triangle,\n\t\"line loop\": 2,\n\t\"line strip\": 3,\n\t\"triangle strip\": 5,\n\t\"triangle fan\": 6\n};\n\nvar GL_POINTS = 0\nvar GL_LINES = 1\nvar GL_TRIANGLES = 4\n\nvar GL_BYTE$1 = 5120\nvar GL_UNSIGNED_BYTE$3 = 5121\nvar GL_SHORT$1 = 5122\nvar GL_UNSIGNED_SHORT$1 = 5123\nvar GL_INT$1 = 5124\nvar GL_UNSIGNED_INT$1 = 5125\n\nvar GL_ELEMENT_ARRAY_BUFFER = 34963\n\nvar GL_STREAM_DRAW$1 = 0x88E0\nvar GL_STATIC_DRAW$1 = 0x88E4\n\nfunction wrapElementsState (gl, extensions, bufferState, stats) {\n  var elementSet = {}\n  var elementCount = 0\n\n  var elementTypes = {\n    'uint8': GL_UNSIGNED_BYTE$3,\n    'uint16': GL_UNSIGNED_SHORT$1\n  }\n\n  if (extensions.oes_element_index_uint) {\n    elementTypes.uint32 = GL_UNSIGNED_INT$1\n  }\n\n  function REGLElementBuffer (buffer) {\n    this.id = elementCount++\n    elementSet[this.id] = this\n    this.buffer = buffer\n    this.primType = GL_TRIANGLES\n    this.vertCount = 0\n    this.type = 0\n  }\n\n  REGLElementBuffer.prototype.bind = function () {\n    this.buffer.bind()\n  }\n\n  var bufferPool = []\n\n  function createElementStream (data) {\n    var result = bufferPool.pop()\n    if (!result) {\n      result = new REGLElementBuffer(bufferState.create(\n        null,\n        GL_ELEMENT_ARRAY_BUFFER,\n        true,\n        false)._buffer)\n    }\n    initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0)\n    return result\n  }\n\n  function destroyElementStream (elements) {\n    bufferPool.push(elements)\n  }\n\n  function initElements (\n    elements,\n    data,\n    usage,\n    prim,\n    count,\n    byteLength,\n    type) {\n    elements.buffer.bind()\n    var dtype\n    if (data) {\n      var predictedType = type\n      if (!type && (\n        !isTypedArray(data) ||\n         (isNDArrayLike(data) && !isTypedArray(data.data)))) {\n        predictedType = extensions.oes_element_index_uint\n          ? GL_UNSIGNED_INT$1\n          : GL_UNSIGNED_SHORT$1\n      }\n      bufferState._initBuffer(\n        elements.buffer,\n        data,\n        usage,\n        predictedType,\n        3)\n    } else {\n      gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage)\n      elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$3\n      elements.buffer.usage = usage\n      elements.buffer.dimension = 3\n      elements.buffer.byteLength = byteLength\n    }\n\n    dtype = type\n    if (!type) {\n      switch (elements.buffer.dtype) {\n        case GL_UNSIGNED_BYTE$3:\n        case GL_BYTE$1:\n          dtype = GL_UNSIGNED_BYTE$3\n          break\n\n        case GL_UNSIGNED_SHORT$1:\n        case GL_SHORT$1:\n          dtype = GL_UNSIGNED_SHORT$1\n          break\n\n        case GL_UNSIGNED_INT$1:\n        case GL_INT$1:\n          dtype = GL_UNSIGNED_INT$1\n          break\n\n        default:\n          \n      }\n      elements.buffer.dtype = dtype\n    }\n    elements.type = dtype\n\n    // Check oes_element_index_uint extension\n    \n\n    // try to guess default primitive type and arguments\n    var vertCount = count\n    if (vertCount < 0) {\n      vertCount = elements.buffer.byteLength\n      if (dtype === GL_UNSIGNED_SHORT$1) {\n        vertCount >>= 1\n      } else if (dtype === GL_UNSIGNED_INT$1) {\n        vertCount >>= 2\n      }\n    }\n    elements.vertCount = vertCount\n\n    // try to guess primitive type from cell dimension\n    var primType = prim\n    if (prim < 0) {\n      primType = GL_TRIANGLES\n      var dimension = elements.buffer.dimension\n      if (dimension === 1) primType = GL_POINTS\n      if (dimension === 2) primType = GL_LINES\n      if (dimension === 3) primType = GL_TRIANGLES\n    }\n    elements.primType = primType\n  }\n\n  function destroyElements (elements) {\n    stats.elementsCount--\n\n    \n    delete elementSet[elements.id]\n    elements.buffer.destroy()\n    elements.buffer = null\n  }\n\n  function createElements (options, persistent) {\n    var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true)\n    var elements = new REGLElementBuffer(buffer._buffer)\n    stats.elementsCount++\n\n    function reglElements (options) {\n      if (!options) {\n        buffer()\n        elements.primType = GL_TRIANGLES\n        elements.vertCount = 0\n        elements.type = GL_UNSIGNED_BYTE$3\n      } else if (typeof options === 'number') {\n        buffer(options)\n        elements.primType = GL_TRIANGLES\n        elements.vertCount = options | 0\n        elements.type = GL_UNSIGNED_BYTE$3\n      } else {\n        var data = null\n        var usage = GL_STATIC_DRAW$1\n        var primType = -1\n        var vertCount = -1\n        var byteLength = 0\n        var dtype = 0\n        if (Array.isArray(options) ||\n            isTypedArray(options) ||\n            isNDArrayLike(options)) {\n          data = options\n        } else {\n          \n          if ('data' in options) {\n            data = options.data\n            \n          }\n          if ('usage' in options) {\n            \n            usage = usageTypes[options.usage]\n          }\n          if ('primitive' in options) {\n            \n            primType = primTypes[options.primitive]\n          }\n          if ('count' in options) {\n            \n            vertCount = options.count | 0\n          }\n          if ('type' in options) {\n            \n            dtype = elementTypes[options.type]\n          }\n          if ('length' in options) {\n            byteLength = options.length | 0\n          } else {\n            byteLength = vertCount\n            if (dtype === GL_UNSIGNED_SHORT$1 || dtype === GL_SHORT$1) {\n              byteLength *= 2\n            } else if (dtype === GL_UNSIGNED_INT$1 || dtype === GL_INT$1) {\n              byteLength *= 4\n            }\n          }\n        }\n        initElements(\n          elements,\n          data,\n          usage,\n          primType,\n          vertCount,\n          byteLength,\n          dtype)\n      }\n\n      return reglElements\n    }\n\n    reglElements(options)\n\n    reglElements._reglType = 'elements'\n    reglElements._elements = elements\n    reglElements.subdata = function (data, offset) {\n      buffer.subdata(data, offset)\n      return reglElements\n    }\n    reglElements.destroy = function () {\n      destroyElements(elements)\n    }\n\n    return reglElements\n  }\n\n  return {\n    create: createElements,\n    createStream: createElementStream,\n    destroyStream: destroyElementStream,\n    getElements: function (elements) {\n      if (typeof elements === 'function' &&\n          elements._elements instanceof REGLElementBuffer) {\n        return elements._elements\n      }\n      return null\n    },\n    clear: function () {\n      values(elementSet).forEach(destroyElements)\n    }\n  }\n}\n\nvar FLOAT = new Float32Array(1)\nvar INT = new Uint32Array(FLOAT.buffer)\n\nvar GL_UNSIGNED_SHORT$3 = 5123\n\nfunction convertToHalfFloat (array) {\n  var ushorts = pool.allocType(GL_UNSIGNED_SHORT$3, array.length)\n\n  for (var i = 0; i < array.length; ++i) {\n    if (isNaN(array[i])) {\n      ushorts[i] = 0xffff\n    } else if (array[i] === Infinity) {\n      ushorts[i] = 0x7c00\n    } else if (array[i] === -Infinity) {\n      ushorts[i] = 0xfc00\n    } else {\n      FLOAT[0] = array[i]\n      var x = INT[0]\n\n      var sgn = (x >>> 31) << 15\n      var exp = ((x << 1) >>> 24) - 127\n      var frac = (x >> 13) & ((1 << 10) - 1)\n\n      if (exp < -24) {\n        // round non-representable denormals to 0\n        ushorts[i] = sgn\n      } else if (exp < -14) {\n        // handle denormals\n        var s = -14 - exp\n        ushorts[i] = sgn + ((frac + (1 << 10)) >> s)\n      } else if (exp > 15) {\n        // round overflow to +/- Infinity\n        ushorts[i] = sgn + 0x7c00\n      } else {\n        // otherwise convert directly\n        ushorts[i] = sgn + ((exp + 15) << 10) + frac\n      }\n    }\n  }\n\n  return ushorts\n}\n\nfunction isArrayLike (s) {\n  return Array.isArray(s) || isTypedArray(s)\n}\n\nvar GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3\n\nvar GL_TEXTURE_2D$1 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP$1 = 0x8513\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515\n\nvar GL_RGBA$1 = 0x1908\nvar GL_ALPHA = 0x1906\nvar GL_RGB = 0x1907\nvar GL_LUMINANCE = 0x1909\nvar GL_LUMINANCE_ALPHA = 0x190A\n\nvar GL_RGBA4 = 0x8056\nvar GL_RGB5_A1 = 0x8057\nvar GL_RGB565 = 0x8D62\n\nvar GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033\nvar GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034\nvar GL_UNSIGNED_SHORT_5_6_5 = 0x8363\nvar GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA\n\nvar GL_DEPTH_COMPONENT = 0x1902\nvar GL_DEPTH_STENCIL = 0x84F9\n\nvar GL_SRGB_EXT = 0x8C40\nvar GL_SRGB_ALPHA_EXT = 0x8C42\n\nvar GL_HALF_FLOAT_OES = 0x8D61\n\nvar GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0\nvar GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1\nvar GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2\nvar GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3\n\nvar GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92\nvar GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93\nvar GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE\n\nvar GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00\nvar GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01\nvar GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02\nvar GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03\n\nvar GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64\n\nvar GL_UNSIGNED_BYTE$4 = 0x1401\nvar GL_UNSIGNED_SHORT$2 = 0x1403\nvar GL_UNSIGNED_INT$2 = 0x1405\nvar GL_FLOAT$3 = 0x1406\n\nvar GL_TEXTURE_WRAP_S = 0x2802\nvar GL_TEXTURE_WRAP_T = 0x2803\n\nvar GL_REPEAT = 0x2901\nvar GL_CLAMP_TO_EDGE = 0x812F\nvar GL_MIRRORED_REPEAT = 0x8370\n\nvar GL_TEXTURE_MAG_FILTER = 0x2800\nvar GL_TEXTURE_MIN_FILTER = 0x2801\n\nvar GL_NEAREST = 0x2600\nvar GL_LINEAR = 0x2601\nvar GL_NEAREST_MIPMAP_NEAREST = 0x2700\nvar GL_LINEAR_MIPMAP_NEAREST = 0x2701\nvar GL_NEAREST_MIPMAP_LINEAR = 0x2702\nvar GL_LINEAR_MIPMAP_LINEAR = 0x2703\n\nvar GL_GENERATE_MIPMAP_HINT = 0x8192\nvar GL_DONT_CARE = 0x1100\nvar GL_FASTEST = 0x1101\nvar GL_NICEST = 0x1102\n\nvar GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE\n\nvar GL_UNPACK_ALIGNMENT = 0x0CF5\nvar GL_UNPACK_FLIP_Y_WEBGL = 0x9240\nvar GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241\nvar GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243\n\nvar GL_BROWSER_DEFAULT_WEBGL = 0x9244\n\nvar GL_TEXTURE0$1 = 0x84C0\n\nvar MIPMAP_FILTERS = [\n  GL_NEAREST_MIPMAP_NEAREST,\n  GL_NEAREST_MIPMAP_LINEAR,\n  GL_LINEAR_MIPMAP_NEAREST,\n  GL_LINEAR_MIPMAP_LINEAR\n]\n\nvar CHANNELS_FORMAT = [\n  0,\n  GL_LUMINANCE,\n  GL_LUMINANCE_ALPHA,\n  GL_RGB,\n  GL_RGBA$1\n]\n\nvar FORMAT_CHANNELS = {}\nFORMAT_CHANNELS[GL_LUMINANCE] =\nFORMAT_CHANNELS[GL_ALPHA] =\nFORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1\nFORMAT_CHANNELS[GL_DEPTH_STENCIL] =\nFORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2\nFORMAT_CHANNELS[GL_RGB] =\nFORMAT_CHANNELS[GL_SRGB_EXT] = 3\nFORMAT_CHANNELS[GL_RGBA$1] =\nFORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4\n\nfunction objectName (str) {\n  return '[object ' + str + ']'\n}\n\nvar CANVAS_CLASS = objectName('HTMLCanvasElement')\nvar OFFSCREENCANVAS_CLASS = objectName('OffscreenCanvas')\nvar CONTEXT2D_CLASS = objectName('CanvasRenderingContext2D')\nvar BITMAP_CLASS = objectName('ImageBitmap')\nvar IMAGE_CLASS = objectName('HTMLImageElement')\nvar VIDEO_CLASS = objectName('HTMLVideoElement')\n\nvar PIXEL_CLASSES = Object.keys(arrayTypes).concat([\n  CANVAS_CLASS,\n  OFFSCREENCANVAS_CLASS,\n  CONTEXT2D_CLASS,\n  BITMAP_CLASS,\n  IMAGE_CLASS,\n  VIDEO_CLASS\n])\n\n// for every texture type, store\n// the size in bytes.\nvar TYPE_SIZES = []\nTYPE_SIZES[GL_UNSIGNED_BYTE$4] = 1\nTYPE_SIZES[GL_FLOAT$3] = 4\nTYPE_SIZES[GL_HALF_FLOAT_OES] = 2\n\nTYPE_SIZES[GL_UNSIGNED_SHORT$2] = 2\nTYPE_SIZES[GL_UNSIGNED_INT$2] = 4\n\nvar FORMAT_SIZES_SPECIAL = []\nFORMAT_SIZES_SPECIAL[GL_RGBA4] = 2\nFORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2\nFORMAT_SIZES_SPECIAL[GL_RGB565] = 2\nFORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5\n\nfunction isNumericArray (arr) {\n  return (\n    Array.isArray(arr) &&\n    (arr.length === 0 ||\n    typeof arr[0] === 'number'))\n}\n\nfunction isRectArray (arr) {\n  if (!Array.isArray(arr)) {\n    return false\n  }\n  var width = arr.length\n  if (width === 0 || !isArrayLike(arr[0])) {\n    return false\n  }\n  return true\n}\n\nfunction classString (x) {\n  return Object.prototype.toString.call(x)\n}\n\nfunction isCanvasElement (object) {\n  return classString(object) === CANVAS_CLASS\n}\n\nfunction isOffscreenCanvas (object) {\n  return classString(object) === OFFSCREENCANVAS_CLASS\n}\n\nfunction isContext2D (object) {\n  return classString(object) === CONTEXT2D_CLASS\n}\n\nfunction isBitmap (object) {\n  return classString(object) === BITMAP_CLASS\n}\n\nfunction isImageElement (object) {\n  return classString(object) === IMAGE_CLASS\n}\n\nfunction isVideoElement (object) {\n  return classString(object) === VIDEO_CLASS\n}\n\nfunction isPixelData (object) {\n  if (!object) {\n    return false\n  }\n  var className = classString(object)\n  if (PIXEL_CLASSES.indexOf(className) >= 0) {\n    return true\n  }\n  return (\n    isNumericArray(object) ||\n    isRectArray(object) ||\n    isNDArrayLike(object))\n}\n\nfunction typedArrayCode$1 (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction convertData (result, data) {\n  var n = data.length\n  switch (result.type) {\n    case GL_UNSIGNED_BYTE$4:\n    case GL_UNSIGNED_SHORT$2:\n    case GL_UNSIGNED_INT$2:\n    case GL_FLOAT$3:\n      var converted = pool.allocType(result.type, n)\n      converted.set(data)\n      result.data = converted\n      break\n\n    case GL_HALF_FLOAT_OES:\n      result.data = convertToHalfFloat(data)\n      break\n\n    default:\n      \n  }\n}\n\nfunction preConvert (image, n) {\n  return pool.allocType(\n    image.type === GL_HALF_FLOAT_OES\n      ? GL_FLOAT$3\n      : image.type, n)\n}\n\nfunction postConvert (image, data) {\n  if (image.type === GL_HALF_FLOAT_OES) {\n    image.data = convertToHalfFloat(data)\n    pool.freeType(data)\n  } else {\n    image.data = data\n  }\n}\n\nfunction transposeData (image, array, strideX, strideY, strideC, offset) {\n  var w = image.width\n  var h = image.height\n  var c = image.channels\n  var n = w * h * c\n  var data = preConvert(image, n)\n\n  var p = 0\n  for (var i = 0; i < h; ++i) {\n    for (var j = 0; j < w; ++j) {\n      for (var k = 0; k < c; ++k) {\n        data[p++] = array[strideX * j + strideY * i + strideC * k + offset]\n      }\n    }\n  }\n\n  postConvert(image, data)\n}\n\nfunction getTextureSize (format, type, width, height, isMipmap, isCube) {\n  var s\n  if (typeof FORMAT_SIZES_SPECIAL[format] !== 'undefined') {\n    // we have a special array for dealing with weird color formats such as RGB5A1\n    s = FORMAT_SIZES_SPECIAL[format]\n  } else {\n    s = FORMAT_CHANNELS[format] * TYPE_SIZES[type]\n  }\n\n  if (isCube) {\n    s *= 6\n  }\n\n  if (isMipmap) {\n    // compute the total size of all the mipmaps.\n    var total = 0\n\n    var w = width\n    while (w >= 1) {\n      // we can only use mipmaps on a square image,\n      // so we can simply use the width and ignore the height:\n      total += s * w * w\n      w /= 2\n    }\n    return total\n  } else {\n    return s * width * height\n  }\n}\n\nfunction createTextureSet (\n  gl, extensions, limits, reglPoll, contextState, stats, config) {\n  // -------------------------------------------------------\n  // Initialize constants and parameter tables here\n  // -------------------------------------------------------\n  var mipmapHint = {\n    \"don't care\": GL_DONT_CARE,\n    'dont care': GL_DONT_CARE,\n    'nice': GL_NICEST,\n    'fast': GL_FASTEST\n  }\n\n  var wrapModes = {\n    'repeat': GL_REPEAT,\n    'clamp': GL_CLAMP_TO_EDGE,\n    'mirror': GL_MIRRORED_REPEAT\n  }\n\n  var magFilters = {\n    'nearest': GL_NEAREST,\n    'linear': GL_LINEAR\n  }\n\n  var minFilters = extend({\n    'mipmap': GL_LINEAR_MIPMAP_LINEAR,\n    'nearest mipmap nearest': GL_NEAREST_MIPMAP_NEAREST,\n    'linear mipmap nearest': GL_LINEAR_MIPMAP_NEAREST,\n    'nearest mipmap linear': GL_NEAREST_MIPMAP_LINEAR,\n    'linear mipmap linear': GL_LINEAR_MIPMAP_LINEAR\n  }, magFilters)\n\n  var colorSpace = {\n    'none': 0,\n    'browser': GL_BROWSER_DEFAULT_WEBGL\n  }\n\n  var textureTypes = {\n    'uint8': GL_UNSIGNED_BYTE$4,\n    'rgba4': GL_UNSIGNED_SHORT_4_4_4_4,\n    'rgb565': GL_UNSIGNED_SHORT_5_6_5,\n    'rgb5 a1': GL_UNSIGNED_SHORT_5_5_5_1\n  }\n\n  var textureFormats = {\n    'alpha': GL_ALPHA,\n    'luminance': GL_LUMINANCE,\n    'luminance alpha': GL_LUMINANCE_ALPHA,\n    'rgb': GL_RGB,\n    'rgba': GL_RGBA$1,\n    'rgba4': GL_RGBA4,\n    'rgb5 a1': GL_RGB5_A1,\n    'rgb565': GL_RGB565\n  }\n\n  var compressedTextureFormats = {}\n\n  if (extensions.ext_srgb) {\n    textureFormats.srgb = GL_SRGB_EXT\n    textureFormats.srgba = GL_SRGB_ALPHA_EXT\n  }\n\n  if (extensions.oes_texture_float) {\n    textureTypes.float32 = textureTypes.float = GL_FLOAT$3\n  }\n\n  if (extensions.oes_texture_half_float) {\n    textureTypes['float16'] = textureTypes['half float'] = GL_HALF_FLOAT_OES\n  }\n\n  if (extensions.webgl_depth_texture) {\n    extend(textureFormats, {\n      'depth': GL_DEPTH_COMPONENT,\n      'depth stencil': GL_DEPTH_STENCIL\n    })\n\n    extend(textureTypes, {\n      'uint16': GL_UNSIGNED_SHORT$2,\n      'uint32': GL_UNSIGNED_INT$2,\n      'depth stencil': GL_UNSIGNED_INT_24_8_WEBGL\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_s3tc) {\n    extend(compressedTextureFormats, {\n      'rgb s3tc dxt1': GL_COMPRESSED_RGB_S3TC_DXT1_EXT,\n      'rgba s3tc dxt1': GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      'rgba s3tc dxt3': GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      'rgba s3tc dxt5': GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_atc) {\n    extend(compressedTextureFormats, {\n      'rgb atc': GL_COMPRESSED_RGB_ATC_WEBGL,\n      'rgba atc explicit alpha': GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n      'rgba atc interpolated alpha': GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_pvrtc) {\n    extend(compressedTextureFormats, {\n      'rgb pvrtc 4bppv1': GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n      'rgb pvrtc 2bppv1': GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\n      'rgba pvrtc 4bppv1': GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n      'rgba pvrtc 2bppv1': GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_etc1) {\n    compressedTextureFormats['rgb etc1'] = GL_COMPRESSED_RGB_ETC1_WEBGL\n  }\n\n  // Copy over all texture formats\n  var supportedCompressedFormats = Array.prototype.slice.call(\n    gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS))\n  Object.keys(compressedTextureFormats).forEach(function (name) {\n    var format = compressedTextureFormats[name]\n    if (supportedCompressedFormats.indexOf(format) >= 0) {\n      textureFormats[name] = format\n    }\n  })\n\n  var supportedFormats = Object.keys(textureFormats)\n  limits.textureFormats = supportedFormats\n\n  // associate with every format string its\n  // corresponding GL-value.\n  var textureFormatsInvert = []\n  Object.keys(textureFormats).forEach(function (key) {\n    var val = textureFormats[key]\n    textureFormatsInvert[val] = key\n  })\n\n  // associate with every type string its\n  // corresponding GL-value.\n  var textureTypesInvert = []\n  Object.keys(textureTypes).forEach(function (key) {\n    var val = textureTypes[key]\n    textureTypesInvert[val] = key\n  })\n\n  var magFiltersInvert = []\n  Object.keys(magFilters).forEach(function (key) {\n    var val = magFilters[key]\n    magFiltersInvert[val] = key\n  })\n\n  var minFiltersInvert = []\n  Object.keys(minFilters).forEach(function (key) {\n    var val = minFilters[key]\n    minFiltersInvert[val] = key\n  })\n\n  var wrapModesInvert = []\n  Object.keys(wrapModes).forEach(function (key) {\n    var val = wrapModes[key]\n    wrapModesInvert[val] = key\n  })\n\n  // colorFormats[] gives the format (channels) associated to an\n  // internalformat\n  var colorFormats = supportedFormats.reduce(function (color, key) {\n    var glenum = textureFormats[key]\n    if (glenum === GL_LUMINANCE ||\n        glenum === GL_ALPHA ||\n        glenum === GL_LUMINANCE ||\n        glenum === GL_LUMINANCE_ALPHA ||\n        glenum === GL_DEPTH_COMPONENT ||\n        glenum === GL_DEPTH_STENCIL ||\n        (extensions.ext_srgb &&\n                (glenum === GL_SRGB_EXT ||\n                 glenum === GL_SRGB_ALPHA_EXT))) {\n      color[glenum] = glenum\n    } else if (glenum === GL_RGB5_A1 || key.indexOf('rgba') >= 0) {\n      color[glenum] = GL_RGBA$1\n    } else {\n      color[glenum] = GL_RGB\n    }\n    return color\n  }, {})\n\n  function TexFlags () {\n    // format info\n    this.internalformat = GL_RGBA$1\n    this.format = GL_RGBA$1\n    this.type = GL_UNSIGNED_BYTE$4\n    this.compressed = false\n\n    // pixel storage\n    this.premultiplyAlpha = false\n    this.flipY = false\n    this.unpackAlignment = 1\n    this.colorSpace = GL_BROWSER_DEFAULT_WEBGL\n\n    // shape info\n    this.width = 0\n    this.height = 0\n    this.channels = 0\n  }\n\n  function copyFlags (result, other) {\n    result.internalformat = other.internalformat\n    result.format = other.format\n    result.type = other.type\n    result.compressed = other.compressed\n\n    result.premultiplyAlpha = other.premultiplyAlpha\n    result.flipY = other.flipY\n    result.unpackAlignment = other.unpackAlignment\n    result.colorSpace = other.colorSpace\n\n    result.width = other.width\n    result.height = other.height\n    result.channels = other.channels\n  }\n\n  function parseFlags (flags, options) {\n    if (typeof options !== 'object' || !options) {\n      return\n    }\n\n    if ('premultiplyAlpha' in options) {\n      \n      flags.premultiplyAlpha = options.premultiplyAlpha\n    }\n\n    if ('flipY' in options) {\n      \n      flags.flipY = options.flipY\n    }\n\n    if ('alignment' in options) {\n      \n      flags.unpackAlignment = options.alignment\n    }\n\n    if ('colorSpace' in options) {\n      \n      flags.colorSpace = colorSpace[options.colorSpace]\n    }\n\n    if ('type' in options) {\n      var type = options.type\n      \n      \n      \n      \n      flags.type = textureTypes[type]\n    }\n\n    var w = flags.width\n    var h = flags.height\n    var c = flags.channels\n    var hasChannels = false\n    if ('shape' in options) {\n      \n      w = options.shape[0]\n      h = options.shape[1]\n      if (options.shape.length === 3) {\n        c = options.shape[2]\n        \n        hasChannels = true\n      }\n      \n      \n    } else {\n      if ('radius' in options) {\n        w = h = options.radius\n        \n      }\n      if ('width' in options) {\n        w = options.width\n        \n      }\n      if ('height' in options) {\n        h = options.height\n        \n      }\n      if ('channels' in options) {\n        c = options.channels\n        \n        hasChannels = true\n      }\n    }\n    flags.width = w | 0\n    flags.height = h | 0\n    flags.channels = c | 0\n\n    var hasFormat = false\n    if ('format' in options) {\n      var formatStr = options.format\n      \n      \n      var internalformat = flags.internalformat = textureFormats[formatStr]\n      flags.format = colorFormats[internalformat]\n      if (formatStr in textureTypes) {\n        if (!('type' in options)) {\n          flags.type = textureTypes[formatStr]\n        }\n      }\n      if (formatStr in compressedTextureFormats) {\n        flags.compressed = true\n      }\n      hasFormat = true\n    }\n\n    // Reconcile channels and format\n    if (!hasChannels && hasFormat) {\n      flags.channels = FORMAT_CHANNELS[flags.format]\n    } else if (hasChannels && !hasFormat) {\n      if (flags.channels !== CHANNELS_FORMAT[flags.format]) {\n        flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels]\n      }\n    } else if (hasFormat && hasChannels) {\n      \n    }\n  }\n\n  function setFlags (flags) {\n    gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY)\n    gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha)\n    gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace)\n    gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment)\n  }\n\n  // -------------------------------------------------------\n  // Tex image data\n  // -------------------------------------------------------\n  function TexImage () {\n    TexFlags.call(this)\n\n    this.xOffset = 0\n    this.yOffset = 0\n\n    // data\n    this.data = null\n    this.needsFree = false\n\n    // html element\n    this.element = null\n\n    // copyTexImage info\n    this.needsCopy = false\n  }\n\n  function parseImage (image, options) {\n    var data = null\n    if (isPixelData(options)) {\n      data = options\n    } else if (options) {\n      \n      parseFlags(image, options)\n      if ('x' in options) {\n        image.xOffset = options.x | 0\n      }\n      if ('y' in options) {\n        image.yOffset = options.y | 0\n      }\n      if (isPixelData(options.data)) {\n        data = options.data\n      }\n    }\n\n    \n\n    if (options.copy) {\n      \n      var viewW = contextState.viewportWidth\n      var viewH = contextState.viewportHeight\n      image.width = image.width || (viewW - image.xOffset)\n      image.height = image.height || (viewH - image.yOffset)\n      image.needsCopy = true\n      \n    } else if (!data) {\n      image.width = image.width || 1\n      image.height = image.height || 1\n      image.channels = image.channels || 4\n    } else if (isTypedArray(data)) {\n      image.channels = image.channels || 4\n      image.data = data\n      if (!('type' in options) && image.type === GL_UNSIGNED_BYTE$4) {\n        image.type = typedArrayCode$1(data)\n      }\n    } else if (isNumericArray(data)) {\n      image.channels = image.channels || 4\n      convertData(image, data)\n      image.alignment = 1\n      image.needsFree = true\n    } else if (isNDArrayLike(data)) {\n      var array = data.data\n      if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$4) {\n        image.type = typedArrayCode$1(array)\n      }\n      var shape = data.shape\n      var stride = data.stride\n      var shapeX, shapeY, shapeC, strideX, strideY, strideC\n      if (shape.length === 3) {\n        shapeC = shape[2]\n        strideC = stride[2]\n      } else {\n        \n        shapeC = 1\n        strideC = 1\n      }\n      shapeX = shape[0]\n      shapeY = shape[1]\n      strideX = stride[0]\n      strideY = stride[1]\n      image.alignment = 1\n      image.width = shapeX\n      image.height = shapeY\n      image.channels = shapeC\n      image.format = image.internalformat = CHANNELS_FORMAT[shapeC]\n      image.needsFree = true\n      transposeData(image, array, strideX, strideY, strideC, data.offset)\n    } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {\n      if (isCanvasElement(data) || isOffscreenCanvas(data)) {\n        image.element = data\n      } else {\n        image.element = data.canvas\n      }\n      image.width = image.element.width\n      image.height = image.element.height\n      image.channels = 4\n    } else if (isBitmap(data)) {\n      image.element = data\n      image.width = data.width\n      image.height = data.height\n      image.channels = 4\n    } else if (isImageElement(data)) {\n      image.element = data\n      image.width = data.naturalWidth\n      image.height = data.naturalHeight\n      image.channels = 4\n    } else if (isVideoElement(data)) {\n      image.element = data\n      image.width = data.videoWidth\n      image.height = data.videoHeight\n      image.channels = 4\n    } else if (isRectArray(data)) {\n      var w = image.width || data[0].length\n      var h = image.height || data.length\n      var c = image.channels\n      if (isArrayLike(data[0][0])) {\n        c = c || data[0][0].length\n      } else {\n        c = c || 1\n      }\n      var arrayShape = flattenUtils.shape(data)\n      var n = 1\n      for (var dd = 0; dd < arrayShape.length; ++dd) {\n        n *= arrayShape[dd]\n      }\n      var allocData = preConvert(image, n)\n      flattenUtils.flatten(data, arrayShape, '', allocData)\n      postConvert(image, allocData)\n      image.alignment = 1\n      image.width = w\n      image.height = h\n      image.channels = c\n      image.format = image.internalformat = CHANNELS_FORMAT[c]\n      image.needsFree = true\n    }\n\n    if (image.type === GL_FLOAT$3) {\n      \n    } else if (image.type === GL_HALF_FLOAT_OES) {\n      \n    }\n\n    // do compressed texture  validation here.\n  }\n\n  function setImage (info, target, miplevel) {\n    var element = info.element\n    var data = info.data\n    var internalformat = info.internalformat\n    var format = info.format\n    var type = info.type\n    var width = info.width\n    var height = info.height\n\n    setFlags(info)\n\n    if (element) {\n      gl.texImage2D(target, miplevel, format, format, type, element)\n    } else if (info.compressed) {\n      gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data)\n    } else if (info.needsCopy) {\n      reglPoll()\n      gl.copyTexImage2D(\n        target, miplevel, format, info.xOffset, info.yOffset, width, height, 0)\n    } else {\n      gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null)\n    }\n  }\n\n  function setSubImage (info, target, x, y, miplevel) {\n    var element = info.element\n    var data = info.data\n    var internalformat = info.internalformat\n    var format = info.format\n    var type = info.type\n    var width = info.width\n    var height = info.height\n\n    setFlags(info)\n\n    if (element) {\n      gl.texSubImage2D(\n        target, miplevel, x, y, format, type, element)\n    } else if (info.compressed) {\n      gl.compressedTexSubImage2D(\n        target, miplevel, x, y, internalformat, width, height, data)\n    } else if (info.needsCopy) {\n      reglPoll()\n      gl.copyTexSubImage2D(\n        target, miplevel, x, y, info.xOffset, info.yOffset, width, height)\n    } else {\n      gl.texSubImage2D(\n        target, miplevel, x, y, width, height, format, type, data)\n    }\n  }\n\n  // texImage pool\n  var imagePool = []\n\n  function allocImage () {\n    return imagePool.pop() || new TexImage()\n  }\n\n  function freeImage (image) {\n    if (image.needsFree) {\n      pool.freeType(image.data)\n    }\n    TexImage.call(image)\n    imagePool.push(image)\n  }\n\n  // -------------------------------------------------------\n  // Mip map\n  // -------------------------------------------------------\n  function MipMap () {\n    TexFlags.call(this)\n\n    this.genMipmaps = false\n    this.mipmapHint = GL_DONT_CARE\n    this.mipmask = 0\n    this.images = Array(16)\n  }\n\n  function parseMipMapFromShape (mipmap, width, height) {\n    var img = mipmap.images[0] = allocImage()\n    mipmap.mipmask = 1\n    img.width = mipmap.width = width\n    img.height = mipmap.height = height\n    img.channels = mipmap.channels = 4\n  }\n\n  function parseMipMapFromObject (mipmap, options) {\n    var imgData = null\n    if (isPixelData(options)) {\n      imgData = mipmap.images[0] = allocImage()\n      copyFlags(imgData, mipmap)\n      parseImage(imgData, options)\n      mipmap.mipmask = 1\n    } else {\n      parseFlags(mipmap, options)\n      if (Array.isArray(options.mipmap)) {\n        var mipData = options.mipmap\n        for (var i = 0; i < mipData.length; ++i) {\n          imgData = mipmap.images[i] = allocImage()\n          copyFlags(imgData, mipmap)\n          imgData.width >>= i\n          imgData.height >>= i\n          parseImage(imgData, mipData[i])\n          mipmap.mipmask |= (1 << i)\n        }\n      } else {\n        imgData = mipmap.images[0] = allocImage()\n        copyFlags(imgData, mipmap)\n        parseImage(imgData, options)\n        mipmap.mipmask = 1\n      }\n    }\n    copyFlags(mipmap, mipmap.images[0])\n\n    // For textures of the compressed format WEBGL_compressed_texture_s3tc\n    // we must have that\n    //\n    // \"When level equals zero width and height must be a multiple of 4.\n    // When level is greater than 0 width and height must be 0, 1, 2 or a multiple of 4. \"\n    //\n    // but we do not yet support having multiple mipmap levels for compressed textures,\n    // so we only test for level zero.\n\n    if (\n      mipmap.compressed &&\n      (\n        mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n      )\n    ) {\n      \n    }\n  }\n\n  function setMipMap (mipmap, target) {\n    var images = mipmap.images\n    for (var i = 0; i < images.length; ++i) {\n      if (!images[i]) {\n        return\n      }\n      setImage(images[i], target, i)\n    }\n  }\n\n  var mipPool = []\n\n  function allocMipMap () {\n    var result = mipPool.pop() || new MipMap()\n    TexFlags.call(result)\n    result.mipmask = 0\n    for (var i = 0; i < 16; ++i) {\n      result.images[i] = null\n    }\n    return result\n  }\n\n  function freeMipMap (mipmap) {\n    var images = mipmap.images\n    for (var i = 0; i < images.length; ++i) {\n      if (images[i]) {\n        freeImage(images[i])\n      }\n      images[i] = null\n    }\n    mipPool.push(mipmap)\n  }\n\n  // -------------------------------------------------------\n  // Tex info\n  // -------------------------------------------------------\n  function TexInfo () {\n    this.minFilter = GL_NEAREST\n    this.magFilter = GL_NEAREST\n\n    this.wrapS = GL_CLAMP_TO_EDGE\n    this.wrapT = GL_CLAMP_TO_EDGE\n\n    this.anisotropic = 1\n\n    this.genMipmaps = false\n    this.mipmapHint = GL_DONT_CARE\n  }\n\n  function parseTexInfo (info, options) {\n    if ('min' in options) {\n      var minFilter = options.min\n      \n      info.minFilter = minFilters[minFilter]\n      if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !('faces' in options)) {\n        info.genMipmaps = true\n      }\n    }\n\n    if ('mag' in options) {\n      var magFilter = options.mag\n      \n      info.magFilter = magFilters[magFilter]\n    }\n\n    var wrapS = info.wrapS\n    var wrapT = info.wrapT\n    if ('wrap' in options) {\n      var wrap = options.wrap\n      if (typeof wrap === 'string') {\n        \n        wrapS = wrapT = wrapModes[wrap]\n      } else if (Array.isArray(wrap)) {\n        \n        \n        wrapS = wrapModes[wrap[0]]\n        wrapT = wrapModes[wrap[1]]\n      }\n    } else {\n      if ('wrapS' in options) {\n        var optWrapS = options.wrapS\n        \n        wrapS = wrapModes[optWrapS]\n      }\n      if ('wrapT' in options) {\n        var optWrapT = options.wrapT\n        \n        wrapT = wrapModes[optWrapT]\n      }\n    }\n    info.wrapS = wrapS\n    info.wrapT = wrapT\n\n    if ('anisotropic' in options) {\n      var anisotropic = options.anisotropic\n      \n      info.anisotropic = options.anisotropic\n    }\n\n    if ('mipmap' in options) {\n      var hasMipMap = false\n      switch (typeof options.mipmap) {\n        case 'string':\n          \n          info.mipmapHint = mipmapHint[options.mipmap]\n          info.genMipmaps = true\n          hasMipMap = true\n          break\n\n        case 'boolean':\n          hasMipMap = info.genMipmaps = options.mipmap\n          break\n\n        case 'object':\n          \n          info.genMipmaps = false\n          hasMipMap = true\n          break\n\n        default:\n          \n      }\n      if (hasMipMap && !('min' in options)) {\n        info.minFilter = GL_NEAREST_MIPMAP_NEAREST\n      }\n    }\n  }\n\n  function setTexInfo (info, target) {\n    gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter)\n    gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter)\n    gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS)\n    gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT)\n    if (extensions.ext_texture_filter_anisotropic) {\n      gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic)\n    }\n    if (info.genMipmaps) {\n      gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint)\n      gl.generateMipmap(target)\n    }\n  }\n\n  // -------------------------------------------------------\n  // Full texture object\n  // -------------------------------------------------------\n  var textureCount = 0\n  var textureSet = {}\n  var numTexUnits = limits.maxTextureUnits\n  var textureUnits = Array(numTexUnits).map(function () {\n    return null\n  })\n\n  function REGLTexture (target) {\n    TexFlags.call(this)\n    this.mipmask = 0\n    this.internalformat = GL_RGBA$1\n\n    this.id = textureCount++\n\n    this.refCount = 1\n\n    this.target = target\n    this.texture = gl.createTexture()\n\n    this.unit = -1\n    this.bindCount = 0\n\n    this.texInfo = new TexInfo()\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  function tempBind (texture) {\n    gl.activeTexture(GL_TEXTURE0$1)\n    gl.bindTexture(texture.target, texture.texture)\n  }\n\n  function tempRestore () {\n    var prev = textureUnits[0]\n    if (prev) {\n      gl.bindTexture(prev.target, prev.texture)\n    } else {\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n    }\n  }\n\n  function destroy (texture) {\n    var handle = texture.texture\n    \n    var unit = texture.unit\n    var target = texture.target\n    if (unit >= 0) {\n      gl.activeTexture(GL_TEXTURE0$1 + unit)\n      gl.bindTexture(target, null)\n      textureUnits[unit] = null\n    }\n    gl.deleteTexture(handle)\n    texture.texture = null\n    texture.params = null\n    texture.pixels = null\n    texture.refCount = 0\n    delete textureSet[texture.id]\n    stats.textureCount--\n  }\n\n  extend(REGLTexture.prototype, {\n    bind: function () {\n      var texture = this\n      texture.bindCount += 1\n      var unit = texture.unit\n      if (unit < 0) {\n        for (var i = 0; i < numTexUnits; ++i) {\n          var other = textureUnits[i]\n          if (other) {\n            if (other.bindCount > 0) {\n              continue\n            }\n            other.unit = -1\n          }\n          textureUnits[i] = texture\n          unit = i\n          break\n        }\n        if (unit >= numTexUnits) {\n          \n        }\n        if (config.profile && stats.maxTextureUnits < (unit + 1)) {\n          stats.maxTextureUnits = unit + 1 // +1, since the units are zero-based\n        }\n        texture.unit = unit\n        gl.activeTexture(GL_TEXTURE0$1 + unit)\n        gl.bindTexture(texture.target, texture.texture)\n      }\n      return unit\n    },\n\n    unbind: function () {\n      this.bindCount -= 1\n    },\n\n    decRef: function () {\n      if (--this.refCount <= 0) {\n        destroy(this)\n      }\n    }\n  })\n\n  function createTexture2D (a, b) {\n    var texture = new REGLTexture(GL_TEXTURE_2D$1)\n    textureSet[texture.id] = texture\n    stats.textureCount++\n\n    function reglTexture2D (a, b) {\n      var texInfo = texture.texInfo\n      TexInfo.call(texInfo)\n      var mipData = allocMipMap()\n\n      if (typeof a === 'number') {\n        if (typeof b === 'number') {\n          parseMipMapFromShape(mipData, a | 0, b | 0)\n        } else {\n          parseMipMapFromShape(mipData, a | 0, a | 0)\n        }\n      } else if (a) {\n        \n        parseTexInfo(texInfo, a)\n        parseMipMapFromObject(mipData, a)\n      } else {\n        // empty textures get assigned a default shape of 1x1\n        parseMipMapFromShape(mipData, 1, 1)\n      }\n\n      if (texInfo.genMipmaps) {\n        mipData.mipmask = (mipData.width << 1) - 1\n      }\n      texture.mipmask = mipData.mipmask\n\n      copyFlags(texture, mipData)\n\n      \n      texture.internalformat = mipData.internalformat\n\n      reglTexture2D.width = mipData.width\n      reglTexture2D.height = mipData.height\n\n      tempBind(texture)\n      setMipMap(mipData, GL_TEXTURE_2D$1)\n      setTexInfo(texInfo, GL_TEXTURE_2D$1)\n      tempRestore()\n\n      freeMipMap(mipData)\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          mipData.width,\n          mipData.height,\n          texInfo.genMipmaps,\n          false)\n      }\n      reglTexture2D.format = textureFormatsInvert[texture.internalformat]\n      reglTexture2D.type = textureTypesInvert[texture.type]\n\n      reglTexture2D.mag = magFiltersInvert[texInfo.magFilter]\n      reglTexture2D.min = minFiltersInvert[texInfo.minFilter]\n\n      reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS]\n      reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT]\n\n      return reglTexture2D\n    }\n\n    function subimage (image, x_, y_, level_) {\n      \n\n      var x = x_ | 0\n      var y = y_ | 0\n      var level = level_ | 0\n\n      var imageData = allocImage()\n      copyFlags(imageData, texture)\n      imageData.width = 0\n      imageData.height = 0\n      parseImage(imageData, image)\n      imageData.width = imageData.width || ((texture.width >> level) - x)\n      imageData.height = imageData.height || ((texture.height >> level) - y)\n\n      \n      \n      \n      \n\n      tempBind(texture)\n      setSubImage(imageData, GL_TEXTURE_2D$1, x, y, level)\n      tempRestore()\n\n      freeImage(imageData)\n\n      return reglTexture2D\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0\n      var h = (h_ | 0) || w\n      if (w === texture.width && h === texture.height) {\n        return reglTexture2D\n      }\n\n      reglTexture2D.width = texture.width = w\n      reglTexture2D.height = texture.height = h\n\n      tempBind(texture)\n\n      for (var i = 0; texture.mipmask >> i; ++i) {\n        var _w = w >> i\n        var _h = h >> i\n        if (!_w || !_h) break\n        gl.texImage2D(\n          GL_TEXTURE_2D$1,\n          i,\n          texture.format,\n          _w,\n          _h,\n          0,\n          texture.format,\n          texture.type,\n          null)\n      }\n      tempRestore()\n\n      // also, recompute the texture size.\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          w,\n          h,\n          false,\n          false)\n      }\n\n      return reglTexture2D\n    }\n\n    reglTexture2D(a, b)\n\n    reglTexture2D.subimage = subimage\n    reglTexture2D.resize = resize\n    reglTexture2D._reglType = 'texture2d'\n    reglTexture2D._texture = texture\n    if (config.profile) {\n      reglTexture2D.stats = texture.stats\n    }\n    reglTexture2D.destroy = function () {\n      texture.decRef()\n    }\n\n    return reglTexture2D\n  }\n\n  function createTextureCube (a0, a1, a2, a3, a4, a5) {\n    var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1)\n    textureSet[texture.id] = texture\n    stats.cubeCount++\n\n    var faces = new Array(6)\n\n    function reglTextureCube (a0, a1, a2, a3, a4, a5) {\n      var i\n      var texInfo = texture.texInfo\n      TexInfo.call(texInfo)\n      for (i = 0; i < 6; ++i) {\n        faces[i] = allocMipMap()\n      }\n\n      if (typeof a0 === 'number' || !a0) {\n        var s = (a0 | 0) || 1\n        for (i = 0; i < 6; ++i) {\n          parseMipMapFromShape(faces[i], s, s)\n        }\n      } else if (typeof a0 === 'object') {\n        if (a1) {\n          parseMipMapFromObject(faces[0], a0)\n          parseMipMapFromObject(faces[1], a1)\n          parseMipMapFromObject(faces[2], a2)\n          parseMipMapFromObject(faces[3], a3)\n          parseMipMapFromObject(faces[4], a4)\n          parseMipMapFromObject(faces[5], a5)\n        } else {\n          parseTexInfo(texInfo, a0)\n          parseFlags(texture, a0)\n          if ('faces' in a0) {\n            var faceInput = a0.faces\n            \n            for (i = 0; i < 6; ++i) {\n              \n              copyFlags(faces[i], texture)\n              parseMipMapFromObject(faces[i], faceInput[i])\n            }\n          } else {\n            for (i = 0; i < 6; ++i) {\n              parseMipMapFromObject(faces[i], a0)\n            }\n          }\n        }\n      } else {\n        \n      }\n\n      copyFlags(texture, faces[0])\n      \n\n      if (texInfo.genMipmaps) {\n        texture.mipmask = (faces[0].width << 1) - 1\n      } else {\n        texture.mipmask = faces[0].mipmask\n      }\n\n      \n      texture.internalformat = faces[0].internalformat\n\n      reglTextureCube.width = faces[0].width\n      reglTextureCube.height = faces[0].height\n\n      tempBind(texture)\n      for (i = 0; i < 6; ++i) {\n        setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i)\n      }\n      setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1)\n      tempRestore()\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          texInfo.genMipmaps,\n          true)\n      }\n\n      reglTextureCube.format = textureFormatsInvert[texture.internalformat]\n      reglTextureCube.type = textureTypesInvert[texture.type]\n\n      reglTextureCube.mag = magFiltersInvert[texInfo.magFilter]\n      reglTextureCube.min = minFiltersInvert[texInfo.minFilter]\n\n      reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS]\n      reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT]\n\n      for (i = 0; i < 6; ++i) {\n        freeMipMap(faces[i])\n      }\n\n      return reglTextureCube\n    }\n\n    function subimage (face, image, x_, y_, level_) {\n      \n      \n\n      var x = x_ | 0\n      var y = y_ | 0\n      var level = level_ | 0\n\n      var imageData = allocImage()\n      copyFlags(imageData, texture)\n      imageData.width = 0\n      imageData.height = 0\n      parseImage(imageData, image)\n      imageData.width = imageData.width || ((texture.width >> level) - x)\n      imageData.height = imageData.height || ((texture.height >> level) - y)\n\n      \n      \n      \n      \n\n      tempBind(texture)\n      setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x, y, level)\n      tempRestore()\n\n      freeImage(imageData)\n\n      return reglTextureCube\n    }\n\n    function resize (radius_) {\n      var radius = radius_ | 0\n      if (radius === texture.width) {\n        return\n      }\n\n      reglTextureCube.width = texture.width = radius\n      reglTextureCube.height = texture.height = radius\n\n      tempBind(texture)\n      for (var i = 0; i < 6; ++i) {\n        for (var j = 0; texture.mipmask >> j; ++j) {\n          gl.texImage2D(\n            GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i,\n            j,\n            texture.format,\n            radius >> j,\n            radius >> j,\n            0,\n            texture.format,\n            texture.type,\n            null)\n        }\n      }\n      tempRestore()\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          false,\n          true)\n      }\n\n      return reglTextureCube\n    }\n\n    reglTextureCube(a0, a1, a2, a3, a4, a5)\n\n    reglTextureCube.subimage = subimage\n    reglTextureCube.resize = resize\n    reglTextureCube._reglType = 'textureCube'\n    reglTextureCube._texture = texture\n    if (config.profile) {\n      reglTextureCube.stats = texture.stats\n    }\n    reglTextureCube.destroy = function () {\n      texture.decRef()\n    }\n\n    return reglTextureCube\n  }\n\n  // Called when regl is destroyed\n  function destroyTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      gl.activeTexture(GL_TEXTURE0$1 + i)\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n      textureUnits[i] = null\n    }\n    values(textureSet).forEach(destroy)\n\n    stats.cubeCount = 0\n    stats.textureCount = 0\n  }\n\n  if (config.profile) {\n    stats.getTotalTextureSize = function () {\n      var total = 0\n      Object.keys(textureSet).forEach(function (key) {\n        total += textureSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  function restoreTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      var tex = textureUnits[i]\n      if (tex) {\n        tex.bindCount = 0\n        tex.unit = -1\n        textureUnits[i] = null\n      }\n    }\n\n    values(textureSet).forEach(function (texture) {\n      texture.texture = gl.createTexture()\n      gl.bindTexture(texture.target, texture.texture)\n      for (var i = 0; i < 32; ++i) {\n        if ((texture.mipmask & (1 << i)) === 0) {\n          continue\n        }\n        if (texture.target === GL_TEXTURE_2D$1) {\n          gl.texImage2D(GL_TEXTURE_2D$1,\n            i,\n            texture.internalformat,\n            texture.width >> i,\n            texture.height >> i,\n            0,\n            texture.internalformat,\n            texture.type,\n            null)\n        } else {\n          for (var j = 0; j < 6; ++j) {\n            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j,\n              i,\n              texture.internalformat,\n              texture.width >> i,\n              texture.height >> i,\n              0,\n              texture.internalformat,\n              texture.type,\n              null)\n          }\n        }\n      }\n      setTexInfo(texture.texInfo, texture.target)\n    })\n  }\n\n  function refreshTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      var tex = textureUnits[i]\n      if (tex) {\n        tex.bindCount = 0\n        tex.unit = -1\n        textureUnits[i] = null\n      }\n      gl.activeTexture(GL_TEXTURE0$1 + i)\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n      gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null)\n    }\n  }\n\n  return {\n    create2D: createTexture2D,\n    createCube: createTextureCube,\n    clear: destroyTextures,\n    getTexture: function (wrapper) {\n      return null\n    },\n    restore: restoreTextures,\n    refresh: refreshTextures\n  }\n}\n\nvar GL_RENDERBUFFER = 0x8D41\n\nvar GL_RGBA4$1 = 0x8056\nvar GL_RGB5_A1$1 = 0x8057\nvar GL_RGB565$1 = 0x8D62\nvar GL_DEPTH_COMPONENT16 = 0x81A5\nvar GL_STENCIL_INDEX8 = 0x8D48\nvar GL_DEPTH_STENCIL$1 = 0x84F9\n\nvar GL_SRGB8_ALPHA8_EXT = 0x8C43\n\nvar GL_RGBA32F_EXT = 0x8814\n\nvar GL_RGBA16F_EXT = 0x881A\nvar GL_RGB16F_EXT = 0x881B\n\nvar FORMAT_SIZES = []\n\nFORMAT_SIZES[GL_RGBA4$1] = 2\nFORMAT_SIZES[GL_RGB5_A1$1] = 2\nFORMAT_SIZES[GL_RGB565$1] = 2\n\nFORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2\nFORMAT_SIZES[GL_STENCIL_INDEX8] = 1\nFORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4\n\nFORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4\nFORMAT_SIZES[GL_RGBA32F_EXT] = 16\nFORMAT_SIZES[GL_RGBA16F_EXT] = 8\nFORMAT_SIZES[GL_RGB16F_EXT] = 6\n\nfunction getRenderbufferSize (format, width, height) {\n  return FORMAT_SIZES[format] * width * height\n}\n\nvar wrapRenderbuffers = function (gl, extensions, limits, stats, config) {\n  var formatTypes = {\n    'rgba4': GL_RGBA4$1,\n    'rgb565': GL_RGB565$1,\n    'rgb5 a1': GL_RGB5_A1$1,\n    'depth': GL_DEPTH_COMPONENT16,\n    'stencil': GL_STENCIL_INDEX8,\n    'depth stencil': GL_DEPTH_STENCIL$1\n  }\n\n  if (extensions.ext_srgb) {\n    formatTypes['srgba'] = GL_SRGB8_ALPHA8_EXT\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    formatTypes['rgba16f'] = GL_RGBA16F_EXT\n    formatTypes['rgb16f'] = GL_RGB16F_EXT\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    formatTypes['rgba32f'] = GL_RGBA32F_EXT\n  }\n\n  var formatTypesInvert = []\n  Object.keys(formatTypes).forEach(function (key) {\n    var val = formatTypes[key]\n    formatTypesInvert[val] = key\n  })\n\n  var renderbufferCount = 0\n  var renderbufferSet = {}\n\n  function REGLRenderbuffer (renderbuffer) {\n    this.id = renderbufferCount++\n    this.refCount = 1\n\n    this.renderbuffer = renderbuffer\n\n    this.format = GL_RGBA4$1\n    this.width = 0\n    this.height = 0\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  REGLRenderbuffer.prototype.decRef = function () {\n    if (--this.refCount <= 0) {\n      destroy(this)\n    }\n  }\n\n  function destroy (rb) {\n    var handle = rb.renderbuffer\n    \n    gl.bindRenderbuffer(GL_RENDERBUFFER, null)\n    gl.deleteRenderbuffer(handle)\n    rb.renderbuffer = null\n    rb.refCount = 0\n    delete renderbufferSet[rb.id]\n    stats.renderbufferCount--\n  }\n\n  function createRenderbuffer (a, b) {\n    var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer())\n    renderbufferSet[renderbuffer.id] = renderbuffer\n    stats.renderbufferCount++\n\n    function reglRenderbuffer (a, b) {\n      var w = 0\n      var h = 0\n      var format = GL_RGBA4$1\n\n      if (typeof a === 'object' && a) {\n        var options = a\n        if ('shape' in options) {\n          var shape = options.shape\n          \n          w = shape[0] | 0\n          h = shape[1] | 0\n        } else {\n          if ('radius' in options) {\n            w = h = options.radius | 0\n          }\n          if ('width' in options) {\n            w = options.width | 0\n          }\n          if ('height' in options) {\n            h = options.height | 0\n          }\n        }\n        if ('format' in options) {\n          \n          format = formatTypes[options.format]\n        }\n      } else if (typeof a === 'number') {\n        w = a | 0\n        if (typeof b === 'number') {\n          h = b | 0\n        } else {\n          h = w\n        }\n      } else if (!a) {\n        w = h = 1\n      } else {\n        \n      }\n\n      // check shape\n      \n\n      if (w === renderbuffer.width &&\n          h === renderbuffer.height &&\n          format === renderbuffer.format) {\n        return\n      }\n\n      reglRenderbuffer.width = renderbuffer.width = w\n      reglRenderbuffer.height = renderbuffer.height = h\n      renderbuffer.format = format\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h)\n\n      \n\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height)\n      }\n      reglRenderbuffer.format = formatTypesInvert[renderbuffer.format]\n\n      return reglRenderbuffer\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0\n      var h = (h_ | 0) || w\n\n      if (w === renderbuffer.width && h === renderbuffer.height) {\n        return reglRenderbuffer\n      }\n\n      // check shape\n      \n\n      reglRenderbuffer.width = renderbuffer.width = w\n      reglRenderbuffer.height = renderbuffer.height = h\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h)\n\n      \n\n      // also, recompute size.\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(\n          renderbuffer.format, renderbuffer.width, renderbuffer.height)\n      }\n\n      return reglRenderbuffer\n    }\n\n    reglRenderbuffer(a, b)\n\n    reglRenderbuffer.resize = resize\n    reglRenderbuffer._reglType = 'renderbuffer'\n    reglRenderbuffer._renderbuffer = renderbuffer\n    if (config.profile) {\n      reglRenderbuffer.stats = renderbuffer.stats\n    }\n    reglRenderbuffer.destroy = function () {\n      renderbuffer.decRef()\n    }\n\n    return reglRenderbuffer\n  }\n\n  if (config.profile) {\n    stats.getTotalRenderbufferSize = function () {\n      var total = 0\n      Object.keys(renderbufferSet).forEach(function (key) {\n        total += renderbufferSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  function restoreRenderbuffers () {\n    values(renderbufferSet).forEach(function (rb) {\n      rb.renderbuffer = gl.createRenderbuffer()\n      gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height)\n    })\n    gl.bindRenderbuffer(GL_RENDERBUFFER, null)\n  }\n\n  return {\n    create: createRenderbuffer,\n    clear: function () {\n      values(renderbufferSet).forEach(destroy)\n    },\n    restore: restoreRenderbuffers\n  }\n}\n\n// We store these constants so that the minifier can inline them\nvar GL_FRAMEBUFFER$1 = 0x8D40\nvar GL_RENDERBUFFER$1 = 0x8D41\n\nvar GL_TEXTURE_2D$2 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 0x8515\n\nvar GL_COLOR_ATTACHMENT0$1 = 0x8CE0\nvar GL_DEPTH_ATTACHMENT = 0x8D00\nvar GL_STENCIL_ATTACHMENT = 0x8D20\nvar GL_DEPTH_STENCIL_ATTACHMENT = 0x821A\n\nvar GL_FRAMEBUFFER_COMPLETE$1 = 0x8CD5\nvar GL_HALF_FLOAT_OES$1 = 0x8D61\nvar GL_UNSIGNED_BYTE$5 = 0x1401\nvar GL_FLOAT$4 = 0x1406\n\nvar GL_RGB$1 = 0x1907\nvar GL_RGBA$2 = 0x1908\n\n// for every texture format, store\n// the number of channels\nvar textureFormatChannels = []\ntextureFormatChannels[GL_RGBA$2] = 4\ntextureFormatChannels[GL_RGB$1] = 3\n\n// for every texture type, store\n// the size in bytes.\nvar textureTypeSizes = []\ntextureTypeSizes[GL_UNSIGNED_BYTE$5] = 1\ntextureTypeSizes[GL_FLOAT$4] = 4\ntextureTypeSizes[GL_HALF_FLOAT_OES$1] = 2\n\nfunction wrapFBOState (\n  gl,\n  extensions,\n  limits,\n  textureState,\n  renderbufferState,\n  stats) {\n  var framebufferState = {\n    cur: null,\n    next: null,\n    dirty: false,\n    setFBO: null\n  }\n\n  var colorTextureFormats = ['rgba']\n  var colorRenderbufferFormats = ['rgba4', 'rgb565', 'rgb5 a1']\n\n  if (extensions.ext_srgb) {\n    colorRenderbufferFormats.push('srgba')\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    colorRenderbufferFormats.push('rgba16f', 'rgb16f')\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    colorRenderbufferFormats.push('rgba32f')\n  }\n\n  var colorTypes = ['uint8']\n  if (extensions.oes_texture_half_float) {\n    colorTypes.push('half float', 'float16')\n  }\n  if (extensions.oes_texture_float) {\n    colorTypes.push('float', 'float32')\n  }\n\n  function FramebufferAttachment (target, texture, renderbuffer) {\n    this.target = target\n    this.texture = texture\n    this.renderbuffer = renderbuffer\n\n    var w = 0\n    var h = 0\n    if (texture) {\n      w = texture.width\n      h = texture.height\n    } else if (renderbuffer) {\n      w = renderbuffer.width\n      h = renderbuffer.height\n    }\n    this.width = w\n    this.height = h\n  }\n\n  function decRef (attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture._texture.decRef()\n      }\n      if (attachment.renderbuffer) {\n        attachment.renderbuffer._renderbuffer.decRef()\n      }\n    }\n  }\n\n  function incRefAndCheckShape (attachment, width, height) {\n    if (!attachment) {\n      return\n    }\n    if (attachment.texture) {\n      var texture = attachment.texture._texture\n      var tw = Math.max(1, texture.width)\n      var th = Math.max(1, texture.height)\n      \n      texture.refCount += 1\n    } else {\n      var renderbuffer = attachment.renderbuffer._renderbuffer\n      \n      renderbuffer.refCount += 1\n    }\n  }\n\n  function attach (location, attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        gl.framebufferTexture2D(\n          GL_FRAMEBUFFER$1,\n          location,\n          attachment.target,\n          attachment.texture._texture.texture,\n          0)\n      } else {\n        gl.framebufferRenderbuffer(\n          GL_FRAMEBUFFER$1,\n          location,\n          GL_RENDERBUFFER$1,\n          attachment.renderbuffer._renderbuffer.renderbuffer)\n      }\n    }\n  }\n\n  function parseAttachment (attachment) {\n    var target = GL_TEXTURE_2D$2\n    var texture = null\n    var renderbuffer = null\n\n    var data = attachment\n    if (typeof attachment === 'object') {\n      data = attachment.data\n      if ('target' in attachment) {\n        target = attachment.target | 0\n      }\n    }\n\n    \n\n    var type = data._reglType\n    if (type === 'texture2d') {\n      texture = data\n      \n    } else if (type === 'textureCube') {\n      texture = data\n      \n    } else if (type === 'renderbuffer') {\n      renderbuffer = data\n      target = GL_RENDERBUFFER$1\n    } else {\n      \n    }\n\n    return new FramebufferAttachment(target, texture, renderbuffer)\n  }\n\n  function allocAttachment (\n    width,\n    height,\n    isTexture,\n    format,\n    type) {\n    if (isTexture) {\n      var texture = textureState.create2D({\n        width: width,\n        height: height,\n        format: format,\n        type: type\n      })\n      texture._texture.refCount = 0\n      return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null)\n    } else {\n      var rb = renderbufferState.create({\n        width: width,\n        height: height,\n        format: format\n      })\n      rb._renderbuffer.refCount = 0\n      return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb)\n    }\n  }\n\n  function unwrapAttachment (attachment) {\n    return attachment && (attachment.texture || attachment.renderbuffer)\n  }\n\n  function resizeAttachment (attachment, w, h) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture.resize(w, h)\n      } else if (attachment.renderbuffer) {\n        attachment.renderbuffer.resize(w, h)\n      }\n      attachment.width = w\n      attachment.height = h\n    }\n  }\n\n  var framebufferCount = 0\n  var framebufferSet = {}\n\n  function REGLFramebuffer () {\n    this.id = framebufferCount++\n    framebufferSet[this.id] = this\n\n    this.framebuffer = gl.createFramebuffer()\n    this.width = 0\n    this.height = 0\n\n    this.colorAttachments = []\n    this.depthAttachment = null\n    this.stencilAttachment = null\n    this.depthStencilAttachment = null\n  }\n\n  function decFBORefs (framebuffer) {\n    framebuffer.colorAttachments.forEach(decRef)\n    decRef(framebuffer.depthAttachment)\n    decRef(framebuffer.stencilAttachment)\n    decRef(framebuffer.depthStencilAttachment)\n  }\n\n  function destroy (framebuffer) {\n    var handle = framebuffer.framebuffer\n    \n    gl.deleteFramebuffer(handle)\n    framebuffer.framebuffer = null\n    stats.framebufferCount--\n    delete framebufferSet[framebuffer.id]\n  }\n\n  function updateFramebuffer (framebuffer) {\n    var i\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer)\n    var colorAttachments = framebuffer.colorAttachments\n    for (i = 0; i < colorAttachments.length; ++i) {\n      attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i])\n    }\n    for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {\n      gl.framebufferTexture2D(\n        GL_FRAMEBUFFER$1,\n        GL_COLOR_ATTACHMENT0$1 + i,\n        GL_TEXTURE_2D$2,\n        null,\n        0)\n    }\n\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_DEPTH_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_DEPTH_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n\n    attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment)\n    attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment)\n    attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment)\n\n    // Check status code\n    var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1)\n    if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) {\n      \n    }\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null)\n    framebufferState.cur = framebufferState.next\n\n    // FIXME: Clear error code here.  This is a work around for a bug in\n    // headless-gl\n    gl.getError()\n  }\n\n  function createFBO (a0, a1) {\n    var framebuffer = new REGLFramebuffer()\n    stats.framebufferCount++\n\n    function reglFramebuffer (a, b) {\n      var i\n\n      \n\n      var width = 0\n      var height = 0\n\n      var needsDepth = true\n      var needsStencil = true\n\n      var colorBuffer = null\n      var colorTexture = true\n      var colorFormat = 'rgba'\n      var colorType = 'uint8'\n      var colorCount = 1\n\n      var depthBuffer = null\n      var stencilBuffer = null\n      var depthStencilBuffer = null\n      var depthStencilTexture = false\n\n      if (typeof a === 'number') {\n        width = a | 0\n        height = (b | 0) || width\n      } else if (!a) {\n        width = height = 1\n      } else {\n        \n        var options = a\n\n        if ('shape' in options) {\n          var shape = options.shape\n          \n          width = shape[0]\n          height = shape[1]\n        } else {\n          if ('radius' in options) {\n            width = height = options.radius\n          }\n          if ('width' in options) {\n            width = options.width\n          }\n          if ('height' in options) {\n            height = options.height\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors\n          if (Array.isArray(colorBuffer)) {\n            \n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0\n            \n          }\n\n          if ('colorTexture' in options) {\n            colorTexture = !!options.colorTexture\n            colorFormat = 'rgba4'\n          }\n\n          if ('colorType' in options) {\n            colorType = options.colorType\n            if (!colorTexture) {\n              if (colorType === 'half float' || colorType === 'float16') {\n                \n                colorFormat = 'rgba16f'\n              } else if (colorType === 'float' || colorType === 'float32') {\n                \n                colorFormat = 'rgba32f'\n              }\n            } else {\n              \n              \n            }\n            \n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat\n            if (colorTextureFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = true\n            } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = false\n            } else {\n              \n            }\n          }\n        }\n\n        if ('depthTexture' in options || 'depthStencilTexture' in options) {\n          depthStencilTexture = !!(options.depthTexture ||\n            options.depthStencilTexture)\n          \n        }\n\n        if ('depth' in options) {\n          if (typeof options.depth === 'boolean') {\n            needsDepth = options.depth\n          } else {\n            depthBuffer = options.depth\n            needsStencil = false\n          }\n        }\n\n        if ('stencil' in options) {\n          if (typeof options.stencil === 'boolean') {\n            needsStencil = options.stencil\n          } else {\n            stencilBuffer = options.stencil\n            needsDepth = false\n          }\n        }\n\n        if ('depthStencil' in options) {\n          if (typeof options.depthStencil === 'boolean') {\n            needsDepth = needsStencil = options.depthStencil\n          } else {\n            depthStencilBuffer = options.depthStencil\n            needsDepth = false\n            needsStencil = false\n          }\n        }\n      }\n\n      // parse attachments\n      var colorAttachments = null\n      var depthAttachment = null\n      var stencilAttachment = null\n      var depthStencilAttachment = null\n\n      // Set up color attachments\n      if (Array.isArray(colorBuffer)) {\n        colorAttachments = colorBuffer.map(parseAttachment)\n      } else if (colorBuffer) {\n        colorAttachments = [parseAttachment(colorBuffer)]\n      } else {\n        colorAttachments = new Array(colorCount)\n        for (i = 0; i < colorCount; ++i) {\n          colorAttachments[i] = allocAttachment(\n            width,\n            height,\n            colorTexture,\n            colorFormat,\n            colorType)\n        }\n      }\n\n      \n      \n\n      width = width || colorAttachments[0].width\n      height = height || colorAttachments[0].height\n\n      if (depthBuffer) {\n        depthAttachment = parseAttachment(depthBuffer)\n      } else if (needsDepth && !needsStencil) {\n        depthAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth',\n          'uint32')\n      }\n\n      if (stencilBuffer) {\n        stencilAttachment = parseAttachment(stencilBuffer)\n      } else if (needsStencil && !needsDepth) {\n        stencilAttachment = allocAttachment(\n          width,\n          height,\n          false,\n          'stencil',\n          'uint8')\n      }\n\n      if (depthStencilBuffer) {\n        depthStencilAttachment = parseAttachment(depthStencilBuffer)\n      } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {\n        depthStencilAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth stencil',\n          'depth stencil')\n      }\n\n      \n\n      var commonColorAttachmentSize = null\n\n      for (i = 0; i < colorAttachments.length; ++i) {\n        incRefAndCheckShape(colorAttachments[i], width, height)\n        \n\n        if (colorAttachments[i] && colorAttachments[i].texture) {\n          var colorAttachmentSize =\n              textureFormatChannels[colorAttachments[i].texture._texture.format] *\n              textureTypeSizes[colorAttachments[i].texture._texture.type]\n\n          if (commonColorAttachmentSize === null) {\n            commonColorAttachmentSize = colorAttachmentSize\n          } else {\n            // We need to make sure that all color attachments have the same number of bitplanes\n            // (that is, the same numer of bits per pixel)\n            // This is required by the GLES2.0 standard. See the beginning of Chapter 4 in that document.\n            \n          }\n        }\n      }\n      incRefAndCheckShape(depthAttachment, width, height)\n      \n      incRefAndCheckShape(stencilAttachment, width, height)\n      \n      incRefAndCheckShape(depthStencilAttachment, width, height)\n      \n\n      // decrement references\n      decFBORefs(framebuffer)\n\n      framebuffer.width = width\n      framebuffer.height = height\n\n      framebuffer.colorAttachments = colorAttachments\n      framebuffer.depthAttachment = depthAttachment\n      framebuffer.stencilAttachment = stencilAttachment\n      framebuffer.depthStencilAttachment = depthStencilAttachment\n\n      reglFramebuffer.color = colorAttachments.map(unwrapAttachment)\n      reglFramebuffer.depth = unwrapAttachment(depthAttachment)\n      reglFramebuffer.stencil = unwrapAttachment(stencilAttachment)\n      reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment)\n\n      reglFramebuffer.width = framebuffer.width\n      reglFramebuffer.height = framebuffer.height\n\n      updateFramebuffer(framebuffer)\n\n      return reglFramebuffer\n    }\n\n    function resize (w_, h_) {\n      \n\n      var w = Math.max(w_ | 0, 1)\n      var h = Math.max((h_ | 0) || w, 1)\n      if (w === framebuffer.width && h === framebuffer.height) {\n        return reglFramebuffer\n      }\n\n      // resize all buffers\n      var colorAttachments = framebuffer.colorAttachments\n      for (var i = 0; i < colorAttachments.length; ++i) {\n        resizeAttachment(colorAttachments[i], w, h)\n      }\n      resizeAttachment(framebuffer.depthAttachment, w, h)\n      resizeAttachment(framebuffer.stencilAttachment, w, h)\n      resizeAttachment(framebuffer.depthStencilAttachment, w, h)\n\n      framebuffer.width = reglFramebuffer.width = w\n      framebuffer.height = reglFramebuffer.height = h\n\n      updateFramebuffer(framebuffer)\n\n      return reglFramebuffer\n    }\n\n    reglFramebuffer(a0, a1)\n\n    return extend(reglFramebuffer, {\n      resize: resize,\n      _reglType: 'framebuffer',\n      _framebuffer: framebuffer,\n      destroy: function () {\n        destroy(framebuffer)\n        decFBORefs(framebuffer)\n      },\n      use: function (block) {\n        framebufferState.setFBO({\n          framebuffer: reglFramebuffer\n        }, block)\n      }\n    })\n  }\n\n  function createCubeFBO (options) {\n    var faces = Array(6)\n\n    function reglFramebufferCube (a) {\n      var i\n\n      \n\n      var params = {\n        color: null\n      }\n\n      var radius = 0\n\n      var colorBuffer = null\n      var colorFormat = 'rgba'\n      var colorType = 'uint8'\n      var colorCount = 1\n\n      if (typeof a === 'number') {\n        radius = a | 0\n      } else if (!a) {\n        radius = 1\n      } else {\n        \n        var options = a\n\n        if ('shape' in options) {\n          var shape = options.shape\n          \n          \n          radius = shape[0]\n        } else {\n          if ('radius' in options) {\n            radius = options.radius | 0\n          }\n          if ('width' in options) {\n            radius = options.width | 0\n            if ('height' in options) {\n              \n            }\n          } else if ('height' in options) {\n            radius = options.height | 0\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors\n          if (Array.isArray(colorBuffer)) {\n            \n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0\n            \n          }\n\n          if ('colorType' in options) {\n            \n            colorType = options.colorType\n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat\n            \n          }\n        }\n\n        if ('depth' in options) {\n          params.depth = options.depth\n        }\n\n        if ('stencil' in options) {\n          params.stencil = options.stencil\n        }\n\n        if ('depthStencil' in options) {\n          params.depthStencil = options.depthStencil\n        }\n      }\n\n      var colorCubes\n      if (colorBuffer) {\n        if (Array.isArray(colorBuffer)) {\n          colorCubes = []\n          for (i = 0; i < colorBuffer.length; ++i) {\n            colorCubes[i] = colorBuffer[i]\n          }\n        } else {\n          colorCubes = [ colorBuffer ]\n        }\n      } else {\n        colorCubes = Array(colorCount)\n        var cubeMapParams = {\n          radius: radius,\n          format: colorFormat,\n          type: colorType\n        }\n        for (i = 0; i < colorCount; ++i) {\n          colorCubes[i] = textureState.createCube(cubeMapParams)\n        }\n      }\n\n      // Check color cubes\n      params.color = Array(colorCubes.length)\n      for (i = 0; i < colorCubes.length; ++i) {\n        var cube = colorCubes[i]\n        \n        radius = radius || cube.width\n        \n        params.color[i] = {\n          target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,\n          data: colorCubes[i]\n        }\n      }\n\n      for (i = 0; i < 6; ++i) {\n        for (var j = 0; j < colorCubes.length; ++j) {\n          params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i\n        }\n        // reuse depth-stencil attachments across all cube maps\n        if (i > 0) {\n          params.depth = faces[0].depth\n          params.stencil = faces[0].stencil\n          params.depthStencil = faces[0].depthStencil\n        }\n        if (faces[i]) {\n          (faces[i])(params)\n        } else {\n          faces[i] = createFBO(params)\n        }\n      }\n\n      return extend(reglFramebufferCube, {\n        width: radius,\n        height: radius,\n        color: colorCubes\n      })\n    }\n\n    function resize (radius_) {\n      var i\n      var radius = radius_ | 0\n      \n\n      if (radius === reglFramebufferCube.width) {\n        return reglFramebufferCube\n      }\n\n      var colors = reglFramebufferCube.color\n      for (i = 0; i < colors.length; ++i) {\n        colors[i].resize(radius)\n      }\n\n      for (i = 0; i < 6; ++i) {\n        faces[i].resize(radius)\n      }\n\n      reglFramebufferCube.width = reglFramebufferCube.height = radius\n\n      return reglFramebufferCube\n    }\n\n    reglFramebufferCube(options)\n\n    return extend(reglFramebufferCube, {\n      faces: faces,\n      resize: resize,\n      _reglType: 'framebufferCube',\n      destroy: function () {\n        faces.forEach(function (f) {\n          f.destroy()\n        })\n      }\n    })\n  }\n\n  function restoreFramebuffers () {\n    framebufferState.cur = null\n    framebufferState.next = null\n    framebufferState.dirty = true\n    values(framebufferSet).forEach(function (fb) {\n      fb.framebuffer = gl.createFramebuffer()\n      updateFramebuffer(fb)\n    })\n  }\n\n  return extend(framebufferState, {\n    getFramebuffer: function (object) {\n      if (typeof object === 'function' && object._reglType === 'framebuffer') {\n        var fbo = object._framebuffer\n        if (fbo instanceof REGLFramebuffer) {\n          return fbo\n        }\n      }\n      return null\n    },\n    create: createFBO,\n    createCube: createCubeFBO,\n    clear: function () {\n      values(framebufferSet).forEach(destroy)\n    },\n    restore: restoreFramebuffers\n  })\n}\n\nvar GL_FLOAT$5 = 5126\nvar GL_ARRAY_BUFFER$1 = 34962\nvar GL_ELEMENT_ARRAY_BUFFER$1 = 34963\n\nfunction AttributeRecord () {\n  this.state = 0\n\n  this.x = 0.0\n  this.y = 0.0\n  this.z = 0.0\n  this.w = 0.0\n\n  this.buffer = null\n  this.size = 0\n  this.normalized = false\n  this.type = GL_FLOAT$5\n  this.offset = 0\n  this.stride = 0\n  this.divisor = 0\n}\n\nfunction wrapAttributeState (\n  gl,\n  extensions,\n  limits,\n  stats,\n  bufferState,\n  elementState,\n  drawState) {\n  var NUM_ATTRIBUTES = limits.maxAttributes\n  var attributeBindings = new Array(NUM_ATTRIBUTES)\n  for (var i = 0; i < NUM_ATTRIBUTES; ++i) {\n    attributeBindings[i] = new AttributeRecord()\n  }\n  var vaoCount = 0\n  var vaoSet = {}\n\n  var state = {\n    Record: AttributeRecord,\n    scope: {},\n    state: attributeBindings,\n    currentVAO: null,\n    targetVAO: null,\n    restore: extVAO() ? restoreVAO : function () {},\n    createVAO: createVAO,\n    getVAO: getVAO,\n    destroyBuffer: destroyBuffer,\n    setVAO: extVAO() ? setVAOEXT : setVAOEmulated,\n    clear: extVAO() ? destroyVAOEXT : function () {}\n  }\n\n  function destroyBuffer (buffer) {\n    for (var i = 0; i < attributeBindings.length; ++i) {\n      var record = attributeBindings[i]\n      if (record.buffer === buffer) {\n        gl.disableVertexAttribArray(i)\n        record.buffer = null\n      }\n    }\n  }\n\n  function extVAO () {\n    return extensions.oes_vertex_array_object\n  }\n\n  function extInstanced () {\n    return extensions.angle_instanced_arrays\n  }\n\n  function getVAO (vao) {\n    if (typeof vao === 'function' && vao._vao) {\n      return vao._vao\n    }\n    return null\n  }\n\n  function setVAOEXT (vao) {\n    if (vao === state.currentVAO) {\n      return\n    }\n    var ext = extVAO()\n    if (vao) {\n      ext.bindVertexArrayOES(vao.vao)\n    } else {\n      ext.bindVertexArrayOES(null)\n    }\n    state.currentVAO = vao\n  }\n\n  function setVAOEmulated (vao) {\n    if (vao === state.currentVAO) {\n      return\n    }\n    if (vao) {\n      vao.bindAttrs()\n    } else {\n      var exti = extInstanced()\n      for (var i = 0; i < attributeBindings.length; ++i) {\n        var binding = attributeBindings[i]\n        if (binding.buffer) {\n          gl.enableVertexAttribArray(i)\n          binding.buffer.bind()\n          gl.vertexAttribPointer(i, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset)\n          if (exti && binding.divisor) {\n            exti.vertexAttribDivisorANGLE(i, binding.divisor)\n          }\n        } else {\n          gl.disableVertexAttribArray(i)\n          gl.vertexAttrib4f(i, binding.x, binding.y, binding.z, binding.w)\n        }\n      }\n      if (drawState.elements) {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, drawState.elements.buffer.buffer)\n      } else {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null)\n      }\n    }\n    state.currentVAO = vao\n  }\n\n  function destroyVAOEXT () {\n    values(vaoSet).forEach(function (vao) {\n      vao.destroy()\n    })\n  }\n\n  function REGLVAO () {\n    this.id = ++vaoCount\n    this.attributes = []\n    this.elements = null\n    this.ownsElements = false\n    this.count = 0\n    this.offset = 0\n    this.instances = -1\n    this.primitive = 4\n    var extension = extVAO()\n    if (extension) {\n      this.vao = extension.createVertexArrayOES()\n    } else {\n      this.vao = null\n    }\n    vaoSet[this.id] = this\n    this.buffers = []\n  }\n\n  REGLVAO.prototype.bindAttrs = function () {\n    var exti = extInstanced()\n    var attributes = this.attributes\n    for (var i = 0; i < attributes.length; ++i) {\n      var attr = attributes[i]\n      if (attr.buffer) {\n        gl.enableVertexAttribArray(i)\n        gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer)\n        gl.vertexAttribPointer(i, attr.size, attr.type, attr.normalized, attr.stride, attr.offset)\n        if (exti && attr.divisor) {\n          exti.vertexAttribDivisorANGLE(i, attr.divisor)\n        }\n      } else {\n        gl.disableVertexAttribArray(i)\n        gl.vertexAttrib4f(i, attr.x, attr.y, attr.z, attr.w)\n      }\n    }\n    for (var j = attributes.length; j < NUM_ATTRIBUTES; ++j) {\n      gl.disableVertexAttribArray(j)\n    }\n    var elements = elementState.getElements(this.elements)\n    if (elements) {\n      gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, elements.buffer.buffer)\n    } else {\n      gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null)\n    }\n  }\n\n  REGLVAO.prototype.refresh = function () {\n    var ext = extVAO()\n    if (ext) {\n      ext.bindVertexArrayOES(this.vao)\n      this.bindAttrs()\n      state.currentVAO = null\n      ext.bindVertexArrayOES(null)\n    }\n  }\n\n  REGLVAO.prototype.destroy = function () {\n    if (this.vao) {\n      var extension = extVAO()\n      if (this === state.currentVAO) {\n        state.currentVAO = null\n        extension.bindVertexArrayOES(null)\n      }\n      extension.deleteVertexArrayOES(this.vao)\n      this.vao = null\n    }\n    if (this.ownsElements) {\n      this.elements.destroy()\n      this.elements = null\n      this.ownsElements = false\n    }\n    if (vaoSet[this.id]) {\n      delete vaoSet[this.id]\n      stats.vaoCount -= 1\n    }\n  }\n\n  function restoreVAO () {\n    var ext = extVAO()\n    if (ext) {\n      values(vaoSet).forEach(function (vao) {\n        vao.refresh()\n      })\n    }\n  }\n\n  function createVAO (_attr) {\n    var vao = new REGLVAO()\n    stats.vaoCount += 1\n\n    function updateVAO (options) {\n      var attributes\n      if (Array.isArray(options)) {\n        attributes = options\n        if (vao.elements && vao.ownsElements) {\n          vao.elements.destroy()\n        }\n        vao.elements = null\n        vao.ownsElements = false\n        vao.offset = 0\n        vao.count = 0\n        vao.instances = -1\n        vao.primitive = 4\n      } else {\n        \n        \n        if (options.elements) {\n          var elements = options.elements\n          if (vao.ownsElements) {\n            if (typeof elements === 'function' && elements._reglType === 'elements') {\n              vao.elements.destroy()\n              vao.ownsElements = false\n            } else {\n              vao.elements(elements)\n              vao.ownsElements = false\n            }\n          } else if (elementState.getElements(options.elements)) {\n            vao.elements = options.elements\n            vao.ownsElements = false\n          } else {\n            vao.elements = elementState.create(options.elements)\n            vao.ownsElements = true\n          }\n        } else {\n          vao.elements = null\n          vao.ownsElements = false\n        }\n        attributes = options.attributes\n\n        // set default vao\n        vao.offset = 0\n        vao.count = -1\n        vao.instances = -1\n        vao.primitive = 4\n\n        // copy element properties\n        if (vao.elements) {\n          vao.count = vao.elements._elements.vertCount\n          vao.primitive = vao.elements._elements.primType\n        }\n\n        if ('offset' in options) {\n          vao.offset = options.offset | 0\n        }\n        if ('count' in options) {\n          vao.count = options.count | 0\n        }\n        if ('instances' in options) {\n          vao.instances = options.instances | 0\n        }\n        if ('primitive' in options) {\n          \n          vao.primitive = primTypes[options.primitive]\n        }\n\n        \n        \n      }\n\n      \n      \n\n      var bufUpdated = {}\n      var nattributes = vao.attributes\n      nattributes.length = attributes.length\n      for (var i = 0; i < attributes.length; ++i) {\n        var spec = attributes[i]\n        var rec = nattributes[i] = new AttributeRecord()\n        var data = spec.data || spec\n        if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {\n          var buf\n          if (vao.buffers[i]) {\n            buf = vao.buffers[i]\n            if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) {\n              buf.subdata(data)\n            } else {\n              buf.destroy()\n              vao.buffers[i] = null\n            }\n          }\n          if (!vao.buffers[i]) {\n            buf = vao.buffers[i] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true)\n          }\n          rec.buffer = bufferState.getBuffer(buf)\n          rec.size = rec.buffer.dimension | 0\n          rec.normalized = false\n          rec.type = rec.buffer.dtype\n          rec.offset = 0\n          rec.stride = 0\n          rec.divisor = 0\n          rec.state = 1\n          bufUpdated[i] = 1\n        } else if (bufferState.getBuffer(spec)) {\n          rec.buffer = bufferState.getBuffer(spec)\n          rec.size = rec.buffer.dimension | 0\n          rec.normalized = false\n          rec.type = rec.buffer.dtype\n          rec.offset = 0\n          rec.stride = 0\n          rec.divisor = 0\n          rec.state = 1\n        } else if (bufferState.getBuffer(spec.buffer)) {\n          rec.buffer = bufferState.getBuffer(spec.buffer)\n          rec.size = ((+spec.size) || rec.buffer.dimension) | 0\n          rec.normalized = !!spec.normalized || false\n          if ('type' in spec) {\n            \n            rec.type = glTypes[spec.type]\n          } else {\n            rec.type = rec.buffer.dtype\n          }\n          rec.offset = (spec.offset || 0) | 0\n          rec.stride = (spec.stride || 0) | 0\n          rec.divisor = (spec.divisor || 0) | 0\n          rec.state = 1\n\n          \n          \n          \n          \n          \n        } else if ('x' in spec) {\n          \n          rec.x = +spec.x || 0\n          rec.y = +spec.y || 0\n          rec.z = +spec.z || 0\n          rec.w = +spec.w || 0\n          rec.state = 2\n        } else {\n          \n        }\n      }\n\n      // retire unused buffers\n      for (var j = 0; j < vao.buffers.length; ++j) {\n        if (!bufUpdated[j] && vao.buffers[j]) {\n          vao.buffers[j].destroy()\n          vao.buffers[j] = null\n        }\n      }\n\n      vao.refresh()\n      return updateVAO\n    }\n\n    updateVAO.destroy = function () {\n      for (var j = 0; j < vao.buffers.length; ++j) {\n        if (vao.buffers[j]) {\n          vao.buffers[j].destroy()\n        }\n      }\n      vao.buffers.length = 0\n\n      if (vao.ownsElements) {\n        vao.elements.destroy()\n        vao.elements = null\n        vao.ownsElements = false\n      }\n\n      vao.destroy()\n    }\n\n    updateVAO._vao = vao\n    updateVAO._reglType = 'vao'\n\n    return updateVAO(_attr)\n  }\n\n  return state\n}\n\nvar GL_FRAGMENT_SHADER = 35632\nvar GL_VERTEX_SHADER = 35633\n\nvar GL_ACTIVE_UNIFORMS = 0x8B86\nvar GL_ACTIVE_ATTRIBUTES = 0x8B89\n\nfunction wrapShaderState (gl, stringStore, stats, config) {\n  // ===================================================\n  // glsl compilation and linking\n  // ===================================================\n  var fragShaders = {}\n  var vertShaders = {}\n\n  function ActiveInfo (name, id, location, info) {\n    this.name = name\n    this.id = id\n    this.location = location\n    this.info = info\n  }\n\n  function insertActiveInfo (list, info) {\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].id === info.id) {\n        list[i].location = info.location\n        return\n      }\n    }\n    list.push(info)\n  }\n\n  function getShader (type, id, command) {\n    var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders\n    var shader = cache[id]\n\n    if (!shader) {\n      var source = stringStore.str(id)\n      shader = gl.createShader(type)\n      gl.shaderSource(shader, source)\n      gl.compileShader(shader)\n      \n      cache[id] = shader\n    }\n\n    return shader\n  }\n\n  // ===================================================\n  // program linking\n  // ===================================================\n  var programCache = {}\n  var programList = []\n\n  var PROGRAM_COUNTER = 0\n\n  function REGLProgram (fragId, vertId) {\n    this.id = PROGRAM_COUNTER++\n    this.fragId = fragId\n    this.vertId = vertId\n    this.program = null\n    this.uniforms = []\n    this.attributes = []\n    this.refCount = 1\n\n    if (config.profile) {\n      this.stats = {\n        uniformsCount: 0,\n        attributesCount: 0\n      }\n    }\n  }\n\n  function linkProgram (desc, command, attributeLocations) {\n    var i, info\n\n    // -------------------------------\n    // compile & link\n    // -------------------------------\n    var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId)\n    var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId)\n\n    var program = desc.program = gl.createProgram()\n    gl.attachShader(program, fragShader)\n    gl.attachShader(program, vertShader)\n    if (attributeLocations) {\n      for (i = 0; i < attributeLocations.length; ++i) {\n        var binding = attributeLocations[i]\n        gl.bindAttribLocation(program, binding[0], binding[1])\n      }\n    }\n\n    gl.linkProgram(program)\n    \n\n    // -------------------------------\n    // grab uniforms\n    // -------------------------------\n    var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS)\n    if (config.profile) {\n      desc.stats.uniformsCount = numUniforms\n    }\n    var uniforms = desc.uniforms\n    for (i = 0; i < numUniforms; ++i) {\n      info = gl.getActiveUniform(program, i)\n      if (info) {\n        if (info.size > 1) {\n          for (var j = 0; j < info.size; ++j) {\n            var name = info.name.replace('[0]', '[' + j + ']')\n            insertActiveInfo(uniforms, new ActiveInfo(\n              name,\n              stringStore.id(name),\n              gl.getUniformLocation(program, name),\n              info))\n          }\n        } else {\n          insertActiveInfo(uniforms, new ActiveInfo(\n            info.name,\n            stringStore.id(info.name),\n            gl.getUniformLocation(program, info.name),\n            info))\n        }\n      }\n    }\n\n    // -------------------------------\n    // grab attributes\n    // -------------------------------\n    var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES)\n    if (config.profile) {\n      desc.stats.attributesCount = numAttributes\n    }\n\n    var attributes = desc.attributes\n    for (i = 0; i < numAttributes; ++i) {\n      info = gl.getActiveAttrib(program, i)\n      if (info) {\n        insertActiveInfo(attributes, new ActiveInfo(\n          info.name,\n          stringStore.id(info.name),\n          gl.getAttribLocation(program, info.name),\n          info))\n      }\n    }\n  }\n\n  if (config.profile) {\n    stats.getMaxUniformsCount = function () {\n      var m = 0\n      programList.forEach(function (desc) {\n        if (desc.stats.uniformsCount > m) {\n          m = desc.stats.uniformsCount\n        }\n      })\n      return m\n    }\n\n    stats.getMaxAttributesCount = function () {\n      var m = 0\n      programList.forEach(function (desc) {\n        if (desc.stats.attributesCount > m) {\n          m = desc.stats.attributesCount\n        }\n      })\n      return m\n    }\n  }\n\n  function restoreShaders () {\n    fragShaders = {}\n    vertShaders = {}\n    for (var i = 0; i < programList.length; ++i) {\n      linkProgram(programList[i], null, programList[i].attributes.map(function (info) {\n        return [info.location, info.name]\n      }))\n    }\n  }\n\n  return {\n    clear: function () {\n      var deleteShader = gl.deleteShader.bind(gl)\n      values(fragShaders).forEach(deleteShader)\n      fragShaders = {}\n      values(vertShaders).forEach(deleteShader)\n      vertShaders = {}\n\n      programList.forEach(function (desc) {\n        gl.deleteProgram(desc.program)\n      })\n      programList.length = 0\n      programCache = {}\n\n      stats.shaderCount = 0\n    },\n\n    program: function (vertId, fragId, command, attribLocations) {\n      \n      \n\n      var cache = programCache[fragId]\n      if (!cache) {\n        cache = programCache[fragId] = {}\n      }\n      var prevProgram = cache[vertId]\n      if (prevProgram) {\n        prevProgram.refCount++\n        if (!attribLocations) {\n          return prevProgram\n        }\n      }\n      var program = new REGLProgram(fragId, vertId)\n      stats.shaderCount++\n      linkProgram(program, command, attribLocations)\n      if (!prevProgram) {\n        cache[vertId] = program\n      }\n      programList.push(program)\n      return extend(program, {\n        destroy: function () {\n          program.refCount--\n          if (program.refCount <= 0) {\n            gl.deleteProgram(program.program)\n            var idx = programList.indexOf(program)\n            programList.splice(idx, 1)\n            stats.shaderCount--\n          }\n          // no program is linked to this vert anymore\n          if (cache[program.vertId].refCount <= 0) {\n            gl.deleteShader(vertShaders[program.vertId])\n            delete vertShaders[program.vertId]\n            delete programCache[program.fragId][program.vertId]\n          }\n          // no program is linked to this frag anymore\n          if (!Object.keys(programCache[program.fragId]).length) {\n            gl.deleteShader(fragShaders[program.fragId])\n            delete fragShaders[program.fragId]\n            delete programCache[program.fragId]\n          }\n        }\n      })\n    },\n\n    restore: restoreShaders,\n\n    shader: getShader,\n\n    frag: -1,\n    vert: -1\n  }\n}\n\nvar GL_RGBA$3 = 6408\nvar GL_UNSIGNED_BYTE$6 = 5121\nvar GL_PACK_ALIGNMENT = 0x0D05\nvar GL_FLOAT$6 = 0x1406 // 5126\n\nfunction wrapReadPixels (\n  gl,\n  framebufferState,\n  reglPoll,\n  context,\n  glAttributes,\n  extensions,\n  limits) {\n  function readPixelsImpl (input) {\n    var type\n    if (framebufferState.next === null) {\n      \n      type = GL_UNSIGNED_BYTE$6\n    } else {\n      \n      type = framebufferState.next.colorAttachments[0].texture._texture.type\n\n      \n    }\n\n    var x = 0\n    var y = 0\n    var width = context.framebufferWidth\n    var height = context.framebufferHeight\n    var data = null\n\n    if (isTypedArray(input)) {\n      data = input\n    } else if (input) {\n      \n      x = input.x | 0\n      y = input.y | 0\n      \n      \n      width = (input.width || (context.framebufferWidth - x)) | 0\n      height = (input.height || (context.framebufferHeight - y)) | 0\n      data = input.data || null\n    }\n\n    // sanity check input.data\n    if (data) {\n      if (type === GL_UNSIGNED_BYTE$6) {\n        \n      } else if (type === GL_FLOAT$6) {\n        \n      }\n    }\n\n    \n    \n\n    // Update WebGL state\n    reglPoll()\n\n    // Compute size\n    var size = width * height * 4\n\n    // Allocate data\n    if (!data) {\n      if (type === GL_UNSIGNED_BYTE$6) {\n        data = new Uint8Array(size)\n      } else if (type === GL_FLOAT$6) {\n        data = data || new Float32Array(size)\n      }\n    }\n\n    // Type check\n    \n    \n\n    // Run read pixels\n    gl.pixelStorei(GL_PACK_ALIGNMENT, 4)\n    gl.readPixels(x, y, width, height, GL_RGBA$3,\n      type,\n      data)\n\n    return data\n  }\n\n  function readPixelsFBO (options) {\n    var result\n    framebufferState.setFBO({\n      framebuffer: options.framebuffer\n    }, function () {\n      result = readPixelsImpl(options)\n    })\n    return result\n  }\n\n  function readPixels (options) {\n    if (!options || !('framebuffer' in options)) {\n      return readPixelsImpl(options)\n    } else {\n      return readPixelsFBO(options)\n    }\n  }\n\n  return readPixels\n}\n\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n * Also http://anmar.eu.org/projects/jssha2/\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha256(s)    { return rstr2hex(rstr_sha256(str2rstr_utf8(s))); }\n/*\n * Calculate the sha256 of a raw string\n */\nfunction rstr_sha256(s)\n{\n  return binb2rstr(binb_sha256(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-sha256 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha256(key, data)\n{\n  var bkey = rstr2binb(key);\n  if(bkey.length > 16) bkey = binb_sha256(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = binb_sha256(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n  return binb2rstr(binb_sha256(opad.concat(hash), 512 + 256));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n  var divisor = encoding.length;\n  var remainders = Array();\n  var i, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */\n  while(dividend.length > 0)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  /* Append leading zero equivalents */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)))\n  for(i = output.length; i < full_length; i++)\n    output = encoding[0] + output;\n\n  return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n  return output;\n}\n\n/*\n * Main sha256 function, with its support functions\n */\nfunction sha256_S (X, n) {return ( X >>> n ) | (X << (32 - n));}\nfunction sha256_R (X, n) {return ( X >>> n );}\nfunction sha256_Ch(x, y, z) {return ((x & y) ^ ((~x) & z));}\nfunction sha256_Maj(x, y, z) {return ((x & y) ^ (x & z) ^ (y & z));}\nfunction sha256_Sigma0256(x) {return (sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22));}\nfunction sha256_Sigma1256(x) {return (sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25));}\nfunction sha256_Gamma0256(x) {return (sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3));}\nfunction sha256_Gamma1256(x) {return (sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10));}\nvar sha256_K = new Array\n(\n  1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993,\n  -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987,\n  1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522,\n  264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,\n  -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585,\n  113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,\n  1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885,\n  -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344,\n  430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,\n  1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872,\n  -1866530822, -1538233109, -1090935817, -965641998\n);\n\nfunction binb_sha256(m, l)\n{\n  var HASH = new Array(1779033703, -1150833019, 1013904242, -1521486534,\n                       1359893119, -1694144372, 528734635, 1541459225);\n  var W = new Array(64);\n  var a, b, c, d, e, f, g, h;\n  var i, j, T1, T2;\n\n  /* append padding */\n  m[l >> 5] |= 0x80 << (24 - l % 32);\n  m[((l + 64 >> 9) << 4) + 15] = l;\n\n  for(i = 0; i < m.length; i += 16)\n  {\n    a = HASH[0];\n    b = HASH[1];\n    c = HASH[2];\n    d = HASH[3];\n    e = HASH[4];\n    f = HASH[5];\n    g = HASH[6];\n    h = HASH[7];\n\n    for(j = 0; j < 64; j++)\n    {\n      if (j < 16) W[j] = m[j + i];\n      else W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]),\n                                            sha256_Gamma0256(W[j - 15])), W[j - 16]);\n\n      T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)),\n                                                          sha256_K[j]), W[j]);\n      T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));\n      h = g;\n      g = f;\n      f = e;\n      e = safe_add(d, T1);\n      d = c;\n      c = b;\n      b = a;\n      a = safe_add(T1, T2);\n    }\n\n    HASH[0] = safe_add(a, HASH[0]);\n    HASH[1] = safe_add(b, HASH[1]);\n    HASH[2] = safe_add(c, HASH[2]);\n    HASH[3] = safe_add(d, HASH[3]);\n    HASH[4] = safe_add(e, HASH[4]);\n    HASH[5] = safe_add(f, HASH[5]);\n    HASH[6] = safe_add(g, HASH[6]);\n    HASH[7] = safe_add(h, HASH[7]);\n  }\n  return HASH;\n}\n\nfunction safe_add (x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\nfunction slice (x) {\n  return Array.prototype.slice.call(x)\n}\n\nfunction join (x) {\n  return slice(x).join('')\n}\n\nfunction createEnvironment (options) {\n  var cache = options && options.cache\n\n  // Unique variable id counter\n  var varCounter = 0\n\n  // Linked values are passed from this scope into the generated code block\n  // Calling link() passes a value into the generated scope and returns\n  // the variable name which it is bound to\n  var linkedNames = []\n  var linkedValues = []\n  var isStable = []\n  function link (value, options) {\n    var stable = options && options.stable\n    if (!stable) {\n      for (var i = 0; i < linkedValues.length; ++i) {\n        if (linkedValues[i] === value && !isStable[i]) {\n          return linkedNames[i]\n        }\n      }\n    }\n\n    var name = 'g' + (varCounter++)\n    linkedNames.push(name)\n    linkedValues.push(value)\n    isStable.push(stable)\n    return name\n  }\n\n  // create a code block\n  function block () {\n    var code = []\n    function push () {\n      code.push.apply(code, slice(arguments))\n    }\n\n    var vars = []\n    function def () {\n      var name = 'v' + (varCounter++)\n      vars.push(name)\n\n      if (arguments.length > 0) {\n        code.push(name, '=')\n        code.push.apply(code, slice(arguments))\n        code.push(';')\n      }\n\n      return name\n    }\n\n    return extend(push, {\n      def: def,\n      toString: function () {\n        return join([\n          (vars.length > 0 ? 'var ' + vars.join(',') + ';' : ''),\n          join(code)\n        ])\n      }\n    })\n  }\n\n  function scope () {\n    var entry = block()\n    var exit = block()\n\n    var entryToString = entry.toString\n    var exitToString = exit.toString\n\n    function save (object, prop) {\n      exit(object, prop, '=', entry.def(object, prop), ';')\n    }\n\n    return extend(function () {\n      entry.apply(entry, slice(arguments))\n    }, {\n      def: entry.def,\n      entry: entry,\n      exit: exit,\n      save: save,\n      set: function (object, prop, value) {\n        save(object, prop)\n        entry(object, prop, '=', value, ';')\n      },\n      toString: function () {\n        return entryToString() + exitToString()\n      }\n    })\n  }\n\n  function conditional () {\n    var pred = join(arguments)\n    var thenBlock = scope()\n    var elseBlock = scope()\n\n    var thenToString = thenBlock.toString\n    var elseToString = elseBlock.toString\n\n    return extend(thenBlock, {\n      then: function () {\n        thenBlock.apply(thenBlock, slice(arguments))\n        return this\n      },\n      else: function () {\n        elseBlock.apply(elseBlock, slice(arguments))\n        return this\n      },\n      toString: function () {\n        var elseClause = elseToString()\n        if (elseClause) {\n          elseClause = 'else{' + elseClause + '}'\n        }\n        return join([\n          'if(', pred, '){',\n          thenToString(),\n          '}', elseClause\n        ])\n      }\n    })\n  }\n\n  // procedure list\n  var globalBlock = block()\n  var procedures = {}\n  function proc (name, count) {\n    var args = []\n    function arg () {\n      var name = 'a' + args.length\n      args.push(name)\n      return name\n    }\n\n    count = count || 0\n    for (var i = 0; i < count; ++i) {\n      arg()\n    }\n\n    var body = scope()\n    var bodyToString = body.toString\n\n    var result = procedures[name] = extend(body, {\n      arg: arg,\n      toString: function () {\n        return join([\n          'function(', args.join(), '){',\n          bodyToString(),\n          '}'\n        ])\n      }\n    })\n\n    return result\n  }\n\n  function compile () {\n    var code = ['\"use strict\";',\n      globalBlock,\n      'return {']\n    Object.keys(procedures).forEach(function (name) {\n      code.push('\"', name, '\":', procedures[name].toString(), ',')\n    })\n    code.push('}')\n    var src = join(code)\n      .replace(/;/g, ';\\n')\n      .replace(/}/g, '}\\n')\n      .replace(/{/g, '{\\n')\n\n    var key\n    if (cache) {\n      key = hex_sha256(src);\n\n      if (cache[key]) {\n        return cache[key].apply(null, linkedValues)\n      }\n    }\n\n    var proc = Function.apply(null, linkedNames.concat(src))\n\n    if (cache) {\n      cache[key] = proc\n    }\n    return proc.apply(null, linkedValues)\n  }\n\n  return {\n    global: globalBlock,\n    link: link,\n    block: block,\n    proc: proc,\n    scope: scope,\n    cond: conditional,\n    compile: compile\n  }\n}\n\n// \"cute\" names for vector components\nvar CUTE_COMPONENTS = 'xyzw'.split('')\n\nvar GL_UNSIGNED_BYTE$7 = 5121\n\nvar ATTRIB_STATE_POINTER = 1\nvar ATTRIB_STATE_CONSTANT = 2\n\nvar DYN_FUNC$1 = 0\nvar DYN_PROP$1 = 1\nvar DYN_CONTEXT$1 = 2\nvar DYN_STATE$1 = 3\nvar DYN_THUNK = 4\nvar DYN_CONSTANT$1 = 5\nvar DYN_ARRAY$1 = 6\n\nvar S_DITHER = 'dither'\nvar S_BLEND_ENABLE = 'blend.enable'\nvar S_BLEND_COLOR = 'blend.color'\nvar S_BLEND_EQUATION = 'blend.equation'\nvar S_BLEND_FUNC = 'blend.func'\nvar S_DEPTH_ENABLE = 'depth.enable'\nvar S_DEPTH_FUNC = 'depth.func'\nvar S_DEPTH_RANGE = 'depth.range'\nvar S_DEPTH_MASK = 'depth.mask'\nvar S_COLOR_MASK = 'colorMask'\nvar S_CULL_ENABLE = 'cull.enable'\nvar S_CULL_FACE = 'cull.face'\nvar S_FRONT_FACE = 'frontFace'\nvar S_LINE_WIDTH = 'lineWidth'\nvar S_POLYGON_OFFSET_ENABLE = 'polygonOffset.enable'\nvar S_POLYGON_OFFSET_OFFSET = 'polygonOffset.offset'\nvar S_SAMPLE_ALPHA = 'sample.alpha'\nvar S_SAMPLE_ENABLE = 'sample.enable'\nvar S_SAMPLE_COVERAGE = 'sample.coverage'\nvar S_STENCIL_ENABLE = 'stencil.enable'\nvar S_STENCIL_MASK = 'stencil.mask'\nvar S_STENCIL_FUNC = 'stencil.func'\nvar S_STENCIL_OPFRONT = 'stencil.opFront'\nvar S_STENCIL_OPBACK = 'stencil.opBack'\nvar S_SCISSOR_ENABLE = 'scissor.enable'\nvar S_SCISSOR_BOX = 'scissor.box'\nvar S_VIEWPORT = 'viewport'\n\nvar S_PROFILE = 'profile'\n\nvar S_FRAMEBUFFER = 'framebuffer'\nvar S_VERT = 'vert'\nvar S_FRAG = 'frag'\nvar S_ELEMENTS = 'elements'\nvar S_PRIMITIVE = 'primitive'\nvar S_COUNT = 'count'\nvar S_OFFSET = 'offset'\nvar S_INSTANCES = 'instances'\nvar S_VAO = 'vao'\n\nvar SUFFIX_WIDTH = 'Width'\nvar SUFFIX_HEIGHT = 'Height'\n\nvar S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH\nvar S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT\nvar S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH\nvar S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT\nvar S_DRAWINGBUFFER = 'drawingBuffer'\nvar S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH\nvar S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT\n\nvar NESTED_OPTIONS = [\n  S_BLEND_FUNC,\n  S_BLEND_EQUATION,\n  S_STENCIL_FUNC,\n  S_STENCIL_OPFRONT,\n  S_STENCIL_OPBACK,\n  S_SAMPLE_COVERAGE,\n  S_VIEWPORT,\n  S_SCISSOR_BOX,\n  S_POLYGON_OFFSET_OFFSET\n]\n\nvar GL_ARRAY_BUFFER$2 = 34962\nvar GL_ELEMENT_ARRAY_BUFFER$2 = 34963\n\nvar GL_CULL_FACE = 0x0B44\nvar GL_BLEND = 0x0BE2\nvar GL_DITHER = 0x0BD0\nvar GL_STENCIL_TEST = 0x0B90\nvar GL_DEPTH_TEST = 0x0B71\nvar GL_SCISSOR_TEST = 0x0C11\nvar GL_POLYGON_OFFSET_FILL = 0x8037\nvar GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E\nvar GL_SAMPLE_COVERAGE = 0x80A0\n\nvar GL_FLOAT$7 = 5126\nvar GL_FLOAT_VEC2 = 35664\nvar GL_FLOAT_VEC3 = 35665\nvar GL_FLOAT_VEC4 = 35666\nvar GL_INT$2 = 5124\nvar GL_INT_VEC2 = 35667\nvar GL_INT_VEC3 = 35668\nvar GL_INT_VEC4 = 35669\nvar GL_BOOL = 35670\nvar GL_BOOL_VEC2 = 35671\nvar GL_BOOL_VEC3 = 35672\nvar GL_BOOL_VEC4 = 35673\nvar GL_FLOAT_MAT2 = 35674\nvar GL_FLOAT_MAT3 = 35675\nvar GL_FLOAT_MAT4 = 35676\nvar GL_SAMPLER_2D = 35678\nvar GL_SAMPLER_CUBE = 35680\n\nvar GL_TRIANGLES$1 = 4\n\nvar GL_FRONT = 1028\nvar GL_BACK = 1029\nvar GL_CW = 0x0900\nvar GL_CCW = 0x0901\nvar GL_MIN_EXT = 0x8007\nvar GL_MAX_EXT = 0x8008\nvar GL_ALWAYS = 519\nvar GL_KEEP = 7680\nvar GL_ZERO = 0\nvar GL_ONE = 1\nvar GL_FUNC_ADD = 0x8006\nvar GL_LESS = 513\n\nvar GL_FRAMEBUFFER$2 = 0x8D40\nvar GL_COLOR_ATTACHMENT0$2 = 0x8CE0\n\nvar blendFuncs = {\n  '0': 0,\n  '1': 1,\n  'zero': 0,\n  'one': 1,\n  'src color': 768,\n  'one minus src color': 769,\n  'src alpha': 770,\n  'one minus src alpha': 771,\n  'dst color': 774,\n  'one minus dst color': 775,\n  'dst alpha': 772,\n  'one minus dst alpha': 773,\n  'constant color': 32769,\n  'one minus constant color': 32770,\n  'constant alpha': 32771,\n  'one minus constant alpha': 32772,\n  'src alpha saturate': 776\n}\n\nvar compareFuncs = {\n  'never': 512,\n  'less': 513,\n  '<': 513,\n  'equal': 514,\n  '=': 514,\n  '==': 514,\n  '===': 514,\n  'lequal': 515,\n  '<=': 515,\n  'greater': 516,\n  '>': 516,\n  'notequal': 517,\n  '!=': 517,\n  '!==': 517,\n  'gequal': 518,\n  '>=': 518,\n  'always': 519\n}\n\nvar stencilOps = {\n  '0': 0,\n  'zero': 0,\n  'keep': 7680,\n  'replace': 7681,\n  'increment': 7682,\n  'decrement': 7683,\n  'increment wrap': 34055,\n  'decrement wrap': 34056,\n  'invert': 5386\n}\n\nvar orientationType = {\n  'cw': GL_CW,\n  'ccw': GL_CCW\n}\n\nfunction isBufferArgs (x) {\n  return Array.isArray(x) ||\n    isTypedArray(x) ||\n    isNDArrayLike(x)\n}\n\n// Make sure viewport is processed first\nfunction sortState (state) {\n  return state.sort(function (a, b) {\n    if (a === S_VIEWPORT) {\n      return -1\n    } else if (b === S_VIEWPORT) {\n      return 1\n    }\n    return (a < b) ? -1 : 1\n  })\n}\n\nfunction Declaration (thisDep, contextDep, propDep, append) {\n  this.thisDep = thisDep\n  this.contextDep = contextDep\n  this.propDep = propDep\n  this.append = append\n}\n\nfunction isStatic (decl) {\n  return decl && !(decl.thisDep || decl.contextDep || decl.propDep)\n}\n\nfunction createStaticDecl (append) {\n  return new Declaration(false, false, false, append)\n}\n\nfunction createDynamicDecl (dyn, append) {\n  var type = dyn.type\n  if (type === DYN_FUNC$1) {\n    var numArgs = dyn.data.length\n    return new Declaration(\n      true,\n      numArgs >= 1,\n      numArgs >= 2,\n      append)\n  } else if (type === DYN_THUNK) {\n    var data = dyn.data\n    return new Declaration(\n      data.thisDep,\n      data.contextDep,\n      data.propDep,\n      append)\n  } else if (type === DYN_CONSTANT$1) {\n    return new Declaration(\n      false,\n      false,\n      false,\n      append)\n  } else if (type === DYN_ARRAY$1) {\n    var thisDep = false\n    var contextDep = false\n    var propDep = false\n    for (var i = 0; i < dyn.data.length; ++i) {\n      var subDyn = dyn.data[i]\n      if (subDyn.type === DYN_PROP$1) {\n        propDep = true\n      } else if (subDyn.type === DYN_CONTEXT$1) {\n        contextDep = true\n      } else if (subDyn.type === DYN_STATE$1) {\n        thisDep = true\n      } else if (subDyn.type === DYN_FUNC$1) {\n        thisDep = true\n        var subArgs = subDyn.data\n        if (subArgs >= 1) {\n          contextDep = true\n        }\n        if (subArgs >= 2) {\n          propDep = true\n        }\n      } else if (subDyn.type === DYN_THUNK) {\n        thisDep = thisDep || subDyn.data.thisDep\n        contextDep = contextDep || subDyn.data.contextDep\n        propDep = propDep || subDyn.data.propDep\n      }\n    }\n    return new Declaration(\n      thisDep,\n      contextDep,\n      propDep,\n      append)\n  } else {\n    return new Declaration(\n      type === DYN_STATE$1,\n      type === DYN_CONTEXT$1,\n      type === DYN_PROP$1,\n      append)\n  }\n}\n\nvar SCOPE_DECL = new Declaration(false, false, false, function () {})\n\nfunction reglCore (\n  gl,\n  stringStore,\n  extensions,\n  limits,\n  bufferState,\n  elementState,\n  textureState,\n  framebufferState,\n  uniformState,\n  attributeState,\n  shaderState,\n  drawState,\n  contextState,\n  timer,\n  cachedCode,\n  config) {\n  var AttributeRecord = attributeState.Record\n\n  var blendEquations = {\n    'add': 32774,\n    'subtract': 32778,\n    'reverse subtract': 32779\n  }\n  if (extensions.ext_blend_minmax) {\n    blendEquations.min = GL_MIN_EXT\n    blendEquations.max = GL_MAX_EXT\n  }\n\n  var extInstancing = extensions.angle_instanced_arrays\n  var extDrawBuffers = extensions.webgl_draw_buffers\n  var extVertexArrays = extensions.oes_vertex_array_object\n\n  // ===================================================\n  // ===================================================\n  // WEBGL STATE\n  // ===================================================\n  // ===================================================\n  var currentState = {\n    dirty: true,\n    profile: config.profile\n  }\n  var nextState = {}\n  var GL_STATE_NAMES = []\n  var GL_FLAGS = {}\n  var GL_VARIABLES = {}\n\n  function propName (name) {\n    return name.replace('.', '_')\n  }\n\n  function stateFlag (sname, cap, init) {\n    var name = propName(sname)\n    GL_STATE_NAMES.push(sname)\n    nextState[name] = currentState[name] = !!init\n    GL_FLAGS[name] = cap\n  }\n\n  function stateVariable (sname, func, init) {\n    var name = propName(sname)\n    GL_STATE_NAMES.push(sname)\n    if (Array.isArray(init)) {\n      currentState[name] = init.slice()\n      nextState[name] = init.slice()\n    } else {\n      currentState[name] = nextState[name] = init\n    }\n    GL_VARIABLES[name] = func\n  }\n  \n  function hasVariableReference (exp) {\n    if (!isNaN(exp)) {\n      return false;\n    }\n    // strengthen this function if variable values can be non-(null/number) literals.\n    return true;\n  }\n\n  // Dithering\n  stateFlag(S_DITHER, GL_DITHER)\n\n  // Blending\n  stateFlag(S_BLEND_ENABLE, GL_BLEND)\n  stateVariable(S_BLEND_COLOR, 'blendColor', [0, 0, 0, 0])\n  stateVariable(S_BLEND_EQUATION, 'blendEquationSeparate',\n    [GL_FUNC_ADD, GL_FUNC_ADD])\n  stateVariable(S_BLEND_FUNC, 'blendFuncSeparate',\n    [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO])\n\n  // Depth\n  stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true)\n  stateVariable(S_DEPTH_FUNC, 'depthFunc', GL_LESS)\n  stateVariable(S_DEPTH_RANGE, 'depthRange', [0, 1])\n  stateVariable(S_DEPTH_MASK, 'depthMask', true)\n\n  // Color mask\n  stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true])\n\n  // Face culling\n  stateFlag(S_CULL_ENABLE, GL_CULL_FACE)\n  stateVariable(S_CULL_FACE, 'cullFace', GL_BACK)\n\n  // Front face orientation\n  stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW)\n\n  // Line width\n  stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1)\n\n  // Polygon offset\n  stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL)\n  stateVariable(S_POLYGON_OFFSET_OFFSET, 'polygonOffset', [0, 0])\n\n  // Sample coverage\n  stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE)\n  stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE)\n  stateVariable(S_SAMPLE_COVERAGE, 'sampleCoverage', [1, false])\n\n  // Stencil\n  stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST)\n  stateVariable(S_STENCIL_MASK, 'stencilMask', -1)\n  stateVariable(S_STENCIL_FUNC, 'stencilFunc', [GL_ALWAYS, 0, -1])\n  stateVariable(S_STENCIL_OPFRONT, 'stencilOpSeparate',\n    [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP])\n  stateVariable(S_STENCIL_OPBACK, 'stencilOpSeparate',\n    [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP])\n\n  // Scissor\n  stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST)\n  stateVariable(S_SCISSOR_BOX, 'scissor',\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight])\n\n  // Viewport\n  stateVariable(S_VIEWPORT, S_VIEWPORT,\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight])\n\n  // ===================================================\n  // ===================================================\n  // ENVIRONMENT\n  // ===================================================\n  // ===================================================\n  var sharedState = {\n    gl: gl,\n    context: contextState,\n    strings: stringStore,\n    next: nextState,\n    current: currentState,\n    draw: drawState,\n    elements: elementState,\n    buffer: bufferState,\n    shader: shaderState,\n    attributes: attributeState.state,\n    vao: attributeState,\n    uniforms: uniformState,\n    framebuffer: framebufferState,\n    extensions: extensions,\n\n    timer: timer,\n    isBufferArgs: isBufferArgs\n  }\n\n  var sharedConstants = {\n    primTypes: primTypes,\n    compareFuncs: compareFuncs,\n    blendFuncs: blendFuncs,\n    blendEquations: blendEquations,\n    stencilOps: stencilOps,\n    glTypes: glTypes,\n    orientationType: orientationType\n  }\n\n  \n\n  if (extDrawBuffers) {\n    sharedConstants.backBuffer = [GL_BACK]\n    sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function (i) {\n      if (i === 0) {\n        return [0]\n      }\n      return loop(i, function (j) {\n        return GL_COLOR_ATTACHMENT0$2 + j\n      })\n    })\n  }\n\n  var drawCallCounter = 0\n  function createREGLEnvironment () {\n    var env = createEnvironment({cache: cachedCode})\n    var link = env.link\n    var global = env.global\n    env.id = drawCallCounter++\n\n    env.batchId = '0'\n\n    // link shared state\n    var SHARED = link(sharedState)\n    var shared = env.shared = {\n      props: 'a0'\n    }\n    Object.keys(sharedState).forEach(function (prop) {\n      shared[prop] = global.def(SHARED, '.', prop)\n    })\n\n    // Inject runtime assertion stuff for debug builds\n    \n\n    // Copy GL state variables over\n    var nextVars = env.next = {}\n    var currentVars = env.current = {}\n    Object.keys(GL_VARIABLES).forEach(function (variable) {\n      if (Array.isArray(currentState[variable])) {\n        nextVars[variable] = global.def(shared.next, '.', variable)\n        currentVars[variable] = global.def(shared.current, '.', variable)\n      }\n    })\n\n    // Initialize shared constants\n    var constants = env.constants = {}\n    Object.keys(sharedConstants).forEach(function (name) {\n      constants[name] = global.def(JSON.stringify(sharedConstants[name]))\n    })\n\n    // Helper function for calling a block\n    env.invoke = function (block, x) {\n      switch (x.type) {\n        case DYN_FUNC$1:\n          var argList = [\n            'this',\n            shared.context,\n            shared.props,\n            env.batchId\n          ]\n          return block.def(\n            link(x.data), '.call(',\n            argList.slice(0, Math.max(x.data.length + 1, 4)),\n            ')')\n        case DYN_PROP$1:\n          return block.def(shared.props, x.data)\n        case DYN_CONTEXT$1:\n          return block.def(shared.context, x.data)\n        case DYN_STATE$1:\n          return block.def('this', x.data)\n        case DYN_THUNK:\n          x.data.append(env, block)\n          return x.data.ref\n        case DYN_CONSTANT$1:\n          return x.data.toString()\n        case DYN_ARRAY$1:\n          return x.data.map(function (y) {\n            return env.invoke(block, y)\n          })\n      }\n    }\n\n    env.attribCache = {}\n\n    var scopeAttribs = {}\n    env.scopeAttrib = function (name) {\n      var id = stringStore.id(name)\n      if (id in scopeAttribs) {\n        return scopeAttribs[id]\n      }\n      var binding = attributeState.scope[id]\n      if (!binding) {\n        binding = attributeState.scope[id] = new AttributeRecord()\n      }\n      var result = scopeAttribs[id] = link(binding)\n      return result\n    }\n\n    return env\n  }\n\n  // ===================================================\n  // ===================================================\n  // PARSING\n  // ===================================================\n  // ===================================================\n  function parseProfile (options) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    var profileEnable\n    if (S_PROFILE in staticOptions) {\n      var value = !!staticOptions[S_PROFILE]\n      profileEnable = createStaticDecl(function (env, scope) {\n        return value\n      })\n      profileEnable.enable = value\n    } else if (S_PROFILE in dynamicOptions) {\n      var dyn = dynamicOptions[S_PROFILE]\n      profileEnable = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    }\n\n    return profileEnable\n  }\n\n  function parseFramebuffer (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    if (S_FRAMEBUFFER in staticOptions) {\n      var framebuffer = staticOptions[S_FRAMEBUFFER]\n      if (framebuffer) {\n        framebuffer = framebufferState.getFramebuffer(framebuffer)\n        \n        return createStaticDecl(function (env, block) {\n          var FRAMEBUFFER = env.link(framebuffer)\n          var shared = env.shared\n          block.set(\n            shared.framebuffer,\n            '.next',\n            FRAMEBUFFER)\n          var CONTEXT = shared.context\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            FRAMEBUFFER + '.width')\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            FRAMEBUFFER + '.height')\n          return FRAMEBUFFER\n        })\n      } else {\n        return createStaticDecl(function (env, scope) {\n          var shared = env.shared\n          scope.set(\n            shared.framebuffer,\n            '.next',\n            'null')\n          var CONTEXT = shared.context\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH)\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT)\n          return 'null'\n        })\n      }\n    } else if (S_FRAMEBUFFER in dynamicOptions) {\n      var dyn = dynamicOptions[S_FRAMEBUFFER]\n      return createDynamicDecl(dyn, function (env, scope) {\n        var FRAMEBUFFER_FUNC = env.invoke(scope, dyn)\n        var shared = env.shared\n        var FRAMEBUFFER_STATE = shared.framebuffer\n        var FRAMEBUFFER = scope.def(\n          FRAMEBUFFER_STATE, '.getFramebuffer(', FRAMEBUFFER_FUNC, ')')\n\n        \n\n        scope.set(\n          FRAMEBUFFER_STATE,\n          '.next',\n          FRAMEBUFFER)\n        var CONTEXT = shared.context\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_WIDTH,\n          FRAMEBUFFER + '?' + FRAMEBUFFER + '.width:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH)\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_HEIGHT,\n          FRAMEBUFFER +\n          '?' + FRAMEBUFFER + '.height:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT)\n        return FRAMEBUFFER\n      })\n    } else {\n      return null\n    }\n  }\n\n  function parseViewportScissor (options, framebuffer, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    function parseBox (param) {\n      if (param in staticOptions) {\n        var box = staticOptions[param]\n        \n\n        var isStatic = true\n        var x = box.x | 0\n        var y = box.y | 0\n        var w, h\n        if ('width' in box) {\n          w = box.width | 0\n          \n        } else {\n          isStatic = false\n        }\n        if ('height' in box) {\n          h = box.height | 0\n          \n        } else {\n          isStatic = false\n        }\n\n        return new Declaration(\n          !isStatic && framebuffer && framebuffer.thisDep,\n          !isStatic && framebuffer && framebuffer.contextDep,\n          !isStatic && framebuffer && framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context\n            var BOX_W = w\n            if (!('width' in box)) {\n              BOX_W = scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', x)\n            }\n            var BOX_H = h\n            if (!('height' in box)) {\n              BOX_H = scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', y)\n            }\n            return [x, y, BOX_W, BOX_H]\n          })\n      } else if (param in dynamicOptions) {\n        var dynBox = dynamicOptions[param]\n        var result = createDynamicDecl(dynBox, function (env, scope) {\n          var BOX = env.invoke(scope, dynBox)\n\n          \n\n          var CONTEXT = env.shared.context\n          var BOX_X = scope.def(BOX, '.x|0')\n          var BOX_Y = scope.def(BOX, '.y|0')\n          var BOX_W = scope.def(\n            '\"width\" in ', BOX, '?', BOX, '.width|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', BOX_X, ')')\n          var BOX_H = scope.def(\n            '\"height\" in ', BOX, '?', BOX, '.height|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', BOX_Y, ')')\n\n          \n\n          return [BOX_X, BOX_Y, BOX_W, BOX_H]\n        })\n        if (framebuffer) {\n          result.thisDep = result.thisDep || framebuffer.thisDep\n          result.contextDep = result.contextDep || framebuffer.contextDep\n          result.propDep = result.propDep || framebuffer.propDep\n        }\n        return result\n      } else if (framebuffer) {\n        return new Declaration(\n          framebuffer.thisDep,\n          framebuffer.contextDep,\n          framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context\n            return [\n              0, 0,\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH),\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT)]\n          })\n      } else {\n        return null\n      }\n    }\n\n    var viewport = parseBox(S_VIEWPORT)\n\n    if (viewport) {\n      var prevViewport = viewport\n      viewport = new Declaration(\n        viewport.thisDep,\n        viewport.contextDep,\n        viewport.propDep,\n        function (env, scope) {\n          var VIEWPORT = prevViewport.append(env, scope)\n          var CONTEXT = env.shared.context\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_WIDTH,\n            VIEWPORT[2])\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_HEIGHT,\n            VIEWPORT[3])\n          return VIEWPORT\n        })\n    }\n\n    return {\n      viewport: viewport,\n      scissor_box: parseBox(S_SCISSOR_BOX)\n    }\n  }\n\n  function parseAttribLocations (options, attributes) {\n    var staticOptions = options.static\n    var staticProgram =\n      typeof staticOptions[S_FRAG] === 'string' &&\n      typeof staticOptions[S_VERT] === 'string'\n    if (staticProgram) {\n      if (Object.keys(attributes.dynamic).length > 0) {\n        return null\n      }\n      var staticAttributes = attributes.static\n      var sAttributes = Object.keys(staticAttributes)\n      if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === 'number') {\n        var bindings = []\n        for (var i = 0; i < sAttributes.length; ++i) {\n          \n          bindings.push([staticAttributes[sAttributes[i]] | 0, sAttributes[i]])\n        }\n        return bindings\n      }\n    }\n    return null\n  }\n\n  function parseProgram (options, env, attribLocations) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    function parseShader (name) {\n      if (name in staticOptions) {\n        var id = stringStore.id(staticOptions[name])\n        \n        var result = createStaticDecl(function () {\n          return id\n        })\n        result.id = id\n        return result\n      } else if (name in dynamicOptions) {\n        var dyn = dynamicOptions[name]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var str = env.invoke(scope, dyn)\n          var id = scope.def(env.shared.strings, '.id(', str, ')')\n          \n          return id\n        })\n      }\n      return null\n    }\n\n    var frag = parseShader(S_FRAG)\n    var vert = parseShader(S_VERT)\n\n    var program = null\n    var progVar\n    if (isStatic(frag) && isStatic(vert)) {\n      program = shaderState.program(vert.id, frag.id, null, attribLocations)\n      progVar = createStaticDecl(function (env, scope) {\n        return env.link(program)\n      })\n    } else {\n      progVar = new Declaration(\n        (frag && frag.thisDep) || (vert && vert.thisDep),\n        (frag && frag.contextDep) || (vert && vert.contextDep),\n        (frag && frag.propDep) || (vert && vert.propDep),\n        function (env, scope) {\n          var SHADER_STATE = env.shared.shader\n          var fragId\n          if (frag) {\n            fragId = frag.append(env, scope)\n          } else {\n            fragId = scope.def(SHADER_STATE, '.', S_FRAG)\n          }\n          var vertId\n          if (vert) {\n            vertId = vert.append(env, scope)\n          } else {\n            vertId = scope.def(SHADER_STATE, '.', S_VERT)\n          }\n          var progDef = SHADER_STATE + '.program(' + vertId + ',' + fragId\n          \n          return scope.def(progDef + ')')\n        })\n    }\n\n    return {\n      frag: frag,\n      vert: vert,\n      progVar: progVar,\n      program: program\n    }\n  }\n\n  function parseDraw (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    // TODO: should use VAO to get default values for offset properties\n    // should move vao parse into here and out of the old stuff\n\n    var staticDraw = {}\n    var vaoActive = false\n\n    function parseVAO () {\n      if (S_VAO in staticOptions) {\n        var vao = staticOptions[S_VAO]\n        if (vao !== null && attributeState.getVAO(vao) === null) {\n          vao = attributeState.createVAO(vao)\n        }\n\n        vaoActive = true\n        staticDraw.vao = vao\n\n        return createStaticDecl(function (env) {\n          var vaoRef = attributeState.getVAO(vao)\n          if (vaoRef) {\n            return env.link(vaoRef)\n          } else {\n            return 'null'\n          }\n        })\n      } else if (S_VAO in dynamicOptions) {\n        vaoActive = true\n        var dyn = dynamicOptions[S_VAO]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var vaoRef = env.invoke(scope, dyn)\n          return scope.def(env.shared.vao + '.getVAO(' + vaoRef + ')')\n        })\n      }\n      return null\n    }\n\n    var vao = parseVAO()\n\n    var elementsActive = false\n\n    function parseElements () {\n      if (S_ELEMENTS in staticOptions) {\n        var elements = staticOptions[S_ELEMENTS]\n        staticDraw.elements = elements\n        if (isBufferArgs(elements)) {\n          var e = staticDraw.elements = elementState.create(elements, true)\n          elements = elementState.getElements(e)\n          elementsActive = true\n        } else if (elements) {\n          elements = elementState.getElements(elements)\n          elementsActive = true\n          \n        }\n\n        var result = createStaticDecl(function (env, scope) {\n          if (elements) {\n            var result = env.link(elements)\n            env.ELEMENTS = result\n            return result\n          }\n          env.ELEMENTS = null\n          return null\n        })\n        result.value = elements\n        return result\n      } else if (S_ELEMENTS in dynamicOptions) {\n        elementsActive = true\n\n        var dyn = dynamicOptions[S_ELEMENTS]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var shared = env.shared\n\n          var IS_BUFFER_ARGS = shared.isBufferArgs\n          var ELEMENT_STATE = shared.elements\n\n          var elementDefn = env.invoke(scope, dyn)\n          var elements = scope.def('null')\n          var elementStream = scope.def(IS_BUFFER_ARGS, '(', elementDefn, ')')\n\n          var ifte = env.cond(elementStream)\n            .then(elements, '=', ELEMENT_STATE, '.createStream(', elementDefn, ');')\n            .else(elements, '=', ELEMENT_STATE, '.getElements(', elementDefn, ');')\n\n          \n\n          scope.entry(ifte)\n          scope.exit(\n            env.cond(elementStream)\n              .then(ELEMENT_STATE, '.destroyStream(', elements, ');'))\n\n          env.ELEMENTS = elements\n\n          return elements\n        })\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.elements + '.getElements(' + env.shared.vao + '.currentVAO.elements):null')\n          })\n      }\n      return null\n    }\n\n    var elements = parseElements()\n\n    function parsePrimitive () {\n      if (S_PRIMITIVE in staticOptions) {\n        var primitive = staticOptions[S_PRIMITIVE]\n        staticDraw.primitive = primitive\n        \n        return createStaticDecl(function (env, scope) {\n          return primTypes[primitive]\n        })\n      } else if (S_PRIMITIVE in dynamicOptions) {\n        var dynPrimitive = dynamicOptions[S_PRIMITIVE]\n        return createDynamicDecl(dynPrimitive, function (env, scope) {\n          var PRIM_TYPES = env.constants.primTypes\n          var prim = env.invoke(scope, dynPrimitive)\n          \n          return scope.def(PRIM_TYPES, '[', prim, ']')\n        })\n      } else if (elementsActive) {\n        if (isStatic(elements)) {\n          if (elements.value) {\n            return createStaticDecl(function (env, scope) {\n              return scope.def(env.ELEMENTS, '.primType')\n            })\n          } else {\n            return createStaticDecl(function () {\n              return GL_TRIANGLES$1\n            })\n          }\n        } else {\n          return new Declaration(\n            elements.thisDep,\n            elements.contextDep,\n            elements.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS\n              return scope.def(elements, '?', elements, '.primType:', GL_TRIANGLES$1)\n            })\n        }\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.primitive:' + GL_TRIANGLES$1)\n          })\n      }\n      return null\n    }\n\n    function parseParam (param, isOffset) {\n      if (param in staticOptions) {\n        var value = staticOptions[param] | 0\n        if (isOffset) {\n          staticDraw.offset = value\n        } else {\n          staticDraw.instances = value\n        }\n        \n        return createStaticDecl(function (env, scope) {\n          if (isOffset) {\n            env.OFFSET = value\n          }\n          return value\n        })\n      } else if (param in dynamicOptions) {\n        var dynValue = dynamicOptions[param]\n        return createDynamicDecl(dynValue, function (env, scope) {\n          var result = env.invoke(scope, dynValue)\n          if (isOffset) {\n            env.OFFSET = result\n            \n          }\n          return result\n        })\n      } else if (isOffset) {\n        if (elementsActive) {\n          return createStaticDecl(function (env, scope) {\n            env.OFFSET = 0\n            return 0\n          })\n        } else if (vaoActive) {\n          return new Declaration(\n            vao.thisDep,\n            vao.contextDep,\n            vao.propDep,\n            function (env, scope) {\n              return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.offset:0')\n            })\n        }\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.instances:-1')\n          })\n      }\n      return null\n    }\n\n    var OFFSET = parseParam(S_OFFSET, true)\n\n    function parseVertCount () {\n      if (S_COUNT in staticOptions) {\n        var count = staticOptions[S_COUNT] | 0\n        staticDraw.count = count\n        \n        return createStaticDecl(function () {\n          return count\n        })\n      } else if (S_COUNT in dynamicOptions) {\n        var dynCount = dynamicOptions[S_COUNT]\n        return createDynamicDecl(dynCount, function (env, scope) {\n          var result = env.invoke(scope, dynCount)\n          \n          return result\n        })\n      } else if (elementsActive) {\n        if (isStatic(elements)) {\n          if (elements) {\n            if (OFFSET) {\n              return new Declaration(\n                OFFSET.thisDep,\n                OFFSET.contextDep,\n                OFFSET.propDep,\n                function (env, scope) {\n                  var result = scope.def(\n                    env.ELEMENTS, '.vertCount-', env.OFFSET)\n\n                  \n\n                  return result\n                })\n            } else {\n              return createStaticDecl(function (env, scope) {\n                return scope.def(env.ELEMENTS, '.vertCount')\n              })\n            }\n          } else {\n            var result = createStaticDecl(function () {\n              return -1\n            })\n            \n            return result\n          }\n        } else {\n          var variable = new Declaration(\n            elements.thisDep || OFFSET.thisDep,\n            elements.contextDep || OFFSET.contextDep,\n            elements.propDep || OFFSET.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS\n              if (env.OFFSET) {\n                return scope.def(elements, '?', elements, '.vertCount-',\n                  env.OFFSET, ':-1')\n              }\n              return scope.def(elements, '?', elements, '.vertCount:-1')\n            })\n          \n          return variable\n        }\n      } else if (vaoActive) {\n        var countVariable = new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao, '.currentVAO?', env.shared.vao, '.currentVAO.count:-1')\n          })\n        return countVariable\n      }\n      return null\n    }\n\n    var primitive = parsePrimitive()\n    var count = parseVertCount()\n    var instances = parseParam(S_INSTANCES, false)\n\n    return {\n      elements: elements,\n      primitive: primitive,\n      count: count,\n      instances: instances,\n      offset: OFFSET,\n      vao: vao,\n\n      vaoActive: vaoActive,\n      elementsActive: elementsActive,\n\n      // static draw props\n      static: staticDraw\n    }\n  }\n\n  function parseGLState (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    var STATE = {}\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop)\n\n      function parseParam (parseStatic, parseDynamic) {\n        if (prop in staticOptions) {\n          var value = parseStatic(staticOptions[prop])\n          STATE[param] = createStaticDecl(function () {\n            return value\n          })\n        } else if (prop in dynamicOptions) {\n          var dyn = dynamicOptions[prop]\n          STATE[param] = createDynamicDecl(dyn, function (env, scope) {\n            return parseDynamic(env, scope, env.invoke(scope, dyn))\n          })\n        }\n      }\n\n      switch (prop) {\n        case S_CULL_ENABLE:\n        case S_BLEND_ENABLE:\n        case S_DITHER:\n        case S_STENCIL_ENABLE:\n        case S_DEPTH_ENABLE:\n        case S_SCISSOR_ENABLE:\n        case S_POLYGON_OFFSET_ENABLE:\n        case S_SAMPLE_ALPHA:\n        case S_SAMPLE_ENABLE:\n        case S_DEPTH_MASK:\n          return parseParam(\n            function (value) {\n              \n              return value\n            },\n            function (env, scope, value) {\n              \n              return value\n            })\n\n        case S_DEPTH_FUNC:\n          return parseParam(\n            function (value) {\n              \n              return compareFuncs[value]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs\n              \n              return scope.def(COMPARE_FUNCS, '[', value, ']')\n            })\n\n        case S_DEPTH_RANGE:\n          return parseParam(\n            function (value) {\n              \n              return value\n            },\n            function (env, scope, value) {\n              \n\n              var Z_NEAR = scope.def('+', value, '[0]')\n              var Z_FAR = scope.def('+', value, '[1]')\n              return [Z_NEAR, Z_FAR]\n            })\n\n        case S_BLEND_FUNC:\n          return parseParam(\n            function (value) {\n              \n              var srcRGB = ('srcRGB' in value ? value.srcRGB : value.src)\n              var srcAlpha = ('srcAlpha' in value ? value.srcAlpha : value.src)\n              var dstRGB = ('dstRGB' in value ? value.dstRGB : value.dst)\n              var dstAlpha = ('dstAlpha' in value ? value.dstAlpha : value.dst)\n              \n              \n              \n              \n\n              \n\n              return [\n                blendFuncs[srcRGB],\n                blendFuncs[dstRGB],\n                blendFuncs[srcAlpha],\n                blendFuncs[dstAlpha]\n              ]\n            },\n            function (env, scope, value) {\n              var BLEND_FUNCS = env.constants.blendFuncs\n\n              \n\n              function read (prefix, suffix) {\n                var func = scope.def(\n                  '\"', prefix, suffix, '\" in ', value,\n                  '?', value, '.', prefix, suffix,\n                  ':', value, '.', prefix)\n\n                \n\n                return func\n              }\n\n              var srcRGB = read('src', 'RGB')\n              var dstRGB = read('dst', 'RGB')\n\n              \n\n              var SRC_RGB = scope.def(BLEND_FUNCS, '[', srcRGB, ']')\n              var SRC_ALPHA = scope.def(BLEND_FUNCS, '[', read('src', 'Alpha'), ']')\n              var DST_RGB = scope.def(BLEND_FUNCS, '[', dstRGB, ']')\n              var DST_ALPHA = scope.def(BLEND_FUNCS, '[', read('dst', 'Alpha'), ']')\n\n              return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA]\n            })\n\n        case S_BLEND_EQUATION:\n          return parseParam(\n            function (value) {\n              if (typeof value === 'string') {\n                \n                return [\n                  blendEquations[value],\n                  blendEquations[value]\n                ]\n              } else if (typeof value === 'object') {\n                \n                \n                return [\n                  blendEquations[value.rgb],\n                  blendEquations[value.alpha]\n                ]\n              } else {\n                \n              }\n            },\n            function (env, scope, value) {\n              var BLEND_EQUATIONS = env.constants.blendEquations\n\n              var RGB = scope.def()\n              var ALPHA = scope.def()\n\n              var ifte = env.cond('typeof ', value, '===\"string\"')\n\n              \n\n              ifte.then(\n                RGB, '=', ALPHA, '=', BLEND_EQUATIONS, '[', value, '];')\n              ifte.else(\n                RGB, '=', BLEND_EQUATIONS, '[', value, '.rgb];',\n                ALPHA, '=', BLEND_EQUATIONS, '[', value, '.alpha];')\n\n              scope(ifte)\n\n              return [RGB, ALPHA]\n            })\n\n        case S_BLEND_COLOR:\n          return parseParam(\n            function (value) {\n              \n              return loop(4, function (i) {\n                return +value[i]\n              })\n            },\n            function (env, scope, value) {\n              \n              return loop(4, function (i) {\n                return scope.def('+', value, '[', i, ']')\n              })\n            })\n\n        case S_STENCIL_MASK:\n          return parseParam(\n            function (value) {\n              \n              return value | 0\n            },\n            function (env, scope, value) {\n              \n              return scope.def(value, '|0')\n            })\n\n        case S_STENCIL_FUNC:\n          return parseParam(\n            function (value) {\n              \n              var cmp = value.cmp || 'keep'\n              var ref = value.ref || 0\n              var mask = 'mask' in value ? value.mask : -1\n              \n              \n              \n              return [\n                compareFuncs[cmp],\n                ref,\n                mask\n              ]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs\n              \n              var cmp = scope.def(\n                '\"cmp\" in ', value,\n                '?', COMPARE_FUNCS, '[', value, '.cmp]',\n                ':', GL_KEEP)\n              var ref = scope.def(value, '.ref|0')\n              var mask = scope.def(\n                '\"mask\" in ', value,\n                '?', value, '.mask|0:-1')\n              return [cmp, ref, mask]\n            })\n\n        case S_STENCIL_OPFRONT:\n        case S_STENCIL_OPBACK:\n          return parseParam(\n            function (value) {\n              \n              var fail = value.fail || 'keep'\n              var zfail = value.zfail || 'keep'\n              var zpass = value.zpass || 'keep'\n              \n              \n              \n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                stencilOps[fail],\n                stencilOps[zfail],\n                stencilOps[zpass]\n              ]\n            },\n            function (env, scope, value) {\n              var STENCIL_OPS = env.constants.stencilOps\n\n              \n\n              function read (name) {\n                \n\n                return scope.def(\n                  '\"', name, '\" in ', value,\n                  '?', STENCIL_OPS, '[', value, '.', name, ']:',\n                  GL_KEEP)\n              }\n\n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                read('fail'),\n                read('zfail'),\n                read('zpass')\n              ]\n            })\n\n        case S_POLYGON_OFFSET_OFFSET:\n          return parseParam(\n            function (value) {\n              \n              var factor = value.factor | 0\n              var units = value.units | 0\n              \n              \n              return [factor, units]\n            },\n            function (env, scope, value) {\n              \n\n              var FACTOR = scope.def(value, '.factor|0')\n              var UNITS = scope.def(value, '.units|0')\n\n              return [FACTOR, UNITS]\n            })\n\n        case S_CULL_FACE:\n          return parseParam(\n            function (value) {\n              var face = 0\n              if (value === 'front') {\n                face = GL_FRONT\n              } else if (value === 'back') {\n                face = GL_BACK\n              }\n              \n              return face\n            },\n            function (env, scope, value) {\n              \n              return scope.def(value, '===\"front\"?', GL_FRONT, ':', GL_BACK)\n            })\n\n        case S_LINE_WIDTH:\n          return parseParam(\n            function (value) {\n              \n              return value\n            },\n            function (env, scope, value) {\n              \n\n              return value\n            })\n\n        case S_FRONT_FACE:\n          return parseParam(\n            function (value) {\n              \n              return orientationType[value]\n            },\n            function (env, scope, value) {\n              \n              return scope.def(value + '===\"cw\"?' + GL_CW + ':' + GL_CCW)\n            })\n\n        case S_COLOR_MASK:\n          return parseParam(\n            function (value) {\n              \n              return value.map(function (v) { return !!v })\n            },\n            function (env, scope, value) {\n              \n              return loop(4, function (i) {\n                return '!!' + value + '[' + i + ']'\n              })\n            })\n\n        case S_SAMPLE_COVERAGE:\n          return parseParam(\n            function (value) {\n              \n              var sampleValue = 'value' in value ? value.value : 1\n              var sampleInvert = !!value.invert\n              \n              return [sampleValue, sampleInvert]\n            },\n            function (env, scope, value) {\n              \n              var VALUE = scope.def(\n                '\"value\" in ', value, '?+', value, '.value:1')\n              var INVERT = scope.def('!!', value, '.invert')\n              return [VALUE, INVERT]\n            })\n      }\n    })\n\n    return STATE\n  }\n\n  function parseUniforms (uniforms, env) {\n    var staticUniforms = uniforms.static\n    var dynamicUniforms = uniforms.dynamic\n\n    var UNIFORMS = {}\n\n    Object.keys(staticUniforms).forEach(function (name) {\n      var value = staticUniforms[name]\n      var result\n      if (typeof value === 'number' ||\n          typeof value === 'boolean') {\n        result = createStaticDecl(function () {\n          return value\n        })\n      } else if (typeof value === 'function') {\n        var reglType = value._reglType\n        if (reglType === 'texture2d' ||\n            reglType === 'textureCube') {\n          result = createStaticDecl(function (env) {\n            return env.link(value)\n          })\n        } else if (reglType === 'framebuffer' ||\n                   reglType === 'framebufferCube') {\n          \n          result = createStaticDecl(function (env) {\n            return env.link(value.color[0])\n          })\n        } else {\n          \n        }\n      } else if (isArrayLike(value)) {\n        result = createStaticDecl(function (env) {\n          var ITEM = env.global.def('[',\n            loop(value.length, function (i) {\n              \n              return value[i]\n            }), ']')\n          return ITEM\n        })\n      } else {\n        \n      }\n      result.value = value\n      UNIFORMS[name] = result\n    })\n\n    Object.keys(dynamicUniforms).forEach(function (key) {\n      var dyn = dynamicUniforms[key]\n      UNIFORMS[key] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    })\n\n    return UNIFORMS\n  }\n\n  function parseAttributes (attributes, env) {\n    var staticAttributes = attributes.static\n    var dynamicAttributes = attributes.dynamic\n\n    var attributeDefs = {}\n\n    Object.keys(staticAttributes).forEach(function (attribute) {\n      var value = staticAttributes[attribute]\n      var id = stringStore.id(attribute)\n\n      var record = new AttributeRecord()\n      if (isBufferArgs(value)) {\n        record.state = ATTRIB_STATE_POINTER\n        record.buffer = bufferState.getBuffer(\n          bufferState.create(value, GL_ARRAY_BUFFER$2, false, true))\n        record.type = 0\n      } else {\n        var buffer = bufferState.getBuffer(value)\n        if (buffer) {\n          record.state = ATTRIB_STATE_POINTER\n          record.buffer = buffer\n          record.type = 0\n        } else {\n          \n          if ('constant' in value) {\n            var constant = value.constant\n            record.buffer = 'null'\n            record.state = ATTRIB_STATE_CONSTANT\n            if (typeof constant === 'number') {\n              record.x = constant\n            } else {\n              \n              CUTE_COMPONENTS.forEach(function (c, i) {\n                if (i < constant.length) {\n                  record[c] = constant[i]\n                }\n              })\n            }\n          } else {\n            if (isBufferArgs(value.buffer)) {\n              buffer = bufferState.getBuffer(\n                bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true))\n            } else {\n              buffer = bufferState.getBuffer(value.buffer)\n            }\n            \n\n            var offset = value.offset | 0\n            \n\n            var stride = value.stride | 0\n            \n\n            var size = value.size | 0\n            \n\n            var normalized = !!value.normalized\n\n            var type = 0\n            if ('type' in value) {\n              \n              type = glTypes[value.type]\n            }\n\n            var divisor = value.divisor | 0\n            \n\n            record.buffer = buffer\n            record.state = ATTRIB_STATE_POINTER\n            record.size = size\n            record.normalized = normalized\n            record.type = type || buffer.dtype\n            record.offset = offset\n            record.stride = stride\n            record.divisor = divisor\n          }\n        }\n      }\n\n      attributeDefs[attribute] = createStaticDecl(function (env, scope) {\n        var cache = env.attribCache\n        if (id in cache) {\n          return cache[id]\n        }\n        var result = {\n          isStream: false\n        }\n        Object.keys(record).forEach(function (key) {\n          result[key] = record[key]\n        })\n        if (record.buffer) {\n          result.buffer = env.link(record.buffer)\n          result.type = result.type || (result.buffer + '.dtype')\n        }\n        cache[id] = result\n        return result\n      })\n    })\n\n    Object.keys(dynamicAttributes).forEach(function (attribute) {\n      var dyn = dynamicAttributes[attribute]\n\n      function appendAttributeCode (env, block) {\n        var VALUE = env.invoke(block, dyn)\n\n        var shared = env.shared\n        var constants = env.constants\n\n        var IS_BUFFER_ARGS = shared.isBufferArgs\n        var BUFFER_STATE = shared.buffer\n\n        // Perform validation on attribute\n        \n\n        // allocate names for result\n        var result = {\n          isStream: block.def(false)\n        }\n        var defaultRecord = new AttributeRecord()\n        defaultRecord.state = ATTRIB_STATE_POINTER\n        Object.keys(defaultRecord).forEach(function (key) {\n          result[key] = block.def('' + defaultRecord[key])\n        })\n\n        var BUFFER = result.buffer\n        var TYPE = result.type\n        block(\n          'if(', IS_BUFFER_ARGS, '(', VALUE, ')){',\n          result.isStream, '=true;',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, ');',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, ');',\n          'if(', BUFFER, '){',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else if(\"constant\" in ', VALUE, '){',\n          result.state, '=', ATTRIB_STATE_CONSTANT, ';',\n          'if(typeof ' + VALUE + '.constant === \"number\"){',\n          result[CUTE_COMPONENTS[0]], '=', VALUE, '.constant;',\n          CUTE_COMPONENTS.slice(1).map(function (n) {\n            return result[n]\n          }).join('='), '=0;',\n          '}else{',\n          CUTE_COMPONENTS.map(function (name, i) {\n            return (\n              result[name] + '=' + VALUE + '.constant.length>' + i +\n              '?' + VALUE + '.constant[' + i + ']:0;'\n            )\n          }).join(''),\n          '}}else{',\n          'if(', IS_BUFFER_ARGS, '(', VALUE, '.buffer)){',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, '.buffer);',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, '.buffer);',\n          '}',\n          TYPE, '=\"type\" in ', VALUE, '?',\n          constants.glTypes, '[', VALUE, '.type]:', BUFFER, '.dtype;',\n          result.normalized, '=!!', VALUE, '.normalized;')\n        function emitReadRecord (name) {\n          block(result[name], '=', VALUE, '.', name, '|0;')\n        }\n        emitReadRecord('size')\n        emitReadRecord('offset')\n        emitReadRecord('stride')\n        emitReadRecord('divisor')\n\n        block('}}')\n\n        block.exit(\n          'if(', result.isStream, '){',\n          BUFFER_STATE, '.destroyStream(', BUFFER, ');',\n          '}')\n\n        return result\n      }\n\n      attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode)\n    })\n\n    return attributeDefs\n  }\n\n  function parseContext (context) {\n    var staticContext = context.static\n    var dynamicContext = context.dynamic\n    var result = {}\n\n    Object.keys(staticContext).forEach(function (name) {\n      var value = staticContext[name]\n      result[name] = createStaticDecl(function (env, scope) {\n        if (typeof value === 'number' || typeof value === 'boolean') {\n          return '' + value\n        } else {\n          return env.link(value)\n        }\n      })\n    })\n\n    Object.keys(dynamicContext).forEach(function (name) {\n      var dyn = dynamicContext[name]\n      result[name] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    })\n\n    return result\n  }\n\n  function parseArguments (options, attributes, uniforms, context, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    \n\n    var attribLocations = parseAttribLocations(options, attributes)\n\n    var framebuffer = parseFramebuffer(options, env)\n    var viewportAndScissor = parseViewportScissor(options, framebuffer, env)\n    var draw = parseDraw(options, env)\n    var state = parseGLState(options, env)\n    var shader = parseProgram(options, env, attribLocations)\n\n    function copyBox (name) {\n      var defn = viewportAndScissor[name]\n      if (defn) {\n        state[name] = defn\n      }\n    }\n    copyBox(S_VIEWPORT)\n    copyBox(propName(S_SCISSOR_BOX))\n\n    var dirty = Object.keys(state).length > 0\n\n    var result = {\n      framebuffer: framebuffer,\n      draw: draw,\n      shader: shader,\n      state: state,\n      dirty: dirty,\n      scopeVAO: null,\n      drawVAO: null,\n      useVAO: false,\n      attributes: {}\n    }\n\n    result.profile = parseProfile(options, env)\n    result.uniforms = parseUniforms(uniforms, env)\n    result.drawVAO = result.scopeVAO = draw.vao\n    // special case: check if we can statically allocate a vertex array object for this program\n    if (!result.drawVAO &&\n      shader.program &&\n      !attribLocations &&\n      extensions.angle_instanced_arrays &&\n      draw.static.elements) {\n      var useVAO = true\n      var staticBindings = shader.program.attributes.map(function (attr) {\n        var binding = attributes.static[attr]\n        useVAO = useVAO && !!binding\n        return binding\n      })\n      if (useVAO && staticBindings.length > 0) {\n        var vao = attributeState.getVAO(attributeState.createVAO({\n          attributes: staticBindings,\n          elements: draw.static.elements\n        }))\n        result.drawVAO = new Declaration(null, null, null, function (env, scope) {\n          return env.link(vao)\n        })\n        result.useVAO = true\n      }\n    }\n    if (attribLocations) {\n      result.useVAO = true\n    } else {\n      result.attributes = parseAttributes(attributes, env)\n    }\n    result.context = parseContext(context, env)\n    return result\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON UPDATE FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitContext (env, scope, context) {\n    var shared = env.shared\n    var CONTEXT = shared.context\n\n    var contextEnter = env.scope()\n\n    Object.keys(context).forEach(function (name) {\n      scope.save(CONTEXT, '.' + name)\n      var defn = context[name]\n      var value = defn.append(env, scope)\n      if (Array.isArray(value)) {\n        contextEnter(CONTEXT, '.', name, '=[', value.join(), '];')\n      } else {\n        contextEnter(CONTEXT, '.', name, '=', value, ';')\n      }\n    })\n\n    scope(contextEnter)\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON DRAWING FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitPollFramebuffer (env, scope, framebuffer, skipCheck) {\n    var shared = env.shared\n\n    var GL = shared.gl\n    var FRAMEBUFFER_STATE = shared.framebuffer\n    var EXT_DRAW_BUFFERS\n    if (extDrawBuffers) {\n      EXT_DRAW_BUFFERS = scope.def(shared.extensions, '.webgl_draw_buffers')\n    }\n\n    var constants = env.constants\n\n    var DRAW_BUFFERS = constants.drawBuffer\n    var BACK_BUFFER = constants.backBuffer\n\n    var NEXT\n    if (framebuffer) {\n      NEXT = framebuffer.append(env, scope)\n    } else {\n      NEXT = scope.def(FRAMEBUFFER_STATE, '.next')\n    }\n\n    if (!skipCheck) {\n      scope('if(', NEXT, '!==', FRAMEBUFFER_STATE, '.cur){')\n    }\n    scope(\n      'if(', NEXT, '){',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',', NEXT, '.framebuffer);')\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(',\n        DRAW_BUFFERS, '[', NEXT, '.colorAttachments.length]);')\n    }\n    scope('}else{',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',null);')\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', BACK_BUFFER, ');')\n    }\n    scope(\n      '}',\n      FRAMEBUFFER_STATE, '.cur=', NEXT, ';')\n    if (!skipCheck) {\n      scope('}')\n    }\n  }\n\n  function emitPollState (env, scope, args) {\n    var shared = env.shared\n\n    var GL = shared.gl\n\n    var CURRENT_VARS = env.current\n    var NEXT_VARS = env.next\n    var CURRENT_STATE = shared.current\n    var NEXT_STATE = shared.next\n\n    var block = env.cond(CURRENT_STATE, '.dirty')\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop)\n      if (param in args.state) {\n        return\n      }\n\n      var NEXT, CURRENT\n      if (param in NEXT_VARS) {\n        NEXT = NEXT_VARS[param]\n        CURRENT = CURRENT_VARS[param]\n        var parts = loop(currentState[param].length, function (i) {\n          return block.def(NEXT, '[', i, ']')\n        })\n        block(env.cond(parts.map(function (p, i) {\n          return p + '!==' + CURRENT + '[' + i + ']'\n        }).join('||'))\n          .then(\n            GL, '.', GL_VARIABLES[param], '(', parts, ');',\n            parts.map(function (p, i) {\n              return CURRENT + '[' + i + ']=' + p\n            }).join(';'), ';'))\n      } else {\n        NEXT = block.def(NEXT_STATE, '.', param)\n        var ifte = env.cond(NEXT, '!==', CURRENT_STATE, '.', param)\n        block(ifte)\n        if (param in GL_FLAGS) {\n          ifte(\n            env.cond(NEXT)\n              .then(GL, '.enable(', GL_FLAGS[param], ');')\n              .else(GL, '.disable(', GL_FLAGS[param], ');'),\n            CURRENT_STATE, '.', param, '=', NEXT, ';')\n        } else {\n          ifte(\n            GL, '.', GL_VARIABLES[param], '(', NEXT, ');',\n            CURRENT_STATE, '.', param, '=', NEXT, ';')\n        }\n      }\n    })\n    if (Object.keys(args.state).length === 0) {\n      block(CURRENT_STATE, '.dirty=false;')\n    }\n    scope(block)\n  }\n\n  function emitSetOptions (env, scope, options, filter) {\n    var shared = env.shared\n    var CURRENT_VARS = env.current\n    var CURRENT_STATE = shared.current\n    var GL = shared.gl\n    var VALUE\n    sortState(Object.keys(options)).forEach(function (param) {\n      var defn = options[param]\n      if (filter && !filter(defn)) {\n        return\n      }\n      var variable = defn.append(env, scope)\n      if (GL_FLAGS[param]) {\n        var flag = GL_FLAGS[param]\n        if (isStatic(defn)) {\n          VALUE = env.link(variable, {stable: true})\n          scope(env.cond(VALUE)\n            .then(GL, '.enable(', flag, ');')\n            .else(GL, '.disable(', flag, ');'))\n          scope(CURRENT_STATE, '.', param, '=', VALUE, ';')\n        } else {\n          scope(env.cond(variable)\n            .then(GL, '.enable(', flag, ');')\n            .else(GL, '.disable(', flag, ');'))\n          scope(CURRENT_STATE, '.', param, '=', variable, ';')\n        }\n      } else if (isArrayLike(variable)) {\n        var CURRENT = CURRENT_VARS[param]\n        scope(\n          GL, '.', GL_VARIABLES[param], '(', variable, ');',\n          variable.map(function (v, i) {\n            return CURRENT + '[' + i + ']=' + v\n          }).join(';'), ';')\n      } else {\n        if (isStatic(defn)) {\n          VALUE = env.link(variable, {stable: true})\n          scope(\n            GL, '.', GL_VARIABLES[param], '(', VALUE, ');',\n            CURRENT_STATE, '.', param, '=', VALUE, ';')\n        } else {\n          scope(\n            GL, '.', GL_VARIABLES[param], '(', variable, ');',\n            CURRENT_STATE, '.', param, '=', variable, ';')\n        }\n      }\n    })\n  }\n\n  function injectExtensions (env, scope) {\n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays')\n    }\n  }\n\n  function emitProfile (env, scope, args, useScope, incrementCounter) {\n    var shared = env.shared\n    var STATS = env.stats\n    var CURRENT_STATE = shared.current\n    var TIMER = shared.timer\n    var profileArg = args.profile\n\n    function perfCounter () {\n      if (typeof performance === 'undefined') {\n        return 'Date.now()'\n      } else {\n        return 'performance.now()'\n      }\n    }\n\n    var CPU_START, QUERY_COUNTER\n    function emitProfileStart (block) {\n      CPU_START = scope.def()\n      block(CPU_START, '=', perfCounter(), ';')\n      if (typeof incrementCounter === 'string') {\n        block(STATS, '.count+=', incrementCounter, ';')\n      } else {\n        block(STATS, '.count++;')\n      }\n      if (timer) {\n        if (useScope) {\n          QUERY_COUNTER = scope.def()\n          block(QUERY_COUNTER, '=', TIMER, '.getNumPendingQueries();')\n        } else {\n          block(TIMER, '.beginQuery(', STATS, ');')\n        }\n      }\n    }\n\n    function emitProfileEnd (block) {\n      block(STATS, '.cpuTime+=', perfCounter(), '-', CPU_START, ';')\n      if (timer) {\n        if (useScope) {\n          block(TIMER, '.pushScopeStats(',\n            QUERY_COUNTER, ',',\n            TIMER, '.getNumPendingQueries(),',\n            STATS, ');')\n        } else {\n          block(TIMER, '.endQuery();')\n        }\n      }\n    }\n\n    function scopeProfile (value) {\n      var prev = scope.def(CURRENT_STATE, '.profile')\n      scope(CURRENT_STATE, '.profile=', value, ';')\n      scope.exit(CURRENT_STATE, '.profile=', prev, ';')\n    }\n\n    var USE_PROFILE\n    if (profileArg) {\n      if (isStatic(profileArg)) {\n        if (profileArg.enable) {\n          emitProfileStart(scope)\n          emitProfileEnd(scope.exit)\n          scopeProfile('true')\n        } else {\n          scopeProfile('false')\n        }\n        return\n      }\n      USE_PROFILE = profileArg.append(env, scope)\n      scopeProfile(USE_PROFILE)\n    } else {\n      USE_PROFILE = scope.def(CURRENT_STATE, '.profile')\n    }\n\n    var start = env.block()\n    emitProfileStart(start)\n    scope('if(', USE_PROFILE, '){', start, '}')\n    var end = env.block()\n    emitProfileEnd(end)\n    scope.exit('if(', USE_PROFILE, '){', end, '}')\n  }\n\n  function emitAttributes (env, scope, args, attributes, filter) {\n    var shared = env.shared\n\n    function typeLength (x) {\n      switch (x) {\n        case GL_FLOAT_VEC2:\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          return 2\n        case GL_FLOAT_VEC3:\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          return 3\n        case GL_FLOAT_VEC4:\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          return 4\n        default:\n          return 1\n      }\n    }\n\n    function emitBindAttribute (ATTRIBUTE, size, record) {\n      var GL = shared.gl\n\n      var LOCATION = scope.def(ATTRIBUTE, '.location')\n      var BINDING = scope.def(shared.attributes, '[', LOCATION, ']')\n\n      var STATE = record.state\n      var BUFFER = record.buffer\n      var CONST_COMPONENTS = [\n        record.x,\n        record.y,\n        record.z,\n        record.w\n      ]\n\n      var COMMON_KEYS = [\n        'buffer',\n        'normalized',\n        'offset',\n        'stride'\n      ]\n\n      function emitBuffer () {\n        scope(\n          'if(!', BINDING, '.buffer){',\n          GL, '.enableVertexAttribArray(', LOCATION, ');}')\n\n        var TYPE = record.type\n        var SIZE\n        if (!record.size) {\n          SIZE = size\n        } else {\n          SIZE = scope.def(record.size, '||', size)\n        }\n\n        scope('if(',\n          BINDING, '.type!==', TYPE, '||',\n          BINDING, '.size!==', SIZE, '||',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '!==' + record[key]\n          }).join('||'),\n          '){',\n          GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', BUFFER, '.buffer);',\n          GL, '.vertexAttribPointer(', [\n            LOCATION,\n            SIZE,\n            TYPE,\n            record.normalized,\n            record.stride,\n            record.offset\n          ], ');',\n          BINDING, '.type=', TYPE, ';',\n          BINDING, '.size=', SIZE, ';',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '=' + record[key] + ';'\n          }).join(''),\n          '}')\n\n        if (extInstancing) {\n          var DIVISOR = record.divisor\n          scope(\n            'if(', BINDING, '.divisor!==', DIVISOR, '){',\n            env.instancing, '.vertexAttribDivisorANGLE(', [LOCATION, DIVISOR], ');',\n            BINDING, '.divisor=', DIVISOR, ';}')\n        }\n      }\n\n      function emitConstant () {\n        scope(\n          'if(', BINDING, '.buffer){',\n          GL, '.disableVertexAttribArray(', LOCATION, ');',\n          BINDING, '.buffer=null;',\n          '}if(', CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '!==' + CONST_COMPONENTS[i]\n          }).join('||'), '){',\n          GL, '.vertexAttrib4f(', LOCATION, ',', CONST_COMPONENTS, ');',\n          CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '=' + CONST_COMPONENTS[i] + ';'\n          }).join(''),\n          '}')\n      }\n\n      if (STATE === ATTRIB_STATE_POINTER) {\n        emitBuffer()\n      } else if (STATE === ATTRIB_STATE_CONSTANT) {\n        emitConstant()\n      } else {\n        scope('if(', STATE, '===', ATTRIB_STATE_POINTER, '){')\n        emitBuffer()\n        scope('}else{')\n        emitConstant()\n        scope('}')\n      }\n    }\n\n    attributes.forEach(function (attribute) {\n      var name = attribute.name\n      var arg = args.attributes[name]\n      var record\n      if (arg) {\n        if (!filter(arg)) {\n          return\n        }\n        record = arg.append(env, scope)\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          return\n        }\n        var scopeAttrib = env.scopeAttrib(name)\n        \n        record = {}\n        Object.keys(new AttributeRecord()).forEach(function (key) {\n          record[key] = scope.def(scopeAttrib, '.', key)\n        })\n      }\n      emitBindAttribute(\n        env.link(attribute), typeLength(attribute.info.type), record)\n    })\n  }\n\n  function emitUniforms (env, scope, args, uniforms, filter, isBatchInnerLoop) {\n    var shared = env.shared\n    var GL = shared.gl\n\n    var infix\n    for (var i = 0; i < uniforms.length; ++i) {\n      var uniform = uniforms[i]\n      var name = uniform.name\n      var type = uniform.info.type\n      var arg = args.uniforms[name]\n      var UNIFORM = env.link(uniform)\n      var LOCATION = UNIFORM + '.location'\n\n      var VALUE\n      if (arg) {\n        if (!filter(arg)) {\n          continue\n        }\n        if (isStatic(arg)) {\n          var value = arg.value\n          \n          if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {\n            \n            var TEX_VALUE = env.link(value._texture || value.color[0]._texture)\n            scope(GL, '.uniform1i(', LOCATION, ',', TEX_VALUE + '.bind());')\n            scope.exit(TEX_VALUE, '.unbind();')\n          } else if (\n            type === GL_FLOAT_MAT2 ||\n            type === GL_FLOAT_MAT3 ||\n            type === GL_FLOAT_MAT4) {\n            \n            var MAT_VALUE = env.global.def('new Float32Array([' +\n              Array.prototype.slice.call(value) + '])')\n            var dim = 2\n            if (type === GL_FLOAT_MAT3) {\n              dim = 3\n            } else if (type === GL_FLOAT_MAT4) {\n              dim = 4\n            }\n            scope(\n              GL, '.uniformMatrix', dim, 'fv(',\n              LOCATION, ',false,', MAT_VALUE, ');')\n          } else {\n            switch (type) {\n              case GL_FLOAT$7:\n                \n                infix = '1f'\n                break\n              case GL_FLOAT_VEC2:\n                \n                infix = '2f'\n                break\n              case GL_FLOAT_VEC3:\n                \n                infix = '3f'\n                break\n              case GL_FLOAT_VEC4:\n                \n                infix = '4f'\n                break\n              case GL_BOOL:\n                \n                infix = '1i'\n                break\n              case GL_INT$2:\n                \n                infix = '1i'\n                break\n              case GL_BOOL_VEC2:\n                \n                infix = '2i'\n                break\n              case GL_INT_VEC2:\n                \n                infix = '2i'\n                break\n              case GL_BOOL_VEC3:\n                \n                infix = '3i'\n                break\n              case GL_INT_VEC3:\n                \n                infix = '3i'\n                break\n              case GL_BOOL_VEC4:\n                \n                infix = '4i'\n                break\n              case GL_INT_VEC4:\n                \n                infix = '4i'\n                break\n            }\n            scope(GL, '.uniform', infix, '(', LOCATION, ',',\n              isArrayLike(value) ? Array.prototype.slice.call(value) : value,\n              ');')\n          }\n          continue\n        } else {\n          VALUE = arg.append(env, scope)\n        }\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          continue\n        }\n        VALUE = scope.def(shared.uniforms, '[', stringStore.id(name), ']')\n      }\n\n      if (type === GL_SAMPLER_2D) {\n        \n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebuffer\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}')\n      } else if (type === GL_SAMPLER_CUBE) {\n        \n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebufferCube\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}')\n      }\n\n      // perform type validation\n      \n\n      var unroll = 1\n      switch (type) {\n        case GL_SAMPLER_2D:\n        case GL_SAMPLER_CUBE:\n          var TEX = scope.def(VALUE, '._texture')\n          scope(GL, '.uniform1i(', LOCATION, ',', TEX, '.bind());')\n          scope.exit(TEX, '.unbind();')\n          continue\n\n        case GL_INT$2:\n        case GL_BOOL:\n          infix = '1i'\n          break\n\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          infix = '2i'\n          unroll = 2\n          break\n\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          infix = '3i'\n          unroll = 3\n          break\n\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          infix = '4i'\n          unroll = 4\n          break\n\n        case GL_FLOAT$7:\n          infix = '1f'\n          break\n\n        case GL_FLOAT_VEC2:\n          infix = '2f'\n          unroll = 2\n          break\n\n        case GL_FLOAT_VEC3:\n          infix = '3f'\n          unroll = 3\n          break\n\n        case GL_FLOAT_VEC4:\n          infix = '4f'\n          unroll = 4\n          break\n\n        case GL_FLOAT_MAT2:\n          infix = 'Matrix2fv'\n          break\n\n        case GL_FLOAT_MAT3:\n          infix = 'Matrix3fv'\n          break\n\n        case GL_FLOAT_MAT4:\n          infix = 'Matrix4fv'\n          break\n      }\n\n      if (infix.charAt(0) === 'M') {\n        scope(GL, '.uniform', infix, '(', LOCATION, ',')\n        var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2)\n        var STORAGE = env.global.def('new Float32Array(', matSize, ')')\n        if (Array.isArray(VALUE)) {\n          scope(\n            'false,(',\n            loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE[i]\n            }), ',', STORAGE, ')')\n        } else {\n          scope(\n            'false,(Array.isArray(', VALUE, ')||', VALUE, ' instanceof Float32Array)?', VALUE, ':(',\n            loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE + '[' + i + ']'\n            }), ',', STORAGE, ')')\n        }\n        scope(');')\n      } else if (unroll > 1) {\n        var prev = []\n        var cur = []\n        for (var j = 0; j < unroll; ++j) {\n          if (Array.isArray(VALUE)) {\n            cur.push(VALUE[j])\n          } else {\n            cur.push(scope.def(VALUE + '[' + j + ']'))\n          }\n          if (isBatchInnerLoop) {\n            prev.push(scope.def())\n          }\n        }\n        if (isBatchInnerLoop) {\n          scope('if(!', env.batchId, '||', prev.map(function (p, i) {\n            return p + '!==' + cur[i]\n          }).join('||'), '){', prev.map(function (p, i) {\n            return p + '=' + cur[i] + ';'\n          }).join(''))\n        }\n        scope(GL, '.uniform', infix, '(', LOCATION, ',', cur.join(','), ');')\n        if (isBatchInnerLoop) {\n          scope('}')\n        }\n      } else {\n        \n        if (isBatchInnerLoop) {\n          var prevS = scope.def()\n          scope('if(!', env.batchId, '||', prevS, '!==', VALUE, '){',\n            prevS, '=', VALUE, ';')\n        }\n        scope(GL, '.uniform', infix, '(', LOCATION, ',', VALUE, ');')\n        if (isBatchInnerLoop) {\n          scope('}')\n        }\n      }\n    }\n  }\n\n  function emitDraw (env, outer, inner, args) {\n    var shared = env.shared\n    var GL = shared.gl\n    var DRAW_STATE = shared.draw\n\n    var drawOptions = args.draw\n\n    function emitElements () {\n      var defn = drawOptions.elements\n      var ELEMENTS\n      var scope = outer\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner\n        }\n        ELEMENTS = defn.append(env, scope)\n        if (drawOptions.elementsActive) {\n          scope(\n            'if(' + ELEMENTS + ')' +\n            GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);')\n        }\n      } else {\n        ELEMENTS = scope.def()\n        scope(\n          ELEMENTS, '=', DRAW_STATE, '.', S_ELEMENTS, ';',\n          'if(', ELEMENTS, '){',\n          GL, '.bindBuffer(', GL_ELEMENT_ARRAY_BUFFER$2, ',', ELEMENTS, '.buffer.buffer);}',\n          'else if(', shared.vao, '.currentVAO){',\n          ELEMENTS, '=', env.shared.elements + '.getElements(' + shared.vao, '.currentVAO.elements);',\n          (!extVertexArrays ? 'if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);' : ''),\n          '}')\n      }\n      return ELEMENTS\n    }\n\n    function emitCount () {\n      var defn = drawOptions.count\n      var COUNT\n      var scope = outer\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner\n        }\n        COUNT = defn.append(env, scope)\n        \n      } else {\n        COUNT = scope.def(DRAW_STATE, '.', S_COUNT)\n        \n      }\n      return COUNT\n    }\n\n    var ELEMENTS = emitElements()\n    function emitValue (name) {\n      var defn = drawOptions[name]\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          return defn.append(env, inner)\n        } else {\n          return defn.append(env, outer)\n        }\n      } else {\n        return outer.def(DRAW_STATE, '.', name)\n      }\n    }\n\n    var PRIMITIVE = emitValue(S_PRIMITIVE)\n    var OFFSET = emitValue(S_OFFSET)\n\n    var COUNT = emitCount()\n    if (typeof COUNT === 'number') {\n      if (COUNT === 0) {\n        return\n      }\n    } else {\n      inner('if(', COUNT, '){')\n      inner.exit('}')\n    }\n\n    var INSTANCES, EXT_INSTANCING\n    if (extInstancing) {\n      INSTANCES = emitValue(S_INSTANCES)\n      EXT_INSTANCING = env.instancing\n    }\n\n    var ELEMENT_TYPE = ELEMENTS + '.type'\n\n    var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements) && !drawOptions.vaoActive\n\n    function emitInstancing () {\n      function drawElements () {\n        inner(EXT_INSTANCING, '.drawElementsInstancedANGLE(', [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)',\n          INSTANCES\n        ], ');')\n      }\n\n      function drawArrays () {\n        inner(EXT_INSTANCING, '.drawArraysInstancedANGLE(',\n          [PRIMITIVE, OFFSET, COUNT, INSTANCES], ');')\n      }\n\n      if (ELEMENTS && ELEMENTS !== 'null') {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){')\n          drawElements()\n          inner('}else{')\n          drawArrays()\n          inner('}')\n        } else {\n          drawElements()\n        }\n      } else {\n        drawArrays()\n      }\n    }\n\n    function emitRegular () {\n      function drawElements () {\n        inner(GL + '.drawElements(' + [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)'\n        ] + ');')\n      }\n\n      function drawArrays () {\n        inner(GL + '.drawArrays(' + [PRIMITIVE, OFFSET, COUNT] + ');')\n      }\n\n      if (ELEMENTS && ELEMENTS !== 'null') {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){')\n          drawElements()\n          inner('}else{')\n          drawArrays()\n          inner('}')\n        } else {\n          drawElements()\n        }\n      } else {\n        drawArrays()\n      }\n    }\n\n    if (extInstancing && (typeof INSTANCES !== 'number' || INSTANCES >= 0)) {\n      if (typeof INSTANCES === 'string') {\n        inner('if(', INSTANCES, '>0){')\n        emitInstancing()\n        inner('}else if(', INSTANCES, '<0){')\n        emitRegular()\n        inner('}')\n      } else {\n        emitInstancing()\n      }\n    } else {\n      emitRegular()\n    }\n  }\n\n  function createBody (emitBody, parentEnv, args, program, count) {\n    var env = createREGLEnvironment()\n    var scope = env.proc('body', count)\n    \n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays')\n    }\n    emitBody(env, scope, args, program)\n    return env.compile().body\n  }\n\n  // ===================================================\n  // ===================================================\n  // DRAW PROC\n  // ===================================================\n  // ===================================================\n  function emitDrawBody (env, draw, args, program) {\n    injectExtensions(env, draw)\n    if (args.useVAO) {\n      if (args.drawVAO) {\n        draw(env.shared.vao, '.setVAO(', args.drawVAO.append(env, draw), ');')\n      } else {\n        draw(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n      }\n    } else {\n      draw(env.shared.vao, '.setVAO(null);')\n      emitAttributes(env, draw, args, program.attributes, function () {\n        return true\n      })\n    }\n    emitUniforms(env, draw, args, program.uniforms, function () {\n      return true\n    }, false)\n    emitDraw(env, draw, draw, args)\n  }\n\n  function emitDrawProc (env, args) {\n    var draw = env.proc('draw', 1)\n\n    injectExtensions(env, draw)\n\n    emitContext(env, draw, args.context)\n    emitPollFramebuffer(env, draw, args.framebuffer)\n\n    emitPollState(env, draw, args)\n    emitSetOptions(env, draw, args.state)\n\n    emitProfile(env, draw, args, false, true)\n\n    var program = args.shader.progVar.append(env, draw)\n    draw(env.shared.gl, '.useProgram(', program, '.program);')\n\n    if (args.shader.program) {\n      emitDrawBody(env, draw, args, args.shader.program)\n    } else {\n      draw(env.shared.vao, '.setVAO(null);')\n      var drawCache = env.global.def('{}')\n      var PROG_ID = draw.def(program, '.id')\n      var CACHED_PROC = draw.def(drawCache, '[', PROG_ID, ']')\n      draw(\n        env.cond(CACHED_PROC)\n          .then(CACHED_PROC, '.call(this,a0);')\n          .else(\n            CACHED_PROC, '=', drawCache, '[', PROG_ID, ']=',\n            env.link(function (program) {\n              return createBody(emitDrawBody, env, args, program, 1)\n            }), '(', program, ');',\n            CACHED_PROC, '.call(this,a0);'))\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      draw(env.shared.current, '.dirty=true;')\n    }\n    if (env.shared.vao) {\n      draw(env.shared.vao, '.setVAO(null);')\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // BATCH PROC\n  // ===================================================\n  // ===================================================\n\n  function emitBatchDynamicShaderBody (env, scope, args, program) {\n    env.batchId = 'a1'\n\n    injectExtensions(env, scope)\n\n    function all () {\n      return true\n    }\n\n    emitAttributes(env, scope, args, program.attributes, all)\n    emitUniforms(env, scope, args, program.uniforms, all, false)\n    emitDraw(env, scope, scope, args)\n  }\n\n  function emitBatchBody (env, scope, args, program) {\n    injectExtensions(env, scope)\n\n    var contextDynamic = args.contextDep\n\n    var BATCH_ID = scope.def()\n    var PROP_LIST = 'a0'\n    var NUM_PROPS = 'a1'\n    var PROPS = scope.def()\n    env.shared.props = PROPS\n    env.batchId = BATCH_ID\n\n    var outer = env.scope()\n    var inner = env.scope()\n\n    scope(\n      outer.entry,\n      'for(', BATCH_ID, '=0;', BATCH_ID, '<', NUM_PROPS, ';++', BATCH_ID, '){',\n      PROPS, '=', PROP_LIST, '[', BATCH_ID, '];',\n      inner,\n      '}',\n      outer.exit)\n\n    function isInnerDefn (defn) {\n      return ((defn.contextDep && contextDynamic) || defn.propDep)\n    }\n\n    function isOuterDefn (defn) {\n      return !isInnerDefn(defn)\n    }\n\n    if (args.needsContext) {\n      emitContext(env, inner, args.context)\n    }\n    if (args.needsFramebuffer) {\n      emitPollFramebuffer(env, inner, args.framebuffer)\n    }\n    emitSetOptions(env, inner, args.state, isInnerDefn)\n\n    if (args.profile && isInnerDefn(args.profile)) {\n      emitProfile(env, inner, args, false, true)\n    }\n\n    if (!program) {\n      var progCache = env.global.def('{}')\n      var PROGRAM = args.shader.progVar.append(env, inner)\n      var PROG_ID = inner.def(PROGRAM, '.id')\n      var CACHED_PROC = inner.def(progCache, '[', PROG_ID, ']')\n      inner(\n        env.shared.gl, '.useProgram(', PROGRAM, '.program);',\n        'if(!', CACHED_PROC, '){',\n        CACHED_PROC, '=', progCache, '[', PROG_ID, ']=',\n        env.link(function (program) {\n          return createBody(\n            emitBatchDynamicShaderBody, env, args, program, 2)\n        }), '(', PROGRAM, ');}',\n        CACHED_PROC, '.call(this,a0[', BATCH_ID, '],', BATCH_ID, ');')\n    } else {\n      if (args.useVAO) {\n        if (args.drawVAO) {\n          if (isInnerDefn(args.drawVAO)) {\n            // vao is a prop\n            inner(env.shared.vao, '.setVAO(', args.drawVAO.append(env, inner), ');')\n          } else {\n            // vao is invariant\n            outer(env.shared.vao, '.setVAO(', args.drawVAO.append(env, outer), ');')\n          }\n        } else {\n          // scoped vao binding\n          outer(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n        }\n      } else {\n        outer(env.shared.vao, '.setVAO(null);')\n        emitAttributes(env, outer, args, program.attributes, isOuterDefn)\n        emitAttributes(env, inner, args, program.attributes, isInnerDefn)\n      }\n      emitUniforms(env, outer, args, program.uniforms, isOuterDefn, false)\n      emitUniforms(env, inner, args, program.uniforms, isInnerDefn, true)\n      emitDraw(env, outer, inner, args)\n    }\n  }\n\n  function emitBatchProc (env, args) {\n    var batch = env.proc('batch', 2)\n    env.batchId = '0'\n\n    injectExtensions(env, batch)\n\n    // Check if any context variables depend on props\n    var contextDynamic = false\n    var needsContext = true\n    Object.keys(args.context).forEach(function (name) {\n      contextDynamic = contextDynamic || args.context[name].propDep\n    })\n    if (!contextDynamic) {\n      emitContext(env, batch, args.context)\n      needsContext = false\n    }\n\n    // framebuffer state affects framebufferWidth/height context vars\n    var framebuffer = args.framebuffer\n    var needsFramebuffer = false\n    if (framebuffer) {\n      if (framebuffer.propDep) {\n        contextDynamic = needsFramebuffer = true\n      } else if (framebuffer.contextDep && contextDynamic) {\n        needsFramebuffer = true\n      }\n      if (!needsFramebuffer) {\n        emitPollFramebuffer(env, batch, framebuffer)\n      }\n    } else {\n      emitPollFramebuffer(env, batch, null)\n    }\n\n    // viewport is weird because it can affect context vars\n    if (args.state.viewport && args.state.viewport.propDep) {\n      contextDynamic = true\n    }\n\n    function isInnerDefn (defn) {\n      return (defn.contextDep && contextDynamic) || defn.propDep\n    }\n\n    // set webgl options\n    emitPollState(env, batch, args)\n    emitSetOptions(env, batch, args.state, function (defn) {\n      return !isInnerDefn(defn)\n    })\n\n    if (!args.profile || !isInnerDefn(args.profile)) {\n      emitProfile(env, batch, args, false, 'a1')\n    }\n\n    // Save these values to args so that the batch body routine can use them\n    args.contextDep = contextDynamic\n    args.needsContext = needsContext\n    args.needsFramebuffer = needsFramebuffer\n\n    // determine if shader is dynamic\n    var progDefn = args.shader.progVar\n    if ((progDefn.contextDep && contextDynamic) || progDefn.propDep) {\n      emitBatchBody(\n        env,\n        batch,\n        args,\n        null)\n    } else {\n      var PROGRAM = progDefn.append(env, batch)\n      batch(env.shared.gl, '.useProgram(', PROGRAM, '.program);')\n      if (args.shader.program) {\n        emitBatchBody(\n          env,\n          batch,\n          args,\n          args.shader.program)\n      } else {\n        batch(env.shared.vao, '.setVAO(null);')\n        var batchCache = env.global.def('{}')\n        var PROG_ID = batch.def(PROGRAM, '.id')\n        var CACHED_PROC = batch.def(batchCache, '[', PROG_ID, ']')\n        batch(\n          env.cond(CACHED_PROC)\n            .then(CACHED_PROC, '.call(this,a0,a1);')\n            .else(\n              CACHED_PROC, '=', batchCache, '[', PROG_ID, ']=',\n              env.link(function (program) {\n                return createBody(emitBatchBody, env, args, program, 2)\n              }), '(', PROGRAM, ');',\n              CACHED_PROC, '.call(this,a0,a1);'))\n      }\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      batch(env.shared.current, '.dirty=true;')\n    }\n\n    if (env.shared.vao) {\n      batch(env.shared.vao, '.setVAO(null);')\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // SCOPE COMMAND\n  // ===================================================\n  // ===================================================\n  function emitScopeProc (env, args) {\n    var scope = env.proc('scope', 3)\n    env.batchId = 'a2'\n\n    var shared = env.shared\n    var CURRENT_STATE = shared.current\n\n    emitContext(env, scope, args.context)\n\n    if (args.framebuffer) {\n      args.framebuffer.append(env, scope)\n    }\n\n    sortState(Object.keys(args.state)).forEach(function (name) {\n      var defn = args.state[name]\n      var value = defn.append(env, scope)\n      if (isArrayLike(value)) {\n        value.forEach(function (v, i) {\n          if (hasVariableReference(v)) {\n            scope.set(env.next[name], '[' + i + ']', v)\n          } else {\n            scope.set(env.next[name], '[' + i + ']', env.link(v, {stable: true}))\n          }\n        })\n      } else {\n        if (isStatic(defn)) {\n          scope.set(shared.next, '.' + name, env.link(value, {stable: true}))\n        } else {\n          scope.set(shared.next, '.' + name, value)\n        }\n      }\n    })\n\n    emitProfile(env, scope, args, true, true)\n\n    ;[S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(\n      function (opt) {\n        var variable = args.draw[opt]\n        if (!variable) {\n          return\n        }\n        var VARIABLE = variable.append(env, scope)\n        if (hasVariableReference(VARIABLE)) {\n          scope.set(shared.draw, '.' + opt, VARIABLE)\n        } else {\n          scope.set(shared.draw, '.' + opt, env.link(VARIABLE), {stable: true})\n        }\n      })\n\n    Object.keys(args.uniforms).forEach(function (opt) {\n      var value = args.uniforms[opt].append(env, scope)\n      if (Array.isArray(value)) {\n        value = '[' + value.map(function (v) {\n          if (hasVariableReference(v)) {\n            return v;\n          } else {\n            return env.link(v, {stable: true})\n          }\n        }) + ']'\n      }\n      scope.set(\n        shared.uniforms,\n        '[' + env.link(stringStore.id(opt), {stable: true}) + ']',\n        value)\n    })\n\n    Object.keys(args.attributes).forEach(function (name) {\n      var record = args.attributes[name].append(env, scope)\n      var scopeAttrib = env.scopeAttrib(name)\n      Object.keys(new AttributeRecord()).forEach(function (prop) {\n        scope.set(scopeAttrib, '.' + prop, record[prop])\n      })\n    })\n\n    if (args.scopeVAO) {\n      var VARIABLE = args.scopeVAO.append(env, scope)\n      if (hasVariableReference(VARIABLE)) {\n        scope.set(shared.vao, '.targetVAO', VARIABLE)\n      } else {\n        scope.set(shared.vao, '.targetVAO', env.link(VARIABLE, {stable: true}))\n      }\n    }\n\n    function saveShader (name) {\n      var shader = args.shader[name]\n      if (shader) {\n        var VARIABLE = shader.append(env, scope)\n        if (hasVariableReference(VARIABLE)) {\n          scope.set(shared.shader, '.' + name, VARIABLE)\n        } else {\n          scope.set(shared.shader, '.' + name, env.link(VARIABLE, {stable: true}))\n        }\n      }\n    }\n    saveShader(S_VERT)\n    saveShader(S_FRAG)\n\n    if (Object.keys(args.state).length > 0) {\n      scope(CURRENT_STATE, '.dirty=true;')\n      scope.exit(CURRENT_STATE, '.dirty=true;')\n    }\n\n    scope('a1(', env.shared.context, ',a0,', env.batchId, ');')\n  }\n\n  function isDynamicObject (object) {\n    if (typeof object !== 'object' || isArrayLike(object)) {\n      return\n    }\n    var props = Object.keys(object)\n    for (var i = 0; i < props.length; ++i) {\n      if (dynamic.isDynamic(object[props[i]])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function splatObject (env, options, name) {\n    var object = options.static[name]\n    if (!object || !isDynamicObject(object)) {\n      return\n    }\n\n    var globals = env.global\n    var keys = Object.keys(object)\n    var thisDep = false\n    var contextDep = false\n    var propDep = false\n    var objectRef = env.global.def('{}')\n    keys.forEach(function (key) {\n      var value = object[key]\n      if (dynamic.isDynamic(value)) {\n        if (typeof value === 'function') {\n          value = object[key] = dynamic.unbox(value)\n        }\n        var deps = createDynamicDecl(value, null)\n        thisDep = thisDep || deps.thisDep\n        propDep = propDep || deps.propDep\n        contextDep = contextDep || deps.contextDep\n      } else {\n        globals(objectRef, '.', key, '=')\n        switch (typeof value) {\n          case 'number':\n            globals(value)\n            break\n          case 'string':\n            globals('\"', value, '\"')\n            break\n          case 'object':\n            if (Array.isArray(value)) {\n              globals('[', value.join(), ']')\n            }\n            break\n          default:\n            globals(env.link(value))\n            break\n        }\n        globals(';')\n      }\n    })\n\n    function appendBlock (env, block) {\n      keys.forEach(function (key) {\n        var value = object[key]\n        if (!dynamic.isDynamic(value)) {\n          return\n        }\n        var ref = env.invoke(block, value)\n        block(objectRef, '.', key, '=', ref, ';')\n      })\n    }\n\n    options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {\n      thisDep: thisDep,\n      contextDep: contextDep,\n      propDep: propDep,\n      ref: objectRef,\n      append: appendBlock\n    })\n    delete options.static[name]\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // MAIN DRAW COMMAND\n  // ===========================================================================\n  // ===========================================================================\n  function compileCommand (options, attributes, uniforms, context, stats) {\n    var env = createREGLEnvironment()\n\n    // link stats, so that we can easily access it in the program.\n    env.stats = env.link(stats)\n\n    // splat options and attributes to allow for dynamic nested properties\n    Object.keys(attributes.static).forEach(function (key) {\n      splatObject(env, attributes, key)\n    })\n    NESTED_OPTIONS.forEach(function (name) {\n      splatObject(env, options, name)\n    })\n\n    var args = parseArguments(options, attributes, uniforms, context, env)\n\n    if (args.shader.program) {\n      args.shader.program.attributes.sort(function (a, b) {\n        return a.name < b.name ? -1 : 1\n      })\n      args.shader.program.uniforms.sort(function (a, b) {\n        return a.name < b.name ? -1 : 1\n      })\n    }\n\n    emitDrawProc(env, args)\n    emitScopeProc(env, args)\n    emitBatchProc(env, args)\n\n    return extend(env.compile(), {\n      destroy: function () {\n        args.shader.program.destroy()\n      }\n    })\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // POLL / REFRESH\n  // ===========================================================================\n  // ===========================================================================\n  return {\n    next: nextState,\n    current: currentState,\n    procs: (function () {\n      var env = createREGLEnvironment()\n      var poll = env.proc('poll')\n      var refresh = env.proc('refresh')\n      var common = env.block()\n      poll(common)\n      refresh(common)\n\n      var shared = env.shared\n      var GL = shared.gl\n      var NEXT_STATE = shared.next\n      var CURRENT_STATE = shared.current\n\n      common(CURRENT_STATE, '.dirty=false;')\n\n      emitPollFramebuffer(env, poll)\n      emitPollFramebuffer(env, refresh, null, true)\n\n      // Refresh updates all attribute state changes\n      var INSTANCING\n      if (extInstancing) {\n        INSTANCING = env.link(extInstancing)\n      }\n\n      // update vertex array bindings\n      if (extensions.oes_vertex_array_object) {\n        refresh(env.link(extensions.oes_vertex_array_object), '.bindVertexArrayOES(null);')\n      }\n      var BINDING = refresh.def(shared.attributes)\n      var TEMP_BINDING = refresh.def(0)\n\n      var ifte = env.cond(TEMP_BINDING, '.buffer')\n      ifte.then(\n        GL, '.enableVertexAttribArray(i);',\n        GL, '.bindBuffer(',\n        GL_ARRAY_BUFFER$2, ',',\n        TEMP_BINDING, '.buffer.buffer);',\n        GL, '.vertexAttribPointer(i,',\n        TEMP_BINDING, '.size,',\n        TEMP_BINDING, '.type,',\n        TEMP_BINDING, '.normalized,',\n        TEMP_BINDING, '.stride,',\n        TEMP_BINDING, '.offset);'\n      ).else(\n        GL, '.disableVertexAttribArray(i);',\n        GL, '.vertexAttrib4f(i,',\n        TEMP_BINDING, '.x,',\n        TEMP_BINDING, '.y,',\n        TEMP_BINDING, '.z,',\n        TEMP_BINDING, '.w);',\n        TEMP_BINDING, '.buffer=null;')\n      var MAX_ATTRIBUTES = env.link(limits.maxAttributes, {stable: true})\n      refresh(\n        'for(var i=0;i<', MAX_ATTRIBUTES, ';++i){',\n        TEMP_BINDING, '=', BINDING, '[i];',\n        ifte,\n        '}'\n      )\n\n      if (extInstancing) {\n        refresh(\n          'for(var i=0;i<', MAX_ATTRIBUTES, ';++i){',\n          INSTANCING, '.vertexAttribDivisorANGLE(i,',\n          BINDING, '[i].divisor);',\n          '}')\n      }\n      refresh(\n        env.shared.vao, '.currentVAO=null;',\n        env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n\n      Object.keys(GL_FLAGS).forEach(function (flag) {\n        var cap = GL_FLAGS[flag]\n        var NEXT = common.def(NEXT_STATE, '.', flag)\n        var block = env.block()\n        block('if(', NEXT, '){',\n          GL, '.enable(', cap, ')}else{',\n          GL, '.disable(', cap, ')}',\n          CURRENT_STATE, '.', flag, '=', NEXT, ';')\n        refresh(block)\n        poll(\n          'if(', NEXT, '!==', CURRENT_STATE, '.', flag, '){',\n          block,\n          '}')\n      })\n\n      Object.keys(GL_VARIABLES).forEach(function (name) {\n        var func = GL_VARIABLES[name]\n        var init = currentState[name]\n        var NEXT, CURRENT\n        var block = env.block()\n        block(GL, '.', func, '(')\n        if (isArrayLike(init)) {\n          var n = init.length\n          NEXT = env.global.def(NEXT_STATE, '.', name)\n          CURRENT = env.global.def(CURRENT_STATE, '.', name)\n          block(\n            loop(n, function (i) {\n              return NEXT + '[' + i + ']'\n            }), ');',\n            loop(n, function (i) {\n              return CURRENT + '[' + i + ']=' + NEXT + '[' + i + '];'\n            }).join(''))\n          poll(\n            'if(', loop(n, function (i) {\n              return NEXT + '[' + i + ']!==' + CURRENT + '[' + i + ']'\n            }).join('||'), '){',\n            block,\n            '}')\n        } else {\n          NEXT = common.def(NEXT_STATE, '.', name)\n          CURRENT = common.def(CURRENT_STATE, '.', name)\n          block(\n            NEXT, ');',\n            CURRENT_STATE, '.', name, '=', NEXT, ';')\n          poll(\n            'if(', NEXT, '!==', CURRENT, '){',\n            block,\n            '}')\n        }\n        refresh(block)\n      })\n\n      return env.compile()\n    })(),\n    compile: compileCommand\n  }\n}\n\nfunction stats () {\n  return {\n    vaoCount: 0,\n    bufferCount: 0,\n    elementsCount: 0,\n    framebufferCount: 0,\n    shaderCount: 0,\n    textureCount: 0,\n    cubeCount: 0,\n    renderbufferCount: 0,\n    maxTextureUnits: 0\n  }\n}\n\nvar GL_QUERY_RESULT_EXT = 0x8866\nvar GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867\nvar GL_TIME_ELAPSED_EXT = 0x88BF\n\nvar createTimer = function (gl, extensions) {\n  if (!extensions.ext_disjoint_timer_query) {\n    return null\n  }\n\n  // QUERY POOL BEGIN\n  var queryPool = []\n  function allocQuery () {\n    return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT()\n  }\n  function freeQuery (query) {\n    queryPool.push(query)\n  }\n  // QUERY POOL END\n\n  var pendingQueries = []\n  function beginQuery (stats) {\n    var query = allocQuery()\n    extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query)\n    pendingQueries.push(query)\n    pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats)\n  }\n\n  function endQuery () {\n    extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT)\n  }\n\n  //\n  // Pending stats pool.\n  //\n  function PendingStats () {\n    this.startQueryIndex = -1\n    this.endQueryIndex = -1\n    this.sum = 0\n    this.stats = null\n  }\n  var pendingStatsPool = []\n  function allocPendingStats () {\n    return pendingStatsPool.pop() || new PendingStats()\n  }\n  function freePendingStats (pendingStats) {\n    pendingStatsPool.push(pendingStats)\n  }\n  // Pending stats pool end\n\n  var pendingStats = []\n  function pushScopeStats (start, end, stats) {\n    var ps = allocPendingStats()\n    ps.startQueryIndex = start\n    ps.endQueryIndex = end\n    ps.sum = 0\n    ps.stats = stats\n    pendingStats.push(ps)\n  }\n\n  // we should call this at the beginning of the frame,\n  // in order to update gpuTime\n  var timeSum = []\n  var queryPtr = []\n  function update () {\n    var ptr, i\n\n    var n = pendingQueries.length\n    if (n === 0) {\n      return\n    }\n\n    // Reserve space\n    queryPtr.length = Math.max(queryPtr.length, n + 1)\n    timeSum.length = Math.max(timeSum.length, n + 1)\n    timeSum[0] = 0\n    queryPtr[0] = 0\n\n    // Update all pending timer queries\n    var queryTime = 0\n    ptr = 0\n    for (i = 0; i < pendingQueries.length; ++i) {\n      var query = pendingQueries[i]\n      if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {\n        queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT)\n        freeQuery(query)\n      } else {\n        pendingQueries[ptr++] = query\n      }\n      timeSum[i + 1] = queryTime\n      queryPtr[i + 1] = ptr\n    }\n    pendingQueries.length = ptr\n\n    // Update all pending stat queries\n    ptr = 0\n    for (i = 0; i < pendingStats.length; ++i) {\n      var stats = pendingStats[i]\n      var start = stats.startQueryIndex\n      var end = stats.endQueryIndex\n      stats.sum += timeSum[end] - timeSum[start]\n      var startPtr = queryPtr[start]\n      var endPtr = queryPtr[end]\n      if (endPtr === startPtr) {\n        stats.stats.gpuTime += stats.sum / 1e6\n        freePendingStats(stats)\n      } else {\n        stats.startQueryIndex = startPtr\n        stats.endQueryIndex = endPtr\n        pendingStats[ptr++] = stats\n      }\n    }\n    pendingStats.length = ptr\n  }\n\n  return {\n    beginQuery: beginQuery,\n    endQuery: endQuery,\n    pushScopeStats: pushScopeStats,\n    update: update,\n    getNumPendingQueries: function () {\n      return pendingQueries.length\n    },\n    clear: function () {\n      queryPool.push.apply(queryPool, pendingQueries)\n      for (var i = 0; i < queryPool.length; i++) {\n        extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i])\n      }\n      pendingQueries.length = 0\n      queryPool.length = 0\n    },\n    restore: function () {\n      pendingQueries.length = 0\n      queryPool.length = 0\n    }\n  }\n}\n\nvar GL_COLOR_BUFFER_BIT = 16384\nvar GL_DEPTH_BUFFER_BIT = 256\nvar GL_STENCIL_BUFFER_BIT = 1024\n\nvar GL_ARRAY_BUFFER = 34962\n\nvar CONTEXT_LOST_EVENT = 'webglcontextlost'\nvar CONTEXT_RESTORED_EVENT = 'webglcontextrestored'\n\nvar DYN_PROP = 1\nvar DYN_CONTEXT = 2\nvar DYN_STATE = 3\n\nfunction find (haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction wrapREGL (args) {\n  var config = parseArgs(args)\n  if (!config) {\n    return null\n  }\n\n  var gl = config.gl\n  var glAttributes = gl.getContextAttributes()\n  var contextLost = gl.isContextLost()\n\n  var extensionState = createExtensionCache(gl, config)\n  if (!extensionState) {\n    return null\n  }\n\n  var stringStore = createStringStore()\n  var stats$$1 = stats()\n  var cachedCode = config.cachedCode || {};\n  var extensions = extensionState.extensions\n  var timer = createTimer(gl, extensions)\n\n  var START_TIME = clock()\n  var WIDTH = gl.drawingBufferWidth\n  var HEIGHT = gl.drawingBufferHeight\n\n  var contextState = {\n    tick: 0,\n    time: 0,\n    viewportWidth: WIDTH,\n    viewportHeight: HEIGHT,\n    framebufferWidth: WIDTH,\n    framebufferHeight: HEIGHT,\n    drawingBufferWidth: WIDTH,\n    drawingBufferHeight: HEIGHT,\n    pixelRatio: config.pixelRatio\n  }\n  var uniformState = {}\n  var drawState = {\n    elements: null,\n    primitive: 4, // GL_TRIANGLES\n    count: -1,\n    offset: 0,\n    instances: -1\n  }\n\n  var limits = wrapLimits(gl, extensions)\n  var bufferState = wrapBufferState(\n    gl,\n    stats$$1,\n    config,\n    destroyBuffer)\n  var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1)\n  var attributeState = wrapAttributeState(\n    gl,\n    extensions,\n    limits,\n    stats$$1,\n    bufferState,\n    elementState,\n    drawState)\n  function destroyBuffer (buffer) {\n    return attributeState.destroyBuffer(buffer)\n  }\n  var shaderState = wrapShaderState(gl, stringStore, stats$$1, config)\n  var textureState = createTextureSet(\n    gl,\n    extensions,\n    limits,\n    function () { core.procs.poll() },\n    contextState,\n    stats$$1,\n    config)\n  var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config)\n  var framebufferState = wrapFBOState(\n    gl,\n    extensions,\n    limits,\n    textureState,\n    renderbufferState,\n    stats$$1)\n  var core = reglCore(\n    gl,\n    stringStore,\n    extensions,\n    limits,\n    bufferState,\n    elementState,\n    textureState,\n    framebufferState,\n    uniformState,\n    attributeState,\n    shaderState,\n    drawState,\n    contextState,\n    timer,\n    cachedCode,\n    config)\n  var readPixels = wrapReadPixels(\n    gl,\n    framebufferState,\n    core.procs.poll,\n    contextState,\n    glAttributes, extensions, limits)\n\n  var nextState = core.next\n  var canvas = gl.canvas\n\n  var rafCallbacks = []\n  var lossCallbacks = []\n  var restoreCallbacks = []\n  var destroyCallbacks = [config.onDestroy]\n\n  var activeRAF = null\n  function handleRAF () {\n    if (rafCallbacks.length === 0) {\n      if (timer) {\n        timer.update()\n      }\n      activeRAF = null\n      return\n    }\n\n    // schedule next animation frame\n    activeRAF = raf.next(handleRAF)\n\n    // poll for changes\n    poll()\n\n    // fire a callback for all pending rafs\n    for (var i = rafCallbacks.length - 1; i >= 0; --i) {\n      var cb = rafCallbacks[i]\n      if (cb) {\n        cb(contextState, null, 0)\n      }\n    }\n\n    // flush all pending webgl calls\n    gl.flush()\n\n    // poll GPU timers *after* gl.flush so we don't delay command dispatch\n    if (timer) {\n      timer.update()\n    }\n  }\n\n  function startRAF () {\n    if (!activeRAF && rafCallbacks.length > 0) {\n      activeRAF = raf.next(handleRAF)\n    }\n  }\n\n  function stopRAF () {\n    if (activeRAF) {\n      raf.cancel(handleRAF)\n      activeRAF = null\n    }\n  }\n\n  function handleContextLoss (event) {\n    event.preventDefault()\n\n    // set context lost flag\n    contextLost = true\n\n    // pause request animation frame\n    stopRAF()\n\n    // lose context\n    lossCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  function handleContextRestored (event) {\n    // clear error code\n    gl.getError()\n\n    // clear context lost flag\n    contextLost = false\n\n    // refresh state\n    extensionState.restore()\n    shaderState.restore()\n    bufferState.restore()\n    textureState.restore()\n    renderbufferState.restore()\n    framebufferState.restore()\n    attributeState.restore()\n    if (timer) {\n      timer.restore()\n    }\n\n    // refresh state\n    core.procs.refresh()\n\n    // restart RAF\n    startRAF()\n\n    // restore context\n    restoreCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  if (canvas) {\n    canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false)\n    canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false)\n  }\n\n  function destroy () {\n    rafCallbacks.length = 0\n    stopRAF()\n\n    if (canvas) {\n      canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss)\n      canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored)\n    }\n\n    shaderState.clear()\n    framebufferState.clear()\n    renderbufferState.clear()\n    attributeState.clear()\n    textureState.clear()\n    elementState.clear()\n    bufferState.clear()\n\n    if (timer) {\n      timer.clear()\n    }\n\n    destroyCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  function compileProcedure (options) {\n    \n    \n\n    function flattenNestedOptions (options) {\n      var result = extend({}, options)\n      delete result.uniforms\n      delete result.attributes\n      delete result.context\n      delete result.vao\n\n      if ('stencil' in result && result.stencil.op) {\n        result.stencil.opBack = result.stencil.opFront = result.stencil.op\n        delete result.stencil.op\n      }\n\n      function merge (name) {\n        if (name in result) {\n          var child = result[name]\n          delete result[name]\n          Object.keys(child).forEach(function (prop) {\n            result[name + '.' + prop] = child[prop]\n          })\n        }\n      }\n      merge('blend')\n      merge('depth')\n      merge('cull')\n      merge('stencil')\n      merge('polygonOffset')\n      merge('scissor')\n      merge('sample')\n\n      if ('vao' in options) {\n        result.vao = options.vao\n      }\n\n      return result\n    }\n\n    function separateDynamic (object, useArrays) {\n      var staticItems = {}\n      var dynamicItems = {}\n      Object.keys(object).forEach(function (option) {\n        var value = object[option]\n        if (dynamic.isDynamic(value)) {\n          dynamicItems[option] = dynamic.unbox(value, option)\n          return\n        } else if (useArrays && Array.isArray(value)) {\n          for (var i = 0; i < value.length; ++i) {\n            if (dynamic.isDynamic(value[i])) {\n              dynamicItems[option] = dynamic.unbox(value, option)\n              return\n            }\n          }\n        }\n        staticItems[option] = value\n      })\n      return {\n        dynamic: dynamicItems,\n        static: staticItems\n      }\n    }\n\n    // Treat context variables separate from other dynamic variables\n    var context = separateDynamic(options.context || {}, true)\n    var uniforms = separateDynamic(options.uniforms || {}, true)\n    var attributes = separateDynamic(options.attributes || {}, false)\n    var opts = separateDynamic(flattenNestedOptions(options), false)\n\n    var stats$$1 = {\n      gpuTime: 0.0,\n      cpuTime: 0.0,\n      count: 0\n    }\n\n    var compiled = core.compile(opts, attributes, uniforms, context, stats$$1)\n\n    var draw = compiled.draw\n    var batch = compiled.batch\n    var scope = compiled.scope\n\n    // FIXME: we should modify code generation for batch commands so this\n    // isn't necessary\n    var EMPTY_ARRAY = []\n    function reserve (count) {\n      while (EMPTY_ARRAY.length < count) {\n        EMPTY_ARRAY.push(null)\n      }\n      return EMPTY_ARRAY\n    }\n\n    function REGLCommand (args, body) {\n      var i\n      if (contextLost) {\n        \n      }\n      if (typeof args === 'function') {\n        return scope.call(this, null, args, 0)\n      } else if (typeof body === 'function') {\n        if (typeof args === 'number') {\n          for (i = 0; i < args; ++i) {\n            scope.call(this, null, body, i)\n          }\n        } else if (Array.isArray(args)) {\n          for (i = 0; i < args.length; ++i) {\n            scope.call(this, args[i], body, i)\n          }\n        } else {\n          return scope.call(this, args, body, 0)\n        }\n      } else if (typeof args === 'number') {\n        if (args > 0) {\n          return batch.call(this, reserve(args | 0), args | 0)\n        }\n      } else if (Array.isArray(args)) {\n        if (args.length) {\n          return batch.call(this, args, args.length)\n        }\n      } else {\n        return draw.call(this, args)\n      }\n    }\n\n    return extend(REGLCommand, {\n      stats: stats$$1,\n      destroy: function () {\n        compiled.destroy()\n      }\n    })\n  }\n\n  var setFBO = framebufferState.setFBO = compileProcedure({\n    framebuffer: dynamic.define.call(null, DYN_PROP, 'framebuffer')\n  })\n\n  function clearImpl (_, options) {\n    var clearFlags = 0\n    core.procs.poll()\n\n    var c = options.color\n    if (c) {\n      gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0)\n      clearFlags |= GL_COLOR_BUFFER_BIT\n    }\n    if ('depth' in options) {\n      gl.clearDepth(+options.depth)\n      clearFlags |= GL_DEPTH_BUFFER_BIT\n    }\n    if ('stencil' in options) {\n      gl.clearStencil(options.stencil | 0)\n      clearFlags |= GL_STENCIL_BUFFER_BIT\n    }\n\n    \n    gl.clear(clearFlags)\n  }\n\n  function clear (options) {\n    \n    if ('framebuffer' in options) {\n      if (options.framebuffer &&\n          options.framebuffer_reglType === 'framebufferCube') {\n        for (var i = 0; i < 6; ++i) {\n          setFBO(extend({\n            framebuffer: options.framebuffer.faces[i]\n          }, options), clearImpl)\n        }\n      } else {\n        setFBO(options, clearImpl)\n      }\n    } else {\n      clearImpl(null, options)\n    }\n  }\n\n  function frame (cb) {\n    \n    rafCallbacks.push(cb)\n\n    function cancel () {\n      // FIXME:  should we check something other than equals cb here?\n      // what if a user calls frame twice with the same callback...\n      //\n      var i = find(rafCallbacks, cb)\n      \n      function pendingCancel () {\n        var index = find(rafCallbacks, pendingCancel)\n        rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1]\n        rafCallbacks.length -= 1\n        if (rafCallbacks.length <= 0) {\n          stopRAF()\n        }\n      }\n      rafCallbacks[i] = pendingCancel\n    }\n\n    startRAF()\n\n    return {\n      cancel: cancel\n    }\n  }\n\n  // poll viewport\n  function pollViewport () {\n    var viewport = nextState.viewport\n    var scissorBox = nextState.scissor_box\n    viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0\n    contextState.viewportWidth =\n      contextState.framebufferWidth =\n      contextState.drawingBufferWidth =\n      viewport[2] =\n      scissorBox[2] = gl.drawingBufferWidth\n    contextState.viewportHeight =\n      contextState.framebufferHeight =\n      contextState.drawingBufferHeight =\n      viewport[3] =\n      scissorBox[3] = gl.drawingBufferHeight\n  }\n\n  function poll () {\n    contextState.tick += 1\n    contextState.time = now()\n    pollViewport()\n    core.procs.poll()\n  }\n\n  function refresh () {\n    textureState.refresh()\n    pollViewport()\n    core.procs.refresh()\n    if (timer) {\n      timer.update()\n    }\n  }\n\n  function now () {\n    return (clock() - START_TIME) / 1000.0\n  }\n\n  refresh()\n\n  function addListener (event, callback) {\n    \n\n    var callbacks\n    switch (event) {\n      case 'frame':\n        return frame(callback)\n      case 'lost':\n        callbacks = lossCallbacks\n        break\n      case 'restore':\n        callbacks = restoreCallbacks\n        break\n      case 'destroy':\n        callbacks = destroyCallbacks\n        break\n      default:\n        \n    }\n\n    callbacks.push(callback)\n    return {\n      cancel: function () {\n        for (var i = 0; i < callbacks.length; ++i) {\n          if (callbacks[i] === callback) {\n            callbacks[i] = callbacks[callbacks.length - 1]\n            callbacks.pop()\n            return\n          }\n        }\n      }\n    }\n  }\n\n  function getCachedCode() {\n    return cachedCode\n  }\n\n  function preloadCachedCode(moreCache) {\n    Object.entries(moreCache).forEach(function (kv) {\n      cachedCode[kv[0]] = kv[1]\n    })\n  }\n\n  var regl = extend(compileProcedure, {\n    // Clear current FBO\n    clear: clear,\n\n    // Short cuts for dynamic variables\n    prop: dynamic.define.bind(null, DYN_PROP),\n    context: dynamic.define.bind(null, DYN_CONTEXT),\n    this: dynamic.define.bind(null, DYN_STATE),\n\n    // executes an empty draw command\n    draw: compileProcedure({}),\n\n    // Resources\n    buffer: function (options) {\n      return bufferState.create(options, GL_ARRAY_BUFFER, false, false)\n    },\n    elements: function (options) {\n      return elementState.create(options, false)\n    },\n    texture: textureState.create2D,\n    cube: textureState.createCube,\n    renderbuffer: renderbufferState.create,\n    framebuffer: framebufferState.create,\n    framebufferCube: framebufferState.createCube,\n    vao: attributeState.createVAO,\n\n    // Expose context attributes\n    attributes: glAttributes,\n\n    // Frame rendering\n    frame: frame,\n    on: addListener,\n\n    // System limits\n    limits: limits,\n    hasExtension: function (name) {\n      return limits.extensions.indexOf(name.toLowerCase()) >= 0\n    },\n\n    // Read pixels\n    read: readPixels,\n\n    // Destroy regl and all associated resources\n    destroy: destroy,\n\n    // Direct GL state manipulation\n    _gl: gl,\n    _refresh: refresh,\n\n    poll: function () {\n      poll()\n      if (timer) {\n        timer.update()\n      }\n    },\n\n    // Current time\n    now: now,\n\n    // regl Statistics Information\n    stats: stats$$1,\n\n    // cache generated code\n    getCachedCode: getCachedCode,\n    preloadCachedCode: preloadCachedCode\n  })\n\n  config.onDone(null, regl)\n\n  return regl\n}\n\nreturn wrapREGL;\n\n})));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}