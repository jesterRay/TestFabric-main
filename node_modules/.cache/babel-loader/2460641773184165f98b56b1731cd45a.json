{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\nvar constants = require('./constants');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\nvar MAIN_TITLE = 1;\nvar LEGEND_PATTERN = /^legend[0-9]*$/;\nmodule.exports = function draw(gd, opts) {\n  if (opts) {\n    drawOne(gd, opts);\n  } else {\n    var fullLayout = gd._fullLayout;\n    var newLegends = fullLayout._legends;\n\n    // remove old legends that won't stay on the graph\n    var oldLegends = fullLayout._infolayer.selectAll('[class^=\"legend\"]');\n    oldLegends.each(function () {\n      var el = d3.select(this);\n      var classes = el.attr('class');\n      var cls = classes.split(' ')[0];\n      if (cls.match(LEGEND_PATTERN) && newLegends.indexOf(cls) === -1) {\n        el.remove();\n      }\n    });\n\n    // draw/update new legends\n    for (var i = 0; i < newLegends.length; i++) {\n      var legendId = newLegends[i];\n      var legendObj = gd._fullLayout[legendId];\n      drawOne(gd, legendObj);\n    }\n  }\n};\n\n// After legend dimensions are calculated the title can be aligned horizontally left, center, right\nfunction horizontalAlignTitle(titleEl, legendObj, bw) {\n  if (legendObj.title.side !== 'top center' && legendObj.title.side !== 'top right') return;\n  var font = legendObj.title.font;\n  var lineHeight = font.size * LINE_SPACING;\n  var titleOffset = 0;\n  var textNode = titleEl.node();\n  var width = Drawing.bBox(textNode).width; // width of the title text\n\n  if (legendObj.title.side === 'top center') {\n    titleOffset = 0.5 * (legendObj._width - 2 * bw - 2 * constants.titlePad - width);\n  } else if (legendObj.title.side === 'top right') {\n    titleOffset = legendObj._width - 2 * bw - 2 * constants.titlePad - width;\n  }\n  svgTextUtils.positionText(titleEl, bw + constants.titlePad + titleOffset, bw + lineHeight);\n}\nfunction drawOne(gd, opts) {\n  var legendObj = opts || {};\n  var fullLayout = gd._fullLayout;\n  var legendId = getId(legendObj);\n  var clipId, layer;\n  var inHover = legendObj._inHover;\n  if (inHover) {\n    layer = legendObj.layer;\n    clipId = 'hover';\n  } else {\n    layer = fullLayout._infolayer;\n    clipId = legendId;\n  }\n  if (!layer) return;\n  clipId += fullLayout._uid;\n  if (!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n  var legendData;\n  if (!inHover) {\n    var calcdata = (gd.calcdata || []).slice();\n    var shapes = fullLayout.shapes;\n    for (var i = 0; i < shapes.length; i++) {\n      var shape = shapes[i];\n      if (!shape.showlegend) continue;\n      var shapeLegend = {\n        _isShape: true,\n        _fullInput: shape,\n        index: shape._index,\n        name: shape.name || shape.label.text || 'shape ' + shape._index,\n        legend: shape.legend,\n        legendgroup: shape.legendgroup,\n        legendgrouptitle: shape.legendgrouptitle,\n        legendrank: shape.legendrank,\n        legendwidth: shape.legendwidth,\n        showlegend: shape.showlegend,\n        visible: shape.visible,\n        opacity: shape.opacity,\n        mode: shape.type === 'line' ? 'lines' : 'markers',\n        line: shape.line,\n        marker: {\n          line: shape.line,\n          color: shape.fillcolor,\n          size: 12,\n          symbol: shape.type === 'rect' ? 'square' : shape.type === 'circle' ? 'circle' :\n          // case of path\n          'hexagon2'\n        }\n      };\n      calcdata.push([{\n        trace: shapeLegend\n      }]);\n    }\n    legendData = fullLayout.showlegend && getLegendData(calcdata, legendObj, fullLayout._legends.length > 1);\n  } else {\n    if (!legendObj.entries) return;\n    legendData = getLegendData(legendObj.entries, legendObj);\n  }\n  var hiddenSlices = fullLayout.hiddenlabels || [];\n  if (!inHover && (!fullLayout.showlegend || !legendData.length)) {\n    layer.selectAll('.' + legendId).remove();\n    fullLayout._topdefs.select('#' + clipId).remove();\n    return Plots.autoMargin(gd, legendId);\n  }\n  var legend = Lib.ensureSingle(layer, 'g', legendId, function (s) {\n    if (!inHover) s.attr('pointer-events', 'all');\n  });\n  var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function (s) {\n    s.append('rect');\n  });\n  var bg = Lib.ensureSingle(legend, 'rect', 'bg', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  bg.call(Color.stroke, legendObj.bordercolor).call(Color.fill, legendObj.bgcolor).style('stroke-width', legendObj.borderwidth + 'px');\n  var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n  var title = legendObj.title;\n  legendObj._titleWidth = 0;\n  legendObj._titleHeight = 0;\n  var titleEl;\n  if (title.text) {\n    titleEl = Lib.ensureSingle(scrollBox, 'text', legendId + 'titletext');\n    titleEl.attr('text-anchor', 'start').call(Drawing.font, title.font).text(title.text);\n    textLayout(titleEl, scrollBox, gd, legendObj, MAIN_TITLE); // handle mathjax or multi-line text and compute title height\n  } else {\n    scrollBox.selectAll('.' + legendId + 'titletext').remove();\n  }\n  var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function (s) {\n    s.attr(constants.scrollBarEnterAttrs).call(Color.fill, constants.scrollBarColor);\n  });\n  var groups = scrollBox.selectAll('g.groups').data(legendData);\n  groups.enter().append('g').attr('class', 'groups');\n  groups.exit().remove();\n  var traces = groups.selectAll('g.traces').data(Lib.identity);\n  traces.enter().append('g').attr('class', 'traces');\n  traces.exit().remove();\n  traces.style('opacity', function (d) {\n    var trace = d[0].trace;\n    if (Registry.traceIs(trace, 'pie-like')) {\n      return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n    } else {\n      return trace.visible === 'legendonly' ? 0.5 : 1;\n    }\n  }).each(function () {\n    d3.select(this).call(drawTexts, gd, legendObj);\n  }).call(style, gd, legendObj).each(function () {\n    if (!inHover) d3.select(this).call(setupTraceToggle, gd, legendId);\n  });\n  Lib.syncOrAsync([Plots.previousPromises, function () {\n    return computeLegendDimensions(gd, groups, traces, legendObj);\n  }, function () {\n    var gs = fullLayout._size;\n    var bw = legendObj.borderwidth;\n    var isPaperX = legendObj.xref === 'paper';\n    var isPaperY = legendObj.yref === 'paper';\n\n    // re-calculate title position after legend width is derived. To allow for horizontal alignment\n    if (title.text) {\n      horizontalAlignTitle(titleEl, legendObj, bw);\n    }\n    if (!inHover) {\n      var lx, ly;\n      if (isPaperX) {\n        lx = gs.l + gs.w * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n      } else {\n        lx = fullLayout.width * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n      }\n      if (isPaperY) {\n        ly = gs.t + gs.h * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n      } else {\n        ly = fullLayout.height * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n      }\n      var expMargin = expandMargin(gd, legendId, lx, ly);\n\n      // IF expandMargin return a Promise (which is truthy),\n      // we're under a doAutoMargin redraw, so we don't have to\n      // draw the remaining pieces below\n      if (expMargin) return;\n      if (fullLayout.margin.autoexpand) {\n        var lx0 = lx;\n        var ly0 = ly;\n        lx = isPaperX ? Lib.constrain(lx, 0, fullLayout.width - legendObj._width) : lx0;\n        ly = isPaperY ? Lib.constrain(ly, 0, fullLayout.height - legendObj._effHeight) : ly0;\n        if (lx !== lx0) {\n          Lib.log('Constrain ' + legendId + '.x to make legend fit inside graph');\n        }\n        if (ly !== ly0) {\n          Lib.log('Constrain ' + legendId + '.y to make legend fit inside graph');\n        }\n      }\n\n      // Set size and position of all the elements that make up a legend:\n      // legend, background and border, scroll box and scroll bar as well as title\n      Drawing.setTranslate(legend, lx, ly);\n    }\n\n    // to be safe, remove previous listeners\n    scrollBar.on('.drag', null);\n    legend.on('wheel', null);\n    if (inHover || legendObj._height <= legendObj._maxHeight || gd._context.staticPlot) {\n      // if scrollbar should not be shown.\n      var height = legendObj._effHeight;\n\n      // if unified hover, let it be its full size\n      if (inHover) height = legendObj._height;\n      bg.attr({\n        width: legendObj._width - bw,\n        height: height - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      Drawing.setTranslate(scrollBox, 0, 0);\n      clipPath.select('rect').attr({\n        width: legendObj._width - 2 * bw,\n        height: height - 2 * bw,\n        x: bw,\n        y: bw\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      Drawing.setRect(scrollBar, 0, 0, 0, 0);\n      delete legendObj._scrollY;\n    } else {\n      var scrollBarHeight = Math.max(constants.scrollBarMinHeight, legendObj._effHeight * legendObj._effHeight / legendObj._height);\n      var scrollBarYMax = legendObj._effHeight - scrollBarHeight - 2 * constants.scrollBarMargin;\n      var scrollBoxYMax = legendObj._height - legendObj._effHeight;\n      var scrollRatio = scrollBarYMax / scrollBoxYMax;\n      var scrollBoxY = Math.min(legendObj._scrollY || 0, scrollBoxYMax);\n\n      // increase the background and clip-path width\n      // by the scrollbar width and margin\n      bg.attr({\n        width: legendObj._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendObj._effHeight - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      clipPath.select('rect').attr({\n        width: legendObj._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendObj._effHeight - 2 * bw,\n        x: bw,\n        y: bw + scrollBoxY\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n      // scroll legend by mousewheel or touchpad swipe up/down\n      legend.on('wheel', function () {\n        scrollBoxY = Lib.constrain(legendObj._scrollY + d3.event.deltaY / scrollBarYMax * scrollBoxYMax, 0, scrollBoxYMax);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        if (scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n          d3.event.preventDefault();\n        }\n      });\n      var eventY0, eventY1, scrollBoxY0;\n      var getScrollBarDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY1 - eventY0) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      };\n      var getNaturalDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY0 - eventY1) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      };\n\n      // scroll legend by dragging scrollBAR\n      var scrollBarDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n        } else {\n          eventY0 = e.clientY;\n        }\n        scrollBoxY0 = scrollBoxY;\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.buttons === 2 || e.ctrlKey) return;\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n        } else {\n          eventY1 = e.clientY;\n        }\n        scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n      });\n      scrollBar.call(scrollBarDrag);\n\n      // scroll legend by touch-dragging scrollBOX\n      var scrollBoxTouchDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n          scrollBoxY0 = scrollBoxY;\n        }\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n          scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n          scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        }\n      });\n      scrollBox.call(scrollBoxTouchDrag);\n    }\n    function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n      legendObj._scrollY = gd._fullLayout[legendId]._scrollY = scrollBoxY;\n      Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n      Drawing.setRect(scrollBar, legendObj._width, constants.scrollBarMargin + scrollBoxY * scrollRatio, constants.scrollBarWidth, scrollBarHeight);\n      clipPath.select('rect').attr('y', bw + scrollBoxY);\n    }\n    if (gd._context.edits.legendPosition) {\n      var xf, yf, x0, y0;\n      legend.classed('cursor-move', true);\n      dragElement.init({\n        element: legend.node(),\n        gd: gd,\n        prepFn: function (e) {\n          if (e.target === scrollBar.node()) {\n            return;\n          }\n          var transform = Drawing.getTranslate(legend);\n          x0 = transform.x;\n          y0 = transform.y;\n        },\n        moveFn: function (dx, dy) {\n          if (x0 !== undefined && y0 !== undefined) {\n            var newX = x0 + dx;\n            var newY = y0 + dy;\n            Drawing.setTranslate(legend, newX, newY);\n            xf = dragElement.align(newX, legendObj._width, gs.l, gs.l + gs.w, legendObj.xanchor);\n            yf = dragElement.align(newY + legendObj._height, -legendObj._height, gs.t + gs.h, gs.t, legendObj.yanchor);\n          }\n        },\n        doneFn: function () {\n          if (xf !== undefined && yf !== undefined) {\n            var obj = {};\n            obj[legendId + '.x'] = xf;\n            obj[legendId + '.y'] = yf;\n            Registry.call('_guiRelayout', gd, obj);\n          }\n        },\n        clickFn: function (numClicks, e) {\n          var clickedTrace = layer.selectAll('g.traces').filter(function () {\n            var bbox = this.getBoundingClientRect();\n            return e.clientX >= bbox.left && e.clientX <= bbox.right && e.clientY >= bbox.top && e.clientY <= bbox.bottom;\n          });\n          if (clickedTrace.size() > 0) {\n            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n          }\n        }\n      });\n    }\n  }], gd);\n}\nfunction getTraceWidth(d, legendObj, textGap) {\n  var legendItem = d[0];\n  var legendWidth = legendItem.width;\n  var mode = legendObj.entrywidthmode;\n  var traceLegendWidth = legendItem.trace.legendwidth || legendObj.entrywidth;\n  if (mode === 'fraction') return legendObj._maxWidth * traceLegendWidth;\n  return textGap + (traceLegendWidth || legendWidth);\n}\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n  var trace = legendItem.data()[0][0].trace;\n  var evtData = {\n    event: evt,\n    node: legendItem.node(),\n    curveNumber: trace.index,\n    expandedIndex: trace._expandedIndex,\n    data: gd.data,\n    layout: gd.layout,\n    frames: gd._transitionData._frames,\n    config: gd._context,\n    fullData: gd._fullData,\n    fullLayout: gd._fullLayout\n  };\n  if (trace._group) {\n    evtData.group = trace._group;\n  }\n  if (Registry.traceIs(trace, 'pie-like')) {\n    evtData.label = legendItem.datum()[0].label;\n  }\n  var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n  if (numClicks === 1) {\n    if (clickVal === false) return;\n    legend._clickTimeout = setTimeout(function () {\n      if (!gd._fullLayout) return;\n      handleClick(legendItem, gd, numClicks);\n    }, gd._context.doubleClickDelay);\n  } else if (numClicks === 2) {\n    if (legend._clickTimeout) clearTimeout(legend._clickTimeout);\n    gd._legendMouseDownTime = 0;\n    var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n    // Activate default double click behaviour only when both single click and double click values are not false\n    if (dblClickVal !== false && clickVal !== false) handleClick(legendItem, gd, numClicks);\n  }\n}\nfunction drawTexts(g, gd, legendObj) {\n  var legendId = getId(legendObj);\n  var legendItem = g.data()[0][0];\n  var trace = legendItem.trace;\n  var isPieLike = Registry.traceIs(trace, 'pie-like');\n  var isEditable = !legendObj._inHover && gd._context.edits.legendText && !isPieLike;\n  var maxNameLength = legendObj._maxNameLength;\n  var name, font;\n  if (legendItem.groupTitle) {\n    name = legendItem.groupTitle.text;\n    font = legendItem.groupTitle.font;\n  } else {\n    font = legendObj.font;\n    if (!legendObj.entries) {\n      name = isPieLike ? legendItem.label : trace.name;\n      if (trace._meta) {\n        name = Lib.templateString(name, trace._meta);\n      }\n    } else {\n      name = legendItem.text;\n    }\n  }\n  var textEl = Lib.ensureSingle(g, 'text', legendId + 'text');\n  textEl.attr('text-anchor', 'start').call(Drawing.font, font).text(isEditable ? ensureLength(name, maxNameLength) : name);\n  var textGap = legendObj.indentation + legendObj.itemwidth + constants.itemGap * 2;\n  svgTextUtils.positionText(textEl, textGap, 0);\n  if (isEditable) {\n    textEl.call(svgTextUtils.makeEditable, {\n      gd: gd,\n      text: name\n    }).call(textLayout, g, gd, legendObj).on('edit', function (newName) {\n      this.text(ensureLength(newName, maxNameLength)).call(textLayout, g, gd, legendObj);\n      var fullInput = legendItem.trace._fullInput || {};\n      var update = {};\n      if (Registry.hasTransform(fullInput, 'groupby')) {\n        var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n        var _index = groupbyIndices[groupbyIndices.length - 1];\n        var kcont = Lib.keyedContainer(fullInput, 'transforms[' + _index + '].styles', 'target', 'value.name');\n        kcont.set(legendItem.trace._group, newName);\n        update = kcont.constructUpdate();\n      } else {\n        update.name = newName;\n      }\n      if (fullInput._isShape) {\n        return Registry.call('_guiRelayout', gd, 'shapes[' + trace.index + '].name', update.name);\n      } else {\n        return Registry.call('_guiRestyle', gd, update, trace.index);\n      }\n    });\n  } else {\n    textLayout(textEl, g, gd, legendObj);\n  }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n  var targetLength = Math.max(4, maxLength);\n  if (str && str.trim().length >= targetLength / 2) return str;\n  str = str || '';\n  for (var i = targetLength - str.length; i > 0; i--) str += ' ';\n  return str;\n}\nfunction setupTraceToggle(g, gd, legendId) {\n  var doubleClickDelay = gd._context.doubleClickDelay;\n  var newMouseDownTime;\n  var numClicks = 1;\n  var traceToggle = Lib.ensureSingle(g, 'rect', legendId + 'toggle', function (s) {\n    if (!gd._context.staticPlot) {\n      s.style('cursor', 'pointer').attr('pointer-events', 'all');\n    }\n    s.call(Color.fill, 'rgba(0,0,0,0)');\n  });\n  if (gd._context.staticPlot) return;\n  traceToggle.on('mousedown', function () {\n    newMouseDownTime = new Date().getTime();\n    if (newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n      // in a click train\n      numClicks += 1;\n    } else {\n      // new click train\n      numClicks = 1;\n      gd._legendMouseDownTime = newMouseDownTime;\n    }\n  });\n  traceToggle.on('mouseup', function () {\n    if (gd._dragged || gd._editing) return;\n    var legend = gd._fullLayout[legendId];\n    if (new Date().getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n      numClicks = Math.max(numClicks - 1, 1);\n    }\n    clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n  });\n}\nfunction textLayout(s, g, gd, legendObj, aTitle) {\n  if (legendObj._inHover) s.attr('data-notex', true); // do not process MathJax for unified hover\n  svgTextUtils.convertToTspans(s, gd, function () {\n    computeTextDimensions(g, gd, legendObj, aTitle);\n  });\n}\nfunction computeTextDimensions(g, gd, legendObj, aTitle) {\n  var legendItem = g.data()[0][0];\n  if (!legendObj._inHover && legendItem && !legendItem.trace.showlegend) {\n    g.remove();\n    return;\n  }\n  var mathjaxGroup = g.select('g[class*=math-group]');\n  var mathjaxNode = mathjaxGroup.node();\n  var legendId = getId(legendObj);\n  if (!legendObj) {\n    legendObj = gd._fullLayout[legendId];\n  }\n  var bw = legendObj.borderwidth;\n  var font;\n  if (aTitle === MAIN_TITLE) {\n    font = legendObj.title.font;\n  } else if (legendItem.groupTitle) {\n    font = legendItem.groupTitle.font;\n  } else {\n    font = legendObj.font;\n  }\n  var lineHeight = font.size * LINE_SPACING;\n  var height, width;\n  if (mathjaxNode) {\n    var mathjaxBB = Drawing.bBox(mathjaxNode);\n    height = mathjaxBB.height;\n    width = mathjaxBB.width;\n    if (aTitle === MAIN_TITLE) {\n      Drawing.setTranslate(mathjaxGroup, bw, bw + height * 0.75);\n    } else {\n      // legend item\n      Drawing.setTranslate(mathjaxGroup, 0, height * 0.25);\n    }\n  } else {\n    var cls = '.' + legendId + (aTitle === MAIN_TITLE ? 'title' : '') + 'text';\n    var textEl = g.select(cls);\n    var textLines = svgTextUtils.lineCount(textEl);\n    var textNode = textEl.node();\n    height = lineHeight * textLines;\n    width = textNode ? Drawing.bBox(textNode).width : 0;\n\n    // approximation to height offset to center the font\n    // to avoid getBoundingClientRect\n    if (aTitle === MAIN_TITLE) {\n      if (legendObj.title.side === 'left') {\n        // add extra space between legend title and itmes\n        width += constants.itemGap * 2;\n      }\n      svgTextUtils.positionText(textEl, bw + constants.titlePad, bw + lineHeight);\n    } else {\n      // legend item\n      var x = constants.itemGap * 2 + legendObj.indentation + legendObj.itemwidth;\n      if (legendItem.groupTitle) {\n        x = constants.itemGap;\n        width -= legendObj.indentation + legendObj.itemwidth;\n      }\n      svgTextUtils.positionText(textEl, x, -lineHeight * ((textLines - 1) / 2 - 0.3));\n    }\n  }\n  if (aTitle === MAIN_TITLE) {\n    legendObj._titleWidth = width;\n    legendObj._titleHeight = height;\n  } else {\n    // legend item\n    legendItem.lineHeight = lineHeight;\n    legendItem.height = Math.max(height, 16) + 3;\n    legendItem.width = width;\n  }\n}\nfunction getTitleSize(legendObj) {\n  var w = 0;\n  var h = 0;\n  var side = legendObj.title.side;\n  if (side) {\n    if (side.indexOf('left') !== -1) {\n      w = legendObj._titleWidth;\n    }\n    if (side.indexOf('top') !== -1) {\n      h = legendObj._titleHeight;\n    }\n  }\n  return [w, h];\n}\n\n/*\n * Computes in fullLayout[legendId]:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\nfunction computeLegendDimensions(gd, groups, traces, legendObj) {\n  var fullLayout = gd._fullLayout;\n  var legendId = getId(legendObj);\n  if (!legendObj) {\n    legendObj = fullLayout[legendId];\n  }\n  var gs = fullLayout._size;\n  var isVertical = helpers.isVertical(legendObj);\n  var isGrouped = helpers.isGrouped(legendObj);\n  var isFraction = legendObj.entrywidthmode === 'fraction';\n  var bw = legendObj.borderwidth;\n  var bw2 = 2 * bw;\n  var itemGap = constants.itemGap;\n  var textGap = legendObj.indentation + legendObj.itemwidth + itemGap * 2;\n  var endPad = 2 * (bw + itemGap);\n  var yanchor = getYanchor(legendObj);\n  var isBelowPlotArea = legendObj.y < 0 || legendObj.y === 0 && yanchor === 'top';\n  var isAbovePlotArea = legendObj.y > 1 || legendObj.y === 1 && yanchor === 'bottom';\n  var traceGroupGap = legendObj.tracegroupgap;\n  var legendGroupWidths = {};\n\n  // - if below/above plot area, give it the maximum potential margin-push value\n  // - otherwise, extend the height of the plot area\n  legendObj._maxHeight = Math.max(isBelowPlotArea || isAbovePlotArea ? fullLayout.height / 2 : gs.h, 30);\n  var toggleRectWidth = 0;\n  legendObj._width = 0;\n  legendObj._height = 0;\n  var titleSize = getTitleSize(legendObj);\n  if (isVertical) {\n    traces.each(function (d) {\n      var h = d[0].height;\n      Drawing.setTranslate(this, bw + titleSize[0], bw + titleSize[1] + legendObj._height + h / 2 + itemGap);\n      legendObj._height += h;\n      legendObj._width = Math.max(legendObj._width, d[0].width);\n    });\n    toggleRectWidth = textGap + legendObj._width;\n    legendObj._width += itemGap + textGap + bw2;\n    legendObj._height += endPad;\n    if (isGrouped) {\n      groups.each(function (d, i) {\n        Drawing.setTranslate(this, 0, i * legendObj.tracegroupgap);\n      });\n      legendObj._height += (legendObj._lgroupsLength - 1) * legendObj.tracegroupgap;\n    }\n  } else {\n    var xanchor = getXanchor(legendObj);\n    var isLeftOfPlotArea = legendObj.x < 0 || legendObj.x === 0 && xanchor === 'right';\n    var isRightOfPlotArea = legendObj.x > 1 || legendObj.x === 1 && xanchor === 'left';\n    var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n    var hw = fullLayout.width / 2;\n\n    // - if placed within x-margins, extend the width of the plot area\n    // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n    // - otherwise give it the maximum potential margin-push value\n    legendObj._maxWidth = Math.max(isLeftOfPlotArea ? isBeyondPlotAreaY && xanchor === 'left' ? gs.l + gs.w : hw : isRightOfPlotArea ? isBeyondPlotAreaY && xanchor === 'right' ? gs.r + gs.w : hw : gs.w, 2 * textGap);\n    var maxItemWidth = 0;\n    var combinedItemWidth = 0;\n    traces.each(function (d) {\n      var w = getTraceWidth(d, legendObj, textGap);\n      maxItemWidth = Math.max(maxItemWidth, w);\n      combinedItemWidth += w;\n    });\n    toggleRectWidth = null;\n    var maxRowWidth = 0;\n    if (isGrouped) {\n      var maxGroupHeightInRow = 0;\n      var groupOffsetX = 0;\n      var groupOffsetY = 0;\n      groups.each(function () {\n        var maxWidthInGroup = 0;\n        var offsetY = 0;\n        d3.select(this).selectAll('g.traces').each(function (d) {\n          var w = getTraceWidth(d, legendObj, textGap);\n          var h = d[0].height;\n          Drawing.setTranslate(this, titleSize[0], titleSize[1] + bw + itemGap + h / 2 + offsetY);\n          offsetY += h;\n          maxWidthInGroup = Math.max(maxWidthInGroup, w);\n          legendGroupWidths[d[0].trace.legendgroup] = maxWidthInGroup;\n        });\n        var next = maxWidthInGroup + itemGap;\n\n        // horizontal_wrapping\n        if (\n        // not on the first column already\n        groupOffsetX > 0 &&\n        // goes beyound limit\n        next + bw + groupOffsetX > legendObj._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n          groupOffsetX = 0;\n          groupOffsetY += maxGroupHeightInRow + traceGroupGap;\n          maxGroupHeightInRow = offsetY;\n        } else {\n          maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n        }\n        Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n        groupOffsetX += next;\n      });\n      legendObj._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n      legendObj._height = groupOffsetY + maxGroupHeightInRow + endPad;\n    } else {\n      var nTraces = traces.size();\n      var oneRowLegend = combinedItemWidth + bw2 + (nTraces - 1) * itemGap < legendObj._maxWidth;\n      var maxItemHeightInRow = 0;\n      var offsetX = 0;\n      var offsetY = 0;\n      var rowWidth = 0;\n      traces.each(function (d) {\n        var h = d[0].height;\n        var w = getTraceWidth(d, legendObj, textGap, isGrouped);\n        var next = oneRowLegend ? w : maxItemWidth;\n        if (!isFraction) {\n          next += itemGap;\n        }\n        if (next + bw + offsetX - itemGap >= legendObj._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, rowWidth);\n          offsetX = 0;\n          offsetY += maxItemHeightInRow;\n          legendObj._height += maxItemHeightInRow;\n          maxItemHeightInRow = 0;\n        }\n        Drawing.setTranslate(this, titleSize[0] + bw + offsetX, titleSize[1] + bw + offsetY + h / 2 + itemGap);\n        rowWidth = offsetX + w + itemGap;\n        offsetX += next;\n        maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n      });\n      if (oneRowLegend) {\n        legendObj._width = offsetX + bw2;\n        legendObj._height = maxItemHeightInRow + endPad;\n      } else {\n        legendObj._width = Math.max(maxRowWidth, rowWidth) + bw2;\n        legendObj._height += maxItemHeightInRow + endPad;\n      }\n    }\n  }\n  legendObj._width = Math.ceil(Math.max(legendObj._width + titleSize[0], legendObj._titleWidth + 2 * (bw + constants.titlePad)));\n  legendObj._height = Math.ceil(Math.max(legendObj._height + titleSize[1], legendObj._titleHeight + 2 * (bw + constants.itemGap)));\n  legendObj._effHeight = Math.min(legendObj._height, legendObj._maxHeight);\n  var edits = gd._context.edits;\n  var isEditable = edits.legendText || edits.legendPosition;\n  traces.each(function (d) {\n    var traceToggle = d3.select(this).select('.' + legendId + 'toggle');\n    var h = d[0].height;\n    var legendgroup = d[0].trace.legendgroup;\n    var traceWidth = getTraceWidth(d, legendObj, textGap);\n    if (isGrouped && legendgroup !== '') {\n      traceWidth = legendGroupWidths[legendgroup];\n    }\n    var w = isEditable ? textGap : toggleRectWidth || traceWidth;\n    if (!isVertical && !isFraction) {\n      w += itemGap / 2;\n    }\n    Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n  });\n}\nfunction expandMargin(gd, legendId, lx, ly) {\n  var fullLayout = gd._fullLayout;\n  var legendObj = fullLayout[legendId];\n  var xanchor = getXanchor(legendObj);\n  var yanchor = getYanchor(legendObj);\n  var isPaperX = legendObj.xref === 'paper';\n  var isPaperY = legendObj.yref === 'paper';\n  gd._fullLayout._reservedMargin[legendId] = {};\n  var sideY = legendObj.y < 0.5 ? 'b' : 't';\n  var sideX = legendObj.x < 0.5 ? 'l' : 'r';\n  var possibleReservedMargins = {\n    r: fullLayout.width - lx,\n    l: lx + legendObj._width,\n    b: fullLayout.height - ly,\n    t: ly + legendObj._effHeight\n  };\n  if (isPaperX && isPaperY) {\n    return Plots.autoMargin(gd, legendId, {\n      x: legendObj.x,\n      y: legendObj.y,\n      l: legendObj._width * FROM_TL[xanchor],\n      r: legendObj._width * FROM_BR[xanchor],\n      b: legendObj._effHeight * FROM_BR[yanchor],\n      t: legendObj._effHeight * FROM_TL[yanchor]\n    });\n  } else if (isPaperX) {\n    gd._fullLayout._reservedMargin[legendId][sideY] = possibleReservedMargins[sideY];\n  } else if (isPaperY) {\n    gd._fullLayout._reservedMargin[legendId][sideX] = possibleReservedMargins[sideX];\n  } else {\n    if (legendObj.orientation === 'v') {\n      gd._fullLayout._reservedMargin[legendId][sideX] = possibleReservedMargins[sideX];\n    } else {\n      gd._fullLayout._reservedMargin[legendId][sideY] = possibleReservedMargins[sideY];\n    }\n  }\n}\nfunction getXanchor(legendObj) {\n  return Lib.isRightAnchor(legendObj) ? 'right' : Lib.isCenterAnchor(legendObj) ? 'center' : 'left';\n}\nfunction getYanchor(legendObj) {\n  return Lib.isBottomAnchor(legendObj) ? 'bottom' : Lib.isMiddleAnchor(legendObj) ? 'middle' : 'top';\n}\nfunction getId(legendObj) {\n  return legendObj._id || 'legend';\n}","map":{"version":3,"names":["d3","require","Lib","Plots","Registry","Events","dragElement","Drawing","Color","svgTextUtils","handleClick","constants","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","getLegendData","style","helpers","MAIN_TITLE","LEGEND_PATTERN","module","exports","draw","gd","opts","drawOne","fullLayout","_fullLayout","newLegends","_legends","oldLegends","_infolayer","selectAll","each","el","select","classes","attr","cls","split","match","indexOf","remove","i","length","legendId","legendObj","horizontalAlignTitle","titleEl","bw","title","side","font","lineHeight","size","titleOffset","textNode","node","width","bBox","_width","titlePad","positionText","getId","clipId","layer","inHover","_inHover","_uid","_legendMouseDownTime","legendData","calcdata","slice","shapes","shape","showlegend","shapeLegend","_isShape","_fullInput","index","_index","name","label","text","legend","legendgroup","legendgrouptitle","legendrank","legendwidth","visible","opacity","mode","type","line","marker","color","fillcolor","symbol","push","trace","entries","hiddenSlices","hiddenlabels","_topdefs","autoMargin","ensureSingle","s","clipPath","ensureSingleById","append","bg","call","stroke","bordercolor","fill","bgcolor","borderwidth","scrollBox","_titleWidth","_titleHeight","textLayout","scrollBar","scrollBarEnterAttrs","scrollBarColor","groups","data","enter","exit","traces","identity","d","traceIs","drawTexts","setupTraceToggle","syncOrAsync","previousPromises","computeLegendDimensions","gs","_size","isPaperX","xref","isPaperY","yref","lx","ly","l","w","x","getXanchor","t","h","y","getYanchor","_effHeight","height","expMargin","expandMargin","margin","autoexpand","lx0","ly0","constrain","log","setTranslate","on","_height","_maxHeight","_context","staticPlot","setClipUrl","setRect","_scrollY","scrollBarHeight","Math","max","scrollBarMinHeight","scrollBarYMax","scrollBarMargin","scrollBoxYMax","scrollRatio","scrollBoxY","min","scrollBarWidth","scrollHandler","event","deltaY","preventDefault","eventY0","eventY1","scrollBoxY0","getScrollBarDragY","getNaturalDragY","scrollBarDrag","behavior","drag","e","sourceEvent","changedTouches","clientY","buttons","ctrlKey","scrollBoxTouchDrag","edits","legendPosition","xf","yf","x0","y0","classed","init","element","prepFn","target","transform","getTranslate","moveFn","dx","dy","undefined","newX","newY","align","xanchor","yanchor","doneFn","obj","clickFn","numClicks","clickedTrace","filter","bbox","getBoundingClientRect","clientX","left","right","top","bottom","clickOrDoubleClick","getTraceWidth","textGap","legendItem","legendWidth","entrywidthmode","traceLegendWidth","entrywidth","_maxWidth","evt","evtData","curveNumber","expandedIndex","_expandedIndex","layout","frames","_transitionData","_frames","config","fullData","_fullData","_group","group","datum","clickVal","triggerHandler","_clickTimeout","setTimeout","doubleClickDelay","clearTimeout","dblClickVal","g","isPieLike","isEditable","legendText","maxNameLength","_maxNameLength","groupTitle","_meta","templateString","textEl","ensureLength","indentation","itemwidth","itemGap","makeEditable","newName","fullInput","update","hasTransform","groupbyIndices","getTransformIndices","kcont","keyedContainer","set","constructUpdate","str","maxLength","targetLength","trim","newMouseDownTime","traceToggle","Date","getTime","_dragged","_editing","aTitle","convertToTspans","computeTextDimensions","mathjaxGroup","mathjaxNode","mathjaxBB","textLines","lineCount","getTitleSize","isVertical","isGrouped","isFraction","bw2","endPad","isBelowPlotArea","isAbovePlotArea","traceGroupGap","tracegroupgap","legendGroupWidths","toggleRectWidth","titleSize","_lgroupsLength","isLeftOfPlotArea","isRightOfPlotArea","isBeyondPlotAreaY","hw","r","maxItemWidth","combinedItemWidth","maxRowWidth","maxGroupHeightInRow","groupOffsetX","groupOffsetY","maxWidthInGroup","offsetY","next","nTraces","oneRowLegend","maxItemHeightInRow","offsetX","rowWidth","ceil","traceWidth","_reservedMargin","sideY","sideX","possibleReservedMargins","b","orientation","isRightAnchor","isCenterAnchor","isBottomAnchor","isMiddleAnchor","_id"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/legend/draw.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\n\nvar MAIN_TITLE = 1;\n\nvar LEGEND_PATTERN = /^legend[0-9]*$/;\n\nmodule.exports = function draw(gd, opts) {\n    if(opts) {\n        drawOne(gd, opts);\n    } else {\n        var fullLayout = gd._fullLayout;\n        var newLegends = fullLayout._legends;\n\n        // remove old legends that won't stay on the graph\n        var oldLegends = fullLayout._infolayer.selectAll('[class^=\"legend\"]');\n\n        oldLegends.each(function() {\n            var el = d3.select(this);\n            var classes = el.attr('class');\n            var cls = classes.split(' ')[0];\n            if(cls.match(LEGEND_PATTERN) && newLegends.indexOf(cls) === -1) {\n                el.remove();\n            }\n        });\n\n        // draw/update new legends\n        for(var i = 0; i < newLegends.length; i++) {\n            var legendId = newLegends[i];\n            var legendObj = gd._fullLayout[legendId];\n            drawOne(gd, legendObj);\n        }\n    }\n};\n\n// After legend dimensions are calculated the title can be aligned horizontally left, center, right\nfunction horizontalAlignTitle(titleEl, legendObj, bw) {\n    if((legendObj.title.side !== 'top center') && (legendObj.title.side !== 'top right')) return;\n\n    var font = legendObj.title.font;\n    var lineHeight = font.size * LINE_SPACING;\n    var titleOffset = 0;\n    var textNode = titleEl.node();\n\n    var width = Drawing.bBox(textNode).width;  // width of the title text\n\n    if(legendObj.title.side === 'top center') {\n        titleOffset = 0.5 * (legendObj._width - 2 * bw - 2 * constants.titlePad - width);\n    } else if(legendObj.title.side === 'top right') {\n        titleOffset = legendObj._width - 2 * bw - 2 * constants.titlePad - width;\n    }\n\n    svgTextUtils.positionText(titleEl,\n        bw + constants.titlePad + titleOffset,\n        bw + lineHeight\n    );\n}\n\n\nfunction drawOne(gd, opts) {\n    var legendObj = opts || {};\n\n    var fullLayout = gd._fullLayout;\n    var legendId = getId(legendObj);\n\n    var clipId, layer;\n\n    var inHover = legendObj._inHover;\n    if(inHover) {\n        layer = legendObj.layer;\n        clipId = 'hover';\n    } else {\n        layer = fullLayout._infolayer;\n        clipId = legendId;\n    }\n    if(!layer) return;\n    clipId += fullLayout._uid;\n\n    if(!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n\n    var legendData;\n    if(!inHover) {\n        var calcdata = (gd.calcdata || []).slice();\n\n        var shapes = fullLayout.shapes;\n        for(var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if(!shape.showlegend) continue;\n\n            var shapeLegend = {\n                _isShape: true,\n                _fullInput: shape,\n                index: shape._index,\n                name: shape.name || shape.label.text || ('shape ' + shape._index),\n                legend: shape.legend,\n                legendgroup: shape.legendgroup,\n                legendgrouptitle: shape.legendgrouptitle,\n                legendrank: shape.legendrank,\n                legendwidth: shape.legendwidth,\n                showlegend: shape.showlegend,\n                visible: shape.visible,\n                opacity: shape.opacity,\n                mode: shape.type === 'line' ? 'lines' : 'markers',\n                line: shape.line,\n                marker: {\n                    line: shape.line,\n                    color: shape.fillcolor,\n                    size: 12,\n                    symbol:\n                        shape.type === 'rect' ? 'square' :\n                        shape.type === 'circle' ? 'circle' :\n                        // case of path\n                        'hexagon2'\n                },\n            };\n\n            calcdata.push([{ trace: shapeLegend }]);\n        }\n\n        legendData = fullLayout.showlegend && getLegendData(calcdata, legendObj, fullLayout._legends.length > 1);\n    } else {\n        if(!legendObj.entries) return;\n        legendData = getLegendData(legendObj.entries, legendObj);\n    }\n\n    var hiddenSlices = fullLayout.hiddenlabels || [];\n\n    if(!inHover && (!fullLayout.showlegend || !legendData.length)) {\n        layer.selectAll('.' + legendId).remove();\n        fullLayout._topdefs.select('#' + clipId).remove();\n        return Plots.autoMargin(gd, legendId);\n    }\n\n    var legend = Lib.ensureSingle(layer, 'g', legendId, function(s) {\n        if(!inHover) s.attr('pointer-events', 'all');\n    });\n\n    var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function(s) {\n        s.append('rect');\n    });\n\n    var bg = Lib.ensureSingle(legend, 'rect', 'bg', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n    bg.call(Color.stroke, legendObj.bordercolor)\n        .call(Color.fill, legendObj.bgcolor)\n        .style('stroke-width', legendObj.borderwidth + 'px');\n\n    var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n\n    var title = legendObj.title;\n    legendObj._titleWidth = 0;\n    legendObj._titleHeight = 0;\n    var titleEl;\n    if(title.text) {\n        titleEl = Lib.ensureSingle(scrollBox, 'text', legendId + 'titletext');\n        titleEl.attr('text-anchor', 'start')\n            .call(Drawing.font, title.font)\n            .text(title.text);\n\n        textLayout(titleEl, scrollBox, gd, legendObj, MAIN_TITLE); // handle mathjax or multi-line text and compute title height\n    } else {\n        scrollBox.selectAll('.' + legendId + 'titletext').remove();\n    }\n\n    var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function(s) {\n        s.attr(constants.scrollBarEnterAttrs)\n         .call(Color.fill, constants.scrollBarColor);\n    });\n\n    var groups = scrollBox.selectAll('g.groups').data(legendData);\n    groups.enter().append('g').attr('class', 'groups');\n    groups.exit().remove();\n\n    var traces = groups.selectAll('g.traces').data(Lib.identity);\n    traces.enter().append('g').attr('class', 'traces');\n    traces.exit().remove();\n\n    traces.style('opacity', function(d) {\n        var trace = d[0].trace;\n        if(Registry.traceIs(trace, 'pie-like')) {\n            return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n        } else {\n            return trace.visible === 'legendonly' ? 0.5 : 1;\n        }\n    })\n    .each(function() { d3.select(this).call(drawTexts, gd, legendObj); })\n    .call(style, gd, legendObj)\n    .each(function() { if(!inHover) d3.select(this).call(setupTraceToggle, gd, legendId); });\n\n    Lib.syncOrAsync([\n        Plots.previousPromises,\n        function() { return computeLegendDimensions(gd, groups, traces, legendObj); },\n        function() {\n            var gs = fullLayout._size;\n            var bw = legendObj.borderwidth;\n            var isPaperX = legendObj.xref === 'paper';\n            var isPaperY = legendObj.yref === 'paper';\n\n            // re-calculate title position after legend width is derived. To allow for horizontal alignment\n            if(title.text) {\n                horizontalAlignTitle(titleEl, legendObj, bw);\n            }\n\n            if(!inHover) {\n                var lx, ly;\n\n                if(isPaperX) {\n                    lx = gs.l + gs.w * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n                } else {\n                    lx = fullLayout.width * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n                }\n\n                if(isPaperY) {\n                    ly = gs.t + gs.h * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n                } else {\n                    ly = fullLayout.height * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n                }\n\n                var expMargin = expandMargin(gd, legendId, lx, ly);\n\n                // IF expandMargin return a Promise (which is truthy),\n                // we're under a doAutoMargin redraw, so we don't have to\n                // draw the remaining pieces below\n                if(expMargin) return;\n\n                if(fullLayout.margin.autoexpand) {\n                    var lx0 = lx;\n                    var ly0 = ly;\n\n                    lx = isPaperX ? Lib.constrain(lx, 0, fullLayout.width - legendObj._width) : lx0;\n                    ly = isPaperY ? Lib.constrain(ly, 0, fullLayout.height - legendObj._effHeight) : ly0;\n\n                    if(lx !== lx0) {\n                        Lib.log('Constrain ' + legendId + '.x to make legend fit inside graph');\n                    }\n                    if(ly !== ly0) {\n                        Lib.log('Constrain ' + legendId + '.y to make legend fit inside graph');\n                    }\n                }\n\n                // Set size and position of all the elements that make up a legend:\n                // legend, background and border, scroll box and scroll bar as well as title\n                Drawing.setTranslate(legend, lx, ly);\n            }\n\n            // to be safe, remove previous listeners\n            scrollBar.on('.drag', null);\n            legend.on('wheel', null);\n\n            if(inHover || legendObj._height <= legendObj._maxHeight || gd._context.staticPlot) {\n                // if scrollbar should not be shown.\n                var height = legendObj._effHeight;\n\n                // if unified hover, let it be its full size\n                if(inHover) height = legendObj._height;\n\n                bg.attr({\n                    width: legendObj._width - bw,\n                    height: height - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                Drawing.setTranslate(scrollBox, 0, 0);\n\n                clipPath.select('rect').attr({\n                    width: legendObj._width - 2 * bw,\n                    height: height - 2 * bw,\n                    x: bw,\n                    y: bw\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                Drawing.setRect(scrollBar, 0, 0, 0, 0);\n                delete legendObj._scrollY;\n            } else {\n                var scrollBarHeight = Math.max(constants.scrollBarMinHeight,\n                    legendObj._effHeight * legendObj._effHeight / legendObj._height);\n                var scrollBarYMax = legendObj._effHeight -\n                    scrollBarHeight -\n                    2 * constants.scrollBarMargin;\n                var scrollBoxYMax = legendObj._height - legendObj._effHeight;\n                var scrollRatio = scrollBarYMax / scrollBoxYMax;\n\n                var scrollBoxY = Math.min(legendObj._scrollY || 0, scrollBoxYMax);\n\n                // increase the background and clip-path width\n                // by the scrollbar width and margin\n                bg.attr({\n                    width: legendObj._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendObj._effHeight - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                clipPath.select('rect').attr({\n                    width: legendObj._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendObj._effHeight - 2 * bw,\n                    x: bw,\n                    y: bw + scrollBoxY\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n                // scroll legend by mousewheel or touchpad swipe up/down\n                legend.on('wheel', function() {\n                    scrollBoxY = Lib.constrain(\n                        legendObj._scrollY +\n                            ((d3.event.deltaY / scrollBarYMax) * scrollBoxYMax),\n                        0, scrollBoxYMax);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    if(scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n                        d3.event.preventDefault();\n                    }\n                });\n\n                var eventY0, eventY1, scrollBoxY0;\n\n                var getScrollBarDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY1 - eventY0) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                var getNaturalDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY0 - eventY1) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                // scroll legend by dragging scrollBAR\n                var scrollBarDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY0 = e.clientY;\n                    }\n                    scrollBoxY0 = scrollBoxY;\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.buttons === 2 || e.ctrlKey) return;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY1 = e.clientY;\n                    }\n                    scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                });\n                scrollBar.call(scrollBarDrag);\n\n                // scroll legend by touch-dragging scrollBOX\n                var scrollBoxTouchDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                        scrollBoxY0 = scrollBoxY;\n                    }\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                        scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n                        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    }\n                });\n                scrollBox.call(scrollBoxTouchDrag);\n            }\n\n            function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n                legendObj._scrollY = gd._fullLayout[legendId]._scrollY = scrollBoxY;\n                Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n\n                Drawing.setRect(\n                    scrollBar,\n                    legendObj._width,\n                    constants.scrollBarMargin + scrollBoxY * scrollRatio,\n                    constants.scrollBarWidth,\n                    scrollBarHeight\n                );\n                clipPath.select('rect').attr('y', bw + scrollBoxY);\n            }\n\n            if(gd._context.edits.legendPosition) {\n                var xf, yf, x0, y0;\n\n                legend.classed('cursor-move', true);\n\n                dragElement.init({\n                    element: legend.node(),\n                    gd: gd,\n                    prepFn: function(e) {\n                        if(e.target === scrollBar.node()) {\n                            return;\n                        }\n                        var transform = Drawing.getTranslate(legend);\n                        x0 = transform.x;\n                        y0 = transform.y;\n                    },\n                    moveFn: function(dx, dy) {\n                        if(x0 !== undefined && y0 !== undefined) {\n                            var newX = x0 + dx;\n                            var newY = y0 + dy;\n\n                            Drawing.setTranslate(legend, newX, newY);\n                            xf = dragElement.align(newX, legendObj._width, gs.l, gs.l + gs.w, legendObj.xanchor);\n                            yf = dragElement.align(newY + legendObj._height, -legendObj._height, gs.t + gs.h, gs.t, legendObj.yanchor);\n                        }\n                    },\n                    doneFn: function() {\n                        if(xf !== undefined && yf !== undefined) {\n                            var obj = {};\n                            obj[legendId + '.x'] = xf;\n                            obj[legendId + '.y'] = yf;\n                            Registry.call('_guiRelayout', gd, obj);\n                        }\n                    },\n                    clickFn: function(numClicks, e) {\n                        var clickedTrace = layer.selectAll('g.traces').filter(function() {\n                            var bbox = this.getBoundingClientRect();\n                            return (\n                                e.clientX >= bbox.left && e.clientX <= bbox.right &&\n                                e.clientY >= bbox.top && e.clientY <= bbox.bottom\n                            );\n                        });\n                        if(clickedTrace.size() > 0) {\n                            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n                        }\n                    }\n                });\n            }\n        }], gd);\n}\n\nfunction getTraceWidth(d, legendObj, textGap) {\n    var legendItem = d[0];\n    var legendWidth = legendItem.width;\n    var mode = legendObj.entrywidthmode;\n\n    var traceLegendWidth = legendItem.trace.legendwidth || legendObj.entrywidth;\n\n    if(mode === 'fraction') return legendObj._maxWidth * traceLegendWidth;\n\n    return textGap + (traceLegendWidth || legendWidth);\n}\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n    var trace = legendItem.data()[0][0].trace;\n    var evtData = {\n        event: evt,\n        node: legendItem.node(),\n        curveNumber: trace.index,\n        expandedIndex: trace._expandedIndex,\n        data: gd.data,\n        layout: gd.layout,\n        frames: gd._transitionData._frames,\n        config: gd._context,\n        fullData: gd._fullData,\n        fullLayout: gd._fullLayout\n    };\n\n    if(trace._group) {\n        evtData.group = trace._group;\n    }\n    if(Registry.traceIs(trace, 'pie-like')) {\n        evtData.label = legendItem.datum()[0].label;\n    }\n    var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n    if(numClicks === 1) {\n        if(clickVal === false) return;\n        legend._clickTimeout = setTimeout(function() {\n            if(!gd._fullLayout) return;\n            handleClick(legendItem, gd, numClicks);\n        }, gd._context.doubleClickDelay);\n    } else if(numClicks === 2) {\n        if(legend._clickTimeout) clearTimeout(legend._clickTimeout);\n        gd._legendMouseDownTime = 0;\n\n        var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n        // Activate default double click behaviour only when both single click and double click values are not false\n        if(dblClickVal !== false && clickVal !== false) handleClick(legendItem, gd, numClicks);\n    }\n}\n\nfunction drawTexts(g, gd, legendObj) {\n    var legendId = getId(legendObj);\n    var legendItem = g.data()[0][0];\n    var trace = legendItem.trace;\n    var isPieLike = Registry.traceIs(trace, 'pie-like');\n    var isEditable = !legendObj._inHover && gd._context.edits.legendText && !isPieLike;\n    var maxNameLength = legendObj._maxNameLength;\n\n    var name, font;\n    if(legendItem.groupTitle) {\n        name = legendItem.groupTitle.text;\n        font = legendItem.groupTitle.font;\n    } else {\n        font = legendObj.font;\n        if(!legendObj.entries) {\n            name = isPieLike ? legendItem.label : trace.name;\n            if(trace._meta) {\n                name = Lib.templateString(name, trace._meta);\n            }\n        } else {\n            name = legendItem.text;\n        }\n    }\n\n    var textEl = Lib.ensureSingle(g, 'text', legendId + 'text');\n\n    textEl.attr('text-anchor', 'start')\n        .call(Drawing.font, font)\n        .text(isEditable ? ensureLength(name, maxNameLength) : name);\n\n    var textGap = legendObj.indentation + legendObj.itemwidth + constants.itemGap * 2;\n    svgTextUtils.positionText(textEl, textGap, 0);\n\n    if(isEditable) {\n        textEl.call(svgTextUtils.makeEditable, {gd: gd, text: name})\n            .call(textLayout, g, gd, legendObj)\n            .on('edit', function(newName) {\n                this.text(ensureLength(newName, maxNameLength))\n                    .call(textLayout, g, gd, legendObj);\n\n                var fullInput = legendItem.trace._fullInput || {};\n                var update = {};\n\n                if(Registry.hasTransform(fullInput, 'groupby')) {\n                    var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                    var _index = groupbyIndices[groupbyIndices.length - 1];\n\n                    var kcont = Lib.keyedContainer(fullInput, 'transforms[' + _index + '].styles', 'target', 'value.name');\n\n                    kcont.set(legendItem.trace._group, newName);\n\n                    update = kcont.constructUpdate();\n                } else {\n                    update.name = newName;\n                }\n\n                if(fullInput._isShape) {\n                    return Registry.call('_guiRelayout', gd, 'shapes[' + trace.index + '].name', update.name);\n                } else {\n                    return Registry.call('_guiRestyle', gd, update, trace.index);\n                }\n            });\n    } else {\n        textLayout(textEl, g, gd, legendObj);\n    }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n    var targetLength = Math.max(4, maxLength);\n    if(str && str.trim().length >= targetLength / 2) return str;\n    str = str || '';\n    for(var i = targetLength - str.length; i > 0; i--) str += ' ';\n    return str;\n}\n\nfunction setupTraceToggle(g, gd, legendId) {\n    var doubleClickDelay = gd._context.doubleClickDelay;\n    var newMouseDownTime;\n    var numClicks = 1;\n\n    var traceToggle = Lib.ensureSingle(g, 'rect', legendId + 'toggle', function(s) {\n        if(!gd._context.staticPlot) {\n            s.style('cursor', 'pointer').attr('pointer-events', 'all');\n        }\n        s.call(Color.fill, 'rgba(0,0,0,0)');\n    });\n\n    if(gd._context.staticPlot) return;\n\n    traceToggle.on('mousedown', function() {\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n            // in a click train\n            numClicks += 1;\n        } else {\n            // new click train\n            numClicks = 1;\n            gd._legendMouseDownTime = newMouseDownTime;\n        }\n    });\n    traceToggle.on('mouseup', function() {\n        if(gd._dragged || gd._editing) return;\n        var legend = gd._fullLayout[legendId];\n\n        if((new Date()).getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n    });\n}\n\nfunction textLayout(s, g, gd, legendObj, aTitle) {\n    if(legendObj._inHover) s.attr('data-notex', true); // do not process MathJax for unified hover\n    svgTextUtils.convertToTspans(s, gd, function() {\n        computeTextDimensions(g, gd, legendObj, aTitle);\n    });\n}\n\nfunction computeTextDimensions(g, gd, legendObj, aTitle) {\n    var legendItem = g.data()[0][0];\n    if(!legendObj._inHover && legendItem && !legendItem.trace.showlegend) {\n        g.remove();\n        return;\n    }\n\n    var mathjaxGroup = g.select('g[class*=math-group]');\n    var mathjaxNode = mathjaxGroup.node();\n\n    var legendId = getId(legendObj);\n    if(!legendObj) {\n        legendObj = gd._fullLayout[legendId];\n    }\n    var bw = legendObj.borderwidth;\n    var font;\n    if(aTitle === MAIN_TITLE) {\n        font = legendObj.title.font;\n    } else if(legendItem.groupTitle) {\n        font = legendItem.groupTitle.font;\n    } else {\n        font = legendObj.font;\n    }\n    var lineHeight = font.size * LINE_SPACING;\n    var height, width;\n\n    if(mathjaxNode) {\n        var mathjaxBB = Drawing.bBox(mathjaxNode);\n\n        height = mathjaxBB.height;\n        width = mathjaxBB.width;\n\n        if(aTitle === MAIN_TITLE) {\n            Drawing.setTranslate(mathjaxGroup, bw, bw + height * 0.75);\n        } else { // legend item\n            Drawing.setTranslate(mathjaxGroup, 0, height * 0.25);\n        }\n    } else {\n        var cls = '.' + legendId + (\n            aTitle === MAIN_TITLE ? 'title' : ''\n        ) + 'text';\n\n        var textEl = g.select(cls);\n\n        var textLines = svgTextUtils.lineCount(textEl);\n        var textNode = textEl.node();\n\n        height = lineHeight * textLines;\n        width = textNode ? Drawing.bBox(textNode).width : 0;\n\n        // approximation to height offset to center the font\n        // to avoid getBoundingClientRect\n        if(aTitle === MAIN_TITLE) {\n            if(legendObj.title.side === 'left') {\n                // add extra space between legend title and itmes\n                width += constants.itemGap * 2;\n            }\n\n            svgTextUtils.positionText(textEl,\n                bw + constants.titlePad,\n                bw + lineHeight\n            );\n        } else { // legend item\n            var x = constants.itemGap * 2 + legendObj.indentation + legendObj.itemwidth;\n            if(legendItem.groupTitle) {\n                x = constants.itemGap;\n                width -= legendObj.indentation + legendObj.itemwidth;\n            }\n\n            svgTextUtils.positionText(textEl,\n                x,\n                -lineHeight * ((textLines - 1) / 2 - 0.3)\n            );\n        }\n    }\n\n    if(aTitle === MAIN_TITLE) {\n        legendObj._titleWidth = width;\n        legendObj._titleHeight = height;\n    } else { // legend item\n        legendItem.lineHeight = lineHeight;\n        legendItem.height = Math.max(height, 16) + 3;\n        legendItem.width = width;\n    }\n}\n\nfunction getTitleSize(legendObj) {\n    var w = 0;\n    var h = 0;\n\n    var side = legendObj.title.side;\n    if(side) {\n        if(side.indexOf('left') !== -1) {\n            w = legendObj._titleWidth;\n        }\n        if(side.indexOf('top') !== -1) {\n            h = legendObj._titleHeight;\n        }\n    }\n\n    return [w, h];\n}\n\n/*\n * Computes in fullLayout[legendId]:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\nfunction computeLegendDimensions(gd, groups, traces, legendObj) {\n    var fullLayout = gd._fullLayout;\n    var legendId = getId(legendObj);\n    if(!legendObj) {\n        legendObj = fullLayout[legendId];\n    }\n    var gs = fullLayout._size;\n\n    var isVertical = helpers.isVertical(legendObj);\n    var isGrouped = helpers.isGrouped(legendObj);\n    var isFraction = legendObj.entrywidthmode === 'fraction';\n\n    var bw = legendObj.borderwidth;\n    var bw2 = 2 * bw;\n    var itemGap = constants.itemGap;\n    var textGap = legendObj.indentation + legendObj.itemwidth + itemGap * 2;\n    var endPad = 2 * (bw + itemGap);\n\n    var yanchor = getYanchor(legendObj);\n    var isBelowPlotArea = legendObj.y < 0 || (legendObj.y === 0 && yanchor === 'top');\n    var isAbovePlotArea = legendObj.y > 1 || (legendObj.y === 1 && yanchor === 'bottom');\n\n    var traceGroupGap = legendObj.tracegroupgap;\n    var legendGroupWidths = {};\n\n    // - if below/above plot area, give it the maximum potential margin-push value\n    // - otherwise, extend the height of the plot area\n    legendObj._maxHeight = Math.max(\n        (isBelowPlotArea || isAbovePlotArea) ? fullLayout.height / 2 : gs.h,\n        30\n    );\n\n    var toggleRectWidth = 0;\n    legendObj._width = 0;\n    legendObj._height = 0;\n    var titleSize = getTitleSize(legendObj);\n\n    if(isVertical) {\n        traces.each(function(d) {\n            var h = d[0].height;\n            Drawing.setTranslate(this,\n                bw + titleSize[0],\n                bw + titleSize[1] + legendObj._height + h / 2 + itemGap\n            );\n            legendObj._height += h;\n            legendObj._width = Math.max(legendObj._width, d[0].width);\n        });\n\n        toggleRectWidth = textGap + legendObj._width;\n        legendObj._width += itemGap + textGap + bw2;\n        legendObj._height += endPad;\n\n        if(isGrouped) {\n            groups.each(function(d, i) {\n                Drawing.setTranslate(this, 0, i * legendObj.tracegroupgap);\n            });\n            legendObj._height += (legendObj._lgroupsLength - 1) * legendObj.tracegroupgap;\n        }\n    } else {\n        var xanchor = getXanchor(legendObj);\n        var isLeftOfPlotArea = legendObj.x < 0 || (legendObj.x === 0 && xanchor === 'right');\n        var isRightOfPlotArea = legendObj.x > 1 || (legendObj.x === 1 && xanchor === 'left');\n        var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n        var hw = fullLayout.width / 2;\n\n        // - if placed within x-margins, extend the width of the plot area\n        // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n        // - otherwise give it the maximum potential margin-push value\n        legendObj._maxWidth = Math.max(\n            isLeftOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'left') ? gs.l + gs.w : hw) :\n            isRightOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'right') ? gs.r + gs.w : hw) :\n            gs.w,\n        2 * textGap);\n        var maxItemWidth = 0;\n        var combinedItemWidth = 0;\n        traces.each(function(d) {\n            var w = getTraceWidth(d, legendObj, textGap);\n            maxItemWidth = Math.max(maxItemWidth, w);\n            combinedItemWidth += w;\n        });\n\n        toggleRectWidth = null;\n        var maxRowWidth = 0;\n\n        if(isGrouped) {\n            var maxGroupHeightInRow = 0;\n            var groupOffsetX = 0;\n            var groupOffsetY = 0;\n            groups.each(function() {\n                var maxWidthInGroup = 0;\n                var offsetY = 0;\n                d3.select(this).selectAll('g.traces').each(function(d) {\n                    var w = getTraceWidth(d, legendObj, textGap);\n                    var h = d[0].height;\n\n                    Drawing.setTranslate(this,\n                        titleSize[0],\n                        titleSize[1] + bw + itemGap + h / 2 + offsetY\n                    );\n                    offsetY += h;\n                    maxWidthInGroup = Math.max(maxWidthInGroup, w);\n                    legendGroupWidths[d[0].trace.legendgroup] = maxWidthInGroup;\n                });\n\n                var next = maxWidthInGroup + itemGap;\n\n                // horizontal_wrapping\n                if(\n                    // not on the first column already\n                    groupOffsetX > 0 &&\n\n                    // goes beyound limit\n                    next + bw + groupOffsetX > legendObj._maxWidth\n                ) {\n                    maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n                    groupOffsetX = 0;\n                    groupOffsetY += maxGroupHeightInRow + traceGroupGap;\n                    maxGroupHeightInRow = offsetY;\n                } else {\n                    maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n                }\n\n                Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n\n                groupOffsetX += next;\n            });\n\n            legendObj._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n            legendObj._height = groupOffsetY + maxGroupHeightInRow + endPad;\n        } else {\n            var nTraces = traces.size();\n            var oneRowLegend = (combinedItemWidth + bw2 + (nTraces - 1) * itemGap) < legendObj._maxWidth;\n\n            var maxItemHeightInRow = 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var rowWidth = 0;\n            traces.each(function(d) {\n                var h = d[0].height;\n                var w = getTraceWidth(d, legendObj, textGap, isGrouped);\n                var next = (oneRowLegend ? w : maxItemWidth);\n\n                if(!isFraction) {\n                    next += itemGap;\n                }\n\n                if((next + bw + offsetX - itemGap) >= legendObj._maxWidth) {\n                    maxRowWidth = Math.max(maxRowWidth, rowWidth);\n                    offsetX = 0;\n                    offsetY += maxItemHeightInRow;\n                    legendObj._height += maxItemHeightInRow;\n                    maxItemHeightInRow = 0;\n                }\n\n                Drawing.setTranslate(this,\n                    titleSize[0] + bw + offsetX,\n                    titleSize[1] + bw + offsetY + h / 2 + itemGap\n                );\n\n                rowWidth = offsetX + w + itemGap;\n                offsetX += next;\n                maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n            });\n\n            if(oneRowLegend) {\n                legendObj._width = offsetX + bw2;\n                legendObj._height = maxItemHeightInRow + endPad;\n            } else {\n                legendObj._width = Math.max(maxRowWidth, rowWidth) + bw2;\n                legendObj._height += maxItemHeightInRow + endPad;\n            }\n        }\n    }\n\n    legendObj._width = Math.ceil(\n        Math.max(\n            legendObj._width + titleSize[0],\n            legendObj._titleWidth + 2 * (bw + constants.titlePad)\n        )\n    );\n\n    legendObj._height = Math.ceil(\n        Math.max(\n            legendObj._height + titleSize[1],\n            legendObj._titleHeight + 2 * (bw + constants.itemGap)\n        )\n    );\n\n    legendObj._effHeight = Math.min(legendObj._height, legendObj._maxHeight);\n\n    var edits = gd._context.edits;\n    var isEditable = edits.legendText || edits.legendPosition;\n    traces.each(function(d) {\n        var traceToggle = d3.select(this).select('.' + legendId + 'toggle');\n        var h = d[0].height;\n        var legendgroup = d[0].trace.legendgroup;\n        var traceWidth = getTraceWidth(d, legendObj, textGap);\n        if(isGrouped && legendgroup !== '') {\n            traceWidth = legendGroupWidths[legendgroup];\n        }\n        var w = isEditable ? textGap : (toggleRectWidth || traceWidth);\n        if(!isVertical && !isFraction) {\n            w += itemGap / 2;\n        }\n        Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n    });\n}\n\nfunction expandMargin(gd, legendId, lx, ly) {\n    var fullLayout = gd._fullLayout;\n    var legendObj = fullLayout[legendId];\n    var xanchor = getXanchor(legendObj);\n    var yanchor = getYanchor(legendObj);\n\n    var isPaperX = legendObj.xref === 'paper';\n    var isPaperY = legendObj.yref === 'paper';\n\n    gd._fullLayout._reservedMargin[legendId] = {};\n    var sideY = legendObj.y < 0.5 ? 'b' : 't';\n    var sideX = legendObj.x < 0.5 ? 'l' : 'r';\n    var possibleReservedMargins = {\n        r: (fullLayout.width - lx),\n        l: lx + legendObj._width,\n        b: (fullLayout.height - ly),\n        t: ly + legendObj._effHeight\n    };\n\n    if(isPaperX && isPaperY) {\n        return Plots.autoMargin(gd, legendId, {\n            x: legendObj.x,\n            y: legendObj.y,\n            l: legendObj._width * (FROM_TL[xanchor]),\n            r: legendObj._width * (FROM_BR[xanchor]),\n            b: legendObj._effHeight * (FROM_BR[yanchor]),\n            t: legendObj._effHeight * (FROM_TL[yanchor])\n        });\n    } else if(isPaperX) {\n        gd._fullLayout._reservedMargin[legendId][sideY] = possibleReservedMargins[sideY];\n    } else if(isPaperY) {\n        gd._fullLayout._reservedMargin[legendId][sideX] = possibleReservedMargins[sideX];\n    } else {\n        if(legendObj.orientation === 'v') {\n            gd._fullLayout._reservedMargin[legendId][sideX] = possibleReservedMargins[sideX];\n        } else {\n            gd._fullLayout._reservedMargin[legendId][sideY] = possibleReservedMargins[sideY];\n        }\n    }\n}\n\nfunction getXanchor(legendObj) {\n    return Lib.isRightAnchor(legendObj) ? 'right' :\n        Lib.isCenterAnchor(legendObj) ? 'center' :\n        'left';\n}\n\nfunction getYanchor(legendObj) {\n    return Lib.isBottomAnchor(legendObj) ? 'bottom' :\n        Lib.isMiddleAnchor(legendObj) ? 'middle' :\n        'top';\n}\n\nfunction getId(legendObj) {\n    return legendObj._id || 'legend';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}