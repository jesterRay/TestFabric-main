{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar Color = require('../color');\nvar isValidScale = require('./scales').isValid;\nfunction hasColorscale(trace, containerStr, colorKey) {\n  var container = containerStr ? Lib.nestedProperty(trace, containerStr).get() || {} : trace;\n  var color = container[colorKey || 'color'];\n  if (color && color._inputArray) color = color._inputArray;\n  var isArrayWithOneNumber = false;\n  if (Lib.isArrayOrTypedArray(color)) {\n    for (var i = 0; i < color.length; i++) {\n      if (isNumeric(color[i])) {\n        isArrayWithOneNumber = true;\n        break;\n      }\n    }\n  }\n  return Lib.isPlainObject(container) && (isArrayWithOneNumber || container.showscale === true || isNumeric(container.cmin) && isNumeric(container.cmax) || isValidScale(container.colorscale) || Lib.isPlainObject(container.colorbar));\n}\nvar constantAttrs = ['showscale', 'autocolorscale', 'colorscale', 'reversescale', 'colorbar'];\nvar letterAttrs = ['min', 'max', 'mid', 'auto'];\n\n/**\n * Extract 'c' / 'z', trace / color axis colorscale options\n *\n * Note that it would be nice to replace all z* with c* equivalents in v3\n *\n * @param {object} cont : attribute container\n * @return {object}:\n *  - min: cmin or zmin\n *  - max: cmax or zmax\n *  - mid: cmid or zmid\n *  - auto: cauto or zauto\n *  - *scale: *scale attrs\n *  - colorbar: colorbar\n *  - _sync: function syncing attr and underscore dual (useful when calc'ing min/max)\n */\nfunction extractOpts(cont) {\n  var colorAx = cont._colorAx;\n  var cont2 = colorAx ? colorAx : cont;\n  var out = {};\n  var cLetter;\n  var i, k;\n  for (i = 0; i < constantAttrs.length; i++) {\n    k = constantAttrs[i];\n    out[k] = cont2[k];\n  }\n  if (colorAx) {\n    cLetter = 'c';\n    for (i = 0; i < letterAttrs.length; i++) {\n      k = letterAttrs[i];\n      out[k] = cont2['c' + k];\n    }\n  } else {\n    var k2;\n    for (i = 0; i < letterAttrs.length; i++) {\n      k = letterAttrs[i];\n      k2 = 'c' + k;\n      if (k2 in cont2) {\n        out[k] = cont2[k2];\n        continue;\n      }\n      k2 = 'z' + k;\n      if (k2 in cont2) {\n        out[k] = cont2[k2];\n      }\n    }\n    cLetter = k2.charAt(0);\n  }\n  out._sync = function (k, v) {\n    var k2 = letterAttrs.indexOf(k) !== -1 ? cLetter + k : k;\n    cont2[k2] = cont2['_' + k2] = v;\n  };\n  return out;\n}\n\n/**\n * Extract colorscale into numeric domain and color range.\n *\n * @param {object} cont colorscale container (e.g. trace, marker)\n *  - colorscale {array of arrays}\n *  - cmin/zmin {number}\n *  - cmax/zmax {number}\n *  - reversescale {boolean}\n *\n * @return {object}\n *  - domain {array}\n *  - range {array}\n */\nfunction extractScale(cont) {\n  var cOpts = extractOpts(cont);\n  var cmin = cOpts.min;\n  var cmax = cOpts.max;\n  var scl = cOpts.reversescale ? flipScale(cOpts.colorscale) : cOpts.colorscale;\n  var N = scl.length;\n  var domain = new Array(N);\n  var range = new Array(N);\n  for (var i = 0; i < N; i++) {\n    var si = scl[i];\n    domain[i] = cmin + si[0] * (cmax - cmin);\n    range[i] = si[1];\n  }\n  return {\n    domain: domain,\n    range: range\n  };\n}\nfunction flipScale(scl) {\n  var N = scl.length;\n  var sclNew = new Array(N);\n  for (var i = N - 1, j = 0; i >= 0; i--, j++) {\n    var si = scl[i];\n    sclNew[j] = [1 - si[0], si[1]];\n  }\n  return sclNew;\n}\n\n/**\n * General colorscale function generator.\n *\n * @param {object} specs output of Colorscale.extractScale or precomputed domain, range.\n *  - domain {array}\n *  - range {array}\n *\n * @param {object} opts\n *  - noNumericCheck {boolean} if true, scale func bypasses numeric checks\n *  - returnArray {boolean} if true, scale func return 4-item array instead of color strings\n *\n * @return {function}\n */\nfunction makeColorScaleFunc(specs, opts) {\n  opts = opts || {};\n  var domain = specs.domain;\n  var range = specs.range;\n  var N = range.length;\n  var _range = new Array(N);\n  for (var i = 0; i < N; i++) {\n    var rgba = tinycolor(range[i]).toRgb();\n    _range[i] = [rgba.r, rgba.g, rgba.b, rgba.a];\n  }\n  var _sclFunc = d3.scale.linear().domain(domain).range(_range).clamp(true);\n  var noNumericCheck = opts.noNumericCheck;\n  var returnArray = opts.returnArray;\n  var sclFunc;\n  if (noNumericCheck && returnArray) {\n    sclFunc = _sclFunc;\n  } else if (noNumericCheck) {\n    sclFunc = function (v) {\n      return colorArray2rbga(_sclFunc(v));\n    };\n  } else if (returnArray) {\n    sclFunc = function (v) {\n      if (isNumeric(v)) return _sclFunc(v);else if (tinycolor(v).isValid()) return v;else return Color.defaultLine;\n    };\n  } else {\n    sclFunc = function (v) {\n      if (isNumeric(v)) return colorArray2rbga(_sclFunc(v));else if (tinycolor(v).isValid()) return v;else return Color.defaultLine;\n    };\n  }\n\n  // colorbar draw looks into the d3 scale closure for domain and range\n  sclFunc.domain = _sclFunc.domain;\n  sclFunc.range = function () {\n    return range;\n  };\n  return sclFunc;\n}\nfunction makeColorScaleFuncFromTrace(trace, opts) {\n  return makeColorScaleFunc(extractScale(trace), opts);\n}\nfunction colorArray2rbga(colorArray) {\n  var colorObj = {\n    r: colorArray[0],\n    g: colorArray[1],\n    b: colorArray[2],\n    a: colorArray[3]\n  };\n  return tinycolor(colorObj).toRgbString();\n}\nmodule.exports = {\n  hasColorscale: hasColorscale,\n  extractOpts: extractOpts,\n  extractScale: extractScale,\n  flipScale: flipScale,\n  makeColorScaleFunc: makeColorScaleFunc,\n  makeColorScaleFuncFromTrace: makeColorScaleFuncFromTrace\n};","map":{"version":3,"names":["d3","require","tinycolor","isNumeric","Lib","Color","isValidScale","isValid","hasColorscale","trace","containerStr","colorKey","container","nestedProperty","get","color","_inputArray","isArrayWithOneNumber","isArrayOrTypedArray","i","length","isPlainObject","showscale","cmin","cmax","colorscale","colorbar","constantAttrs","letterAttrs","extractOpts","cont","colorAx","_colorAx","cont2","out","cLetter","k","k2","charAt","_sync","v","indexOf","extractScale","cOpts","min","max","scl","reversescale","flipScale","N","domain","Array","range","si","sclNew","j","makeColorScaleFunc","specs","opts","_range","rgba","toRgb","r","g","b","a","_sclFunc","scale","linear","clamp","noNumericCheck","returnArray","sclFunc","colorArray2rbga","defaultLine","makeColorScaleFuncFromTrace","colorArray","colorObj","toRgbString","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/colorscale/helpers.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar Color = require('../color');\n\nvar isValidScale = require('./scales').isValid;\n\nfunction hasColorscale(trace, containerStr, colorKey) {\n    var container = containerStr ?\n        Lib.nestedProperty(trace, containerStr).get() || {} :\n        trace;\n\n    var color = container[colorKey || 'color'];\n    if(color && color._inputArray) color = color._inputArray;\n\n    var isArrayWithOneNumber = false;\n    if(Lib.isArrayOrTypedArray(color)) {\n        for(var i = 0; i < color.length; i++) {\n            if(isNumeric(color[i])) {\n                isArrayWithOneNumber = true;\n                break;\n            }\n        }\n    }\n\n    return (\n        Lib.isPlainObject(container) && (\n            isArrayWithOneNumber ||\n            container.showscale === true ||\n            (isNumeric(container.cmin) && isNumeric(container.cmax)) ||\n            isValidScale(container.colorscale) ||\n            Lib.isPlainObject(container.colorbar)\n        )\n    );\n}\n\nvar constantAttrs = ['showscale', 'autocolorscale', 'colorscale', 'reversescale', 'colorbar'];\nvar letterAttrs = ['min', 'max', 'mid', 'auto'];\n\n/**\n * Extract 'c' / 'z', trace / color axis colorscale options\n *\n * Note that it would be nice to replace all z* with c* equivalents in v3\n *\n * @param {object} cont : attribute container\n * @return {object}:\n *  - min: cmin or zmin\n *  - max: cmax or zmax\n *  - mid: cmid or zmid\n *  - auto: cauto or zauto\n *  - *scale: *scale attrs\n *  - colorbar: colorbar\n *  - _sync: function syncing attr and underscore dual (useful when calc'ing min/max)\n */\nfunction extractOpts(cont) {\n    var colorAx = cont._colorAx;\n    var cont2 = colorAx ? colorAx : cont;\n    var out = {};\n    var cLetter;\n    var i, k;\n\n    for(i = 0; i < constantAttrs.length; i++) {\n        k = constantAttrs[i];\n        out[k] = cont2[k];\n    }\n\n    if(colorAx) {\n        cLetter = 'c';\n        for(i = 0; i < letterAttrs.length; i++) {\n            k = letterAttrs[i];\n            out[k] = cont2['c' + k];\n        }\n    } else {\n        var k2;\n        for(i = 0; i < letterAttrs.length; i++) {\n            k = letterAttrs[i];\n            k2 = 'c' + k;\n            if(k2 in cont2) {\n                out[k] = cont2[k2];\n                continue;\n            }\n            k2 = 'z' + k;\n            if(k2 in cont2) {\n                out[k] = cont2[k2];\n            }\n        }\n        cLetter = k2.charAt(0);\n    }\n\n    out._sync = function(k, v) {\n        var k2 = letterAttrs.indexOf(k) !== -1 ? cLetter + k : k;\n        cont2[k2] = cont2['_' + k2] = v;\n    };\n\n    return out;\n}\n\n/**\n * Extract colorscale into numeric domain and color range.\n *\n * @param {object} cont colorscale container (e.g. trace, marker)\n *  - colorscale {array of arrays}\n *  - cmin/zmin {number}\n *  - cmax/zmax {number}\n *  - reversescale {boolean}\n *\n * @return {object}\n *  - domain {array}\n *  - range {array}\n */\nfunction extractScale(cont) {\n    var cOpts = extractOpts(cont);\n    var cmin = cOpts.min;\n    var cmax = cOpts.max;\n\n    var scl = cOpts.reversescale ?\n        flipScale(cOpts.colorscale) :\n        cOpts.colorscale;\n\n    var N = scl.length;\n    var domain = new Array(N);\n    var range = new Array(N);\n\n    for(var i = 0; i < N; i++) {\n        var si = scl[i];\n        domain[i] = cmin + si[0] * (cmax - cmin);\n        range[i] = si[1];\n    }\n\n    return {domain: domain, range: range};\n}\n\nfunction flipScale(scl) {\n    var N = scl.length;\n    var sclNew = new Array(N);\n\n    for(var i = N - 1, j = 0; i >= 0; i--, j++) {\n        var si = scl[i];\n        sclNew[j] = [1 - si[0], si[1]];\n    }\n    return sclNew;\n}\n\n/**\n * General colorscale function generator.\n *\n * @param {object} specs output of Colorscale.extractScale or precomputed domain, range.\n *  - domain {array}\n *  - range {array}\n *\n * @param {object} opts\n *  - noNumericCheck {boolean} if true, scale func bypasses numeric checks\n *  - returnArray {boolean} if true, scale func return 4-item array instead of color strings\n *\n * @return {function}\n */\nfunction makeColorScaleFunc(specs, opts) {\n    opts = opts || {};\n\n    var domain = specs.domain;\n    var range = specs.range;\n    var N = range.length;\n    var _range = new Array(N);\n\n    for(var i = 0; i < N; i++) {\n        var rgba = tinycolor(range[i]).toRgb();\n        _range[i] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    }\n\n    var _sclFunc = d3.scale.linear()\n        .domain(domain)\n        .range(_range)\n        .clamp(true);\n\n    var noNumericCheck = opts.noNumericCheck;\n    var returnArray = opts.returnArray;\n    var sclFunc;\n\n    if(noNumericCheck && returnArray) {\n        sclFunc = _sclFunc;\n    } else if(noNumericCheck) {\n        sclFunc = function(v) {\n            return colorArray2rbga(_sclFunc(v));\n        };\n    } else if(returnArray) {\n        sclFunc = function(v) {\n            if(isNumeric(v)) return _sclFunc(v);\n            else if(tinycolor(v).isValid()) return v;\n            else return Color.defaultLine;\n        };\n    } else {\n        sclFunc = function(v) {\n            if(isNumeric(v)) return colorArray2rbga(_sclFunc(v));\n            else if(tinycolor(v).isValid()) return v;\n            else return Color.defaultLine;\n        };\n    }\n\n    // colorbar draw looks into the d3 scale closure for domain and range\n    sclFunc.domain = _sclFunc.domain;\n    sclFunc.range = function() { return range; };\n\n    return sclFunc;\n}\n\nfunction makeColorScaleFuncFromTrace(trace, opts) {\n    return makeColorScaleFunc(extractScale(trace), opts);\n}\n\nfunction colorArray2rbga(colorArray) {\n    var colorObj = {\n        r: colorArray[0],\n        g: colorArray[1],\n        b: colorArray[2],\n        a: colorArray[3]\n    };\n\n    return tinycolor(colorObj).toRgbString();\n}\n\nmodule.exports = {\n    hasColorscale: hasColorscale,\n    extractOpts: extractOpts,\n    extractScale: extractScale,\n    flipScale: flipScale,\n    makeColorScaleFunc: makeColorScaleFunc,\n    makeColorScaleFuncFromTrace: makeColorScaleFuncFromTrace\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}