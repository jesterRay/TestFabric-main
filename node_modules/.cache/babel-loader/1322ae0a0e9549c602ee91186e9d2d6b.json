{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, halfPi, pi, sign, sqrt } from \"./math.js\";\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n    B2 = B * B,\n    C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n    C2 = C * C,\n    BC = B * C,\n    B_C2 = B2 + C2 + 2 * BC,\n    B_3C = B + 3 * C,\n    lambda0 = lambda / halfPi,\n    lambda1 = lambda0 + 1 / lambda0,\n    D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n    D2 = D * D,\n    F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n    x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [sign(lambda) * halfPi * x1, sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)];\n}\nvanDerGrinten4Raw.invert = function (x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n    D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n    D2 = D * D,\n    B = 2 * y,\n    i = 50;\n  do {\n    var B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n      C2 = C * C,\n      BC = B * C,\n      B_C = B + C,\n      B_C2 = B_C * B_C,\n      B_3C = B + 3 * C,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n      F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n      sqrtF = sqrt(F),\n      f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n      f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n  return [sign(x) * (sqrt(D * D + 4) + D) * pi / 4, halfPi * B];\n};\nexport default function () {\n  return projection(vanDerGrinten4Raw).scale(127.16);\n}","map":{"version":3,"names":["geoProjection","projection","abs","epsilon","halfPi","pi","sign","sqrt","vanDerGrinten4Raw","lambda","phi","phi0","B","B2","C","C2","BC","B_C2","B_3C","lambda0","lambda1","D","D2","F","x1","invert","x","y","delta","i","C_","B_C","F_","sqrtF","f","f_","scale"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/d3-geo-projection/src/vanDerGrinten4.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, halfPi, pi, sign, sqrt} from \"./math.js\";\n\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [\n    sign(lambda) * halfPi * x1,\n    sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)\n  ];\n}\n\nvanDerGrinten4Raw.invert = function(x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n  return [\n    sign(x) * (sqrt(D * D + 4) + D) * pi / 4,\n    halfPi * B\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten4Raw)\n      .scale(127.16);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}