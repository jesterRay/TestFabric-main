{"ast":null,"code":"'use strict';\n\nvar tarjan = require('strongly-connected-components');\nvar Lib = require('../../lib');\nvar wrap = require('../../lib/gup').wrap;\nvar isArrayOrTypedArray = Lib.isArrayOrTypedArray;\nvar isIndex = Lib.isIndex;\nvar Colorscale = require('../../components/colorscale');\nfunction convertToD3Sankey(trace) {\n  var nodeSpec = trace.node;\n  var linkSpec = trace.link;\n  var links = [];\n  var hasLinkColorArray = isArrayOrTypedArray(linkSpec.color);\n  var hasLinkHoverColorArray = isArrayOrTypedArray(linkSpec.hovercolor);\n  var hasLinkCustomdataArray = isArrayOrTypedArray(linkSpec.customdata);\n  var linkedNodes = {};\n  var components = {};\n  var componentCount = linkSpec.colorscales.length;\n  var i;\n  for (i = 0; i < componentCount; i++) {\n    var cscale = linkSpec.colorscales[i];\n    var specs = Colorscale.extractScale(cscale, {\n      cLetter: 'c'\n    });\n    var scale = Colorscale.makeColorScaleFunc(specs);\n    components[cscale.label] = scale;\n  }\n  var maxNodeId = 0;\n  for (i = 0; i < linkSpec.value.length; i++) {\n    if (linkSpec.source[i] > maxNodeId) maxNodeId = linkSpec.source[i];\n    if (linkSpec.target[i] > maxNodeId) maxNodeId = linkSpec.target[i];\n  }\n  var nodeCount = maxNodeId + 1;\n  trace.node._count = nodeCount;\n\n  // Group nodes\n  var j;\n  var groups = trace.node.groups;\n  var groupLookup = {};\n  for (i = 0; i < groups.length; i++) {\n    var group = groups[i];\n    // Build a lookup table to quickly find in which group a node is\n    for (j = 0; j < group.length; j++) {\n      var nodeIndex = group[j];\n      var groupIndex = nodeCount + i;\n      if (groupLookup.hasOwnProperty(nodeIndex)) {\n        Lib.warn('Node ' + nodeIndex + ' is already part of a group.');\n      } else {\n        groupLookup[nodeIndex] = groupIndex;\n      }\n    }\n  }\n\n  // Process links\n  var groupedLinks = {\n    source: [],\n    target: []\n  };\n  for (i = 0; i < linkSpec.value.length; i++) {\n    var val = linkSpec.value[i];\n    // remove negative values, but keep zeros with special treatment\n    var source = linkSpec.source[i];\n    var target = linkSpec.target[i];\n    if (!(val > 0 && isIndex(source, nodeCount) && isIndex(target, nodeCount))) {\n      continue;\n    }\n\n    // Remove links that are within the same group\n    if (groupLookup.hasOwnProperty(source) && groupLookup.hasOwnProperty(target) && groupLookup[source] === groupLookup[target]) {\n      continue;\n    }\n\n    // if link targets a node in the group, relink target to that group\n    if (groupLookup.hasOwnProperty(target)) {\n      target = groupLookup[target];\n    }\n\n    // if link originates from a node in a group, relink source to that group\n    if (groupLookup.hasOwnProperty(source)) {\n      source = groupLookup[source];\n    }\n    source = +source;\n    target = +target;\n    linkedNodes[source] = linkedNodes[target] = true;\n    var label = '';\n    if (linkSpec.label && linkSpec.label[i]) label = linkSpec.label[i];\n    var concentrationscale = null;\n    if (label && components.hasOwnProperty(label)) concentrationscale = components[label];\n    links.push({\n      pointNumber: i,\n      label: label,\n      color: hasLinkColorArray ? linkSpec.color[i] : linkSpec.color,\n      hovercolor: hasLinkHoverColorArray ? linkSpec.hovercolor[i] : linkSpec.hovercolor,\n      customdata: hasLinkCustomdataArray ? linkSpec.customdata[i] : linkSpec.customdata,\n      concentrationscale: concentrationscale,\n      source: source,\n      target: target,\n      value: +val\n    });\n    groupedLinks.source.push(source);\n    groupedLinks.target.push(target);\n  }\n\n  // Process nodes\n  var totalCount = nodeCount + groups.length;\n  var hasNodeColorArray = isArrayOrTypedArray(nodeSpec.color);\n  var hasNodeCustomdataArray = isArrayOrTypedArray(nodeSpec.customdata);\n  var nodes = [];\n  for (i = 0; i < totalCount; i++) {\n    if (!linkedNodes[i]) continue;\n    var l = nodeSpec.label[i];\n    nodes.push({\n      group: i > nodeCount - 1,\n      childrenNodes: [],\n      pointNumber: i,\n      label: l,\n      color: hasNodeColorArray ? nodeSpec.color[i] : nodeSpec.color,\n      customdata: hasNodeCustomdataArray ? nodeSpec.customdata[i] : nodeSpec.customdata\n    });\n  }\n\n  // Check if we have circularity on the resulting graph\n  var circular = false;\n  if (circularityPresent(totalCount, groupedLinks.source, groupedLinks.target)) {\n    circular = true;\n  }\n  return {\n    circular: circular,\n    links: links,\n    nodes: nodes,\n    // Data structure for groups\n    groups: groups,\n    groupLookup: groupLookup\n  };\n}\nfunction circularityPresent(nodeLen, sources, targets) {\n  var nodes = Lib.init2dArray(nodeLen, 0);\n  for (var i = 0; i < Math.min(sources.length, targets.length); i++) {\n    if (Lib.isIndex(sources[i], nodeLen) && Lib.isIndex(targets[i], nodeLen)) {\n      if (sources[i] === targets[i]) {\n        return true; // self-link which is also a scc of one\n      }\n      nodes[sources[i]].push(targets[i]);\n    }\n  }\n  var scc = tarjan(nodes);\n\n  // TarjÃ¡n's strongly connected components algorithm coded by Mikola Lysenko\n  // returns at least one non-singular component if there's circularity in the graph\n  return scc.components.some(function (c) {\n    return c.length > 1;\n  });\n}\nmodule.exports = function calc(gd, trace) {\n  var result = convertToD3Sankey(trace);\n  return wrap({\n    circular: result.circular,\n    _nodes: result.nodes,\n    _links: result.links,\n    // Data structure for grouping\n    _groups: result.groups,\n    _groupLookup: result.groupLookup\n  });\n};","map":{"version":3,"names":["tarjan","require","Lib","wrap","isArrayOrTypedArray","isIndex","Colorscale","convertToD3Sankey","trace","nodeSpec","node","linkSpec","link","links","hasLinkColorArray","color","hasLinkHoverColorArray","hovercolor","hasLinkCustomdataArray","customdata","linkedNodes","components","componentCount","colorscales","length","i","cscale","specs","extractScale","cLetter","scale","makeColorScaleFunc","label","maxNodeId","value","source","target","nodeCount","_count","j","groups","groupLookup","group","nodeIndex","groupIndex","hasOwnProperty","warn","groupedLinks","val","concentrationscale","push","pointNumber","totalCount","hasNodeColorArray","hasNodeCustomdataArray","nodes","l","childrenNodes","circular","circularityPresent","nodeLen","sources","targets","init2dArray","Math","min","scc","some","c","module","exports","calc","gd","result","_nodes","_links","_groups","_groupLookup"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/sankey/calc.js"],"sourcesContent":["'use strict';\n\nvar tarjan = require('strongly-connected-components');\nvar Lib = require('../../lib');\nvar wrap = require('../../lib/gup').wrap;\n\nvar isArrayOrTypedArray = Lib.isArrayOrTypedArray;\nvar isIndex = Lib.isIndex;\nvar Colorscale = require('../../components/colorscale');\n\nfunction convertToD3Sankey(trace) {\n    var nodeSpec = trace.node;\n    var linkSpec = trace.link;\n\n    var links = [];\n    var hasLinkColorArray = isArrayOrTypedArray(linkSpec.color);\n    var hasLinkHoverColorArray = isArrayOrTypedArray(linkSpec.hovercolor);\n    var hasLinkCustomdataArray = isArrayOrTypedArray(linkSpec.customdata);\n    var linkedNodes = {};\n\n    var components = {};\n    var componentCount = linkSpec.colorscales.length;\n    var i;\n    for(i = 0; i < componentCount; i++) {\n        var cscale = linkSpec.colorscales[i];\n        var specs = Colorscale.extractScale(cscale, {cLetter: 'c'});\n        var scale = Colorscale.makeColorScaleFunc(specs);\n        components[cscale.label] = scale;\n    }\n\n    var maxNodeId = 0;\n    for(i = 0; i < linkSpec.value.length; i++) {\n        if(linkSpec.source[i] > maxNodeId) maxNodeId = linkSpec.source[i];\n        if(linkSpec.target[i] > maxNodeId) maxNodeId = linkSpec.target[i];\n    }\n    var nodeCount = maxNodeId + 1;\n    trace.node._count = nodeCount;\n\n    // Group nodes\n    var j;\n    var groups = trace.node.groups;\n    var groupLookup = {};\n    for(i = 0; i < groups.length; i++) {\n        var group = groups[i];\n        // Build a lookup table to quickly find in which group a node is\n        for(j = 0; j < group.length; j++) {\n            var nodeIndex = group[j];\n            var groupIndex = nodeCount + i;\n            if(groupLookup.hasOwnProperty(nodeIndex)) {\n                Lib.warn('Node ' + nodeIndex + ' is already part of a group.');\n            } else {\n                groupLookup[nodeIndex] = groupIndex;\n            }\n        }\n    }\n\n    // Process links\n    var groupedLinks = {\n        source: [],\n        target: []\n    };\n    for(i = 0; i < linkSpec.value.length; i++) {\n        var val = linkSpec.value[i];\n        // remove negative values, but keep zeros with special treatment\n        var source = linkSpec.source[i];\n        var target = linkSpec.target[i];\n        if(!(val > 0 && isIndex(source, nodeCount) && isIndex(target, nodeCount))) {\n            continue;\n        }\n\n        // Remove links that are within the same group\n        if(groupLookup.hasOwnProperty(source) && groupLookup.hasOwnProperty(target) && groupLookup[source] === groupLookup[target]) {\n            continue;\n        }\n\n        // if link targets a node in the group, relink target to that group\n        if(groupLookup.hasOwnProperty(target)) {\n            target = groupLookup[target];\n        }\n\n        // if link originates from a node in a group, relink source to that group\n        if(groupLookup.hasOwnProperty(source)) {\n            source = groupLookup[source];\n        }\n\n        source = +source;\n        target = +target;\n        linkedNodes[source] = linkedNodes[target] = true;\n\n        var label = '';\n        if(linkSpec.label && linkSpec.label[i]) label = linkSpec.label[i];\n\n        var concentrationscale = null;\n        if(label && components.hasOwnProperty(label)) concentrationscale = components[label];\n\n        links.push({\n            pointNumber: i,\n            label: label,\n            color: hasLinkColorArray ? linkSpec.color[i] : linkSpec.color,\n            hovercolor: hasLinkHoverColorArray ? linkSpec.hovercolor[i] : linkSpec.hovercolor,\n            customdata: hasLinkCustomdataArray ? linkSpec.customdata[i] : linkSpec.customdata,\n            concentrationscale: concentrationscale,\n            source: source,\n            target: target,\n            value: +val\n        });\n\n        groupedLinks.source.push(source);\n        groupedLinks.target.push(target);\n    }\n\n    // Process nodes\n    var totalCount = nodeCount + groups.length;\n    var hasNodeColorArray = isArrayOrTypedArray(nodeSpec.color);\n    var hasNodeCustomdataArray = isArrayOrTypedArray(nodeSpec.customdata);\n    var nodes = [];\n    for(i = 0; i < totalCount; i++) {\n        if(!linkedNodes[i]) continue;\n        var l = nodeSpec.label[i];\n\n        nodes.push({\n            group: (i > nodeCount - 1),\n            childrenNodes: [],\n            pointNumber: i,\n            label: l,\n            color: hasNodeColorArray ? nodeSpec.color[i] : nodeSpec.color,\n            customdata: hasNodeCustomdataArray ? nodeSpec.customdata[i] : nodeSpec.customdata\n        });\n    }\n\n    // Check if we have circularity on the resulting graph\n    var circular = false;\n    if(circularityPresent(totalCount, groupedLinks.source, groupedLinks.target)) {\n        circular = true;\n    }\n\n    return {\n        circular: circular,\n        links: links,\n        nodes: nodes,\n\n        // Data structure for groups\n        groups: groups,\n        groupLookup: groupLookup\n    };\n}\n\nfunction circularityPresent(nodeLen, sources, targets) {\n    var nodes = Lib.init2dArray(nodeLen, 0);\n\n    for(var i = 0; i < Math.min(sources.length, targets.length); i++) {\n        if(Lib.isIndex(sources[i], nodeLen) && Lib.isIndex(targets[i], nodeLen)) {\n            if(sources[i] === targets[i]) {\n                return true; // self-link which is also a scc of one\n            }\n            nodes[sources[i]].push(targets[i]);\n        }\n    }\n\n    var scc = tarjan(nodes);\n\n    // TarjÃ¡n's strongly connected components algorithm coded by Mikola Lysenko\n    // returns at least one non-singular component if there's circularity in the graph\n    return scc.components.some(function(c) {\n        return c.length > 1;\n    });\n}\n\nmodule.exports = function calc(gd, trace) {\n    var result = convertToD3Sankey(trace);\n\n    return wrap({\n        circular: result.circular,\n        _nodes: result.nodes,\n        _links: result.links,\n\n        // Data structure for grouping\n        _groups: result.groups,\n        _groupLookup: result.groupLookup,\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}