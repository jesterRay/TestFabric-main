{"ast":null,"code":"var _jsxFileName = \"E:\\\\tog_workspace\\\\TestFabric_main\\\\TestFabric-main\\\\src\\\\pages\\\\chatbotfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n// Custom component to fetch and display services\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchServices = ({\n  triggerNextStep\n}) => {\n  _s();\n  const [services, setServices] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}services_list`);\n        console.log('API Response:', response.data);\n        if (response.data.success) {\n          //const servicesNames = response.data.data.map(service => service.associations_and_partners__Name).join(', ');\n          //setServices(servicesNames);\n          const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n          setServices(servicesNames);\n        } else {\n          setServices('No services available.');\n        }\n      } catch (error) {\n        console.error('Error fetching services:', error);\n        setServices('Error fetching services.');\n      } finally {\n        setLoading(false);\n        triggerNextStep();\n      }\n    };\n    fetchServices();\n  }, [triggerNextStep]);\n  return (\n    /*#__PURE__*/\n    //<div>\n    //    {loading ? 'Loading services...' : `Here are our services: ${services}`}\n    //</div>\n    _jsxDEV(\"div\", {\n      children: loading ? 'Loading services...' : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Here are our services:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: services.map((service, index) =>\n          /*#__PURE__*/\n          //<li key={index}>{service}</li>\n          _jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/#/services/${encodeURIComponent(service.replace(/ /g, '_'))}`,\n              children: service\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(FetchServices, \"dsb2F3N37fr7rJXaCFBRElD5yvw=\");\n_c = FetchServices;\nconst Chatbot = () => {\n  const steps = [{\n    id: '0',\n    message: 'Welcome to Testfabrics!',\n    trigger: '1'\n  }, {\n    id: '1',\n    message: 'Please enter your name!',\n    trigger: '2'\n  }, {\n    id: '2',\n    user: true,\n    trigger: '3'\n  }, {\n    id: '3',\n    message: 'Hi {previousValue}, how may I help you?',\n    trigger: '4'\n  }, {\n    id: '4',\n    options: [{\n      value: \"Products\",\n      label: \"Products\",\n      trigger: 'Products'\n    }, {\n      value: \"Services\",\n      label: \"Services\",\n      trigger: 'Services'\n    }]\n  }, {\n    id: 'Products',\n    message: 'These are our products.',\n    end: true\n  }, {\n    id: 'Services',\n    component: /*#__PURE__*/_jsxDEV(FetchServices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }, this),\n    waitAction: true,\n    trigger: '5'\n  }, {\n    id: '5',\n    message: 'Is there anything else I can help you with?',\n    end: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: steps,\n      floating: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Chatbot;\nexport default Chatbot;\n\n//import React, { useState, useEffect } from 'react';\n//import ChatBot from 'react-simple-chatbot';\n//import axios from 'axios';\n//import { HashRouter as Router, Route, Link } from 'react-router-dom';\n\n//const FetchServices = ({ triggerNextStep }) => {\n//    const [services, setServices] = useState([]);\n//    const [loading, setLoading] = useState(true);\n\n//    useEffect(() => {\n//        const fetchServices = async () => {\n//            try {\n//                const response = await axios.get('${process.env.REACT_APP_API_URL}services_list');\n//                console.log('API Response:', response.data);\n\n//                if (response.data.success) {\n//                    const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n//                    setServices(servicesNames);\n//                } else {\n//                    setServices(['No services available.']);\n//                }\n//            } catch (error) {\n//                console.error('Error fetching services:', error);\n//                setServices(['Error fetching services.']);\n//            } finally {\n//                setLoading(false);\n//                triggerNextStep(); // Trigger next step after fetching the data\n//            }\n//        };\n\n//        fetchServices();\n//    }, [triggerNextStep]);\n\n//    return (\n//        <div>\n//            {loading ? 'Loading services...' : (\n//                <div>\n//                    Here are our services:\n//                    <ul>\n//                        {services.map((service, index) => (\n//                            <li key={index}>\n//                                <Link to={`/services/${encodeURIComponent(service)}`}>{service}</Link>\n//                            </li>\n//                        ))}\n//                    </ul>\n//                </div>\n//            )}\n//        </div>\n//    );\n//};\n\n//const Chatbot = () => {\n//    const steps = [\n//        {\n//            id: '0',\n//            message: 'Welcome to Testfabrics!',\n//            trigger: '1',\n//        },\n//        {\n//            id: '1',\n//            message: 'Please enter your name!',\n//            trigger: '2',\n//        },\n//        {\n//            id: '2',\n//            user: true,\n//            trigger: '3',\n//        },\n//        {\n//            id: '3',\n//            message: 'Hi {previousValue}, how may I help you?',\n//            trigger: '4',\n//        },\n//        {\n//            id: '4',\n//            options: [\n//                { value: \"Products\", label: \"Products\", trigger: 'Products' },\n//                { value: \"Services\", label: \"Services\", trigger: 'Services' },\n//            ],\n//        },\n//        {\n//            id: 'Products',\n//            message: 'These are our products.',\n//            end: true,\n//        },\n//        {\n//            id: 'Services',\n//            component: <FetchServices />,\n//            waitAction: true,\n//            trigger: '5',\n//        },\n//        {\n//            id: '5',\n//            message: 'Is there anything else I can help you with?',\n//            end: true,\n//        },\n//    ];\n\n//    return (\n//        <div>\n//            <ChatBot\n//                steps={steps}\n//                floating={true}\n//            />\n//        </div>\n//    );\n//}\n\n//export default Chatbot;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchServices\");\n$RefreshReg$(_c2, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","ChatBot","axios","BrowserRouter","Router","Route","Link","jsxDEV","_jsxDEV","FetchServices","triggerNextStep","_s","services","setServices","loading","setLoading","fetchServices","response","get","process","env","REACT_APP_API_URL","console","log","data","success","servicesNames","map","service","associations_and_partners__Name","error","children","index","href","encodeURIComponent","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chatbot","steps","id","message","trigger","user","options","value","label","end","component","waitAction","floating","_c2","$RefreshReg$"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/src/pages/chatbotfile.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n// Custom component to fetch and display services\nconst FetchServices = ({ triggerNextStep }) => {\n    const [services, setServices] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchServices = async () => {\n            try {\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}services_list`);\n                console.log('API Response:', response.data);\n\n                if (response.data.success) {\n                    //const servicesNames = response.data.data.map(service => service.associations_and_partners__Name).join(', ');\n                    //setServices(servicesNames);\n                    const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n                    setServices(servicesNames);\n                } else {\n                    setServices('No services available.');\n                }\n            } catch (error) {\n                console.error('Error fetching services:', error);\n                setServices('Error fetching services.');\n            } finally {\n                setLoading(false);\n                triggerNextStep(); \n            }\n        };\n\n        fetchServices();\n    }, [triggerNextStep]);\n\n    return (\n        //<div>\n        //    {loading ? 'Loading services...' : `Here are our services: ${services}`}\n        //</div>\n        <div>\n            {loading ? 'Loading services...' : (\n                <div>\n                    Here are our services:\n                    <ul>\n                        {services.map((service, index) => (\n                            //<li key={index}>{service}</li>\n                            <li key={index}>\n                                <a href={`/#/services/${encodeURIComponent(service.replace(/ /g, '_'))}`}>{service}</a>\n                            </li>\n                           \n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst Chatbot = () => {\n    const steps = [\n        {\n            id: '0',\n            message: 'Welcome to Testfabrics!',\n            trigger: '1',\n        },\n        {\n            id: '1',\n            message: 'Please enter your name!',\n            trigger: '2',\n        },\n        {\n            id: '2',\n            user: true,\n            trigger: '3',\n        },\n        {\n            id: '3',\n            message: 'Hi {previousValue}, how may I help you?',\n            trigger: '4',\n        },\n        {\n            id: '4',\n            options: [\n                { value: \"Products\", label: \"Products\", trigger: 'Products' },\n                { value: \"Services\", label: \"Services\", trigger: 'Services' },\n            ],\n        },\n        {\n            id: 'Products',\n            message: 'These are our products.',\n            end: true,\n        },\n        {\n            id: 'Services',\n            component: <FetchServices />,\n            waitAction: true,\n            trigger: '5',\n        },\n        {\n            id: '5',\n            message: 'Is there anything else I can help you with?',\n            end: true,\n        },\n    ];\n\n    return (\n        <div>\n            <ChatBot\n                steps={steps}\n                floating={true}\n            />\n        </div>\n    );\n}\n\nexport default Chatbot;\n\n\n//import React, { useState, useEffect } from 'react';\n//import ChatBot from 'react-simple-chatbot';\n//import axios from 'axios';\n//import { HashRouter as Router, Route, Link } from 'react-router-dom';\n\n//const FetchServices = ({ triggerNextStep }) => {\n//    const [services, setServices] = useState([]);\n//    const [loading, setLoading] = useState(true);\n\n//    useEffect(() => {\n//        const fetchServices = async () => {\n//            try {\n//                const response = await axios.get('${process.env.REACT_APP_API_URL}services_list');\n//                console.log('API Response:', response.data);\n\n//                if (response.data.success) {\n//                    const servicesNames = response.data.data.map(service => service.associations_and_partners__Name);\n//                    setServices(servicesNames);\n//                } else {\n//                    setServices(['No services available.']);\n//                }\n//            } catch (error) {\n//                console.error('Error fetching services:', error);\n//                setServices(['Error fetching services.']);\n//            } finally {\n//                setLoading(false);\n//                triggerNextStep(); // Trigger next step after fetching the data\n//            }\n//        };\n\n//        fetchServices();\n//    }, [triggerNextStep]);\n\n//    return (\n//        <div>\n//            {loading ? 'Loading services...' : (\n//                <div>\n//                    Here are our services:\n//                    <ul>\n//                        {services.map((service, index) => (\n//                            <li key={index}>\n//                                <Link to={`/services/${encodeURIComponent(service)}`}>{service}</Link>\n//                            </li>\n//                        ))}\n//                    </ul>\n//                </div>\n//            )}\n//        </div>\n//    );\n//};\n\n//const Chatbot = () => {\n//    const steps = [\n//        {\n//            id: '0',\n//            message: 'Welcome to Testfabrics!',\n//            trigger: '1',\n//        },\n//        {\n//            id: '1',\n//            message: 'Please enter your name!',\n//            trigger: '2',\n//        },\n//        {\n//            id: '2',\n//            user: true,\n//            trigger: '3',\n//        },\n//        {\n//            id: '3',\n//            message: 'Hi {previousValue}, how may I help you?',\n//            trigger: '4',\n//        },\n//        {\n//            id: '4',\n//            options: [\n//                { value: \"Products\", label: \"Products\", trigger: 'Products' },\n//                { value: \"Services\", label: \"Services\", trigger: 'Services' },\n//            ],\n//        },\n//        {\n//            id: 'Products',\n//            message: 'These are our products.',\n//            end: true,\n//        },\n//        {\n//            id: 'Services',\n//            component: <FetchServices />,\n//            waitAction: true,\n//            trigger: '5',\n//        },\n//        {\n//            id: '5',\n//            message: 'Is there anything else I can help you with?',\n//            end: true,\n//        },\n//    ];\n\n//    return (\n//        <div>\n//            <ChatBot\n//                steps={steps}\n//                floating={true}\n//            />\n//        </div>\n//    );\n//}\n\n//export default Chatbot;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}