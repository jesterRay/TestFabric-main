{"ast":null,"code":"'use strict';\n\nvar heatmapAttrs = require('../heatmap/attributes');\nvar contourAttrs = require('../contour/attributes');\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar contourContourAttrs = contourAttrs.contours;\nmodule.exports = extendFlat({\n  carpet: {\n    valType: 'string',\n    editType: 'calc',\n    description: ['The `carpet` of the carpet axes on which this contour trace lies'].join(' ')\n  },\n  z: heatmapAttrs.z,\n  a: heatmapAttrs.x,\n  a0: heatmapAttrs.x0,\n  da: heatmapAttrs.dx,\n  b: heatmapAttrs.y,\n  b0: heatmapAttrs.y0,\n  db: heatmapAttrs.dy,\n  text: heatmapAttrs.text,\n  hovertext: heatmapAttrs.hovertext,\n  transpose: heatmapAttrs.transpose,\n  atype: heatmapAttrs.xtype,\n  btype: heatmapAttrs.ytype,\n  fillcolor: contourAttrs.fillcolor,\n  autocontour: contourAttrs.autocontour,\n  ncontours: contourAttrs.ncontours,\n  contours: {\n    type: contourContourAttrs.type,\n    start: contourContourAttrs.start,\n    end: contourContourAttrs.end,\n    size: contourContourAttrs.size,\n    coloring: {\n      // from contourAttrs.contours.coloring but no 'heatmap' option\n      valType: 'enumerated',\n      values: ['fill', 'lines', 'none'],\n      dflt: 'fill',\n      editType: 'calc',\n      description: ['Determines the coloring method showing the contour values.', 'If *fill*, coloring is done evenly between each contour level', 'If *lines*, coloring is done on the contour lines.', 'If *none*, no coloring is applied on this trace.'].join(' ')\n    },\n    showlines: contourContourAttrs.showlines,\n    showlabels: contourContourAttrs.showlabels,\n    labelfont: contourContourAttrs.labelfont,\n    labelformat: contourContourAttrs.labelformat,\n    operation: contourContourAttrs.operation,\n    value: contourContourAttrs.value,\n    editType: 'calc',\n    impliedEdits: {\n      autocontour: false\n    }\n  },\n  line: {\n    color: contourAttrs.line.color,\n    width: contourAttrs.line.width,\n    dash: contourAttrs.line.dash,\n    smoothing: contourAttrs.line.smoothing,\n    editType: 'plot'\n  },\n  zorder: contourAttrs.zorder,\n  transforms: undefined\n}, colorScaleAttrs('', {\n  cLetter: 'z',\n  autoColorDflt: false\n}));","map":{"version":3,"names":["heatmapAttrs","require","contourAttrs","colorScaleAttrs","extendFlat","contourContourAttrs","contours","module","exports","carpet","valType","editType","description","join","z","a","x","a0","x0","da","dx","b","y","b0","y0","db","dy","text","hovertext","transpose","atype","xtype","btype","ytype","fillcolor","autocontour","ncontours","type","start","end","size","coloring","values","dflt","showlines","showlabels","labelfont","labelformat","operation","value","impliedEdits","line","color","width","dash","smoothing","zorder","transforms","undefined","cLetter","autoColorDflt"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/contourcarpet/attributes.js"],"sourcesContent":["'use strict';\n\nvar heatmapAttrs = require('../heatmap/attributes');\nvar contourAttrs = require('../contour/attributes');\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar contourContourAttrs = contourAttrs.contours;\n\nmodule.exports = extendFlat({\n    carpet: {\n        valType: 'string',\n        editType: 'calc',\n        description: [\n            'The `carpet` of the carpet axes on which this contour trace lies'\n        ].join(' ')\n    },\n    z: heatmapAttrs.z,\n    a: heatmapAttrs.x,\n    a0: heatmapAttrs.x0,\n    da: heatmapAttrs.dx,\n    b: heatmapAttrs.y,\n    b0: heatmapAttrs.y0,\n    db: heatmapAttrs.dy,\n    text: heatmapAttrs.text,\n    hovertext: heatmapAttrs.hovertext,\n    transpose: heatmapAttrs.transpose,\n    atype: heatmapAttrs.xtype,\n    btype: heatmapAttrs.ytype,\n\n    fillcolor: contourAttrs.fillcolor,\n\n    autocontour: contourAttrs.autocontour,\n    ncontours: contourAttrs.ncontours,\n\n    contours: {\n        type: contourContourAttrs.type,\n        start: contourContourAttrs.start,\n        end: contourContourAttrs.end,\n        size: contourContourAttrs.size,\n        coloring: {\n            // from contourAttrs.contours.coloring but no 'heatmap' option\n            valType: 'enumerated',\n            values: ['fill', 'lines', 'none'],\n            dflt: 'fill',\n            editType: 'calc',\n            description: [\n                'Determines the coloring method showing the contour values.',\n                'If *fill*, coloring is done evenly between each contour level',\n                'If *lines*, coloring is done on the contour lines.',\n                'If *none*, no coloring is applied on this trace.'\n            ].join(' ')\n        },\n        showlines: contourContourAttrs.showlines,\n        showlabels: contourContourAttrs.showlabels,\n        labelfont: contourContourAttrs.labelfont,\n        labelformat: contourContourAttrs.labelformat,\n        operation: contourContourAttrs.operation,\n        value: contourContourAttrs.value,\n        editType: 'calc',\n        impliedEdits: {autocontour: false}\n    },\n\n    line: {\n        color: contourAttrs.line.color,\n        width: contourAttrs.line.width,\n        dash: contourAttrs.line.dash,\n        smoothing: contourAttrs.line.smoothing,\n        editType: 'plot'\n    },\n\n    zorder: contourAttrs.zorder,\n    transforms: undefined\n},\n\n    colorScaleAttrs('', {\n        cLetter: 'z',\n        autoColorDflt: false\n    })\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}