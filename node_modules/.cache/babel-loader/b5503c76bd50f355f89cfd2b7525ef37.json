{"ast":null,"code":"'use strict';\n\nvar docs = require('../../constants/docs');\nvar FORMAT_LINK = docs.FORMAT_LINK;\nvar DATE_FORMAT_LINK = docs.DATE_FORMAT_LINK;\nfunction axisHoverFormat(x, noDates) {\n  return {\n    valType: 'string',\n    dflt: '',\n    editType: 'none',\n    description: (noDates ? descriptionOnlyNumbers : descriptionWithDates)('hover text', x) + ['By default the values are formatted using ' + (noDates ? 'generic number format' : '`' + x + 'axis.hoverformat`') + '.'].join(' ')\n  };\n}\nfunction descriptionOnlyNumbers(label, x) {\n  return ['Sets the ' + label + ' formatting rule' + (x ? 'for `' + x + '` ' : ''), 'using d3 formatting mini-languages', 'which are very similar to those in Python. For numbers, see: ' + FORMAT_LINK + '.'].join(' ');\n}\nfunction descriptionWithDates(label, x) {\n  return descriptionOnlyNumbers(label, x) + [' And for dates see: ' + DATE_FORMAT_LINK + '.', 'We add two items to d3\\'s date formatter:', '*%h* for half of the year as a decimal number as well as', '*%{n}f* for fractional seconds', 'with n digits. For example, *2016-10-13 09:15:23.456* with tickformat', '*%H~%M~%S.%2f* would display *09~15~23.46*'].join(' ');\n}\nmodule.exports = {\n  axisHoverFormat: axisHoverFormat,\n  descriptionOnlyNumbers: descriptionOnlyNumbers,\n  descriptionWithDates: descriptionWithDates\n};","map":{"version":3,"names":["docs","require","FORMAT_LINK","DATE_FORMAT_LINK","axisHoverFormat","x","noDates","valType","dflt","editType","description","descriptionOnlyNumbers","descriptionWithDates","join","label","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/cartesian/axis_format_attributes.js"],"sourcesContent":["'use strict';\n\nvar docs = require('../../constants/docs');\nvar FORMAT_LINK = docs.FORMAT_LINK;\nvar DATE_FORMAT_LINK = docs.DATE_FORMAT_LINK;\n\nfunction axisHoverFormat(x, noDates) {\n    return {\n        valType: 'string',\n        dflt: '',\n        editType: 'none',\n        description: (\n            noDates ? descriptionOnlyNumbers : descriptionWithDates\n        )('hover text', x) + [\n            'By default the values are formatted using ' + (\n                noDates ?\n                    'generic number format' :\n                    ('`' + x + 'axis.hoverformat`')\n            ) + '.',\n        ].join(' ')\n    };\n}\n\nfunction descriptionOnlyNumbers(label, x) {\n    return [\n        'Sets the ' + label + ' formatting rule' + (x ? 'for `' + x + '` ' : ''),\n        'using d3 formatting mini-languages',\n        'which are very similar to those in Python. For numbers, see: ' + FORMAT_LINK + '.'\n    ].join(' ');\n}\n\nfunction descriptionWithDates(label, x) {\n    return descriptionOnlyNumbers(label, x) + [\n        ' And for dates see: ' + DATE_FORMAT_LINK + '.',\n        'We add two items to d3\\'s date formatter:',\n        '*%h* for half of the year as a decimal number as well as',\n        '*%{n}f* for fractional seconds',\n        'with n digits. For example, *2016-10-13 09:15:23.456* with tickformat',\n        '*%H~%M~%S.%2f* would display *09~15~23.46*'\n    ].join(' ');\n}\n\nmodule.exports = {\n    axisHoverFormat: axisHoverFormat,\n    descriptionOnlyNumbers: descriptionOnlyNumbers,\n    descriptionWithDates: descriptionWithDates\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC1C,IAAIC,WAAW,GAAGF,IAAI,CAACE,WAAW;AAClC,IAAIC,gBAAgB,GAAGH,IAAI,CAACG,gBAAgB;AAE5C,SAASC,eAAeA,CAACC,CAAC,EAAEC,OAAO,EAAE;EACjC,OAAO;IACHC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE,CACTJ,OAAO,GAAGK,sBAAsB,GAAGC,oBAAoB,EACzD,YAAY,EAAEP,CAAC,CAAC,GAAG,CACjB,4CAA4C,IACxCC,OAAO,GACH,uBAAuB,GACtB,GAAG,GAAGD,CAAC,GAAG,mBAAoB,CACtC,GAAG,GAAG,CACV,CAACQ,IAAI,CAAC,GAAG;EACd,CAAC;AACL;AAEA,SAASF,sBAAsBA,CAACG,KAAK,EAAET,CAAC,EAAE;EACtC,OAAO,CACH,WAAW,GAAGS,KAAK,GAAG,kBAAkB,IAAIT,CAAC,GAAG,OAAO,GAAGA,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,EACxE,oCAAoC,EACpC,+DAA+D,GAAGH,WAAW,GAAG,GAAG,CACtF,CAACW,IAAI,CAAC,GAAG,CAAC;AACf;AAEA,SAASD,oBAAoBA,CAACE,KAAK,EAAET,CAAC,EAAE;EACpC,OAAOM,sBAAsB,CAACG,KAAK,EAAET,CAAC,CAAC,GAAG,CACtC,sBAAsB,GAAGF,gBAAgB,GAAG,GAAG,EAC/C,2CAA2C,EAC3C,0DAA0D,EAC1D,gCAAgC,EAChC,uEAAuE,EACvE,4CAA4C,CAC/C,CAACU,IAAI,CAAC,GAAG,CAAC;AACf;AAEAE,MAAM,CAACC,OAAO,GAAG;EACbZ,eAAe,EAAEA,eAAe;EAChCO,sBAAsB,EAAEA,sBAAsB;EAC9CC,oBAAoB,EAAEA;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}