{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\n/**\n * General helper to manage trace groups based on calcdata\n *\n * @param {d3.selection} traceLayer: a selection containing a single group\n *     to draw these traces into\n * @param {array} cdModule: array of calcdata items for this\n *     module and subplot combination. Assumes the calcdata item for each\n *     trace is an array with the fullData trace attached to the first item.\n * @param {string} cls: the class attribute to give each trace group\n *     so you can give multiple classes separated by spaces\n */\nmodule.exports = function makeTraceGroups(traceLayer, cdModule, cls) {\n  var traces = traceLayer.selectAll('g.' + cls.replace(/\\s/g, '.')).data(cdModule, function (cd) {\n    return cd[0].trace.uid;\n  });\n  traces.exit().remove();\n  traces.enter().append('g').attr('class', cls);\n  traces.order();\n\n  // stash ref node to trace group in calcdata,\n  // useful for (fast) styleOnSelect\n  var k = traceLayer.classed('rangeplot') ? 'nodeRangePlot3' : 'node3';\n  traces.each(function (cd) {\n    cd[0][k] = d3.select(this);\n  });\n  return traces;\n};","map":{"version":3,"names":["d3","require","module","exports","makeTraceGroups","traceLayer","cdModule","cls","traces","selectAll","replace","data","cd","trace","uid","exit","remove","enter","append","attr","order","k","classed","each","select"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/lib/make_trace_groups.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\n/**\n * General helper to manage trace groups based on calcdata\n *\n * @param {d3.selection} traceLayer: a selection containing a single group\n *     to draw these traces into\n * @param {array} cdModule: array of calcdata items for this\n *     module and subplot combination. Assumes the calcdata item for each\n *     trace is an array with the fullData trace attached to the first item.\n * @param {string} cls: the class attribute to give each trace group\n *     so you can give multiple classes separated by spaces\n */\nmodule.exports = function makeTraceGroups(traceLayer, cdModule, cls) {\n    var traces = traceLayer.selectAll('g.' + cls.replace(/\\s/g, '.'))\n        .data(cdModule, function(cd) { return cd[0].trace.uid; });\n\n    traces.exit().remove();\n\n    traces.enter().append('g')\n        .attr('class', cls);\n\n    traces.order();\n\n    // stash ref node to trace group in calcdata,\n    // useful for (fast) styleOnSelect\n    var k = traceLayer.classed('rangeplot') ? 'nodeRangePlot3' : 'node3';\n    traces.each(function(cd) { cd[0][k] = d3.select(this); });\n\n    return traces;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,eAAeA,CAACC,UAAU,EAAEC,QAAQ,EAAEC,GAAG,EAAE;EACjE,IAAIC,MAAM,GAAGH,UAAU,CAACI,SAAS,CAAC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAC5DC,IAAI,CAACL,QAAQ,EAAE,UAASM,EAAE,EAAE;IAAE,OAAOA,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG;EAAE,CAAC,CAAC;EAE7DN,MAAM,CAACO,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EAEtBR,MAAM,CAACS,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CACrBC,IAAI,CAAC,OAAO,EAAEZ,GAAG,CAAC;EAEvBC,MAAM,CAACY,KAAK,CAAC,CAAC;;EAEd;EACA;EACA,IAAIC,CAAC,GAAGhB,UAAU,CAACiB,OAAO,CAAC,WAAW,CAAC,GAAG,gBAAgB,GAAG,OAAO;EACpEd,MAAM,CAACe,IAAI,CAAC,UAASX,EAAE,EAAE;IAAEA,EAAE,CAAC,CAAC,CAAC,CAACS,CAAC,CAAC,GAAGrB,EAAE,CAACwB,MAAM,CAAC,IAAI,CAAC;EAAE,CAAC,CAAC;EAEzD,OAAOhB,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}