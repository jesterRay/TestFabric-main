{"ast":null,"code":"'use strict';\n\nvar Color = require('../../components/color');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nfunction averageColors(colorscale) {\n  var color = Color.interpolate(colorscale[0][1], colorscale[1][1], 0.5);\n  for (var i = 2; i < colorscale.length; i++) {\n    var averageColorI = Color.interpolate(colorscale[i - 1][1], colorscale[i][1], 0.5);\n    color = Color.interpolate(color, averageColorI, colorscale[i - 1][0] / colorscale[i][0]);\n  }\n  return color;\n}\nmodule.exports = function fillColorDefaults(traceIn, traceOut, defaultColor, coerce, opts) {\n  if (!opts) opts = {};\n  var inheritColorFromMarker = false;\n  if (traceOut.marker) {\n    // don't try to inherit a color array\n    var markerColor = traceOut.marker.color;\n    var markerLineColor = (traceOut.marker.line || {}).color;\n    if (markerColor && !isArrayOrTypedArray(markerColor)) {\n      inheritColorFromMarker = markerColor;\n    } else if (markerLineColor && !isArrayOrTypedArray(markerLineColor)) {\n      inheritColorFromMarker = markerLineColor;\n    }\n  }\n  var averageGradientColor;\n  if (opts.moduleHasFillgradient) {\n    var gradientOrientation = coerce('fillgradient.type');\n    if (gradientOrientation !== 'none') {\n      coerce('fillgradient.start');\n      coerce('fillgradient.stop');\n      var gradientColorscale = coerce('fillgradient.colorscale');\n\n      // if a fillgradient is specified, we use the average gradient color\n      // to specify fillcolor after all other more specific candidates\n      // are considered, but before the global default color.\n      // fillcolor affects the background color of the hoverlabel in this case.\n      if (gradientColorscale) {\n        averageGradientColor = averageColors(gradientColorscale);\n      }\n    }\n  }\n  coerce('fillcolor', Color.addOpacity((traceOut.line || {}).color || inheritColorFromMarker || averageGradientColor || defaultColor, 0.5));\n};","map":{"version":3,"names":["Color","require","isArrayOrTypedArray","averageColors","colorscale","color","interpolate","i","length","averageColorI","module","exports","fillColorDefaults","traceIn","traceOut","defaultColor","coerce","opts","inheritColorFromMarker","marker","markerColor","markerLineColor","line","averageGradientColor","moduleHasFillgradient","gradientOrientation","gradientColorscale","addOpacity"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scatter/fillcolor_defaults.js"],"sourcesContent":["'use strict';\n\nvar Color = require('../../components/color');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nfunction averageColors(colorscale) {\n    var color = Color.interpolate(colorscale[0][1], colorscale[1][1], 0.5);\n    for(var i = 2; i < colorscale.length; i++) {\n        var averageColorI = Color.interpolate(colorscale[i - 1][1], colorscale[i][1], 0.5);\n        color = Color.interpolate(color, averageColorI, colorscale[i - 1][0] / colorscale[i][0]);\n    }\n    return color;\n}\n\nmodule.exports = function fillColorDefaults(traceIn, traceOut, defaultColor, coerce, opts) {\n    if(!opts) opts = {};\n\n    var inheritColorFromMarker = false;\n\n    if(traceOut.marker) {\n        // don't try to inherit a color array\n        var markerColor = traceOut.marker.color;\n        var markerLineColor = (traceOut.marker.line || {}).color;\n\n        if(markerColor && !isArrayOrTypedArray(markerColor)) {\n            inheritColorFromMarker = markerColor;\n        } else if(markerLineColor && !isArrayOrTypedArray(markerLineColor)) {\n            inheritColorFromMarker = markerLineColor;\n        }\n    }\n\n    var averageGradientColor;\n    if(opts.moduleHasFillgradient) {\n        var gradientOrientation = coerce('fillgradient.type');\n        if(gradientOrientation !== 'none') {\n            coerce('fillgradient.start');\n            coerce('fillgradient.stop');\n            var gradientColorscale = coerce('fillgradient.colorscale');\n\n            // if a fillgradient is specified, we use the average gradient color\n            // to specify fillcolor after all other more specific candidates\n            // are considered, but before the global default color.\n            // fillcolor affects the background color of the hoverlabel in this case.\n            if(gradientColorscale) {\n                averageGradientColor = averageColors(gradientColorscale);\n            }\n        }\n    }\n\n    coerce('fillcolor', Color.addOpacity(\n        (traceOut.line || {}).color ||\n        inheritColorFromMarker ||\n        averageGradientColor ||\n        defaultColor, 0.5\n    ));\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAC7C,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,mBAAmB;AAElE,SAASC,aAAaA,CAACC,UAAU,EAAE;EAC/B,IAAIC,KAAK,GAAGL,KAAK,CAACM,WAAW,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;EACtE,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,IAAIE,aAAa,GAAGT,KAAK,CAACM,WAAW,CAACF,UAAU,CAACG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEH,UAAU,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;IAClFF,KAAK,GAAGL,KAAK,CAACM,WAAW,CAACD,KAAK,EAAEI,aAAa,EAAEL,UAAU,CAACG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,UAAU,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5F;EACA,OAAOF,KAAK;AAChB;AAEAK,MAAM,CAACC,OAAO,GAAG,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACvF,IAAG,CAACA,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EAEnB,IAAIC,sBAAsB,GAAG,KAAK;EAElC,IAAGJ,QAAQ,CAACK,MAAM,EAAE;IAChB;IACA,IAAIC,WAAW,GAAGN,QAAQ,CAACK,MAAM,CAACd,KAAK;IACvC,IAAIgB,eAAe,GAAG,CAACP,QAAQ,CAACK,MAAM,CAACG,IAAI,IAAI,CAAC,CAAC,EAAEjB,KAAK;IAExD,IAAGe,WAAW,IAAI,CAAClB,mBAAmB,CAACkB,WAAW,CAAC,EAAE;MACjDF,sBAAsB,GAAGE,WAAW;IACxC,CAAC,MAAM,IAAGC,eAAe,IAAI,CAACnB,mBAAmB,CAACmB,eAAe,CAAC,EAAE;MAChEH,sBAAsB,GAAGG,eAAe;IAC5C;EACJ;EAEA,IAAIE,oBAAoB;EACxB,IAAGN,IAAI,CAACO,qBAAqB,EAAE;IAC3B,IAAIC,mBAAmB,GAAGT,MAAM,CAAC,mBAAmB,CAAC;IACrD,IAAGS,mBAAmB,KAAK,MAAM,EAAE;MAC/BT,MAAM,CAAC,oBAAoB,CAAC;MAC5BA,MAAM,CAAC,mBAAmB,CAAC;MAC3B,IAAIU,kBAAkB,GAAGV,MAAM,CAAC,yBAAyB,CAAC;;MAE1D;MACA;MACA;MACA;MACA,IAAGU,kBAAkB,EAAE;QACnBH,oBAAoB,GAAGpB,aAAa,CAACuB,kBAAkB,CAAC;MAC5D;IACJ;EACJ;EAEAV,MAAM,CAAC,WAAW,EAAEhB,KAAK,CAAC2B,UAAU,CAChC,CAACb,QAAQ,CAACQ,IAAI,IAAI,CAAC,CAAC,EAAEjB,KAAK,IAC3Ba,sBAAsB,IACtBK,oBAAoB,IACpBR,YAAY,EAAE,GAClB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}