{"ast":null,"code":"'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\nvar domainAttrs = require('../../plots/domain').attributes;\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../../components/color/attributes');\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar pattern = require('../../components/drawing/attributes').pattern;\nvar textFontAttrs = fontAttrs({\n  editType: 'plot',\n  arrayOk: true,\n  colorEditType: 'plot',\n  description: 'Sets the font used for `textinfo`.'\n});\nmodule.exports = {\n  labels: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the sector labels.', 'If `labels` entries are duplicated, we sum associated `values`', 'or simply count occurrences if `values` is not provided.', 'For other array attributes (including color) we use the first', 'non-empty entry among all occurrences of the label.'].join(' ')\n  },\n  // equivalent of x0 and dx, if label is missing\n  label0: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'calc',\n    description: ['Alternate to `labels`.', 'Builds a numeric set of labels.', 'Use with `dlabel`', 'where `label0` is the starting label and `dlabel` the step.'].join(' ')\n  },\n  dlabel: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: 'Sets the label step. See `label0` for more info.'\n  },\n  values: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the values of the sectors.', 'If omitted, we count occurrences of each label.'].join(' ')\n  },\n  marker: {\n    colors: {\n      valType: 'data_array',\n      // TODO 'color_array' ?\n      editType: 'calc',\n      description: ['Sets the color of each sector.', 'If not specified, the default trace color set is used', 'to pick the sector colors.'].join(' ')\n    },\n    line: {\n      color: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        arrayOk: true,\n        editType: 'style',\n        description: ['Sets the color of the line enclosing each sector.'].join(' ')\n      },\n      width: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        arrayOk: true,\n        editType: 'style',\n        description: ['Sets the width (in px) of the line enclosing each sector.'].join(' ')\n      },\n      editType: 'calc'\n    },\n    pattern: pattern,\n    editType: 'calc'\n  },\n  text: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: ['Sets text elements associated with each sector.', 'If trace `textinfo` contains a *text* flag, these elements will be seen', 'on the chart.', 'If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,', 'these elements will be seen in the hover labels.'].join(' ')\n  },\n  hovertext: {\n    valType: 'string',\n    dflt: '',\n    arrayOk: true,\n    editType: 'style',\n    description: ['Sets hover text elements associated with each sector.', 'If a single string, the same string appears for', 'all data points.', 'If an array of string, the items are mapped in order of', 'this trace\\'s sectors.', 'To be seen, trace `hoverinfo` must contain a *text* flag.'].join(' ')\n  },\n  // 'see eg:'\n  // 'https://www.e-education.psu.edu/natureofgeoinfo/sites/www.e-education.psu.edu.natureofgeoinfo/files/image/hisp_pies.gif',\n  // '(this example involves a map too - may someday be a whole trace type',\n  // 'of its own. but the point is the size of the whole pie is important.)'\n  scalegroup: {\n    valType: 'string',\n    dflt: '',\n    editType: 'calc',\n    description: ['If there are multiple pie charts that should be sized according to', 'their totals, link them by providing a non-empty group id here', 'shared by every trace in the same group.'].join(' ')\n  },\n  // labels (legend is handled by plots.attributes.showlegend and layout.hiddenlabels)\n  textinfo: {\n    valType: 'flaglist',\n    flags: ['label', 'text', 'value', 'percent'],\n    extras: ['none'],\n    editType: 'calc',\n    description: ['Determines which trace information appear on the graph.'].join(' ')\n  },\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    flags: ['label', 'text', 'value', 'percent', 'name']\n  }),\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: ['label', 'color', 'value', 'percent', 'text']\n  }),\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: ['label', 'color', 'value', 'percent', 'text']\n  }),\n  textposition: {\n    valType: 'enumerated',\n    values: ['inside', 'outside', 'auto', 'none'],\n    dflt: 'auto',\n    arrayOk: true,\n    editType: 'plot',\n    description: ['Specifies the location of the `textinfo`.'].join(' ')\n  },\n  textfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `textinfo`.'\n  }),\n  insidetextorientation: {\n    valType: 'enumerated',\n    values: ['horizontal', 'radial', 'tangential', 'auto'],\n    dflt: 'auto',\n    editType: 'plot',\n    description: ['Controls the orientation of the text inside chart sectors.', 'When set to *auto*, text may be oriented in any direction in order', 'to be as big as possible in the middle of a sector.', 'The *horizontal* option orients text to be parallel with the bottom', 'of the chart, and may make text smaller in order to achieve that goal.', 'The *radial* option orients text along the radius of the sector.', 'The *tangential* option orients text perpendicular to the radius of the sector.'].join(' ')\n  },\n  insidetextfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `textinfo` lying inside the sector.'\n  }),\n  outsidetextfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `textinfo` lying outside the sector.'\n  }),\n  automargin: {\n    valType: 'boolean',\n    dflt: false,\n    editType: 'plot',\n    description: ['Determines whether outside text labels can push the margins.'].join(' ')\n  },\n  title: {\n    text: {\n      valType: 'string',\n      dflt: '',\n      editType: 'plot',\n      description: ['Sets the title of the chart.', 'If it is empty, no title is displayed.', 'Note that before the existence of `title.text`, the title\\'s', 'contents used to be defined as the `title` attribute itself.', 'This behavior has been deprecated.'].join(' ')\n    },\n    font: extendFlat({}, textFontAttrs, {\n      description: ['Sets the font used for `title`.', 'Note that the title\\'s font used to be set', 'by the now deprecated `titlefont` attribute.'].join(' ')\n    }),\n    position: {\n      valType: 'enumerated',\n      values: ['top left', 'top center', 'top right', 'middle center', 'bottom left', 'bottom center', 'bottom right'],\n      editType: 'plot',\n      description: ['Specifies the location of the `title`.', 'Note that the title\\'s position used to be set', 'by the now deprecated `titleposition` attribute.'].join(' ')\n    },\n    editType: 'plot'\n  },\n  // position and shape\n  domain: domainAttrs({\n    name: 'pie',\n    trace: true,\n    editType: 'calc'\n  }),\n  hole: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 0,\n    editType: 'calc',\n    description: ['Sets the fraction of the radius to cut out of the pie.', 'Use this to make a donut chart.'].join(' ')\n  },\n  // ordering and direction\n  sort: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not the sectors are reordered', 'from largest to smallest.'].join(' ')\n  },\n  direction: {\n    /**\n     * there are two common conventions, both of which place the first\n     * (largest, if sorted) slice with its left edge at 12 o'clock but\n     * succeeding slices follow either cw or ccw from there.\n     *\n     * see http://visage.co/data-visualization-101-pie-charts/\n     */\n    valType: 'enumerated',\n    values: ['clockwise', 'counterclockwise'],\n    dflt: 'counterclockwise',\n    editType: 'calc',\n    description: ['Specifies the direction at which succeeding sectors follow', 'one another.'].join(' ')\n  },\n  rotation: {\n    valType: 'angle',\n    dflt: 0,\n    editType: 'calc',\n    description: ['Instead of the first slice starting at 12 o\\'clock,', 'rotate to some other angle.'].join(' ')\n  },\n  pull: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 0,\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Sets the fraction of larger radius to pull the sectors', 'out from the center. This can be a constant', 'to pull all slices apart from each other equally', 'or an array to highlight one or more slices.'].join(' ')\n  },\n  _deprecated: {\n    title: {\n      valType: 'string',\n      dflt: '',\n      editType: 'calc',\n      description: ['Deprecated in favor of `title.text`.', 'Note that value of `title` is no longer a simple', '*string* but a set of sub-attributes.'].join(' ')\n    },\n    titlefont: extendFlat({}, textFontAttrs, {\n      description: 'Deprecated in favor of `title.font`.'\n    }),\n    titleposition: {\n      valType: 'enumerated',\n      values: ['top left', 'top center', 'top right', 'middle center', 'bottom left', 'bottom center', 'bottom right'],\n      editType: 'calc',\n      description: 'Deprecated in favor of `title.position`.'\n    }\n  }\n};","map":{"version":3,"names":["baseAttrs","require","domainAttrs","attributes","fontAttrs","colorAttrs","hovertemplateAttrs","texttemplateAttrs","extendFlat","pattern","textFontAttrs","editType","arrayOk","colorEditType","description","module","exports","labels","valType","join","label0","dflt","dlabel","values","marker","colors","line","color","defaultLine","width","min","text","hovertext","scalegroup","textinfo","flags","extras","hoverinfo","hovertemplate","keys","texttemplate","textposition","textfont","insidetextorientation","insidetextfont","outsidetextfont","automargin","title","font","position","domain","name","trace","hole","max","sort","direction","rotation","pull","_deprecated","titlefont","titleposition"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/pie/attributes.js"],"sourcesContent":["'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\nvar domainAttrs = require('../../plots/domain').attributes;\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../../components/color/attributes');\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar pattern = require('../../components/drawing/attributes').pattern;\n\nvar textFontAttrs = fontAttrs({\n    editType: 'plot',\n    arrayOk: true,\n    colorEditType: 'plot',\n    description: 'Sets the font used for `textinfo`.'\n});\n\nmodule.exports = {\n    labels: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the sector labels.',\n            'If `labels` entries are duplicated, we sum associated `values`',\n            'or simply count occurrences if `values` is not provided.',\n            'For other array attributes (including color) we use the first',\n            'non-empty entry among all occurrences of the label.'\n        ].join(' ')\n    },\n    // equivalent of x0 and dx, if label is missing\n    label0: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Alternate to `labels`.',\n            'Builds a numeric set of labels.',\n            'Use with `dlabel`',\n            'where `label0` is the starting label and `dlabel` the step.'\n        ].join(' ')\n    },\n    dlabel: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: 'Sets the label step. See `label0` for more info.'\n    },\n\n    values: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the values of the sectors.',\n            'If omitted, we count occurrences of each label.'\n        ].join(' ')\n    },\n\n    marker: {\n        colors: {\n            valType: 'data_array',  // TODO 'color_array' ?\n            editType: 'calc',\n            description: [\n                'Sets the color of each sector.',\n                'If not specified, the default trace color set is used',\n                'to pick the sector colors.'\n            ].join(' ')\n        },\n\n        line: {\n            color: {\n                valType: 'color',\n                dflt: colorAttrs.defaultLine,\n                arrayOk: true,\n                editType: 'style',\n                description: [\n                    'Sets the color of the line enclosing each sector.'\n                ].join(' ')\n            },\n            width: {\n                valType: 'number',\n                min: 0,\n                dflt: 0,\n                arrayOk: true,\n                editType: 'style',\n                description: [\n                    'Sets the width (in px) of the line enclosing each sector.'\n                ].join(' ')\n            },\n            editType: 'calc'\n        },\n        pattern: pattern,\n        editType: 'calc'\n    },\n\n    text: {\n        valType: 'data_array',\n        editType: 'plot',\n        description: [\n            'Sets text elements associated with each sector.',\n            'If trace `textinfo` contains a *text* flag, these elements will be seen',\n            'on the chart.',\n            'If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,',\n            'these elements will be seen in the hover labels.'\n        ].join(' ')\n    },\n    hovertext: {\n        valType: 'string',\n        dflt: '',\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'Sets hover text elements associated with each sector.',\n            'If a single string, the same string appears for',\n            'all data points.',\n            'If an array of string, the items are mapped in order of',\n            'this trace\\'s sectors.',\n            'To be seen, trace `hoverinfo` must contain a *text* flag.'\n        ].join(' ')\n    },\n\n// 'see eg:'\n// 'https://www.e-education.psu.edu/natureofgeoinfo/sites/www.e-education.psu.edu.natureofgeoinfo/files/image/hisp_pies.gif',\n// '(this example involves a map too - may someday be a whole trace type',\n// 'of its own. but the point is the size of the whole pie is important.)'\n    scalegroup: {\n        valType: 'string',\n        dflt: '',\n        editType: 'calc',\n        description: [\n            'If there are multiple pie charts that should be sized according to',\n            'their totals, link them by providing a non-empty group id here',\n            'shared by every trace in the same group.'\n        ].join(' ')\n    },\n\n    // labels (legend is handled by plots.attributes.showlegend and layout.hiddenlabels)\n    textinfo: {\n        valType: 'flaglist',\n        flags: ['label', 'text', 'value', 'percent'],\n        extras: ['none'],\n        editType: 'calc',\n        description: [\n            'Determines which trace information appear on the graph.'\n        ].join(' ')\n    },\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n        flags: ['label', 'text', 'value', 'percent', 'name']\n    }),\n    hovertemplate: hovertemplateAttrs({}, {\n        keys: ['label', 'color', 'value', 'percent', 'text']\n    }),\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\n        keys: ['label', 'color', 'value', 'percent', 'text']\n    }),\n    textposition: {\n        valType: 'enumerated',\n        values: ['inside', 'outside', 'auto', 'none'],\n        dflt: 'auto',\n        arrayOk: true,\n        editType: 'plot',\n        description: [\n            'Specifies the location of the `textinfo`.'\n        ].join(' ')\n    },\n    textfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `textinfo`.'\n    }),\n    insidetextorientation: {\n        valType: 'enumerated',\n        values: ['horizontal', 'radial', 'tangential', 'auto'],\n        dflt: 'auto',\n        editType: 'plot',\n        description: [\n            'Controls the orientation of the text inside chart sectors.',\n            'When set to *auto*, text may be oriented in any direction in order',\n            'to be as big as possible in the middle of a sector.',\n            'The *horizontal* option orients text to be parallel with the bottom',\n            'of the chart, and may make text smaller in order to achieve that goal.',\n            'The *radial* option orients text along the radius of the sector.',\n            'The *tangential* option orients text perpendicular to the radius of the sector.'\n        ].join(' ')\n    },\n    insidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `textinfo` lying inside the sector.'\n    }),\n    outsidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `textinfo` lying outside the sector.'\n    }),\n    automargin: {\n        valType: 'boolean',\n        dflt: false,\n        editType: 'plot',\n        description: [\n            'Determines whether outside text labels can push the margins.'\n        ].join(' ')\n    },\n\n    title: {\n        text: {\n            valType: 'string',\n            dflt: '',\n            editType: 'plot',\n            description: [\n                'Sets the title of the chart.',\n                'If it is empty, no title is displayed.',\n                'Note that before the existence of `title.text`, the title\\'s',\n                'contents used to be defined as the `title` attribute itself.',\n                'This behavior has been deprecated.'\n            ].join(' ')\n        },\n        font: extendFlat({}, textFontAttrs, {\n            description: [\n                'Sets the font used for `title`.',\n                'Note that the title\\'s font used to be set',\n                'by the now deprecated `titlefont` attribute.'\n            ].join(' ')\n        }),\n        position: {\n            valType: 'enumerated',\n            values: [\n                'top left', 'top center', 'top right',\n                'middle center',\n                'bottom left', 'bottom center', 'bottom right'\n            ],\n            editType: 'plot',\n            description: [\n                'Specifies the location of the `title`.',\n                'Note that the title\\'s position used to be set',\n                'by the now deprecated `titleposition` attribute.'\n            ].join(' ')\n        },\n\n        editType: 'plot'\n    },\n\n    // position and shape\n    domain: domainAttrs({name: 'pie', trace: true, editType: 'calc'}),\n\n    hole: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Sets the fraction of the radius to cut out of the pie.',\n            'Use this to make a donut chart.'\n        ].join(' ')\n    },\n\n    // ordering and direction\n    sort: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not the sectors are reordered',\n            'from largest to smallest.'\n        ].join(' ')\n    },\n    direction: {\n        /**\n         * there are two common conventions, both of which place the first\n         * (largest, if sorted) slice with its left edge at 12 o'clock but\n         * succeeding slices follow either cw or ccw from there.\n         *\n         * see http://visage.co/data-visualization-101-pie-charts/\n         */\n        valType: 'enumerated',\n        values: ['clockwise', 'counterclockwise'],\n        dflt: 'counterclockwise',\n        editType: 'calc',\n        description: [\n            'Specifies the direction at which succeeding sectors follow',\n            'one another.'\n        ].join(' ')\n    },\n    rotation: {\n        valType: 'angle',\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Instead of the first slice starting at 12 o\\'clock,',\n            'rotate to some other angle.'\n        ].join(' ')\n    },\n\n    pull: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0,\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Sets the fraction of larger radius to pull the sectors',\n            'out from the center. This can be a constant',\n            'to pull all slices apart from each other equally',\n            'or an array to highlight one or more slices.'\n        ].join(' ')\n    },\n\n    _deprecated: {\n        title: {\n            valType: 'string',\n            dflt: '',\n            editType: 'calc',\n            description: [\n                'Deprecated in favor of `title.text`.',\n                'Note that value of `title` is no longer a simple',\n                '*string* but a set of sub-attributes.'\n            ].join(' ')\n        },\n        titlefont: extendFlat({}, textFontAttrs, {\n            description: 'Deprecated in favor of `title.font`.'\n        }),\n        titleposition: {\n            valType: 'enumerated',\n            values: [\n                'top left', 'top center', 'top right',\n                'middle center',\n                'bottom left', 'bottom center', 'bottom right'\n            ],\n            editType: 'calc',\n            description: 'Deprecated in favor of `title.position`.'\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}