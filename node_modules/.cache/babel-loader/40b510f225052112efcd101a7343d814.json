{"ast":null,"code":"'use strict';\n\nvar cleanTicks = require('./clean_ticks');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar isTypedArraySpec = require('../../lib/array').isTypedArraySpec;\nvar decodeTypedArraySpec = require('../../lib/array').decodeTypedArraySpec;\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType, opts) {\n  if (!opts) opts = {};\n  var isMinor = opts.isMinor;\n  var cIn = isMinor ? containerIn.minor || {} : containerIn;\n  var cOut = isMinor ? containerOut.minor : containerOut;\n  var prefix = isMinor ? 'minor.' : '';\n  function readInput(attr) {\n    var v = cIn[attr];\n    if (isTypedArraySpec(v)) v = decodeTypedArraySpec(v);\n    return v !== undefined ? v : (cOut._template || {})[attr];\n  }\n  var _tick0 = readInput('tick0');\n  var _dtick = readInput('dtick');\n  var _tickvals = readInput('tickvals');\n  var tickmodeDefault = isArrayOrTypedArray(_tickvals) ? 'array' : _dtick ? 'linear' : 'auto';\n  var tickmode = coerce(prefix + 'tickmode', tickmodeDefault);\n  if (tickmode === 'auto' || tickmode === 'sync') {\n    coerce(prefix + 'nticks');\n  } else if (tickmode === 'linear') {\n    // dtick is usually a positive number, but there are some\n    // special strings available for log or date axes\n    // tick0 also has special logic\n    var dtick = cOut.dtick = cleanTicks.dtick(_dtick, axType);\n    cOut.tick0 = cleanTicks.tick0(_tick0, axType, containerOut.calendar, dtick);\n  } else if (axType !== 'multicategory') {\n    var tickvals = coerce(prefix + 'tickvals');\n    if (tickvals === undefined) cOut.tickmode = 'auto';else if (!isMinor) coerce('ticktext');\n  }\n};","map":{"version":3,"names":["cleanTicks","require","isArrayOrTypedArray","isTypedArraySpec","decodeTypedArraySpec","module","exports","handleTickValueDefaults","containerIn","containerOut","coerce","axType","opts","isMinor","cIn","minor","cOut","prefix","readInput","attr","v","undefined","_template","_tick0","_dtick","_tickvals","tickmodeDefault","tickmode","dtick","tick0","calendar","tickvals"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/cartesian/tick_value_defaults.js"],"sourcesContent":["'use strict';\n\nvar cleanTicks = require('./clean_ticks');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar isTypedArraySpec = require('../../lib/array').isTypedArraySpec;\nvar decodeTypedArraySpec = require('../../lib/array').decodeTypedArraySpec;\n\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType, opts) {\n    if(!opts) opts = {};\n    var isMinor = opts.isMinor;\n    var cIn = isMinor ? containerIn.minor || {} : containerIn;\n    var cOut = isMinor ? containerOut.minor : containerOut;\n    var prefix = isMinor ? 'minor.' : '';\n\n    function readInput(attr) {\n        var v = cIn[attr];\n        if(isTypedArraySpec(v)) v = decodeTypedArraySpec(v);\n\n        return (\n            v !== undefined\n        ) ? v : (cOut._template || {})[attr];\n    }\n\n    var _tick0 = readInput('tick0');\n    var _dtick = readInput('dtick');\n    var _tickvals = readInput('tickvals');\n\n    var tickmodeDefault = isArrayOrTypedArray(_tickvals) ? 'array' :\n        _dtick ? 'linear' :\n        'auto';\n    var tickmode = coerce(prefix + 'tickmode', tickmodeDefault);\n\n    if(tickmode === 'auto' || tickmode === 'sync') {\n        coerce(prefix + 'nticks');\n    } else if(tickmode === 'linear') {\n        // dtick is usually a positive number, but there are some\n        // special strings available for log or date axes\n        // tick0 also has special logic\n        var dtick = cOut.dtick = cleanTicks.dtick(\n            _dtick, axType);\n        cOut.tick0 = cleanTicks.tick0(\n            _tick0, axType, containerOut.calendar, dtick);\n    } else if(axType !== 'multicategory') {\n        var tickvals = coerce(prefix + 'tickvals');\n        if(tickvals === undefined) cOut.tickmode = 'auto';\n        else if(!isMinor) coerce('ticktext');\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AACzC,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,mBAAmB;AAClE,IAAIC,gBAAgB,GAAGF,OAAO,CAAC,iBAAiB,CAAC,CAACE,gBAAgB;AAClE,IAAIC,oBAAoB,GAAGH,OAAO,CAAC,iBAAiB,CAAC,CAACG,oBAAoB;AAE1EC,MAAM,CAACC,OAAO,GAAG,SAASC,uBAAuBA,CAACC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE;EAC/F,IAAG,CAACA,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACnB,IAAIC,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC1B,IAAIC,GAAG,GAAGD,OAAO,GAAGL,WAAW,CAACO,KAAK,IAAI,CAAC,CAAC,GAAGP,WAAW;EACzD,IAAIQ,IAAI,GAAGH,OAAO,GAAGJ,YAAY,CAACM,KAAK,GAAGN,YAAY;EACtD,IAAIQ,MAAM,GAAGJ,OAAO,GAAG,QAAQ,GAAG,EAAE;EAEpC,SAASK,SAASA,CAACC,IAAI,EAAE;IACrB,IAAIC,CAAC,GAAGN,GAAG,CAACK,IAAI,CAAC;IACjB,IAAGhB,gBAAgB,CAACiB,CAAC,CAAC,EAAEA,CAAC,GAAGhB,oBAAoB,CAACgB,CAAC,CAAC;IAEnD,OACIA,CAAC,KAAKC,SAAS,GACfD,CAAC,GAAG,CAACJ,IAAI,CAACM,SAAS,IAAI,CAAC,CAAC,EAAEH,IAAI,CAAC;EACxC;EAEA,IAAII,MAAM,GAAGL,SAAS,CAAC,OAAO,CAAC;EAC/B,IAAIM,MAAM,GAAGN,SAAS,CAAC,OAAO,CAAC;EAC/B,IAAIO,SAAS,GAAGP,SAAS,CAAC,UAAU,CAAC;EAErC,IAAIQ,eAAe,GAAGxB,mBAAmB,CAACuB,SAAS,CAAC,GAAG,OAAO,GAC1DD,MAAM,GAAG,QAAQ,GACjB,MAAM;EACV,IAAIG,QAAQ,GAAGjB,MAAM,CAACO,MAAM,GAAG,UAAU,EAAES,eAAe,CAAC;EAE3D,IAAGC,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,MAAM,EAAE;IAC3CjB,MAAM,CAACO,MAAM,GAAG,QAAQ,CAAC;EAC7B,CAAC,MAAM,IAAGU,QAAQ,KAAK,QAAQ,EAAE;IAC7B;IACA;IACA;IACA,IAAIC,KAAK,GAAGZ,IAAI,CAACY,KAAK,GAAG5B,UAAU,CAAC4B,KAAK,CACrCJ,MAAM,EAAEb,MAAM,CAAC;IACnBK,IAAI,CAACa,KAAK,GAAG7B,UAAU,CAAC6B,KAAK,CACzBN,MAAM,EAAEZ,MAAM,EAAEF,YAAY,CAACqB,QAAQ,EAAEF,KAAK,CAAC;EACrD,CAAC,MAAM,IAAGjB,MAAM,KAAK,eAAe,EAAE;IAClC,IAAIoB,QAAQ,GAAGrB,MAAM,CAACO,MAAM,GAAG,UAAU,CAAC;IAC1C,IAAGc,QAAQ,KAAKV,SAAS,EAAEL,IAAI,CAACW,QAAQ,GAAG,MAAM,CAAC,KAC7C,IAAG,CAACd,OAAO,EAAEH,MAAM,CAAC,UAAU,CAAC;EACxC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}