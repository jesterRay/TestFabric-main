{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Registry = require('../../registry');\nvar appendArrayPointValue = require('../../components/fx/helpers').appendArrayPointValue;\nvar Fx = require('../../components/fx');\nvar Lib = require('../../lib');\nvar Events = require('../../lib/events');\nvar helpers = require('./helpers');\nvar pieHelpers = require('../pie/helpers');\nvar formatValue = pieHelpers.formatPieValue;\nmodule.exports = function attachFxHandlers(sliceTop, entry, gd, cd, opts) {\n  var cd0 = cd[0];\n  var trace = cd0.trace;\n  var hierarchy = cd0.hierarchy;\n  var isSunburst = trace.type === 'sunburst';\n  var isTreemapOrIcicle = trace.type === 'treemap' || trace.type === 'icicle';\n\n  // hover state vars\n  // have we drawn a hover label, so it should be cleared later\n  if (!('_hasHoverLabel' in trace)) trace._hasHoverLabel = false;\n  // have we emitted a hover event, so later an unhover event should be emitted\n  // note that click events do not depend on this - you can still get them\n  // with hovermode: false or if you were earlier dragging, then clicked\n  // in the same slice that you moused up in\n  if (!('_hasHoverEvent' in trace)) trace._hasHoverEvent = false;\n  var onMouseOver = function (pt) {\n    var fullLayoutNow = gd._fullLayout;\n    if (gd._dragging || fullLayoutNow.hovermode === false) return;\n    var traceNow = gd._fullData[trace.index];\n    var cdi = pt.data.data;\n    var ptNumber = cdi.i;\n    var isRoot = helpers.isHierarchyRoot(pt);\n    var parent = helpers.getParent(hierarchy, pt);\n    var val = helpers.getValue(pt);\n    var _cast = function (astr) {\n      return Lib.castOption(traceNow, ptNumber, astr);\n    };\n    var hovertemplate = _cast('hovertemplate');\n    var hoverinfo = Fx.castHoverinfo(traceNow, fullLayoutNow, ptNumber);\n    var separators = fullLayoutNow.separators;\n    var eventData;\n    if (hovertemplate || hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip') {\n      var hoverCenterX;\n      var hoverCenterY;\n      if (isSunburst) {\n        hoverCenterX = cd0.cx + pt.pxmid[0] * (1 - pt.rInscribed);\n        hoverCenterY = cd0.cy + pt.pxmid[1] * (1 - pt.rInscribed);\n      }\n      if (isTreemapOrIcicle) {\n        hoverCenterX = pt._hoverX;\n        hoverCenterY = pt._hoverY;\n      }\n      var hoverPt = {};\n      var parts = [];\n      var thisText = [];\n      var hasFlag = function (flag) {\n        return parts.indexOf(flag) !== -1;\n      };\n      if (hoverinfo) {\n        parts = hoverinfo === 'all' ? traceNow._module.attributes.hoverinfo.flags : hoverinfo.split('+');\n      }\n      hoverPt.label = cdi.label;\n      if (hasFlag('label') && hoverPt.label) thisText.push(hoverPt.label);\n      if (cdi.hasOwnProperty('v')) {\n        hoverPt.value = cdi.v;\n        hoverPt.valueLabel = formatValue(hoverPt.value, separators);\n        if (hasFlag('value')) thisText.push(hoverPt.valueLabel);\n      }\n      hoverPt.currentPath = pt.currentPath = helpers.getPath(pt.data);\n      if (hasFlag('current path') && !isRoot) {\n        thisText.push(hoverPt.currentPath);\n      }\n      var tx;\n      var allPercents = [];\n      var insertPercent = function () {\n        if (allPercents.indexOf(tx) === -1) {\n          // no need to add redundant info\n          thisText.push(tx);\n          allPercents.push(tx);\n        }\n      };\n      hoverPt.percentParent = pt.percentParent = val / helpers.getValue(parent);\n      hoverPt.parent = pt.parentString = helpers.getPtLabel(parent);\n      if (hasFlag('percent parent')) {\n        tx = helpers.formatPercent(hoverPt.percentParent, separators) + ' of ' + hoverPt.parent;\n        insertPercent();\n      }\n      hoverPt.percentEntry = pt.percentEntry = val / helpers.getValue(entry);\n      hoverPt.entry = pt.entry = helpers.getPtLabel(entry);\n      if (hasFlag('percent entry') && !isRoot && !pt.onPathbar) {\n        tx = helpers.formatPercent(hoverPt.percentEntry, separators) + ' of ' + hoverPt.entry;\n        insertPercent();\n      }\n      hoverPt.percentRoot = pt.percentRoot = val / helpers.getValue(hierarchy);\n      hoverPt.root = pt.root = helpers.getPtLabel(hierarchy);\n      if (hasFlag('percent root') && !isRoot) {\n        tx = helpers.formatPercent(hoverPt.percentRoot, separators) + ' of ' + hoverPt.root;\n        insertPercent();\n      }\n      hoverPt.text = _cast('hovertext') || _cast('text');\n      if (hasFlag('text')) {\n        tx = hoverPt.text;\n        if (Lib.isValidTextValue(tx)) thisText.push(tx);\n      }\n      eventData = [makeEventData(pt, traceNow, opts.eventDataKeys)];\n      var hoverItems = {\n        trace: traceNow,\n        y: hoverCenterY,\n        _x0: pt._x0,\n        _x1: pt._x1,\n        _y0: pt._y0,\n        _y1: pt._y1,\n        text: thisText.join('<br>'),\n        name: hovertemplate || hasFlag('name') ? traceNow.name : undefined,\n        color: _cast('hoverlabel.bgcolor') || cdi.color,\n        borderColor: _cast('hoverlabel.bordercolor'),\n        fontFamily: _cast('hoverlabel.font.family'),\n        fontSize: _cast('hoverlabel.font.size'),\n        fontColor: _cast('hoverlabel.font.color'),\n        fontWeight: _cast('hoverlabel.font.weight'),\n        fontStyle: _cast('hoverlabel.font.style'),\n        fontVariant: _cast('hoverlabel.font.variant'),\n        nameLength: _cast('hoverlabel.namelength'),\n        textAlign: _cast('hoverlabel.align'),\n        hovertemplate: hovertemplate,\n        hovertemplateLabels: hoverPt,\n        eventData: eventData\n      };\n      if (isSunburst) {\n        hoverItems.x0 = hoverCenterX - pt.rInscribed * pt.rpx1;\n        hoverItems.x1 = hoverCenterX + pt.rInscribed * pt.rpx1;\n        hoverItems.idealAlign = pt.pxmid[0] < 0 ? 'left' : 'right';\n      }\n      if (isTreemapOrIcicle) {\n        hoverItems.x = hoverCenterX;\n        hoverItems.idealAlign = hoverCenterX < 0 ? 'left' : 'right';\n      }\n      var bbox = [];\n      Fx.loneHover(hoverItems, {\n        container: fullLayoutNow._hoverlayer.node(),\n        outerContainer: fullLayoutNow._paper.node(),\n        gd: gd,\n        inOut_bbox: bbox\n      });\n      eventData[0].bbox = bbox[0];\n      trace._hasHoverLabel = true;\n    }\n    if (isTreemapOrIcicle) {\n      var slice = sliceTop.select('path.surface');\n      opts.styleOne(slice, pt, traceNow, gd, {\n        hovered: true\n      });\n    }\n    trace._hasHoverEvent = true;\n    gd.emit('plotly_hover', {\n      points: eventData || [makeEventData(pt, traceNow, opts.eventDataKeys)],\n      event: d3.event\n    });\n  };\n  var onMouseOut = function (evt) {\n    var fullLayoutNow = gd._fullLayout;\n    var traceNow = gd._fullData[trace.index];\n    var pt = d3.select(this).datum();\n    if (trace._hasHoverEvent) {\n      evt.originalEvent = d3.event;\n      gd.emit('plotly_unhover', {\n        points: [makeEventData(pt, traceNow, opts.eventDataKeys)],\n        event: d3.event\n      });\n      trace._hasHoverEvent = false;\n    }\n    if (trace._hasHoverLabel) {\n      Fx.loneUnhover(fullLayoutNow._hoverlayer.node());\n      trace._hasHoverLabel = false;\n    }\n    if (isTreemapOrIcicle) {\n      var slice = sliceTop.select('path.surface');\n      opts.styleOne(slice, pt, traceNow, gd, {\n        hovered: false\n      });\n    }\n  };\n  var onClick = function (pt) {\n    // TODO: this does not support right-click. If we want to support it, we\n    // would likely need to change pie to use dragElement instead of straight\n    // map subplots event binding. Or perhaps better, make a simple wrapper with the\n    // right mousedown, mousemove, and mouseup handlers just for a left/right click\n    // map subplots would use this too.\n    var fullLayoutNow = gd._fullLayout;\n    var traceNow = gd._fullData[trace.index];\n    var noTransition = isSunburst && (helpers.isHierarchyRoot(pt) || helpers.isLeaf(pt));\n    var id = helpers.getPtId(pt);\n    var nextEntry = helpers.isEntry(pt) ? helpers.findEntryWithChild(hierarchy, id) : helpers.findEntryWithLevel(hierarchy, id);\n    var nextLevel = helpers.getPtId(nextEntry);\n    var typeClickEvtData = {\n      points: [makeEventData(pt, traceNow, opts.eventDataKeys)],\n      event: d3.event\n    };\n    if (!noTransition) typeClickEvtData.nextLevel = nextLevel;\n    var clickVal = Events.triggerHandler(gd, 'plotly_' + trace.type + 'click', typeClickEvtData);\n    if (clickVal !== false && fullLayoutNow.hovermode) {\n      gd._hoverdata = [makeEventData(pt, traceNow, opts.eventDataKeys)];\n      Fx.click(gd, d3.event);\n    }\n\n    // if click does not trigger a transition, we're done!\n    if (noTransition) return;\n\n    // if custom handler returns false, we're done!\n    if (clickVal === false) return;\n\n    // skip if triggered from dragging a nearby cartesian subplot\n    if (gd._dragging) return;\n\n    // skip during transitions, to avoid potential bugs\n    // we could remove this check later\n    if (gd._transitioning) return;\n\n    // store 'old' level in guiEdit stash, so that subsequent Plotly.react\n    // calls with the same uirevision can start from the same entry\n    Registry.call('_storeDirectGUIEdit', traceNow, fullLayoutNow._tracePreGUI[traceNow.uid], {\n      level: traceNow.level\n    });\n    var frame = {\n      data: [{\n        level: nextLevel\n      }],\n      traces: [trace.index]\n    };\n    var animOpts = {\n      frame: {\n        redraw: false,\n        duration: opts.transitionTime\n      },\n      transition: {\n        duration: opts.transitionTime,\n        easing: opts.transitionEasing\n      },\n      mode: 'immediate',\n      fromcurrent: true\n    };\n    Fx.loneUnhover(fullLayoutNow._hoverlayer.node());\n    Registry.call('animate', gd, frame, animOpts);\n  };\n  sliceTop.on('mouseover', onMouseOver);\n  sliceTop.on('mouseout', onMouseOut);\n  sliceTop.on('click', onClick);\n};\nfunction makeEventData(pt, trace, keys) {\n  var cdi = pt.data.data;\n  var out = {\n    curveNumber: trace.index,\n    pointNumber: cdi.i,\n    data: trace._input,\n    fullData: trace\n\n    // TODO more things like 'children', 'siblings', 'hierarchy?\n  };\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key in pt) out[key] = pt[key];\n  }\n  // handle special case of parent\n  if ('parentString' in pt && !helpers.isHierarchyRoot(pt)) out.parent = pt.parentString;\n  appendArrayPointValue(out, trace, cdi.i);\n  return out;\n}","map":{"version":3,"names":["d3","require","Registry","appendArrayPointValue","Fx","Lib","Events","helpers","pieHelpers","formatValue","formatPieValue","module","exports","attachFxHandlers","sliceTop","entry","gd","cd","opts","cd0","trace","hierarchy","isSunburst","type","isTreemapOrIcicle","_hasHoverLabel","_hasHoverEvent","onMouseOver","pt","fullLayoutNow","_fullLayout","_dragging","hovermode","traceNow","_fullData","index","cdi","data","ptNumber","i","isRoot","isHierarchyRoot","parent","getParent","val","getValue","_cast","astr","castOption","hovertemplate","hoverinfo","castHoverinfo","separators","eventData","hoverCenterX","hoverCenterY","cx","pxmid","rInscribed","cy","_hoverX","_hoverY","hoverPt","parts","thisText","hasFlag","flag","indexOf","_module","attributes","flags","split","label","push","hasOwnProperty","value","v","valueLabel","currentPath","getPath","tx","allPercents","insertPercent","percentParent","parentString","getPtLabel","formatPercent","percentEntry","onPathbar","percentRoot","root","text","isValidTextValue","makeEventData","eventDataKeys","hoverItems","y","_x0","_x1","_y0","_y1","join","name","undefined","color","borderColor","fontFamily","fontSize","fontColor","fontWeight","fontStyle","fontVariant","nameLength","textAlign","hovertemplateLabels","x0","rpx1","x1","idealAlign","x","bbox","loneHover","container","_hoverlayer","node","outerContainer","_paper","inOut_bbox","slice","select","styleOne","hovered","emit","points","event","onMouseOut","evt","datum","originalEvent","loneUnhover","onClick","noTransition","isLeaf","id","getPtId","nextEntry","isEntry","findEntryWithChild","findEntryWithLevel","nextLevel","typeClickEvtData","clickVal","triggerHandler","_hoverdata","click","_transitioning","call","_tracePreGUI","uid","level","frame","traces","animOpts","redraw","duration","transitionTime","transition","easing","transitionEasing","mode","fromcurrent","on","keys","out","curveNumber","pointNumber","_input","fullData","length","key"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/sunburst/fx.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Registry = require('../../registry');\nvar appendArrayPointValue = require('../../components/fx/helpers').appendArrayPointValue;\nvar Fx = require('../../components/fx');\nvar Lib = require('../../lib');\nvar Events = require('../../lib/events');\n\nvar helpers = require('./helpers');\nvar pieHelpers = require('../pie/helpers');\n\nvar formatValue = pieHelpers.formatPieValue;\n\nmodule.exports = function attachFxHandlers(sliceTop, entry, gd, cd, opts) {\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var hierarchy = cd0.hierarchy;\n\n    var isSunburst = trace.type === 'sunburst';\n    var isTreemapOrIcicle =\n        trace.type === 'treemap' ||\n        trace.type === 'icicle';\n\n    // hover state vars\n    // have we drawn a hover label, so it should be cleared later\n    if(!('_hasHoverLabel' in trace)) trace._hasHoverLabel = false;\n    // have we emitted a hover event, so later an unhover event should be emitted\n    // note that click events do not depend on this - you can still get them\n    // with hovermode: false or if you were earlier dragging, then clicked\n    // in the same slice that you moused up in\n    if(!('_hasHoverEvent' in trace)) trace._hasHoverEvent = false;\n\n    var onMouseOver = function(pt) {\n        var fullLayoutNow = gd._fullLayout;\n\n        if(gd._dragging || fullLayoutNow.hovermode === false) return;\n\n        var traceNow = gd._fullData[trace.index];\n        var cdi = pt.data.data;\n        var ptNumber = cdi.i;\n        var isRoot = helpers.isHierarchyRoot(pt);\n        var parent = helpers.getParent(hierarchy, pt);\n\n        var val = helpers.getValue(pt);\n\n        var _cast = function(astr) {\n            return Lib.castOption(traceNow, ptNumber, astr);\n        };\n\n        var hovertemplate = _cast('hovertemplate');\n        var hoverinfo = Fx.castHoverinfo(traceNow, fullLayoutNow, ptNumber);\n        var separators = fullLayoutNow.separators;\n\n        var eventData;\n\n        if(hovertemplate || (hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip')) {\n            var hoverCenterX;\n            var hoverCenterY;\n            if(isSunburst) {\n                hoverCenterX = cd0.cx + pt.pxmid[0] * (1 - pt.rInscribed);\n                hoverCenterY = cd0.cy + pt.pxmid[1] * (1 - pt.rInscribed);\n            }\n            if(isTreemapOrIcicle) {\n                hoverCenterX = pt._hoverX;\n                hoverCenterY = pt._hoverY;\n            }\n\n            var hoverPt = {};\n            var parts = [];\n            var thisText = [];\n            var hasFlag = function(flag) { return parts.indexOf(flag) !== -1; };\n\n            if(hoverinfo) {\n                parts = hoverinfo === 'all' ?\n                    traceNow._module.attributes.hoverinfo.flags :\n                    hoverinfo.split('+');\n            }\n\n            hoverPt.label = cdi.label;\n            if(hasFlag('label') && hoverPt.label) thisText.push(hoverPt.label);\n\n            if(cdi.hasOwnProperty('v')) {\n                hoverPt.value = cdi.v;\n                hoverPt.valueLabel = formatValue(hoverPt.value, separators);\n                if(hasFlag('value')) thisText.push(hoverPt.valueLabel);\n            }\n\n            hoverPt.currentPath = pt.currentPath = helpers.getPath(pt.data);\n            if(hasFlag('current path') && !isRoot) {\n                thisText.push(hoverPt.currentPath);\n            }\n\n            var tx;\n            var allPercents = [];\n            var insertPercent = function() {\n                if(allPercents.indexOf(tx) === -1) { // no need to add redundant info\n                    thisText.push(tx);\n                    allPercents.push(tx);\n                }\n            };\n\n            hoverPt.percentParent = pt.percentParent = val / helpers.getValue(parent);\n            hoverPt.parent = pt.parentString = helpers.getPtLabel(parent);\n            if(hasFlag('percent parent')) {\n                tx = helpers.formatPercent(hoverPt.percentParent, separators) + ' of ' + hoverPt.parent;\n                insertPercent();\n            }\n\n            hoverPt.percentEntry = pt.percentEntry = val / helpers.getValue(entry);\n            hoverPt.entry = pt.entry = helpers.getPtLabel(entry);\n            if(hasFlag('percent entry') && !isRoot && !pt.onPathbar) {\n                tx = helpers.formatPercent(hoverPt.percentEntry, separators) + ' of ' + hoverPt.entry;\n                insertPercent();\n            }\n\n            hoverPt.percentRoot = pt.percentRoot = val / helpers.getValue(hierarchy);\n            hoverPt.root = pt.root = helpers.getPtLabel(hierarchy);\n            if(hasFlag('percent root') && !isRoot) {\n                tx = helpers.formatPercent(hoverPt.percentRoot, separators) + ' of ' + hoverPt.root;\n                insertPercent();\n            }\n\n            hoverPt.text = _cast('hovertext') || _cast('text');\n            if(hasFlag('text')) {\n                tx = hoverPt.text;\n                if(Lib.isValidTextValue(tx)) thisText.push(tx);\n            }\n\n            eventData = [makeEventData(pt, traceNow, opts.eventDataKeys)];\n\n            var hoverItems = {\n                trace: traceNow,\n                y: hoverCenterY,\n                _x0: pt._x0,\n                _x1: pt._x1,\n                _y0: pt._y0,\n                _y1: pt._y1,\n                text: thisText.join('<br>'),\n                name: (hovertemplate || hasFlag('name')) ? traceNow.name : undefined,\n                color: _cast('hoverlabel.bgcolor') || cdi.color,\n                borderColor: _cast('hoverlabel.bordercolor'),\n                fontFamily: _cast('hoverlabel.font.family'),\n                fontSize: _cast('hoverlabel.font.size'),\n                fontColor: _cast('hoverlabel.font.color'),\n                fontWeight: _cast('hoverlabel.font.weight'),\n                fontStyle: _cast('hoverlabel.font.style'),\n                fontVariant: _cast('hoverlabel.font.variant'),\n                nameLength: _cast('hoverlabel.namelength'),\n                textAlign: _cast('hoverlabel.align'),\n                hovertemplate: hovertemplate,\n                hovertemplateLabels: hoverPt,\n                eventData: eventData\n            };\n\n            if(isSunburst) {\n                hoverItems.x0 = hoverCenterX - pt.rInscribed * pt.rpx1;\n                hoverItems.x1 = hoverCenterX + pt.rInscribed * pt.rpx1;\n                hoverItems.idealAlign = pt.pxmid[0] < 0 ? 'left' : 'right';\n            }\n            if(isTreemapOrIcicle) {\n                hoverItems.x = hoverCenterX;\n                hoverItems.idealAlign = hoverCenterX < 0 ? 'left' : 'right';\n            }\n\n            var bbox = [];\n            Fx.loneHover(hoverItems, {\n                container: fullLayoutNow._hoverlayer.node(),\n                outerContainer: fullLayoutNow._paper.node(),\n                gd: gd,\n                inOut_bbox: bbox\n            });\n            eventData[0].bbox = bbox[0];\n\n            trace._hasHoverLabel = true;\n        }\n\n        if(isTreemapOrIcicle) {\n            var slice = sliceTop.select('path.surface');\n            opts.styleOne(slice, pt, traceNow, gd, {\n                hovered: true\n            });\n        }\n\n        trace._hasHoverEvent = true;\n        gd.emit('plotly_hover', {\n            points: eventData || [makeEventData(pt, traceNow, opts.eventDataKeys)],\n            event: d3.event\n        });\n    };\n\n    var onMouseOut = function(evt) {\n        var fullLayoutNow = gd._fullLayout;\n        var traceNow = gd._fullData[trace.index];\n        var pt = d3.select(this).datum();\n\n        if(trace._hasHoverEvent) {\n            evt.originalEvent = d3.event;\n            gd.emit('plotly_unhover', {\n                points: [makeEventData(pt, traceNow, opts.eventDataKeys)],\n                event: d3.event\n            });\n            trace._hasHoverEvent = false;\n        }\n\n        if(trace._hasHoverLabel) {\n            Fx.loneUnhover(fullLayoutNow._hoverlayer.node());\n            trace._hasHoverLabel = false;\n        }\n\n        if(isTreemapOrIcicle) {\n            var slice = sliceTop.select('path.surface');\n            opts.styleOne(slice, pt, traceNow, gd, {\n                hovered: false\n            });\n        }\n    };\n\n    var onClick = function(pt) {\n        // TODO: this does not support right-click. If we want to support it, we\n        // would likely need to change pie to use dragElement instead of straight\n        // map subplots event binding. Or perhaps better, make a simple wrapper with the\n        // right mousedown, mousemove, and mouseup handlers just for a left/right click\n        // map subplots would use this too.\n        var fullLayoutNow = gd._fullLayout;\n        var traceNow = gd._fullData[trace.index];\n\n        var noTransition = isSunburst && (helpers.isHierarchyRoot(pt) || helpers.isLeaf(pt));\n\n        var id = helpers.getPtId(pt);\n        var nextEntry = helpers.isEntry(pt) ?\n            helpers.findEntryWithChild(hierarchy, id) :\n            helpers.findEntryWithLevel(hierarchy, id);\n        var nextLevel = helpers.getPtId(nextEntry);\n\n        var typeClickEvtData = {\n            points: [makeEventData(pt, traceNow, opts.eventDataKeys)],\n            event: d3.event\n        };\n        if(!noTransition) typeClickEvtData.nextLevel = nextLevel;\n\n        var clickVal = Events.triggerHandler(gd, 'plotly_' + trace.type + 'click', typeClickEvtData);\n\n        if(clickVal !== false && fullLayoutNow.hovermode) {\n            gd._hoverdata = [makeEventData(pt, traceNow, opts.eventDataKeys)];\n            Fx.click(gd, d3.event);\n        }\n\n        // if click does not trigger a transition, we're done!\n        if(noTransition) return;\n\n        // if custom handler returns false, we're done!\n        if(clickVal === false) return;\n\n        // skip if triggered from dragging a nearby cartesian subplot\n        if(gd._dragging) return;\n\n        // skip during transitions, to avoid potential bugs\n        // we could remove this check later\n        if(gd._transitioning) return;\n\n        // store 'old' level in guiEdit stash, so that subsequent Plotly.react\n        // calls with the same uirevision can start from the same entry\n        Registry.call('_storeDirectGUIEdit', traceNow, fullLayoutNow._tracePreGUI[traceNow.uid], {\n            level: traceNow.level\n        });\n\n        var frame = {\n            data: [{level: nextLevel}],\n            traces: [trace.index]\n        };\n\n        var animOpts = {\n            frame: {\n                redraw: false,\n                duration: opts.transitionTime\n            },\n            transition: {\n                duration: opts.transitionTime,\n                easing: opts.transitionEasing\n            },\n            mode: 'immediate',\n            fromcurrent: true\n        };\n\n        Fx.loneUnhover(fullLayoutNow._hoverlayer.node());\n        Registry.call('animate', gd, frame, animOpts);\n    };\n\n    sliceTop.on('mouseover', onMouseOver);\n    sliceTop.on('mouseout', onMouseOut);\n    sliceTop.on('click', onClick);\n};\n\nfunction makeEventData(pt, trace, keys) {\n    var cdi = pt.data.data;\n\n    var out = {\n        curveNumber: trace.index,\n        pointNumber: cdi.i,\n        data: trace._input,\n        fullData: trace,\n\n        // TODO more things like 'children', 'siblings', 'hierarchy?\n    };\n\n    for(var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if(key in pt) out[key] = pt[key];\n    }\n    // handle special case of parent\n    if('parentString' in pt && !helpers.isHierarchyRoot(pt)) out.parent = pt.parentString;\n\n    appendArrayPointValue(out, trace, cdi.i);\n\n    return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}