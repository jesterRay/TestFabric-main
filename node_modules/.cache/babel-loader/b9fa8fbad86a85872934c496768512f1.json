{"ast":null,"code":"'use strict';\n\nvar extendFlat = require('../lib/extend').extendFlat;\n\n/**\n * Make a xy domain attribute group\n *\n * @param {object} opts\n *   @param {string}\n *     opts.name: name to be inserted in the default description\n *   @param {boolean}\n *     opts.trace: set to true for trace containers\n *   @param {string}\n *     opts.editType: editType for all pieces\n *   @param {boolean}\n *     opts.noGridCell: set to true to omit `row` and `column`\n *\n * @param {object} extra\n *   @param {string}\n *     extra.description: extra description. N.B we use\n *     a separate extra container to make it compatible with\n *     the compress_attributes transform.\n *\n * @return {object} attributes object containing {x,y} as specified\n */\nexports.attributes = function (opts, extra) {\n  opts = opts || {};\n  extra = extra || {};\n  var base = {\n    valType: 'info_array',\n    editType: opts.editType,\n    items: [{\n      valType: 'number',\n      min: 0,\n      max: 1,\n      editType: opts.editType\n    }, {\n      valType: 'number',\n      min: 0,\n      max: 1,\n      editType: opts.editType\n    }],\n    dflt: [0, 1]\n  };\n  var namePart = opts.name ? opts.name + ' ' : '';\n  var contPart = opts.trace ? 'trace ' : 'subplot ';\n  var descPart = extra.description ? ' ' + extra.description : '';\n  var out = {\n    x: extendFlat({}, base, {\n      description: ['Sets the horizontal domain of this ', namePart, contPart, '(in plot fraction).', descPart].join('')\n    }),\n    y: extendFlat({}, base, {\n      description: ['Sets the vertical domain of this ', namePart, contPart, '(in plot fraction).', descPart].join('')\n    }),\n    editType: opts.editType\n  };\n  if (!opts.noGridCell) {\n    out.row = {\n      valType: 'integer',\n      min: 0,\n      dflt: 0,\n      editType: opts.editType,\n      description: ['If there is a layout grid, use the domain ', 'for this row in the grid for this ', namePart, contPart, '.', descPart].join('')\n    };\n    out.column = {\n      valType: 'integer',\n      min: 0,\n      dflt: 0,\n      editType: opts.editType,\n      description: ['If there is a layout grid, use the domain ', 'for this column in the grid for this ', namePart, contPart, '.', descPart].join('')\n    };\n  }\n  return out;\n};\nexports.defaults = function (containerOut, layout, coerce, dfltDomains) {\n  var dfltX = dfltDomains && dfltDomains.x || [0, 1];\n  var dfltY = dfltDomains && dfltDomains.y || [0, 1];\n  var grid = layout.grid;\n  if (grid) {\n    var column = coerce('domain.column');\n    if (column !== undefined) {\n      if (column < grid.columns) dfltX = grid._domains.x[column];else delete containerOut.domain.column;\n    }\n    var row = coerce('domain.row');\n    if (row !== undefined) {\n      if (row < grid.rows) dfltY = grid._domains.y[row];else delete containerOut.domain.row;\n    }\n  }\n  var x = coerce('domain.x', dfltX);\n  var y = coerce('domain.y', dfltY);\n\n  // don't accept bad input data\n  if (!(x[0] < x[1])) containerOut.domain.x = dfltX.slice();\n  if (!(y[0] < y[1])) containerOut.domain.y = dfltY.slice();\n};","map":{"version":3,"names":["extendFlat","require","exports","attributes","opts","extra","base","valType","editType","items","min","max","dflt","namePart","name","contPart","trace","descPart","description","out","x","join","y","noGridCell","row","column","defaults","containerOut","layout","coerce","dfltDomains","dfltX","dfltY","grid","undefined","columns","_domains","domain","rows","slice"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/domain.js"],"sourcesContent":["'use strict';\n\nvar extendFlat = require('../lib/extend').extendFlat;\n\n/**\n * Make a xy domain attribute group\n *\n * @param {object} opts\n *   @param {string}\n *     opts.name: name to be inserted in the default description\n *   @param {boolean}\n *     opts.trace: set to true for trace containers\n *   @param {string}\n *     opts.editType: editType for all pieces\n *   @param {boolean}\n *     opts.noGridCell: set to true to omit `row` and `column`\n *\n * @param {object} extra\n *   @param {string}\n *     extra.description: extra description. N.B we use\n *     a separate extra container to make it compatible with\n *     the compress_attributes transform.\n *\n * @return {object} attributes object containing {x,y} as specified\n */\nexports.attributes = function(opts, extra) {\n    opts = opts || {};\n    extra = extra || {};\n\n    var base = {\n        valType: 'info_array',\n        editType: opts.editType,\n        items: [\n            {valType: 'number', min: 0, max: 1, editType: opts.editType},\n            {valType: 'number', min: 0, max: 1, editType: opts.editType}\n        ],\n        dflt: [0, 1]\n    };\n\n    var namePart = opts.name ? opts.name + ' ' : '';\n    var contPart = opts.trace ? 'trace ' : 'subplot ';\n    var descPart = extra.description ? ' ' + extra.description : '';\n\n    var out = {\n        x: extendFlat({}, base, {\n            description: [\n                'Sets the horizontal domain of this ',\n                namePart,\n                contPart,\n                '(in plot fraction).',\n                descPart\n            ].join('')\n        }),\n        y: extendFlat({}, base, {\n            description: [\n                'Sets the vertical domain of this ',\n                namePart,\n                contPart,\n                '(in plot fraction).',\n                descPart\n            ].join('')\n        }),\n        editType: opts.editType\n    };\n\n    if(!opts.noGridCell) {\n        out.row = {\n            valType: 'integer',\n            min: 0,\n            dflt: 0,\n            editType: opts.editType,\n            description: [\n                'If there is a layout grid, use the domain ',\n                'for this row in the grid for this ',\n                namePart,\n                contPart,\n                '.',\n                descPart\n            ].join('')\n        };\n        out.column = {\n            valType: 'integer',\n            min: 0,\n            dflt: 0,\n            editType: opts.editType,\n            description: [\n                'If there is a layout grid, use the domain ',\n                'for this column in the grid for this ',\n                namePart,\n                contPart,\n                '.',\n                descPart\n            ].join('')\n        };\n    }\n\n    return out;\n};\n\nexports.defaults = function(containerOut, layout, coerce, dfltDomains) {\n    var dfltX = (dfltDomains && dfltDomains.x) || [0, 1];\n    var dfltY = (dfltDomains && dfltDomains.y) || [0, 1];\n\n    var grid = layout.grid;\n    if(grid) {\n        var column = coerce('domain.column');\n        if(column !== undefined) {\n            if(column < grid.columns) dfltX = grid._domains.x[column];\n            else delete containerOut.domain.column;\n        }\n\n        var row = coerce('domain.row');\n        if(row !== undefined) {\n            if(row < grid.rows) dfltY = grid._domains.y[row];\n            else delete containerOut.domain.row;\n        }\n    }\n\n    var x = coerce('domain.x', dfltX);\n    var y = coerce('domain.y', dfltY);\n\n    // don't accept bad input data\n    if(!(x[0] < x[1])) containerOut.domain.x = dfltX.slice();\n    if(!(y[0] < y[1])) containerOut.domain.y = dfltY.slice();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}