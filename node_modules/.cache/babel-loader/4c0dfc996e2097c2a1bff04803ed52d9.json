{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nmodule.exports = function formatLabels(cdi, trace, fullLayout) {\n  var labels = {};\n  var subplot = fullLayout[trace.subplot]._subplot;\n  var radialAxis;\n  var angularAxis;\n\n  // for scatterpolargl texttemplate, _subplot is NOT defined, this takes part during the convert step\n  // TODO we should consider moving the texttemplate formatting logic to the plot step\n  if (!subplot) {\n    subplot = fullLayout[trace.subplot];\n    radialAxis = subplot.radialaxis;\n    angularAxis = subplot.angularaxis;\n  } else {\n    radialAxis = subplot.radialAxis;\n    angularAxis = subplot.angularAxis;\n  }\n  var rVal = radialAxis.c2l(cdi.r);\n  labels.rLabel = Axes.tickText(radialAxis, rVal, true).text;\n\n  // N.B here the ° sign is part of the formatted value for thetaunit:'degrees'\n  var thetaVal = angularAxis.thetaunit === 'degrees' ? Lib.rad2deg(cdi.theta) : cdi.theta;\n  labels.thetaLabel = Axes.tickText(angularAxis, thetaVal, true).text;\n  return labels;\n};","map":{"version":3,"names":["Lib","require","Axes","module","exports","formatLabels","cdi","trace","fullLayout","labels","subplot","_subplot","radialAxis","angularAxis","radialaxis","angularaxis","rVal","c2l","r","rLabel","tickText","text","thetaVal","thetaunit","rad2deg","theta","thetaLabel"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/scatterpolar/format_labels.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nmodule.exports = function formatLabels(cdi, trace, fullLayout) {\n    var labels = {};\n\n    var subplot = fullLayout[trace.subplot]._subplot;\n    var radialAxis;\n    var angularAxis;\n\n    // for scatterpolargl texttemplate, _subplot is NOT defined, this takes part during the convert step\n    // TODO we should consider moving the texttemplate formatting logic to the plot step\n    if(!subplot) {\n        subplot = fullLayout[trace.subplot];\n        radialAxis = subplot.radialaxis;\n        angularAxis = subplot.angularaxis;\n    } else {\n        radialAxis = subplot.radialAxis;\n        angularAxis = subplot.angularAxis;\n    }\n\n    var rVal = radialAxis.c2l(cdi.r);\n    labels.rLabel = Axes.tickText(radialAxis, rVal, true).text;\n\n    // N.B here the ° sign is part of the formatted value for thetaunit:'degrees'\n    var thetaVal = angularAxis.thetaunit === 'degrees' ? Lib.rad2deg(cdi.theta) : cdi.theta;\n    labels.thetaLabel = Axes.tickText(angularAxis, thetaVal, true).text;\n\n    return labels;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAEhDE,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAACC,GAAG,EAAEC,KAAK,EAAEC,UAAU,EAAE;EAC3D,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAIC,OAAO,GAAGF,UAAU,CAACD,KAAK,CAACG,OAAO,CAAC,CAACC,QAAQ;EAChD,IAAIC,UAAU;EACd,IAAIC,WAAW;;EAEf;EACA;EACA,IAAG,CAACH,OAAO,EAAE;IACTA,OAAO,GAAGF,UAAU,CAACD,KAAK,CAACG,OAAO,CAAC;IACnCE,UAAU,GAAGF,OAAO,CAACI,UAAU;IAC/BD,WAAW,GAAGH,OAAO,CAACK,WAAW;EACrC,CAAC,MAAM;IACHH,UAAU,GAAGF,OAAO,CAACE,UAAU;IAC/BC,WAAW,GAAGH,OAAO,CAACG,WAAW;EACrC;EAEA,IAAIG,IAAI,GAAGJ,UAAU,CAACK,GAAG,CAACX,GAAG,CAACY,CAAC,CAAC;EAChCT,MAAM,CAACU,MAAM,GAAGjB,IAAI,CAACkB,QAAQ,CAACR,UAAU,EAAEI,IAAI,EAAE,IAAI,CAAC,CAACK,IAAI;;EAE1D;EACA,IAAIC,QAAQ,GAAGT,WAAW,CAACU,SAAS,KAAK,SAAS,GAAGvB,GAAG,CAACwB,OAAO,CAAClB,GAAG,CAACmB,KAAK,CAAC,GAAGnB,GAAG,CAACmB,KAAK;EACvFhB,MAAM,CAACiB,UAAU,GAAGxB,IAAI,CAACkB,QAAQ,CAACP,WAAW,EAAES,QAAQ,EAAE,IAAI,CAAC,CAACD,IAAI;EAEnE,OAAOZ,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}