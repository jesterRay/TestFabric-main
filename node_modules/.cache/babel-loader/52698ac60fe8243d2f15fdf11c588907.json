{"ast":null,"code":"'use strict';\n\nvar b64decode = require('base64-arraybuffer').decode;\nvar isPlainObject = require('./is_plain_object');\nvar isArray = Array.isArray;\nvar ab = ArrayBuffer;\nvar dv = DataView;\nfunction isTypedArray(a) {\n  return ab.isView(a) && !(a instanceof dv);\n}\nexports.isTypedArray = isTypedArray;\nfunction isArrayOrTypedArray(a) {\n  return isArray(a) || isTypedArray(a);\n}\nexports.isArrayOrTypedArray = isArrayOrTypedArray;\n\n/*\n * Test whether an input object is 1D.\n *\n * Assumes we already know the object is an array.\n *\n * Looks only at the first element, if the dimensionality is\n * not consistent we won't figure that out here.\n */\nfunction isArray1D(a) {\n  return !isArrayOrTypedArray(a[0]);\n}\nexports.isArray1D = isArray1D;\n\n/*\n * Ensures an array has the right amount of storage space. If it doesn't\n * exist, it creates an array. If it does exist, it returns it if too\n * short or truncates it in-place.\n *\n * The goal is to just reuse memory to avoid a bit of excessive garbage\n * collection.\n */\nexports.ensureArray = function (out, n) {\n  // TODO: typed array support here? This is only used in\n  // traces/carpet/compute_control_points\n  if (!isArray(out)) out = [];\n\n  // If too long, truncate. (If too short, it will grow\n  // automatically so we don't care about that case)\n  out.length = n;\n  return out;\n};\nvar typedArrays = {\n  u1c: typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  // not supported in numpy?\n\n  i1: typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  u1: typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  i2: typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  u2: typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  i4: typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  u4: typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  f4: typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  f8: typeof Float64Array === 'undefined' ? undefined : Float64Array\n\n  /* TODO: potentially add Big Int\n   i8: typeof BigInt64Array === 'undefined' ? undefined :\n             BigInt64Array,\n   u8: typeof BigUint64Array === 'undefined' ? undefined :\n             BigUint64Array,\n  */\n};\ntypedArrays.uint8c = typedArrays.u1c;\ntypedArrays.uint8 = typedArrays.u1;\ntypedArrays.int8 = typedArrays.i1;\ntypedArrays.uint16 = typedArrays.u2;\ntypedArrays.int16 = typedArrays.i2;\ntypedArrays.uint32 = typedArrays.u4;\ntypedArrays.int32 = typedArrays.i4;\ntypedArrays.float32 = typedArrays.f4;\ntypedArrays.float64 = typedArrays.f8;\nfunction isArrayBuffer(a) {\n  return a.constructor === ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\nexports.decodeTypedArraySpec = function (vIn) {\n  var out = [];\n  var v = coerceTypedArraySpec(vIn);\n  var dtype = v.dtype;\n  var T = typedArrays[dtype];\n  if (!T) throw new Error('Error in dtype: \"' + dtype + '\"');\n  var BYTES_PER_ELEMENT = T.BYTES_PER_ELEMENT;\n  var buffer = v.bdata;\n  if (!isArrayBuffer(buffer)) {\n    buffer = b64decode(buffer);\n  }\n  var shape = v.shape === undefined ?\n  // detect 1-d length\n  [buffer.byteLength / BYTES_PER_ELEMENT] :\n  // convert number to string and split to array\n  ('' + v.shape).split(',');\n  shape.reverse(); // i.e. to match numpy order\n  var ndim = shape.length;\n  var nj, j;\n  var ni = +shape[0];\n  var rowBytes = BYTES_PER_ELEMENT * ni;\n  var pos = 0;\n  if (ndim === 1) {\n    out = new T(buffer);\n  } else if (ndim === 2) {\n    nj = +shape[1];\n    for (j = 0; j < nj; j++) {\n      out[j] = new T(buffer, pos, ni);\n      pos += rowBytes;\n    }\n  } else if (ndim === 3) {\n    nj = +shape[1];\n    var nk = +shape[2];\n    for (var k = 0; k < nk; k++) {\n      out[k] = [];\n      for (j = 0; j < nj; j++) {\n        out[k][j] = new T(buffer, pos, ni);\n        pos += rowBytes;\n      }\n    }\n  } else {\n    throw new Error('ndim: ' + ndim + 'is not supported with the shape:\"' + v.shape + '\"');\n  }\n\n  // attach bdata, dtype & shape to array for json export\n  out.bdata = v.bdata;\n  out.dtype = v.dtype;\n  out.shape = shape.reverse().join(',');\n  vIn._inputArray = out;\n  return out;\n};\nexports.isTypedArraySpec = function (v) {\n  return isPlainObject(v) && v.hasOwnProperty('dtype') && typeof v.dtype === 'string' && v.hasOwnProperty('bdata') && (typeof v.bdata === 'string' || isArrayBuffer(v.bdata)) && (v.shape === undefined || v.hasOwnProperty('shape') && (typeof v.shape === 'string' || typeof v.shape === 'number'));\n};\nfunction coerceTypedArraySpec(v) {\n  return {\n    bdata: v.bdata,\n    dtype: v.dtype,\n    shape: v.shape\n  };\n}\n\n/*\n * TypedArray-compatible concatenation of n arrays\n * if all arrays are the same type it will preserve that type,\n * otherwise it falls back on Array.\n * Also tries to avoid copying, in case one array has zero length\n * But never mutates an existing array\n */\nexports.concat = function () {\n  var args = [];\n  var allArray = true;\n  var totalLen = 0;\n  var _constructor, arg0, i, argi, posi, leni, out, j;\n  for (i = 0; i < arguments.length; i++) {\n    argi = arguments[i];\n    leni = argi.length;\n    if (leni) {\n      if (arg0) args.push(argi);else {\n        arg0 = argi;\n        posi = leni;\n      }\n      if (isArray(argi)) {\n        _constructor = false;\n      } else {\n        allArray = false;\n        if (!totalLen) {\n          _constructor = argi.constructor;\n        } else if (_constructor !== argi.constructor) {\n          // TODO: in principle we could upgrade here,\n          // ie keep typed array but convert all to Float64Array?\n          _constructor = false;\n        }\n      }\n      totalLen += leni;\n    }\n  }\n  if (!totalLen) return [];\n  if (!args.length) return arg0;\n  if (allArray) return arg0.concat.apply(arg0, args);\n  if (_constructor) {\n    // matching typed arrays\n    out = new _constructor(totalLen);\n    out.set(arg0);\n    for (i = 0; i < args.length; i++) {\n      argi = args[i];\n      out.set(argi, posi);\n      posi += argi.length;\n    }\n    return out;\n  }\n\n  // mismatched types or Array + typed\n  out = new Array(totalLen);\n  for (j = 0; j < arg0.length; j++) out[j] = arg0[j];\n  for (i = 0; i < args.length; i++) {\n    argi = args[i];\n    for (j = 0; j < argi.length; j++) out[posi + j] = argi[j];\n    posi += j;\n  }\n  return out;\n};\nexports.maxRowLength = function (z) {\n  return _rowLength(z, Math.max, 0);\n};\nexports.minRowLength = function (z) {\n  return _rowLength(z, Math.min, Infinity);\n};\nfunction _rowLength(z, fn, len0) {\n  if (isArrayOrTypedArray(z)) {\n    if (isArrayOrTypedArray(z[0])) {\n      var len = len0;\n      for (var i = 0; i < z.length; i++) {\n        len = fn(len, z[i].length);\n      }\n      return len;\n    } else {\n      return z.length;\n    }\n  }\n  return 0;\n}","map":{"version":3,"names":["b64decode","require","decode","isPlainObject","isArray","Array","ab","ArrayBuffer","dv","DataView","isTypedArray","a","isView","exports","isArrayOrTypedArray","isArray1D","ensureArray","out","n","length","typedArrays","u1c","Uint8ClampedArray","undefined","i1","Int8Array","u1","Uint8Array","i2","Int16Array","u2","Uint16Array","i4","Int32Array","u4","Uint32Array","f4","Float32Array","f8","Float64Array","uint8c","uint8","int8","uint16","int16","uint32","int32","float32","float64","isArrayBuffer","constructor","decodeTypedArraySpec","vIn","v","coerceTypedArraySpec","dtype","T","Error","BYTES_PER_ELEMENT","buffer","bdata","shape","byteLength","split","reverse","ndim","nj","j","ni","rowBytes","pos","nk","k","join","_inputArray","isTypedArraySpec","hasOwnProperty","concat","args","allArray","totalLen","_constructor","arg0","i","argi","posi","leni","arguments","push","apply","set","maxRowLength","z","_rowLength","Math","max","minRowLength","min","Infinity","fn","len0","len"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/lib/array.js"],"sourcesContent":["'use strict';\nvar b64decode = require('base64-arraybuffer').decode;\n\nvar isPlainObject = require('./is_plain_object');\n\nvar isArray = Array.isArray;\n\nvar ab = ArrayBuffer;\nvar dv = DataView;\n\nfunction isTypedArray(a) {\n    return ab.isView(a) && !(a instanceof dv);\n}\nexports.isTypedArray = isTypedArray;\n\nfunction isArrayOrTypedArray(a) {\n    return isArray(a) || isTypedArray(a);\n}\nexports.isArrayOrTypedArray = isArrayOrTypedArray;\n\n/*\n * Test whether an input object is 1D.\n *\n * Assumes we already know the object is an array.\n *\n * Looks only at the first element, if the dimensionality is\n * not consistent we won't figure that out here.\n */\nfunction isArray1D(a) {\n    return !isArrayOrTypedArray(a[0]);\n}\nexports.isArray1D = isArray1D;\n\n/*\n * Ensures an array has the right amount of storage space. If it doesn't\n * exist, it creates an array. If it does exist, it returns it if too\n * short or truncates it in-place.\n *\n * The goal is to just reuse memory to avoid a bit of excessive garbage\n * collection.\n */\nexports.ensureArray = function(out, n) {\n    // TODO: typed array support here? This is only used in\n    // traces/carpet/compute_control_points\n    if(!isArray(out)) out = [];\n\n    // If too long, truncate. (If too short, it will grow\n    // automatically so we don't care about that case)\n    out.length = n;\n\n    return out;\n};\n\nvar typedArrays = {\n    u1c: typeof Uint8ClampedArray === 'undefined' ? undefined :\n                Uint8ClampedArray, // not supported in numpy?\n\n    i1: typeof Int8Array === 'undefined' ? undefined :\n               Int8Array,\n\n    u1: typeof Uint8Array === 'undefined' ? undefined :\n               Uint8Array,\n\n    i2: typeof Int16Array === 'undefined' ? undefined :\n               Int16Array,\n\n    u2: typeof Uint16Array === 'undefined' ? undefined :\n               Uint16Array,\n\n    i4: typeof Int32Array === 'undefined' ? undefined :\n               Int32Array,\n\n    u4: typeof Uint32Array === 'undefined' ? undefined :\n               Uint32Array,\n\n    f4: typeof Float32Array === 'undefined' ? undefined :\n               Float32Array,\n\n    f8: typeof Float64Array === 'undefined' ? undefined :\n               Float64Array,\n\n    /* TODO: potentially add Big Int\n\n    i8: typeof BigInt64Array === 'undefined' ? undefined :\n               BigInt64Array,\n\n    u8: typeof BigUint64Array === 'undefined' ? undefined :\n               BigUint64Array,\n    */\n};\n\ntypedArrays.uint8c = typedArrays.u1c;\ntypedArrays.uint8 = typedArrays.u1;\ntypedArrays.int8 = typedArrays.i1;\ntypedArrays.uint16 = typedArrays.u2;\ntypedArrays.int16 = typedArrays.i2;\ntypedArrays.uint32 = typedArrays.u4;\ntypedArrays.int32 = typedArrays.i4;\ntypedArrays.float32 = typedArrays.f4;\ntypedArrays.float64 = typedArrays.f8;\n\nfunction isArrayBuffer(a) {\n    return a.constructor === ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nexports.decodeTypedArraySpec = function(vIn) {\n    var out = [];\n    var v = coerceTypedArraySpec(vIn);\n    var dtype = v.dtype;\n\n    var T = typedArrays[dtype];\n    if(!T) throw new Error('Error in dtype: \"' + dtype + '\"');\n    var BYTES_PER_ELEMENT = T.BYTES_PER_ELEMENT;\n\n    var buffer = v.bdata;\n    if(!isArrayBuffer(buffer)) {\n        buffer = b64decode(buffer);\n    }\n    var shape = v.shape === undefined ?\n        // detect 1-d length\n        [buffer.byteLength / BYTES_PER_ELEMENT] :\n        // convert number to string and split to array\n        ('' + v.shape).split(',');\n\n    shape.reverse(); // i.e. to match numpy order\n    var ndim = shape.length;\n\n    var nj, j;\n    var ni = +shape[0];\n\n    var rowBytes = BYTES_PER_ELEMENT * ni;\n    var pos = 0;\n\n    if(ndim === 1) {\n        out = new T(buffer);\n    } else if(ndim === 2) {\n        nj = +shape[1];\n        for(j = 0; j < nj; j++) {\n            out[j] = new T(buffer, pos, ni);\n            pos += rowBytes;\n        }\n    } else if(ndim === 3) {\n        nj = +shape[1];\n        var nk = +shape[2];\n        for(var k = 0; k < nk; k++) {\n            out[k] = [];\n            for(j = 0; j < nj; j++) {\n                out[k][j] = new T(buffer, pos, ni);\n                pos += rowBytes;\n            }\n        }\n    } else {\n        throw new Error('ndim: ' + ndim + 'is not supported with the shape:\"' + v.shape + '\"');\n    }\n\n    // attach bdata, dtype & shape to array for json export\n    out.bdata = v.bdata;\n    out.dtype = v.dtype;\n    out.shape = shape.reverse().join(',');\n\n    vIn._inputArray = out;\n\n    return out;\n};\n\nexports.isTypedArraySpec = function(v) {\n    return (\n        isPlainObject(v) &&\n        v.hasOwnProperty('dtype') && (typeof v.dtype === 'string') &&\n\n        v.hasOwnProperty('bdata') && (typeof v.bdata === 'string' || isArrayBuffer(v.bdata)) &&\n\n        (v.shape === undefined || (\n            v.hasOwnProperty('shape') && (typeof v.shape === 'string' || typeof v.shape === 'number')\n        ))\n    );\n};\n\nfunction coerceTypedArraySpec(v) {\n    return {\n        bdata: v.bdata,\n        dtype: v.dtype,\n        shape: v.shape\n    };\n}\n\n/*\n * TypedArray-compatible concatenation of n arrays\n * if all arrays are the same type it will preserve that type,\n * otherwise it falls back on Array.\n * Also tries to avoid copying, in case one array has zero length\n * But never mutates an existing array\n */\nexports.concat = function() {\n    var args = [];\n    var allArray = true;\n    var totalLen = 0;\n\n    var _constructor, arg0, i, argi, posi, leni, out, j;\n\n    for(i = 0; i < arguments.length; i++) {\n        argi = arguments[i];\n        leni = argi.length;\n        if(leni) {\n            if(arg0) args.push(argi);\n            else {\n                arg0 = argi;\n                posi = leni;\n            }\n\n            if(isArray(argi)) {\n                _constructor = false;\n            } else {\n                allArray = false;\n                if(!totalLen) {\n                    _constructor = argi.constructor;\n                } else if(_constructor !== argi.constructor) {\n                    // TODO: in principle we could upgrade here,\n                    // ie keep typed array but convert all to Float64Array?\n                    _constructor = false;\n                }\n            }\n\n            totalLen += leni;\n        }\n    }\n\n    if(!totalLen) return [];\n    if(!args.length) return arg0;\n\n    if(allArray) return arg0.concat.apply(arg0, args);\n    if(_constructor) {\n        // matching typed arrays\n        out = new _constructor(totalLen);\n        out.set(arg0);\n        for(i = 0; i < args.length; i++) {\n            argi = args[i];\n            out.set(argi, posi);\n            posi += argi.length;\n        }\n        return out;\n    }\n\n    // mismatched types or Array + typed\n    out = new Array(totalLen);\n    for(j = 0; j < arg0.length; j++) out[j] = arg0[j];\n    for(i = 0; i < args.length; i++) {\n        argi = args[i];\n        for(j = 0; j < argi.length; j++) out[posi + j] = argi[j];\n        posi += j;\n    }\n    return out;\n};\n\nexports.maxRowLength = function(z) {\n    return _rowLength(z, Math.max, 0);\n};\n\nexports.minRowLength = function(z) {\n    return _rowLength(z, Math.min, Infinity);\n};\n\nfunction _rowLength(z, fn, len0) {\n    if(isArrayOrTypedArray(z)) {\n        if(isArrayOrTypedArray(z[0])) {\n            var len = len0;\n            for(var i = 0; i < z.length; i++) {\n                len = fn(len, z[i].length);\n            }\n            return len;\n        } else {\n            return z.length;\n        }\n    }\n    return 0;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}