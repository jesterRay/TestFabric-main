{"ast":null,"code":"'use strict';\n\n/**\n * sanitized modulus function that always returns in the range [0, d)\n * rather than (-d, 0] if v is negative\n */\nfunction mod(v, d) {\n  var out = v % d;\n  return out < 0 ? out + d : out;\n}\n\n/**\n * sanitized modulus function that always returns in the range [-d/2, d/2]\n * rather than (-d, 0] if v is negative\n */\nfunction modHalf(v, d) {\n  return Math.abs(v) > d / 2 ? v - Math.round(v / d) * d : v;\n}\nmodule.exports = {\n  mod: mod,\n  modHalf: modHalf\n};","map":{"version":3,"names":["mod","v","d","out","modHalf","Math","abs","round","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/lib/mod.js"],"sourcesContent":["'use strict';\n\n/**\n * sanitized modulus function that always returns in the range [0, d)\n * rather than (-d, 0] if v is negative\n */\nfunction mod(v, d) {\n    var out = v % d;\n    return out < 0 ? out + d : out;\n}\n\n/**\n * sanitized modulus function that always returns in the range [-d/2, d/2]\n * rather than (-d, 0] if v is negative\n */\nfunction modHalf(v, d) {\n    return Math.abs(v) > (d / 2) ?\n        v - Math.round(v / d) * d :\n        v;\n}\n\nmodule.exports = {\n    mod: mod,\n    modHalf: modHalf\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA,SAASA,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACf,IAAIC,GAAG,GAAGF,CAAC,GAAGC,CAAC;EACf,OAAOC,GAAG,GAAG,CAAC,GAAGA,GAAG,GAAGD,CAAC,GAAGC,GAAG;AAClC;;AAEA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACH,CAAC,EAAEC,CAAC,EAAE;EACnB,OAAOG,IAAI,CAACC,GAAG,CAACL,CAAC,CAAC,GAAIC,CAAC,GAAG,CAAE,GACxBD,CAAC,GAAGI,IAAI,CAACE,KAAK,CAACN,CAAC,GAAGC,CAAC,CAAC,GAAGA,CAAC,GACzBD,CAAC;AACT;AAEAO,MAAM,CAACC,OAAO,GAAG;EACbT,GAAG,EAAEA,GAAG;EACRI,OAAO,EAAEA;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}