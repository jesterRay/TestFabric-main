{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar alignPeriod = require('../../plots/cartesian/align_period');\nmodule.exports = function convertColumnData(trace, ax1, ax2, var1Name, var2Name, arrayVarNames) {\n  var colLen = trace._length;\n  var col1 = ax1.makeCalcdata(trace, var1Name);\n  var col2 = ax2.makeCalcdata(trace, var2Name);\n  col1 = alignPeriod(trace, ax1, var1Name, col1).vals;\n  col2 = alignPeriod(trace, ax2, var2Name, col2).vals;\n  var textCol = trace.text;\n  var hasColumnText = textCol !== undefined && Lib.isArray1D(textCol);\n  var hoverTextCol = trace.hovertext;\n  var hasColumnHoverText = hoverTextCol !== undefined && Lib.isArray1D(hoverTextCol);\n  var i, j;\n  var col1dv = Lib.distinctVals(col1);\n  var col1vals = col1dv.vals;\n  var col2dv = Lib.distinctVals(col2);\n  var col2vals = col2dv.vals;\n  var newArrays = [];\n  var text;\n  var hovertext;\n  var nI = col2vals.length;\n  var nJ = col1vals.length;\n  for (i = 0; i < arrayVarNames.length; i++) {\n    newArrays[i] = Lib.init2dArray(nI, nJ);\n  }\n  if (hasColumnText) {\n    text = Lib.init2dArray(nI, nJ);\n  }\n  if (hasColumnHoverText) {\n    hovertext = Lib.init2dArray(nI, nJ);\n  }\n  var after2before = Lib.init2dArray(nI, nJ);\n  for (i = 0; i < colLen; i++) {\n    if (col1[i] !== BADNUM && col2[i] !== BADNUM) {\n      var i1 = Lib.findBin(col1[i] + col1dv.minDiff / 2, col1vals);\n      var i2 = Lib.findBin(col2[i] + col2dv.minDiff / 2, col2vals);\n      for (j = 0; j < arrayVarNames.length; j++) {\n        var arrayVarName = arrayVarNames[j];\n        var arrayVar = trace[arrayVarName];\n        var newArray = newArrays[j];\n        newArray[i2][i1] = arrayVar[i];\n        after2before[i2][i1] = i;\n      }\n      if (hasColumnText) text[i2][i1] = textCol[i];\n      if (hasColumnHoverText) hovertext[i2][i1] = hoverTextCol[i];\n    }\n  }\n  trace['_' + var1Name] = col1vals;\n  trace['_' + var2Name] = col2vals;\n  for (j = 0; j < arrayVarNames.length; j++) {\n    trace['_' + arrayVarNames[j]] = newArrays[j];\n  }\n  if (hasColumnText) trace._text = text;\n  if (hasColumnHoverText) trace._hovertext = hovertext;\n  if (ax1 && ax1.type === 'category') {\n    trace['_' + var1Name + 'CategoryMap'] = col1vals.map(function (v) {\n      return ax1._categories[v];\n    });\n  }\n  if (ax2 && ax2.type === 'category') {\n    trace['_' + var2Name + 'CategoryMap'] = col2vals.map(function (v) {\n      return ax2._categories[v];\n    });\n  }\n  trace._after2before = after2before;\n};","map":{"version":3,"names":["Lib","require","BADNUM","alignPeriod","module","exports","convertColumnData","trace","ax1","ax2","var1Name","var2Name","arrayVarNames","colLen","_length","col1","makeCalcdata","col2","vals","textCol","text","hasColumnText","undefined","isArray1D","hoverTextCol","hovertext","hasColumnHoverText","i","j","col1dv","distinctVals","col1vals","col2dv","col2vals","newArrays","nI","length","nJ","init2dArray","after2before","i1","findBin","minDiff","i2","arrayVarName","arrayVar","newArray","_text","_hovertext","type","map","v","_categories","_after2before"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/traces/heatmap/convert_column_xyz.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nmodule.exports = function convertColumnData(trace, ax1, ax2, var1Name, var2Name, arrayVarNames) {\n    var colLen = trace._length;\n    var col1 = ax1.makeCalcdata(trace, var1Name);\n    var col2 = ax2.makeCalcdata(trace, var2Name);\n    col1 = alignPeriod(trace, ax1, var1Name, col1).vals;\n    col2 = alignPeriod(trace, ax2, var2Name, col2).vals;\n\n    var textCol = trace.text;\n    var hasColumnText = (textCol !== undefined && Lib.isArray1D(textCol));\n    var hoverTextCol = trace.hovertext;\n    var hasColumnHoverText = (hoverTextCol !== undefined && Lib.isArray1D(hoverTextCol));\n    var i, j;\n\n    var col1dv = Lib.distinctVals(col1);\n    var col1vals = col1dv.vals;\n    var col2dv = Lib.distinctVals(col2);\n    var col2vals = col2dv.vals;\n    var newArrays = [];\n    var text;\n    var hovertext;\n\n    var nI = col2vals.length;\n    var nJ = col1vals.length;\n\n    for(i = 0; i < arrayVarNames.length; i++) {\n        newArrays[i] = Lib.init2dArray(nI, nJ);\n    }\n\n    if(hasColumnText) {\n        text = Lib.init2dArray(nI, nJ);\n    }\n    if(hasColumnHoverText) {\n        hovertext = Lib.init2dArray(nI, nJ);\n    }\n\n    var after2before = Lib.init2dArray(nI, nJ);\n\n    for(i = 0; i < colLen; i++) {\n        if(col1[i] !== BADNUM && col2[i] !== BADNUM) {\n            var i1 = Lib.findBin(col1[i] + col1dv.minDiff / 2, col1vals);\n            var i2 = Lib.findBin(col2[i] + col2dv.minDiff / 2, col2vals);\n\n            for(j = 0; j < arrayVarNames.length; j++) {\n                var arrayVarName = arrayVarNames[j];\n                var arrayVar = trace[arrayVarName];\n                var newArray = newArrays[j];\n                newArray[i2][i1] = arrayVar[i];\n                after2before[i2][i1] = i;\n            }\n\n            if(hasColumnText) text[i2][i1] = textCol[i];\n            if(hasColumnHoverText) hovertext[i2][i1] = hoverTextCol[i];\n        }\n    }\n\n    trace['_' + var1Name] = col1vals;\n    trace['_' + var2Name] = col2vals;\n    for(j = 0; j < arrayVarNames.length; j++) {\n        trace['_' + arrayVarNames[j]] = newArrays[j];\n    }\n    if(hasColumnText) trace._text = text;\n    if(hasColumnHoverText) trace._hovertext = hovertext;\n\n    if(ax1 && ax1.type === 'category') {\n        trace['_' + var1Name + 'CategoryMap'] = col1vals.map(function(v) { return ax1._categories[v];});\n    }\n\n    if(ax2 && ax2.type === 'category') {\n        trace['_' + var2Name + 'CategoryMap'] = col2vals.map(function(v) { return ax2._categories[v];});\n    }\n\n    trace._after2before = after2before;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}