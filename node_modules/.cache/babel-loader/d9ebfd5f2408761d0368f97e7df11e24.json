{"ast":null,"code":"'use strict';\n\nvar Lib = require('../lib');\nvar EventEmitter = require('events').EventEmitter;\nvar helpers = require('./helpers');\nfunction svgToImg(opts) {\n  var ev = opts.emitter || new EventEmitter();\n  var promise = new Promise(function (resolve, reject) {\n    var Image = window.Image;\n    var svg = opts.svg;\n    var format = opts.format || 'png';\n\n    // IE only support svg\n    if (Lib.isIE() && format !== 'svg') {\n      var ieSvgError = new Error(helpers.MSG_IE_BAD_FORMAT);\n      reject(ieSvgError);\n      // eventually remove the ev\n      //  in favor of promises\n      if (!opts.promise) {\n        return ev.emit('error', ieSvgError);\n      } else {\n        return promise;\n      }\n    }\n    var canvas = opts.canvas;\n    var scale = opts.scale || 1;\n    var w0 = opts.width || 300;\n    var h0 = opts.height || 150;\n    var w1 = scale * w0;\n    var h1 = scale * h0;\n    var ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    var img = new Image();\n    var svgBlob, url;\n    if (format === 'svg' || Lib.isSafari()) {\n      url = helpers.encodeSVG(svg);\n    } else {\n      svgBlob = helpers.createBlob(svg, 'svg');\n      url = helpers.createObjectURL(svgBlob);\n    }\n    canvas.width = w1;\n    canvas.height = h1;\n    img.onload = function () {\n      var imgData;\n      svgBlob = null;\n      helpers.revokeObjectURL(url);\n\n      // don't need to draw to canvas if svg\n      //  save some time and also avoid failure on IE\n      if (format !== 'svg') {\n        ctx.drawImage(img, 0, 0, w1, h1);\n      }\n      switch (format) {\n        case 'jpeg':\n          imgData = canvas.toDataURL('image/jpeg');\n          break;\n        case 'png':\n          imgData = canvas.toDataURL('image/png');\n          break;\n        case 'webp':\n          imgData = canvas.toDataURL('image/webp');\n          break;\n        case 'svg':\n          imgData = url;\n          break;\n        default:\n          var errorMsg = 'Image format is not jpeg, png, svg or webp.';\n          reject(new Error(errorMsg));\n          // eventually remove the ev\n          //  in favor of promises\n          if (!opts.promise) {\n            return ev.emit('error', errorMsg);\n          }\n      }\n      resolve(imgData);\n      // eventually remove the ev\n      //  in favor of promises\n      if (!opts.promise) {\n        ev.emit('success', imgData);\n      }\n    };\n    img.onerror = function (err) {\n      svgBlob = null;\n      helpers.revokeObjectURL(url);\n      reject(err);\n      // eventually remove the ev\n      //  in favor of promises\n      if (!opts.promise) {\n        return ev.emit('error', err);\n      }\n    };\n    img.src = url;\n  });\n\n  // temporary for backward compatibility\n  //  move to only Promise in 2.0.0\n  //  and eliminate the EventEmitter\n  if (opts.promise) {\n    return promise;\n  }\n  return ev;\n}\nmodule.exports = svgToImg;","map":{"version":3,"names":["Lib","require","EventEmitter","helpers","svgToImg","opts","ev","emitter","promise","Promise","resolve","reject","Image","window","svg","format","isIE","ieSvgError","Error","MSG_IE_BAD_FORMAT","emit","canvas","scale","w0","width","h0","height","w1","h1","ctx","getContext","willReadFrequently","img","svgBlob","url","isSafari","encodeSVG","createBlob","createObjectURL","onload","imgData","revokeObjectURL","drawImage","toDataURL","errorMsg","onerror","err","src","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/snapshot/svgtoimg.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../lib');\nvar EventEmitter = require('events').EventEmitter;\n\nvar helpers = require('./helpers');\n\nfunction svgToImg(opts) {\n    var ev = opts.emitter || new EventEmitter();\n\n    var promise = new Promise(function(resolve, reject) {\n        var Image = window.Image;\n        var svg = opts.svg;\n        var format = opts.format || 'png';\n\n        // IE only support svg\n        if(Lib.isIE() && format !== 'svg') {\n            var ieSvgError = new Error(helpers.MSG_IE_BAD_FORMAT);\n            reject(ieSvgError);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                return ev.emit('error', ieSvgError);\n            } else {\n                return promise;\n            }\n        }\n\n        var canvas = opts.canvas;\n        var scale = opts.scale || 1;\n        var w0 = opts.width || 300;\n        var h0 = opts.height || 150;\n        var w1 = scale * w0;\n        var h1 = scale * h0;\n\n        var ctx = canvas.getContext('2d', {willReadFrequently: true});\n        var img = new Image();\n        var svgBlob, url;\n\n        if(format === 'svg' || Lib.isSafari()) {\n            url = helpers.encodeSVG(svg);\n        } else {\n            svgBlob = helpers.createBlob(svg, 'svg');\n            url = helpers.createObjectURL(svgBlob);\n        }\n\n        canvas.width = w1;\n        canvas.height = h1;\n\n        img.onload = function() {\n            var imgData;\n\n            svgBlob = null;\n            helpers.revokeObjectURL(url);\n\n            // don't need to draw to canvas if svg\n            //  save some time and also avoid failure on IE\n            if(format !== 'svg') {\n                ctx.drawImage(img, 0, 0, w1, h1);\n            }\n\n            switch(format) {\n                case 'jpeg':\n                    imgData = canvas.toDataURL('image/jpeg');\n                    break;\n                case 'png':\n                    imgData = canvas.toDataURL('image/png');\n                    break;\n                case 'webp':\n                    imgData = canvas.toDataURL('image/webp');\n                    break;\n                case 'svg':\n                    imgData = url;\n                    break;\n                default:\n                    var errorMsg = 'Image format is not jpeg, png, svg or webp.';\n                    reject(new Error(errorMsg));\n                    // eventually remove the ev\n                    //  in favor of promises\n                    if(!opts.promise) {\n                        return ev.emit('error', errorMsg);\n                    }\n            }\n            resolve(imgData);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                ev.emit('success', imgData);\n            }\n        };\n\n        img.onerror = function(err) {\n            svgBlob = null;\n            helpers.revokeObjectURL(url);\n\n            reject(err);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                return ev.emit('error', err);\n            }\n        };\n\n        img.src = url;\n    });\n\n    // temporary for backward compatibility\n    //  move to only Promise in 2.0.0\n    //  and eliminate the EventEmitter\n    if(opts.promise) {\n        return promise;\n    }\n\n    return ev;\n}\n\nmodule.exports = svgToImg;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}