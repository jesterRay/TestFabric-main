{"ast":null,"code":"'use strict';\n\nvar glPlot3d = require('../../../stackgl_modules').gl_plot3d;\nvar createCamera = glPlot3d.createCamera;\nvar createPlot = glPlot3d.createScene;\nvar getContext = require('webgl-context');\nvar passiveSupported = require('has-passive-events');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar preserveDrawingBuffer = Lib.preserveDrawingBuffer();\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\nvar str2RGBAarray = require('../../lib/str2rgbarray');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\nvar project = require('./project');\nvar createAxesOptions = require('./layout/convert');\nvar createSpikeOptions = require('./layout/spikes');\nvar computeTickMarks = require('./layout/tick_marks');\nvar applyAutorangeOptions = require('../cartesian/autorange').applyAutorangeOptions;\nvar STATIC_CANVAS, STATIC_CONTEXT;\nvar tabletmode = false;\nfunction Scene(options, fullLayout) {\n  // create sub container for plot\n  var sceneContainer = document.createElement('div');\n  var plotContainer = options.container;\n\n  // keep a ref to the graph div to fire hover+click events\n  this.graphDiv = options.graphDiv;\n\n  // create SVG container for hover text\n  var svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgContainer.style.position = 'absolute';\n  svgContainer.style.top = svgContainer.style.left = '0px';\n  svgContainer.style.width = svgContainer.style.height = '100%';\n  svgContainer.style['z-index'] = 20;\n  svgContainer.style['pointer-events'] = 'none';\n  sceneContainer.appendChild(svgContainer);\n  this.svgContainer = svgContainer;\n\n  // Tag the container with the sceneID\n  sceneContainer.id = options.id;\n  sceneContainer.style.position = 'absolute';\n  sceneContainer.style.top = sceneContainer.style.left = '0px';\n  sceneContainer.style.width = sceneContainer.style.height = '100%';\n  plotContainer.appendChild(sceneContainer);\n  this.fullLayout = fullLayout;\n  this.id = options.id || 'scene';\n  this.fullSceneLayout = fullLayout[this.id];\n\n  // Saved from last call to plot()\n  this.plotArgs = [[], {}, {}];\n\n  /*\n   * Move this to calc step? Why does it work here?\n   */\n  this.axesOptions = createAxesOptions(fullLayout, fullLayout[this.id]);\n  this.spikeOptions = createSpikeOptions(fullLayout[this.id]);\n  this.container = sceneContainer;\n  this.staticMode = !!options.staticPlot;\n  this.pixelRatio = this.pixelRatio || options.plotGlPixelRatio || 2;\n\n  // Coordinate rescaling\n  this.dataScale = [1, 1, 1];\n  this.contourLevels = [[], [], []];\n  this.convertAnnotations = Registry.getComponentMethod('annotations3d', 'convert');\n  this.drawAnnotations = Registry.getComponentMethod('annotations3d', 'draw');\n  this.initializeGLPlot();\n}\nvar proto = Scene.prototype;\nproto.prepareOptions = function () {\n  var scene = this;\n  var opts = {\n    canvas: scene.canvas,\n    gl: scene.gl,\n    glOptions: {\n      preserveDrawingBuffer: preserveDrawingBuffer,\n      premultipliedAlpha: true,\n      antialias: true\n    },\n    container: scene.container,\n    axes: scene.axesOptions,\n    spikes: scene.spikeOptions,\n    pickRadius: 10,\n    snapToData: true,\n    autoScale: true,\n    autoBounds: false,\n    cameraObject: scene.camera,\n    pixelRatio: scene.pixelRatio\n  };\n\n  // for static plots, we reuse the WebGL context\n  //  as WebKit doesn't collect them reliably\n  if (scene.staticMode) {\n    if (!STATIC_CONTEXT) {\n      STATIC_CANVAS = document.createElement('canvas');\n      STATIC_CONTEXT = getContext({\n        canvas: STATIC_CANVAS,\n        preserveDrawingBuffer: true,\n        premultipliedAlpha: true,\n        antialias: true\n      });\n      if (!STATIC_CONTEXT) {\n        throw new Error('error creating static canvas/context for image server');\n      }\n    }\n    opts.gl = STATIC_CONTEXT;\n    opts.canvas = STATIC_CANVAS;\n  }\n  return opts;\n};\nvar firstInit = true;\nproto.tryCreatePlot = function () {\n  var scene = this;\n  var opts = scene.prepareOptions();\n  var success = true;\n  try {\n    scene.glplot = createPlot(opts);\n  } catch (e) {\n    if (scene.staticMode || !firstInit || preserveDrawingBuffer) {\n      success = false;\n    } else {\n      // try second time\n      // enable preserveDrawingBuffer setup\n      // in case is-mobile not detecting the right device\n      Lib.warn(['webgl setup failed possibly due to', 'false preserveDrawingBuffer config.', 'The mobile/tablet device may not be detected by is-mobile module.', 'Enabling preserveDrawingBuffer in second attempt to create webgl scene...'].join(' '));\n      try {\n        // invert preserveDrawingBuffer\n        preserveDrawingBuffer = opts.glOptions.preserveDrawingBuffer = true;\n        scene.glplot = createPlot(opts);\n      } catch (e) {\n        // revert changes to preserveDrawingBuffer\n        preserveDrawingBuffer = opts.glOptions.preserveDrawingBuffer = false;\n        success = false;\n      }\n    }\n  }\n  firstInit = false;\n  return success;\n};\nproto.initializeGLCamera = function () {\n  var scene = this;\n  var cameraData = scene.fullSceneLayout.camera;\n  var isOrtho = cameraData.projection.type === 'orthographic';\n  scene.camera = createCamera(scene.container, {\n    center: [cameraData.center.x, cameraData.center.y, cameraData.center.z],\n    eye: [cameraData.eye.x, cameraData.eye.y, cameraData.eye.z],\n    up: [cameraData.up.x, cameraData.up.y, cameraData.up.z],\n    _ortho: isOrtho,\n    zoomMin: 0.01,\n    zoomMax: 100,\n    mode: 'orbit'\n  });\n};\nproto.initializeGLPlot = function () {\n  var scene = this;\n  scene.initializeGLCamera();\n  var success = scene.tryCreatePlot();\n  /*\n  * createPlot will throw when webgl is not enabled in the client.\n  * Lets return an instance of the module with all functions noop'd.\n  * The destroy method - which will remove the container from the DOM\n  * is overridden with a function that removes the container only.\n  */\n  if (!success) return showNoWebGlMsg(scene);\n\n  // List of scene objects\n  scene.traces = {};\n  scene.make4thDimension();\n  var gd = scene.graphDiv;\n  var layout = gd.layout;\n  var makeUpdate = function () {\n    var update = {};\n    if (scene.isCameraChanged(layout)) {\n      // camera updates\n      update[scene.id + '.camera'] = scene.getCamera();\n    }\n    if (scene.isAspectChanged(layout)) {\n      // scene updates\n      update[scene.id + '.aspectratio'] = scene.glplot.getAspectratio();\n      if (layout[scene.id].aspectmode !== 'manual') {\n        scene.fullSceneLayout.aspectmode = layout[scene.id].aspectmode = update[scene.id + '.aspectmode'] = 'manual';\n      }\n    }\n    return update;\n  };\n  var relayoutCallback = function (scene) {\n    if (scene.fullSceneLayout.dragmode === false) return;\n    var update = makeUpdate();\n    scene.saveLayout(layout);\n    scene.graphDiv.emit('plotly_relayout', update);\n  };\n  if (scene.glplot.canvas) {\n    scene.glplot.canvas.addEventListener('mouseup', function () {\n      relayoutCallback(scene);\n    });\n    scene.glplot.canvas.addEventListener('touchstart', function () {\n      tabletmode = true;\n    });\n    scene.glplot.canvas.addEventListener('wheel', function (e) {\n      if (gd._context._scrollZoom.gl3d) {\n        if (scene.camera._ortho) {\n          var s = e.deltaX > e.deltaY ? 1.1 : 1.0 / 1.1;\n          var o = scene.glplot.getAspectratio();\n          scene.glplot.setAspectratio({\n            x: s * o.x,\n            y: s * o.y,\n            z: s * o.z\n          });\n        }\n        relayoutCallback(scene);\n      }\n    }, passiveSupported ? {\n      passive: false\n    } : false);\n    scene.glplot.canvas.addEventListener('mousemove', function () {\n      if (scene.fullSceneLayout.dragmode === false) return;\n      if (scene.camera.mouseListener.buttons === 0) return;\n      var update = makeUpdate();\n      scene.graphDiv.emit('plotly_relayouting', update);\n    });\n    if (!scene.staticMode) {\n      scene.glplot.canvas.addEventListener('webglcontextlost', function (event) {\n        if (gd && gd.emit) {\n          gd.emit('plotly_webglcontextlost', {\n            event: event,\n            layer: scene.id\n          });\n        }\n      }, false);\n    }\n  }\n  scene.glplot.oncontextloss = function () {\n    scene.recoverContext();\n  };\n  scene.glplot.onrender = function () {\n    scene.render();\n  };\n  return true;\n};\nproto.render = function () {\n  var scene = this;\n  var gd = scene.graphDiv;\n  var trace;\n\n  // update size of svg container\n  var svgContainer = scene.svgContainer;\n  var clientRect = scene.container.getBoundingClientRect();\n  gd._fullLayout._calcInverseTransform(gd);\n  var scaleX = gd._fullLayout._invScaleX;\n  var scaleY = gd._fullLayout._invScaleY;\n  var width = clientRect.width * scaleX;\n  var height = clientRect.height * scaleY;\n  svgContainer.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n  svgContainer.setAttributeNS(null, 'width', width);\n  svgContainer.setAttributeNS(null, 'height', height);\n  computeTickMarks(scene);\n  scene.glplot.axes.update(scene.axesOptions);\n\n  // check if pick has changed\n  var keys = Object.keys(scene.traces);\n  var lastPicked = null;\n  var selection = scene.glplot.selection;\n  for (var i = 0; i < keys.length; ++i) {\n    trace = scene.traces[keys[i]];\n    if (trace.data.hoverinfo !== 'skip' && trace.handlePick(selection)) {\n      lastPicked = trace;\n    }\n    if (trace.setContourLevels) trace.setContourLevels();\n  }\n  function formatter(axLetter, val, hoverformat) {\n    var ax = scene.fullSceneLayout[axLetter + 'axis'];\n    if (ax.type !== 'log') {\n      val = ax.d2l(val);\n    }\n    return Axes.hoverLabelText(ax, val, hoverformat);\n  }\n  if (lastPicked !== null) {\n    var pdata = project(scene.glplot.cameraParams, selection.dataCoordinate);\n    trace = lastPicked.data;\n    var traceNow = gd._fullData[trace.index];\n    var ptNumber = selection.index;\n    var labels = {\n      xLabel: formatter('x', selection.traceCoordinate[0], trace.xhoverformat),\n      yLabel: formatter('y', selection.traceCoordinate[1], trace.yhoverformat),\n      zLabel: formatter('z', selection.traceCoordinate[2], trace.zhoverformat)\n    };\n    var hoverinfo = Fx.castHoverinfo(traceNow, scene.fullLayout, ptNumber);\n    var hoverinfoParts = (hoverinfo || '').split('+');\n    var isHoverinfoAll = hoverinfo && hoverinfo === 'all';\n    if (!traceNow.hovertemplate && !isHoverinfoAll) {\n      if (hoverinfoParts.indexOf('x') === -1) labels.xLabel = undefined;\n      if (hoverinfoParts.indexOf('y') === -1) labels.yLabel = undefined;\n      if (hoverinfoParts.indexOf('z') === -1) labels.zLabel = undefined;\n      if (hoverinfoParts.indexOf('text') === -1) selection.textLabel = undefined;\n      if (hoverinfoParts.indexOf('name') === -1) lastPicked.name = undefined;\n    }\n    var tx;\n    var vectorTx = [];\n    if (trace.type === 'cone' || trace.type === 'streamtube') {\n      labels.uLabel = formatter('x', selection.traceCoordinate[3], trace.uhoverformat);\n      if (isHoverinfoAll || hoverinfoParts.indexOf('u') !== -1) {\n        vectorTx.push('u: ' + labels.uLabel);\n      }\n      labels.vLabel = formatter('y', selection.traceCoordinate[4], trace.vhoverformat);\n      if (isHoverinfoAll || hoverinfoParts.indexOf('v') !== -1) {\n        vectorTx.push('v: ' + labels.vLabel);\n      }\n      labels.wLabel = formatter('z', selection.traceCoordinate[5], trace.whoverformat);\n      if (isHoverinfoAll || hoverinfoParts.indexOf('w') !== -1) {\n        vectorTx.push('w: ' + labels.wLabel);\n      }\n      labels.normLabel = selection.traceCoordinate[6].toPrecision(3);\n      if (isHoverinfoAll || hoverinfoParts.indexOf('norm') !== -1) {\n        vectorTx.push('norm: ' + labels.normLabel);\n      }\n      if (trace.type === 'streamtube') {\n        labels.divergenceLabel = selection.traceCoordinate[7].toPrecision(3);\n        if (isHoverinfoAll || hoverinfoParts.indexOf('divergence') !== -1) {\n          vectorTx.push('divergence: ' + labels.divergenceLabel);\n        }\n      }\n      if (selection.textLabel) {\n        vectorTx.push(selection.textLabel);\n      }\n      tx = vectorTx.join('<br>');\n    } else if (trace.type === 'isosurface' || trace.type === 'volume') {\n      labels.valueLabel = Axes.hoverLabelText(scene._mockAxis, scene._mockAxis.d2l(selection.traceCoordinate[3]), trace.valuehoverformat);\n      vectorTx.push('value: ' + labels.valueLabel);\n      if (selection.textLabel) {\n        vectorTx.push(selection.textLabel);\n      }\n      tx = vectorTx.join('<br>');\n    } else {\n      tx = selection.textLabel;\n    }\n    var pointData = {\n      x: selection.traceCoordinate[0],\n      y: selection.traceCoordinate[1],\n      z: selection.traceCoordinate[2],\n      data: traceNow._input,\n      fullData: traceNow,\n      curveNumber: traceNow.index,\n      pointNumber: ptNumber\n    };\n    Fx.appendArrayPointValue(pointData, traceNow, ptNumber);\n    if (trace._module.eventData) {\n      pointData = traceNow._module.eventData(pointData, selection, traceNow, {}, ptNumber);\n    }\n    var eventData = {\n      points: [pointData]\n    };\n    if (scene.fullSceneLayout.hovermode) {\n      var bbox = [];\n      Fx.loneHover({\n        trace: traceNow,\n        x: (0.5 + 0.5 * pdata[0] / pdata[3]) * width,\n        y: (0.5 - 0.5 * pdata[1] / pdata[3]) * height,\n        xLabel: labels.xLabel,\n        yLabel: labels.yLabel,\n        zLabel: labels.zLabel,\n        text: tx,\n        name: lastPicked.name,\n        color: Fx.castHoverOption(traceNow, ptNumber, 'bgcolor') || lastPicked.color,\n        borderColor: Fx.castHoverOption(traceNow, ptNumber, 'bordercolor'),\n        fontFamily: Fx.castHoverOption(traceNow, ptNumber, 'font.family'),\n        fontSize: Fx.castHoverOption(traceNow, ptNumber, 'font.size'),\n        fontColor: Fx.castHoverOption(traceNow, ptNumber, 'font.color'),\n        nameLength: Fx.castHoverOption(traceNow, ptNumber, 'namelength'),\n        textAlign: Fx.castHoverOption(traceNow, ptNumber, 'align'),\n        hovertemplate: Lib.castOption(traceNow, ptNumber, 'hovertemplate'),\n        hovertemplateLabels: Lib.extendFlat({}, pointData, labels),\n        eventData: [pointData]\n      }, {\n        container: svgContainer,\n        gd: gd,\n        inOut_bbox: bbox\n      });\n      pointData.bbox = bbox[0];\n    }\n    if (selection.distance < 5 && (selection.buttons || tabletmode)) {\n      gd.emit('plotly_click', eventData);\n    } else {\n      gd.emit('plotly_hover', eventData);\n    }\n    this.oldEventData = eventData;\n  } else {\n    Fx.loneUnhover(svgContainer);\n    if (this.oldEventData) gd.emit('plotly_unhover', this.oldEventData);\n    this.oldEventData = undefined;\n  }\n  scene.drawAnnotations(scene);\n};\nproto.recoverContext = function () {\n  var scene = this;\n  scene.glplot.dispose();\n  var tryRecover = function () {\n    if (scene.glplot.gl.isContextLost()) {\n      requestAnimationFrame(tryRecover);\n      return;\n    }\n    if (!scene.initializeGLPlot()) {\n      Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');\n      return;\n    }\n    scene.plot.apply(scene, scene.plotArgs);\n  };\n  requestAnimationFrame(tryRecover);\n};\nvar axisProperties = ['xaxis', 'yaxis', 'zaxis'];\nfunction computeTraceBounds(scene, trace, bounds) {\n  var fullSceneLayout = scene.fullSceneLayout;\n  for (var d = 0; d < 3; d++) {\n    var axisName = axisProperties[d];\n    var axLetter = axisName.charAt(0);\n    var ax = fullSceneLayout[axisName];\n    var coords = trace[axLetter];\n    var calendar = trace[axLetter + 'calendar'];\n    var len = trace['_' + axLetter + 'length'];\n    if (!Lib.isArrayOrTypedArray(coords)) {\n      bounds[0][d] = Math.min(bounds[0][d], 0);\n      bounds[1][d] = Math.max(bounds[1][d], len - 1);\n    } else {\n      var v;\n      for (var i = 0; i < (len || coords.length); i++) {\n        if (Lib.isArrayOrTypedArray(coords[i])) {\n          for (var j = 0; j < coords[i].length; ++j) {\n            v = ax.d2l(coords[i][j], 0, calendar);\n            if (!isNaN(v) && isFinite(v)) {\n              bounds[0][d] = Math.min(bounds[0][d], v);\n              bounds[1][d] = Math.max(bounds[1][d], v);\n            }\n          }\n        } else {\n          v = ax.d2l(coords[i], 0, calendar);\n          if (!isNaN(v) && isFinite(v)) {\n            bounds[0][d] = Math.min(bounds[0][d], v);\n            bounds[1][d] = Math.max(bounds[1][d], v);\n          }\n        }\n      }\n    }\n  }\n}\nfunction computeAnnotationBounds(scene, bounds) {\n  var fullSceneLayout = scene.fullSceneLayout;\n  var annotations = fullSceneLayout.annotations || [];\n  for (var d = 0; d < 3; d++) {\n    var axisName = axisProperties[d];\n    var axLetter = axisName.charAt(0);\n    var ax = fullSceneLayout[axisName];\n    for (var j = 0; j < annotations.length; j++) {\n      var ann = annotations[j];\n      if (ann.visible) {\n        var pos = ax.r2l(ann[axLetter]);\n        if (!isNaN(pos) && isFinite(pos)) {\n          bounds[0][d] = Math.min(bounds[0][d], pos);\n          bounds[1][d] = Math.max(bounds[1][d], pos);\n        }\n      }\n    }\n  }\n}\nproto.plot = function (sceneData, fullLayout, layout) {\n  var scene = this;\n\n  // Save parameters\n  scene.plotArgs = [sceneData, fullLayout, layout];\n  if (scene.glplot.contextLost) return;\n  var data, trace;\n  var i, j, axis, axisType;\n  var fullSceneLayout = fullLayout[scene.id];\n  var sceneLayout = layout[scene.id];\n\n  // Update layout\n  scene.fullLayout = fullLayout;\n  scene.fullSceneLayout = fullSceneLayout;\n  scene.axesOptions.merge(fullLayout, fullSceneLayout);\n  scene.spikeOptions.merge(fullSceneLayout);\n\n  // Update camera and camera mode\n  scene.setViewport(fullSceneLayout);\n  scene.updateFx(fullSceneLayout.dragmode, fullSceneLayout.hovermode);\n  scene.camera.enableWheel = scene.graphDiv._context._scrollZoom.gl3d;\n\n  // Update scene background\n  scene.glplot.setClearColor(str2RGBAarray(fullSceneLayout.bgcolor));\n\n  // Update axes functions BEFORE updating traces\n  scene.setConvert(axis);\n\n  // Convert scene data\n  if (!sceneData) sceneData = [];else if (!Array.isArray(sceneData)) sceneData = [sceneData];\n\n  // Compute trace bounding box\n  var dataBounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  for (i = 0; i < sceneData.length; ++i) {\n    data = sceneData[i];\n    if (data.visible !== true || data._length === 0) continue;\n    computeTraceBounds(this, data, dataBounds);\n  }\n  computeAnnotationBounds(this, dataBounds);\n  var dataScale = [1, 1, 1];\n  for (j = 0; j < 3; ++j) {\n    if (dataBounds[1][j] === dataBounds[0][j]) {\n      dataScale[j] = 1.0;\n    } else {\n      dataScale[j] = 1.0 / (dataBounds[1][j] - dataBounds[0][j]);\n    }\n  }\n\n  // Save scale\n  scene.dataScale = dataScale;\n\n  // after computeTraceBounds where ax._categories are filled in\n  scene.convertAnnotations(this);\n\n  // Update traces\n  for (i = 0; i < sceneData.length; ++i) {\n    data = sceneData[i];\n    if (data.visible !== true || data._length === 0) {\n      continue;\n    }\n    trace = scene.traces[data.uid];\n    if (trace) {\n      if (trace.data.type === data.type) {\n        trace.update(data);\n      } else {\n        trace.dispose();\n        trace = data._module.plot(this, data);\n        scene.traces[data.uid] = trace;\n      }\n    } else {\n      trace = data._module.plot(this, data);\n      scene.traces[data.uid] = trace;\n    }\n    trace.name = data.name;\n  }\n\n  // Remove empty traces\n  var traceIds = Object.keys(scene.traces);\n  traceIdLoop: for (i = 0; i < traceIds.length; ++i) {\n    for (j = 0; j < sceneData.length; ++j) {\n      if (sceneData[j].uid === traceIds[i] && sceneData[j].visible === true && sceneData[j]._length !== 0) {\n        continue traceIdLoop;\n      }\n    }\n    trace = scene.traces[traceIds[i]];\n    trace.dispose();\n    delete scene.traces[traceIds[i]];\n  }\n\n  // order object per trace index\n  scene.glplot.objects.sort(function (a, b) {\n    return a._trace.data.index - b._trace.data.index;\n  });\n\n  // Update ranges (needs to be called *after* objects are added due to updates)\n  var sceneBounds = [[0, 0, 0], [0, 0, 0]];\n  var axisDataRange = [];\n  var axisTypeRatios = {};\n  for (i = 0; i < 3; ++i) {\n    axis = fullSceneLayout[axisProperties[i]];\n    axisType = axis.type;\n    if (axisType in axisTypeRatios) {\n      axisTypeRatios[axisType].acc *= dataScale[i];\n      axisTypeRatios[axisType].count += 1;\n    } else {\n      axisTypeRatios[axisType] = {\n        acc: dataScale[i],\n        count: 1\n      };\n    }\n    var range;\n    if (axis.autorange) {\n      sceneBounds[0][i] = Infinity;\n      sceneBounds[1][i] = -Infinity;\n      var objects = scene.glplot.objects;\n      var annotations = scene.fullSceneLayout.annotations || [];\n      var axLetter = axis._name.charAt(0);\n      for (j = 0; j < objects.length; j++) {\n        var obj = objects[j];\n        var objBounds = obj.bounds;\n        var pad = obj._trace.data._pad || 0;\n        if (obj.constructor.name === 'ErrorBars' && axis._lowerLogErrorBound) {\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], axis._lowerLogErrorBound);\n        } else {\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], objBounds[0][i] / dataScale[i] - pad);\n        }\n        sceneBounds[1][i] = Math.max(sceneBounds[1][i], objBounds[1][i] / dataScale[i] + pad);\n      }\n      for (j = 0; j < annotations.length; j++) {\n        var ann = annotations[j];\n\n        // N.B. not taking into consideration the arrowhead\n        if (ann.visible) {\n          var pos = axis.r2l(ann[axLetter]);\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], pos);\n          sceneBounds[1][i] = Math.max(sceneBounds[1][i], pos);\n        }\n      }\n      if ('rangemode' in axis && axis.rangemode === 'tozero') {\n        sceneBounds[0][i] = Math.min(sceneBounds[0][i], 0);\n        sceneBounds[1][i] = Math.max(sceneBounds[1][i], 0);\n      }\n      if (sceneBounds[0][i] > sceneBounds[1][i]) {\n        sceneBounds[0][i] = -1;\n        sceneBounds[1][i] = 1;\n      } else {\n        var d = sceneBounds[1][i] - sceneBounds[0][i];\n        sceneBounds[0][i] -= d / 32.0;\n        sceneBounds[1][i] += d / 32.0;\n      }\n      range = [sceneBounds[0][i], sceneBounds[1][i]];\n      range = applyAutorangeOptions(range, axis);\n      sceneBounds[0][i] = range[0];\n      sceneBounds[1][i] = range[1];\n      if (axis.isReversed()) {\n        // swap bounds:\n        var tmp = sceneBounds[0][i];\n        sceneBounds[0][i] = sceneBounds[1][i];\n        sceneBounds[1][i] = tmp;\n      }\n    } else {\n      range = axis.range;\n      sceneBounds[0][i] = axis.r2l(range[0]);\n      sceneBounds[1][i] = axis.r2l(range[1]);\n    }\n    if (sceneBounds[0][i] === sceneBounds[1][i]) {\n      sceneBounds[0][i] -= 1;\n      sceneBounds[1][i] += 1;\n    }\n    axisDataRange[i] = sceneBounds[1][i] - sceneBounds[0][i];\n    axis.range = [sceneBounds[0][i], sceneBounds[1][i]];\n    axis.limitRange();\n\n    // Update plot bounds\n    scene.glplot.setBounds(i, {\n      min: axis.range[0] * dataScale[i],\n      max: axis.range[1] * dataScale[i]\n    });\n  }\n\n  /*\n   * Dynamically set the aspect ratio depending on the users aspect settings\n   */\n  var aspectRatio;\n  var aspectmode = fullSceneLayout.aspectmode;\n  if (aspectmode === 'cube') {\n    aspectRatio = [1, 1, 1];\n  } else if (aspectmode === 'manual') {\n    var userRatio = fullSceneLayout.aspectratio;\n    aspectRatio = [userRatio.x, userRatio.y, userRatio.z];\n  } else if (aspectmode === 'auto' || aspectmode === 'data') {\n    var axesScaleRatio = [1, 1, 1];\n    // Compute axis scale per category\n    for (i = 0; i < 3; ++i) {\n      axis = fullSceneLayout[axisProperties[i]];\n      axisType = axis.type;\n      var axisRatio = axisTypeRatios[axisType];\n      axesScaleRatio[i] = Math.pow(axisRatio.acc, 1.0 / axisRatio.count) / dataScale[i];\n    }\n    if (aspectmode === 'data') {\n      aspectRatio = axesScaleRatio;\n    } else {\n      // i.e. 'auto' option\n      if (Math.max.apply(null, axesScaleRatio) / Math.min.apply(null, axesScaleRatio) <= 4) {\n        // USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n        aspectRatio = axesScaleRatio;\n      } else {\n        // USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n        aspectRatio = [1, 1, 1];\n      }\n    }\n  } else {\n    throw new Error('scene.js aspectRatio was not one of the enumerated types');\n  }\n\n  /*\n   * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n   * manipulates the aspectmode settings and the fullLayout is up-to-date.\n   */\n  fullSceneLayout.aspectratio.x = sceneLayout.aspectratio.x = aspectRatio[0];\n  fullSceneLayout.aspectratio.y = sceneLayout.aspectratio.y = aspectRatio[1];\n  fullSceneLayout.aspectratio.z = sceneLayout.aspectratio.z = aspectRatio[2];\n\n  /*\n   * Finally assign the computed aspecratio to the glplot module. This will have an effect\n   * on the next render cycle.\n   */\n  scene.glplot.setAspectratio(fullSceneLayout.aspectratio);\n\n  // save 'initial' aspectratio & aspectmode view settings for modebar buttons\n  if (!scene.viewInitial.aspectratio) {\n    scene.viewInitial.aspectratio = {\n      x: fullSceneLayout.aspectratio.x,\n      y: fullSceneLayout.aspectratio.y,\n      z: fullSceneLayout.aspectratio.z\n    };\n  }\n  if (!scene.viewInitial.aspectmode) {\n    scene.viewInitial.aspectmode = fullSceneLayout.aspectmode;\n  }\n\n  // Update frame position for multi plots\n  var domain = fullSceneLayout.domain || null;\n  var size = fullLayout._size || null;\n  if (domain && size) {\n    var containerStyle = scene.container.style;\n    containerStyle.position = 'absolute';\n    containerStyle.left = size.l + domain.x[0] * size.w + 'px';\n    containerStyle.top = size.t + (1 - domain.y[1]) * size.h + 'px';\n    containerStyle.width = size.w * (domain.x[1] - domain.x[0]) + 'px';\n    containerStyle.height = size.h * (domain.y[1] - domain.y[0]) + 'px';\n  }\n\n  // force redraw so that promise is returned when rendering is completed\n  scene.glplot.redraw();\n};\nproto.destroy = function () {\n  var scene = this;\n  if (!scene.glplot) return;\n  scene.camera.mouseListener.enabled = false;\n  scene.container.removeEventListener('wheel', scene.camera.wheelListener);\n  scene.camera = null;\n  scene.glplot.dispose();\n  scene.container.parentNode.removeChild(scene.container);\n  scene.glplot = null;\n};\n\n// getCameraArrays :: plotly_coords -> gl-plot3d_coords\n// inverse of getLayoutCamera\nfunction getCameraArrays(camera) {\n  return [[camera.eye.x, camera.eye.y, camera.eye.z], [camera.center.x, camera.center.y, camera.center.z], [camera.up.x, camera.up.y, camera.up.z]];\n}\n\n// getLayoutCamera :: gl-plot3d_coords -> plotly_coords\n// inverse of getCameraArrays\nfunction getLayoutCamera(camera) {\n  return {\n    up: {\n      x: camera.up[0],\n      y: camera.up[1],\n      z: camera.up[2]\n    },\n    center: {\n      x: camera.center[0],\n      y: camera.center[1],\n      z: camera.center[2]\n    },\n    eye: {\n      x: camera.eye[0],\n      y: camera.eye[1],\n      z: camera.eye[2]\n    },\n    projection: {\n      type: camera._ortho === true ? 'orthographic' : 'perspective'\n    }\n  };\n}\n\n// get camera position in plotly coords from 'gl-plot3d' coords\nproto.getCamera = function () {\n  var scene = this;\n  scene.camera.view.recalcMatrix(scene.camera.view.lastT());\n  return getLayoutCamera(scene.camera);\n};\n\n// set gl-plot3d camera position and scene aspects with a set of plotly coords\nproto.setViewport = function (sceneLayout) {\n  var scene = this;\n  var cameraData = sceneLayout.camera;\n  scene.camera.lookAt.apply(this, getCameraArrays(cameraData));\n  scene.glplot.setAspectratio(sceneLayout.aspectratio);\n  var newOrtho = cameraData.projection.type === 'orthographic';\n  var oldOrtho = scene.camera._ortho;\n  if (newOrtho !== oldOrtho) {\n    scene.glplot.redraw(); // TODO: figure out why we need to redraw here?\n    scene.glplot.clearRGBA();\n    scene.glplot.dispose();\n    scene.initializeGLPlot();\n  }\n};\nproto.isCameraChanged = function (layout) {\n  var scene = this;\n  var cameraData = scene.getCamera();\n  var cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n  var cameraDataLastSave = cameraNestedProp.get();\n  function same(x, y, i, j) {\n    var vectors = ['up', 'center', 'eye'];\n    var components = ['x', 'y', 'z'];\n    return y[vectors[i]] && x[vectors[i]][components[j]] === y[vectors[i]][components[j]];\n  }\n  var changed = false;\n  if (cameraDataLastSave === undefined) {\n    changed = true;\n  } else {\n    for (var i = 0; i < 3; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (!same(cameraData, cameraDataLastSave, i, j)) {\n          changed = true;\n          break;\n        }\n      }\n    }\n    if (!cameraDataLastSave.projection || cameraData.projection && cameraData.projection.type !== cameraDataLastSave.projection.type) {\n      changed = true;\n    }\n  }\n  return changed;\n};\nproto.isAspectChanged = function (layout) {\n  var scene = this;\n  var aspectData = scene.glplot.getAspectratio();\n  var aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n  var aspectDataLastSave = aspectNestedProp.get();\n  return aspectDataLastSave === undefined || aspectDataLastSave.x !== aspectData.x || aspectDataLastSave.y !== aspectData.y || aspectDataLastSave.z !== aspectData.z;\n};\n\n// save camera to user layout (i.e. gd.layout)\nproto.saveLayout = function (layout) {\n  var scene = this;\n  var fullLayout = scene.fullLayout;\n  var cameraData;\n  var cameraNestedProp;\n  var cameraDataLastSave;\n  var aspectData;\n  var aspectNestedProp;\n  var aspectDataLastSave;\n  var cameraChanged = scene.isCameraChanged(layout);\n  var aspectChanged = scene.isAspectChanged(layout);\n  var hasChanged = cameraChanged || aspectChanged;\n  if (hasChanged) {\n    var preGUI = {};\n    if (cameraChanged) {\n      cameraData = scene.getCamera();\n      cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n      cameraDataLastSave = cameraNestedProp.get();\n      preGUI[scene.id + '.camera'] = cameraDataLastSave;\n    }\n    if (aspectChanged) {\n      aspectData = scene.glplot.getAspectratio();\n      aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n      aspectDataLastSave = aspectNestedProp.get();\n      preGUI[scene.id + '.aspectratio'] = aspectDataLastSave;\n    }\n    Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, preGUI);\n    if (cameraChanged) {\n      cameraNestedProp.set(cameraData);\n      var cameraFullNP = Lib.nestedProperty(fullLayout, scene.id + '.camera');\n      cameraFullNP.set(cameraData);\n    }\n    if (aspectChanged) {\n      aspectNestedProp.set(aspectData);\n      var aspectFullNP = Lib.nestedProperty(fullLayout, scene.id + '.aspectratio');\n      aspectFullNP.set(aspectData);\n      scene.glplot.redraw();\n    }\n  }\n  return hasChanged;\n};\nproto.updateFx = function (dragmode, hovermode) {\n  var scene = this;\n  var camera = scene.camera;\n  if (camera) {\n    // rotate and orbital are synonymous\n    if (dragmode === 'orbit') {\n      camera.mode = 'orbit';\n      camera.keyBindingMode = 'rotate';\n    } else if (dragmode === 'turntable') {\n      camera.up = [0, 0, 1];\n      camera.mode = 'turntable';\n      camera.keyBindingMode = 'rotate';\n\n      // The setter for camera.mode animates the transition to z-up,\n      // but only if we *don't* explicitly set z-up earlier via the\n      // relayout. So push `up` back to layout & fullLayout manually now.\n      var gd = scene.graphDiv;\n      var fullLayout = gd._fullLayout;\n      var fullCamera = scene.fullSceneLayout.camera;\n      var x = fullCamera.up.x;\n      var y = fullCamera.up.y;\n      var z = fullCamera.up.z;\n      // only push `up` back to (full)layout if it's going to change\n      if (z / Math.sqrt(x * x + y * y + z * z) < 0.999) {\n        var attr = scene.id + '.camera.up';\n        var zUp = {\n          x: 0,\n          y: 0,\n          z: 1\n        };\n        var edits = {};\n        edits[attr] = zUp;\n        var layout = gd.layout;\n        Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, edits);\n        fullCamera.up = zUp;\n        Lib.nestedProperty(layout, attr).set(zUp);\n      }\n    } else {\n      // none rotation modes [pan or zoom]\n      camera.keyBindingMode = dragmode;\n    }\n  }\n\n  // to put dragmode and hovermode on the same grounds from relayout\n  scene.fullSceneLayout.hovermode = hovermode;\n};\nfunction flipPixels(pixels, w, h) {\n  for (var i = 0, q = h - 1; i < q; ++i, --q) {\n    for (var j = 0; j < w; ++j) {\n      for (var k = 0; k < 4; ++k) {\n        var a = 4 * (w * i + j) + k;\n        var b = 4 * (w * q + j) + k;\n        var tmp = pixels[a];\n        pixels[a] = pixels[b];\n        pixels[b] = tmp;\n      }\n    }\n  }\n}\nfunction correctRGB(pixels, w, h) {\n  for (var i = 0; i < h; ++i) {\n    for (var j = 0; j < w; ++j) {\n      var k = 4 * (w * i + j);\n      var a = pixels[k + 3]; // alpha\n      if (a > 0) {\n        var q = 255 / a;\n        for (var l = 0; l < 3; ++l) {\n          // RGB\n          pixels[k + l] = Math.min(q * pixels[k + l], 255);\n        }\n      }\n    }\n  }\n}\nproto.toImage = function (format) {\n  var scene = this;\n  if (!format) format = 'png';\n  if (scene.staticMode) scene.container.appendChild(STATIC_CANVAS);\n\n  // Force redraw\n  scene.glplot.redraw();\n\n  // Grab context and yank out pixels\n  var gl = scene.glplot.gl;\n  var w = gl.drawingBufferWidth;\n  var h = gl.drawingBufferHeight;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var pixels = new Uint8Array(w * h * 4);\n  gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  flipPixels(pixels, w, h);\n  correctRGB(pixels, w, h);\n  var canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d', {\n    willReadFrequently: true\n  });\n  var imageData = context.createImageData(w, h);\n  imageData.data.set(pixels);\n  context.putImageData(imageData, 0, 0);\n  var dataURL;\n  switch (format) {\n    case 'jpeg':\n      dataURL = canvas.toDataURL('image/jpeg');\n      break;\n    case 'webp':\n      dataURL = canvas.toDataURL('image/webp');\n      break;\n    default:\n      dataURL = canvas.toDataURL('image/png');\n  }\n  if (scene.staticMode) scene.container.removeChild(STATIC_CANVAS);\n  return dataURL;\n};\nproto.setConvert = function () {\n  var scene = this;\n  for (var i = 0; i < 3; i++) {\n    var ax = scene.fullSceneLayout[axisProperties[i]];\n    Axes.setConvert(ax, scene.fullLayout);\n    ax.setScale = Lib.noop;\n  }\n};\nproto.make4thDimension = function () {\n  var scene = this;\n  var gd = scene.graphDiv;\n  var fullLayout = gd._fullLayout;\n\n  // mock axis for hover formatting\n  scene._mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(scene._mockAxis, fullLayout);\n};\nmodule.exports = Scene;","map":{"version":3,"names":["glPlot3d","require","gl_plot3d","createCamera","createPlot","createScene","getContext","passiveSupported","Registry","Lib","preserveDrawingBuffer","Axes","Fx","str2RGBAarray","showNoWebGlMsg","project","createAxesOptions","createSpikeOptions","computeTickMarks","applyAutorangeOptions","STATIC_CANVAS","STATIC_CONTEXT","tabletmode","Scene","options","fullLayout","sceneContainer","document","createElement","plotContainer","container","graphDiv","svgContainer","createElementNS","style","position","top","left","width","height","appendChild","id","fullSceneLayout","plotArgs","axesOptions","spikeOptions","staticMode","staticPlot","pixelRatio","plotGlPixelRatio","dataScale","contourLevels","convertAnnotations","getComponentMethod","drawAnnotations","initializeGLPlot","proto","prototype","prepareOptions","scene","opts","canvas","gl","glOptions","premultipliedAlpha","antialias","axes","spikes","pickRadius","snapToData","autoScale","autoBounds","cameraObject","camera","Error","firstInit","tryCreatePlot","success","glplot","e","warn","join","initializeGLCamera","cameraData","isOrtho","projection","type","center","x","y","z","eye","up","_ortho","zoomMin","zoomMax","mode","traces","make4thDimension","gd","layout","makeUpdate","update","isCameraChanged","getCamera","isAspectChanged","getAspectratio","aspectmode","relayoutCallback","dragmode","saveLayout","emit","addEventListener","_context","_scrollZoom","gl3d","s","deltaX","deltaY","o","setAspectratio","passive","mouseListener","buttons","event","layer","oncontextloss","recoverContext","onrender","render","trace","clientRect","getBoundingClientRect","_fullLayout","_calcInverseTransform","scaleX","_invScaleX","scaleY","_invScaleY","setAttributeNS","keys","Object","lastPicked","selection","i","length","data","hoverinfo","handlePick","setContourLevels","formatter","axLetter","val","hoverformat","ax","d2l","hoverLabelText","pdata","cameraParams","dataCoordinate","traceNow","_fullData","index","ptNumber","labels","xLabel","traceCoordinate","xhoverformat","yLabel","yhoverformat","zLabel","zhoverformat","castHoverinfo","hoverinfoParts","split","isHoverinfoAll","hovertemplate","indexOf","undefined","textLabel","name","tx","vectorTx","uLabel","uhoverformat","push","vLabel","vhoverformat","wLabel","whoverformat","normLabel","toPrecision","divergenceLabel","valueLabel","_mockAxis","valuehoverformat","pointData","_input","fullData","curveNumber","pointNumber","appendArrayPointValue","_module","eventData","points","hovermode","bbox","loneHover","text","color","castHoverOption","borderColor","fontFamily","fontSize","fontColor","nameLength","textAlign","castOption","hovertemplateLabels","extendFlat","inOut_bbox","distance","oldEventData","loneUnhover","dispose","tryRecover","isContextLost","requestAnimationFrame","error","plot","apply","axisProperties","computeTraceBounds","bounds","d","axisName","charAt","coords","calendar","len","isArrayOrTypedArray","Math","min","max","v","j","isNaN","isFinite","computeAnnotationBounds","annotations","ann","visible","pos","r2l","sceneData","contextLost","axis","axisType","sceneLayout","merge","setViewport","updateFx","enableWheel","setClearColor","bgcolor","setConvert","Array","isArray","dataBounds","Infinity","_length","uid","traceIds","traceIdLoop","objects","sort","a","b","_trace","sceneBounds","axisDataRange","axisTypeRatios","acc","count","range","autorange","_name","obj","objBounds","pad","_pad","constructor","_lowerLogErrorBound","rangemode","isReversed","tmp","limitRange","setBounds","aspectRatio","userRatio","aspectratio","axesScaleRatio","axisRatio","pow","viewInitial","domain","size","_size","containerStyle","l","w","t","h","redraw","destroy","enabled","removeEventListener","wheelListener","parentNode","removeChild","getCameraArrays","getLayoutCamera","view","recalcMatrix","lastT","lookAt","newOrtho","oldOrtho","clearRGBA","cameraNestedProp","nestedProperty","cameraDataLastSave","get","same","vectors","components","changed","aspectData","aspectNestedProp","aspectDataLastSave","cameraChanged","aspectChanged","hasChanged","preGUI","call","_preGUI","set","cameraFullNP","aspectFullNP","keyBindingMode","fullCamera","sqrt","attr","zUp","edits","flipPixels","pixels","q","k","correctRGB","toImage","format","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","context","willReadFrequently","imageData","createImageData","putImageData","dataURL","toDataURL","setScale","noop","showexponent","exponentformat","module","exports"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/plots/gl3d/scene.js"],"sourcesContent":["'use strict';\n\nvar glPlot3d = require('../../../stackgl_modules').gl_plot3d;\nvar createCamera = glPlot3d.createCamera;\nvar createPlot = glPlot3d.createScene;\n\nvar getContext = require('webgl-context');\nvar passiveSupported = require('has-passive-events');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar preserveDrawingBuffer = Lib.preserveDrawingBuffer();\n\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\n\nvar str2RGBAarray = require('../../lib/str2rgbarray');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\n\nvar project = require('./project');\nvar createAxesOptions = require('./layout/convert');\nvar createSpikeOptions = require('./layout/spikes');\nvar computeTickMarks = require('./layout/tick_marks');\n\nvar applyAutorangeOptions = require('../cartesian/autorange').applyAutorangeOptions;\n\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nvar tabletmode = false;\n\nfunction Scene(options, fullLayout) {\n    // create sub container for plot\n    var sceneContainer = document.createElement('div');\n    var plotContainer = options.container;\n\n    // keep a ref to the graph div to fire hover+click events\n    this.graphDiv = options.graphDiv;\n\n    // create SVG container for hover text\n    var svgContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'svg');\n    svgContainer.style.position = 'absolute';\n    svgContainer.style.top = svgContainer.style.left = '0px';\n    svgContainer.style.width = svgContainer.style.height = '100%';\n    svgContainer.style['z-index'] = 20;\n    svgContainer.style['pointer-events'] = 'none';\n    sceneContainer.appendChild(svgContainer);\n    this.svgContainer = svgContainer;\n\n    // Tag the container with the sceneID\n    sceneContainer.id = options.id;\n    sceneContainer.style.position = 'absolute';\n    sceneContainer.style.top = sceneContainer.style.left = '0px';\n    sceneContainer.style.width = sceneContainer.style.height = '100%';\n    plotContainer.appendChild(sceneContainer);\n\n    this.fullLayout = fullLayout;\n    this.id = options.id || 'scene';\n    this.fullSceneLayout = fullLayout[this.id];\n\n    // Saved from last call to plot()\n    this.plotArgs = [ [], {}, {} ];\n\n    /*\n     * Move this to calc step? Why does it work here?\n     */\n    this.axesOptions = createAxesOptions(fullLayout, fullLayout[this.id]);\n    this.spikeOptions = createSpikeOptions(fullLayout[this.id]);\n    this.container = sceneContainer;\n    this.staticMode = !!options.staticPlot;\n    this.pixelRatio = this.pixelRatio || options.plotGlPixelRatio || 2;\n\n    // Coordinate rescaling\n    this.dataScale = [1, 1, 1];\n\n    this.contourLevels = [ [], [], [] ];\n\n    this.convertAnnotations = Registry.getComponentMethod('annotations3d', 'convert');\n    this.drawAnnotations = Registry.getComponentMethod('annotations3d', 'draw');\n\n    this.initializeGLPlot();\n}\n\nvar proto = Scene.prototype;\n\nproto.prepareOptions = function() {\n    var scene = this;\n\n    var opts = {\n        canvas: scene.canvas,\n        gl: scene.gl,\n        glOptions: {\n            preserveDrawingBuffer: preserveDrawingBuffer,\n            premultipliedAlpha: true,\n            antialias: true\n        },\n        container: scene.container,\n        axes: scene.axesOptions,\n        spikes: scene.spikeOptions,\n        pickRadius: 10,\n        snapToData: true,\n        autoScale: true,\n        autoBounds: false,\n        cameraObject: scene.camera,\n        pixelRatio: scene.pixelRatio\n    };\n\n    // for static plots, we reuse the WebGL context\n    //  as WebKit doesn't collect them reliably\n    if(scene.staticMode) {\n        if(!STATIC_CONTEXT) {\n            STATIC_CANVAS = document.createElement('canvas');\n            STATIC_CONTEXT = getContext({\n                canvas: STATIC_CANVAS,\n                preserveDrawingBuffer: true,\n                premultipliedAlpha: true,\n                antialias: true\n            });\n            if(!STATIC_CONTEXT) {\n                throw new Error('error creating static canvas/context for image server');\n            }\n        }\n\n        opts.gl = STATIC_CONTEXT;\n        opts.canvas = STATIC_CANVAS;\n    }\n\n    return opts;\n};\n\nvar firstInit = true;\n\nproto.tryCreatePlot = function() {\n    var scene = this;\n\n    var opts = scene.prepareOptions();\n\n    var success = true;\n\n    try {\n        scene.glplot = createPlot(opts);\n    } catch(e) {\n        if(scene.staticMode || !firstInit || preserveDrawingBuffer) {\n            success = false;\n        } else { // try second time\n            // enable preserveDrawingBuffer setup\n            // in case is-mobile not detecting the right device\n            Lib.warn([\n                'webgl setup failed possibly due to',\n                'false preserveDrawingBuffer config.',\n                'The mobile/tablet device may not be detected by is-mobile module.',\n                'Enabling preserveDrawingBuffer in second attempt to create webgl scene...'\n            ].join(' '));\n\n            try {\n                // invert preserveDrawingBuffer\n                preserveDrawingBuffer = opts.glOptions.preserveDrawingBuffer = true;\n\n                scene.glplot = createPlot(opts);\n            } catch(e) {\n                // revert changes to preserveDrawingBuffer\n                preserveDrawingBuffer = opts.glOptions.preserveDrawingBuffer = false;\n\n                success = false;\n            }\n        }\n    }\n\n    firstInit = false;\n\n    return success;\n};\n\nproto.initializeGLCamera = function() {\n    var scene = this;\n    var cameraData = scene.fullSceneLayout.camera;\n    var isOrtho = (cameraData.projection.type === 'orthographic');\n\n    scene.camera = createCamera(scene.container, {\n        center: [cameraData.center.x, cameraData.center.y, cameraData.center.z],\n        eye: [cameraData.eye.x, cameraData.eye.y, cameraData.eye.z],\n        up: [cameraData.up.x, cameraData.up.y, cameraData.up.z],\n        _ortho: isOrtho,\n        zoomMin: 0.01,\n        zoomMax: 100,\n        mode: 'orbit'\n    });\n};\n\nproto.initializeGLPlot = function() {\n    var scene = this;\n\n    scene.initializeGLCamera();\n\n    var success = scene.tryCreatePlot();\n    /*\n    * createPlot will throw when webgl is not enabled in the client.\n    * Lets return an instance of the module with all functions noop'd.\n    * The destroy method - which will remove the container from the DOM\n    * is overridden with a function that removes the container only.\n    */\n    if(!success) return showNoWebGlMsg(scene);\n\n    // List of scene objects\n    scene.traces = {};\n\n    scene.make4thDimension();\n\n    var gd = scene.graphDiv;\n    var layout = gd.layout;\n\n    var makeUpdate = function() {\n        var update = {};\n\n        if(scene.isCameraChanged(layout)) {\n            // camera updates\n            update[scene.id + '.camera'] = scene.getCamera();\n        }\n\n        if(scene.isAspectChanged(layout)) {\n            // scene updates\n            update[scene.id + '.aspectratio'] = scene.glplot.getAspectratio();\n\n            if(layout[scene.id].aspectmode !== 'manual') {\n                scene.fullSceneLayout.aspectmode =\n                layout[scene.id].aspectmode =\n                update[scene.id + '.aspectmode'] = 'manual';\n            }\n        }\n\n        return update;\n    };\n\n    var relayoutCallback = function(scene) {\n        if(scene.fullSceneLayout.dragmode === false) return;\n\n        var update = makeUpdate();\n        scene.saveLayout(layout);\n        scene.graphDiv.emit('plotly_relayout', update);\n    };\n\n    if(scene.glplot.canvas) {\n        scene.glplot.canvas.addEventListener('mouseup', function() {\n            relayoutCallback(scene);\n        });\n\n        scene.glplot.canvas.addEventListener('touchstart', function() {\n            tabletmode = true;\n        });\n\n        scene.glplot.canvas.addEventListener('wheel', function(e) {\n            if(gd._context._scrollZoom.gl3d) {\n                if(scene.camera._ortho) {\n                    var s = (e.deltaX > e.deltaY) ? 1.1 : 1.0 / 1.1;\n                    var o = scene.glplot.getAspectratio();\n                    scene.glplot.setAspectratio({\n                        x: s * o.x,\n                        y: s * o.y,\n                        z: s * o.z\n                    });\n                }\n\n                relayoutCallback(scene);\n            }\n        }, passiveSupported ? {passive: false} : false);\n\n        scene.glplot.canvas.addEventListener('mousemove', function() {\n            if(scene.fullSceneLayout.dragmode === false) return;\n            if(scene.camera.mouseListener.buttons === 0) return;\n\n            var update = makeUpdate();\n            scene.graphDiv.emit('plotly_relayouting', update);\n        });\n\n        if(!scene.staticMode) {\n            scene.glplot.canvas.addEventListener('webglcontextlost', function(event) {\n                if(gd && gd.emit) {\n                    gd.emit('plotly_webglcontextlost', {\n                        event: event,\n                        layer: scene.id\n                    });\n                }\n            }, false);\n        }\n    }\n\n    scene.glplot.oncontextloss = function() {\n        scene.recoverContext();\n    };\n\n    scene.glplot.onrender = function() {\n        scene.render();\n    };\n\n    return true;\n};\n\nproto.render = function() {\n    var scene = this;\n    var gd = scene.graphDiv;\n    var trace;\n\n    // update size of svg container\n    var svgContainer = scene.svgContainer;\n    var clientRect = scene.container.getBoundingClientRect();\n\n    gd._fullLayout._calcInverseTransform(gd);\n    var scaleX = gd._fullLayout._invScaleX;\n    var scaleY = gd._fullLayout._invScaleY;\n    var width = clientRect.width * scaleX;\n    var height = clientRect.height * scaleY;\n    svgContainer.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n    svgContainer.setAttributeNS(null, 'width', width);\n    svgContainer.setAttributeNS(null, 'height', height);\n\n    computeTickMarks(scene);\n    scene.glplot.axes.update(scene.axesOptions);\n\n    // check if pick has changed\n    var keys = Object.keys(scene.traces);\n    var lastPicked = null;\n    var selection = scene.glplot.selection;\n    for(var i = 0; i < keys.length; ++i) {\n        trace = scene.traces[keys[i]];\n        if(trace.data.hoverinfo !== 'skip' && trace.handlePick(selection)) {\n            lastPicked = trace;\n        }\n\n        if(trace.setContourLevels) trace.setContourLevels();\n    }\n\n    function formatter(axLetter, val, hoverformat) {\n        var ax = scene.fullSceneLayout[axLetter + 'axis'];\n\n        if(ax.type !== 'log') {\n            val = ax.d2l(val);\n        }\n\n        return Axes.hoverLabelText(ax, val, hoverformat);\n    }\n\n    if(lastPicked !== null) {\n        var pdata = project(scene.glplot.cameraParams, selection.dataCoordinate);\n        trace = lastPicked.data;\n        var traceNow = gd._fullData[trace.index];\n        var ptNumber = selection.index;\n\n        var labels = {\n            xLabel: formatter('x', selection.traceCoordinate[0], trace.xhoverformat),\n            yLabel: formatter('y', selection.traceCoordinate[1], trace.yhoverformat),\n            zLabel: formatter('z', selection.traceCoordinate[2], trace.zhoverformat)\n        };\n\n        var hoverinfo = Fx.castHoverinfo(traceNow, scene.fullLayout, ptNumber);\n        var hoverinfoParts = (hoverinfo || '').split('+');\n        var isHoverinfoAll = hoverinfo && hoverinfo === 'all';\n\n        if(!traceNow.hovertemplate && !isHoverinfoAll) {\n            if(hoverinfoParts.indexOf('x') === -1) labels.xLabel = undefined;\n            if(hoverinfoParts.indexOf('y') === -1) labels.yLabel = undefined;\n            if(hoverinfoParts.indexOf('z') === -1) labels.zLabel = undefined;\n            if(hoverinfoParts.indexOf('text') === -1) selection.textLabel = undefined;\n            if(hoverinfoParts.indexOf('name') === -1) lastPicked.name = undefined;\n        }\n\n        var tx;\n        var vectorTx = [];\n\n        if(trace.type === 'cone' || trace.type === 'streamtube') {\n            labels.uLabel = formatter('x', selection.traceCoordinate[3], trace.uhoverformat);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('u') !== -1) {\n                vectorTx.push('u: ' + labels.uLabel);\n            }\n\n            labels.vLabel = formatter('y', selection.traceCoordinate[4], trace.vhoverformat);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('v') !== -1) {\n                vectorTx.push('v: ' + labels.vLabel);\n            }\n\n            labels.wLabel = formatter('z', selection.traceCoordinate[5], trace.whoverformat);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('w') !== -1) {\n                vectorTx.push('w: ' + labels.wLabel);\n            }\n\n            labels.normLabel = selection.traceCoordinate[6].toPrecision(3);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('norm') !== -1) {\n                vectorTx.push('norm: ' + labels.normLabel);\n            }\n            if(trace.type === 'streamtube') {\n                labels.divergenceLabel = selection.traceCoordinate[7].toPrecision(3);\n                if(isHoverinfoAll || hoverinfoParts.indexOf('divergence') !== -1) {\n                    vectorTx.push('divergence: ' + labels.divergenceLabel);\n                }\n            }\n            if(selection.textLabel) {\n                vectorTx.push(selection.textLabel);\n            }\n            tx = vectorTx.join('<br>');\n        } else if(trace.type === 'isosurface' || trace.type === 'volume') {\n            labels.valueLabel = Axes.hoverLabelText(scene._mockAxis, scene._mockAxis.d2l(selection.traceCoordinate[3]), trace.valuehoverformat);\n            vectorTx.push('value: ' + labels.valueLabel);\n            if(selection.textLabel) {\n                vectorTx.push(selection.textLabel);\n            }\n            tx = vectorTx.join('<br>');\n        } else {\n            tx = selection.textLabel;\n        }\n\n        var pointData = {\n            x: selection.traceCoordinate[0],\n            y: selection.traceCoordinate[1],\n            z: selection.traceCoordinate[2],\n            data: traceNow._input,\n            fullData: traceNow,\n            curveNumber: traceNow.index,\n            pointNumber: ptNumber\n        };\n\n        Fx.appendArrayPointValue(pointData, traceNow, ptNumber);\n\n        if(trace._module.eventData) {\n            pointData = traceNow._module.eventData(pointData, selection, traceNow, {}, ptNumber);\n        }\n\n        var eventData = {points: [pointData]};\n\n        if(scene.fullSceneLayout.hovermode) {\n            var bbox = [];\n            Fx.loneHover({\n                trace: traceNow,\n                x: (0.5 + 0.5 * pdata[0] / pdata[3]) * width,\n                y: (0.5 - 0.5 * pdata[1] / pdata[3]) * height,\n                xLabel: labels.xLabel,\n                yLabel: labels.yLabel,\n                zLabel: labels.zLabel,\n                text: tx,\n                name: lastPicked.name,\n                color: Fx.castHoverOption(traceNow, ptNumber, 'bgcolor') || lastPicked.color,\n                borderColor: Fx.castHoverOption(traceNow, ptNumber, 'bordercolor'),\n                fontFamily: Fx.castHoverOption(traceNow, ptNumber, 'font.family'),\n                fontSize: Fx.castHoverOption(traceNow, ptNumber, 'font.size'),\n                fontColor: Fx.castHoverOption(traceNow, ptNumber, 'font.color'),\n                nameLength: Fx.castHoverOption(traceNow, ptNumber, 'namelength'),\n                textAlign: Fx.castHoverOption(traceNow, ptNumber, 'align'),\n                hovertemplate: Lib.castOption(traceNow, ptNumber, 'hovertemplate'),\n                hovertemplateLabels: Lib.extendFlat({}, pointData, labels),\n                eventData: [pointData]\n            }, {\n                container: svgContainer,\n                gd: gd,\n                inOut_bbox: bbox\n            });\n\n            pointData.bbox = bbox[0];\n        }\n\n        if(selection.distance < 5 && (selection.buttons || tabletmode)) {\n            gd.emit('plotly_click', eventData);\n        } else {\n            gd.emit('plotly_hover', eventData);\n        }\n\n        this.oldEventData = eventData;\n    } else {\n        Fx.loneUnhover(svgContainer);\n        if(this.oldEventData) gd.emit('plotly_unhover', this.oldEventData);\n        this.oldEventData = undefined;\n    }\n\n    scene.drawAnnotations(scene);\n};\n\nproto.recoverContext = function() {\n    var scene = this;\n\n    scene.glplot.dispose();\n\n    var tryRecover = function() {\n        if(scene.glplot.gl.isContextLost()) {\n            requestAnimationFrame(tryRecover);\n            return;\n        }\n        if(!scene.initializeGLPlot()) {\n            Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');\n            return;\n        }\n        scene.plot.apply(scene, scene.plotArgs);\n    };\n\n    requestAnimationFrame(tryRecover);\n};\n\nvar axisProperties = [ 'xaxis', 'yaxis', 'zaxis' ];\n\nfunction computeTraceBounds(scene, trace, bounds) {\n    var fullSceneLayout = scene.fullSceneLayout;\n\n    for(var d = 0; d < 3; d++) {\n        var axisName = axisProperties[d];\n        var axLetter = axisName.charAt(0);\n        var ax = fullSceneLayout[axisName];\n        var coords = trace[axLetter];\n        var calendar = trace[axLetter + 'calendar'];\n        var len = trace['_' + axLetter + 'length'];\n\n        if(!Lib.isArrayOrTypedArray(coords)) {\n            bounds[0][d] = Math.min(bounds[0][d], 0);\n            bounds[1][d] = Math.max(bounds[1][d], len - 1);\n        } else {\n            var v;\n\n            for(var i = 0; i < (len || coords.length); i++) {\n                if(Lib.isArrayOrTypedArray(coords[i])) {\n                    for(var j = 0; j < coords[i].length; ++j) {\n                        v = ax.d2l(coords[i][j], 0, calendar);\n                        if(!isNaN(v) && isFinite(v)) {\n                            bounds[0][d] = Math.min(bounds[0][d], v);\n                            bounds[1][d] = Math.max(bounds[1][d], v);\n                        }\n                    }\n                } else {\n                    v = ax.d2l(coords[i], 0, calendar);\n                    if(!isNaN(v) && isFinite(v)) {\n                        bounds[0][d] = Math.min(bounds[0][d], v);\n                        bounds[1][d] = Math.max(bounds[1][d], v);\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction computeAnnotationBounds(scene, bounds) {\n    var fullSceneLayout = scene.fullSceneLayout;\n    var annotations = fullSceneLayout.annotations || [];\n\n    for(var d = 0; d < 3; d++) {\n        var axisName = axisProperties[d];\n        var axLetter = axisName.charAt(0);\n        var ax = fullSceneLayout[axisName];\n\n        for(var j = 0; j < annotations.length; j++) {\n            var ann = annotations[j];\n\n            if(ann.visible) {\n                var pos = ax.r2l(ann[axLetter]);\n                if(!isNaN(pos) && isFinite(pos)) {\n                    bounds[0][d] = Math.min(bounds[0][d], pos);\n                    bounds[1][d] = Math.max(bounds[1][d], pos);\n                }\n            }\n        }\n    }\n}\n\nproto.plot = function(sceneData, fullLayout, layout) {\n    var scene = this;\n\n    // Save parameters\n    scene.plotArgs = [sceneData, fullLayout, layout];\n\n    if(scene.glplot.contextLost) return;\n\n    var data, trace;\n    var i, j, axis, axisType;\n    var fullSceneLayout = fullLayout[scene.id];\n    var sceneLayout = layout[scene.id];\n\n    // Update layout\n    scene.fullLayout = fullLayout;\n    scene.fullSceneLayout = fullSceneLayout;\n\n    scene.axesOptions.merge(fullLayout, fullSceneLayout);\n    scene.spikeOptions.merge(fullSceneLayout);\n\n    // Update camera and camera mode\n    scene.setViewport(fullSceneLayout);\n    scene.updateFx(fullSceneLayout.dragmode, fullSceneLayout.hovermode);\n    scene.camera.enableWheel = scene.graphDiv._context._scrollZoom.gl3d;\n\n    // Update scene background\n    scene.glplot.setClearColor(str2RGBAarray(fullSceneLayout.bgcolor));\n\n    // Update axes functions BEFORE updating traces\n    scene.setConvert(axis);\n\n    // Convert scene data\n    if(!sceneData) sceneData = [];\n    else if(!Array.isArray(sceneData)) sceneData = [sceneData];\n\n    // Compute trace bounding box\n    var dataBounds = [\n        [Infinity, Infinity, Infinity],\n        [-Infinity, -Infinity, -Infinity]\n    ];\n\n    for(i = 0; i < sceneData.length; ++i) {\n        data = sceneData[i];\n        if(data.visible !== true || data._length === 0) continue;\n\n        computeTraceBounds(this, data, dataBounds);\n    }\n    computeAnnotationBounds(this, dataBounds);\n\n    var dataScale = [1, 1, 1];\n    for(j = 0; j < 3; ++j) {\n        if(dataBounds[1][j] === dataBounds[0][j]) {\n            dataScale[j] = 1.0;\n        } else {\n            dataScale[j] = 1.0 / (dataBounds[1][j] - dataBounds[0][j]);\n        }\n    }\n\n    // Save scale\n    scene.dataScale = dataScale;\n\n    // after computeTraceBounds where ax._categories are filled in\n    scene.convertAnnotations(this);\n\n    // Update traces\n    for(i = 0; i < sceneData.length; ++i) {\n        data = sceneData[i];\n        if(data.visible !== true || data._length === 0) {\n            continue;\n        }\n        trace = scene.traces[data.uid];\n        if(trace) {\n            if(trace.data.type === data.type) {\n                trace.update(data);\n            } else {\n                trace.dispose();\n                trace = data._module.plot(this, data);\n                scene.traces[data.uid] = trace;\n            }\n        } else {\n            trace = data._module.plot(this, data);\n            scene.traces[data.uid] = trace;\n        }\n        trace.name = data.name;\n    }\n\n    // Remove empty traces\n    var traceIds = Object.keys(scene.traces);\n\n    traceIdLoop:\n    for(i = 0; i < traceIds.length; ++i) {\n        for(j = 0; j < sceneData.length; ++j) {\n            if(sceneData[j].uid === traceIds[i] &&\n                (sceneData[j].visible === true && sceneData[j]._length !== 0)) {\n                continue traceIdLoop;\n            }\n        }\n        trace = scene.traces[traceIds[i]];\n        trace.dispose();\n        delete scene.traces[traceIds[i]];\n    }\n\n    // order object per trace index\n    scene.glplot.objects.sort(function(a, b) {\n        return a._trace.data.index - b._trace.data.index;\n    });\n\n    // Update ranges (needs to be called *after* objects are added due to updates)\n    var sceneBounds = [[0, 0, 0], [0, 0, 0]];\n    var axisDataRange = [];\n    var axisTypeRatios = {};\n\n    for(i = 0; i < 3; ++i) {\n        axis = fullSceneLayout[axisProperties[i]];\n        axisType = axis.type;\n\n        if(axisType in axisTypeRatios) {\n            axisTypeRatios[axisType].acc *= dataScale[i];\n            axisTypeRatios[axisType].count += 1;\n        } else {\n            axisTypeRatios[axisType] = {\n                acc: dataScale[i],\n                count: 1\n            };\n        }\n\n        var range;\n\n        if(axis.autorange) {\n            sceneBounds[0][i] = Infinity;\n            sceneBounds[1][i] = -Infinity;\n\n            var objects = scene.glplot.objects;\n            var annotations = scene.fullSceneLayout.annotations || [];\n            var axLetter = axis._name.charAt(0);\n\n            for(j = 0; j < objects.length; j++) {\n                var obj = objects[j];\n                var objBounds = obj.bounds;\n                var pad = obj._trace.data._pad || 0;\n\n                if(obj.constructor.name === 'ErrorBars' && axis._lowerLogErrorBound) {\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], axis._lowerLogErrorBound);\n                } else {\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], objBounds[0][i] / dataScale[i] - pad);\n                }\n                sceneBounds[1][i] = Math.max(sceneBounds[1][i], objBounds[1][i] / dataScale[i] + pad);\n            }\n\n            for(j = 0; j < annotations.length; j++) {\n                var ann = annotations[j];\n\n                // N.B. not taking into consideration the arrowhead\n                if(ann.visible) {\n                    var pos = axis.r2l(ann[axLetter]);\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], pos);\n                    sceneBounds[1][i] = Math.max(sceneBounds[1][i], pos);\n                }\n            }\n\n            if('rangemode' in axis && axis.rangemode === 'tozero') {\n                sceneBounds[0][i] = Math.min(sceneBounds[0][i], 0);\n                sceneBounds[1][i] = Math.max(sceneBounds[1][i], 0);\n            }\n            if(sceneBounds[0][i] > sceneBounds[1][i]) {\n                sceneBounds[0][i] = -1;\n                sceneBounds[1][i] = 1;\n            } else {\n                var d = sceneBounds[1][i] - sceneBounds[0][i];\n                sceneBounds[0][i] -= d / 32.0;\n                sceneBounds[1][i] += d / 32.0;\n            }\n\n            range = [\n                sceneBounds[0][i],\n                sceneBounds[1][i]\n            ];\n\n            range = applyAutorangeOptions(range, axis);\n\n            sceneBounds[0][i] = range[0];\n            sceneBounds[1][i] = range[1];\n\n            if(axis.isReversed()) {\n                // swap bounds:\n                var tmp = sceneBounds[0][i];\n                sceneBounds[0][i] = sceneBounds[1][i];\n                sceneBounds[1][i] = tmp;\n            }\n        } else {\n            range = axis.range;\n            sceneBounds[0][i] = axis.r2l(range[0]);\n            sceneBounds[1][i] = axis.r2l(range[1]);\n        }\n        if(sceneBounds[0][i] === sceneBounds[1][i]) {\n            sceneBounds[0][i] -= 1;\n            sceneBounds[1][i] += 1;\n        }\n        axisDataRange[i] = sceneBounds[1][i] - sceneBounds[0][i];\n\n        axis.range = [\n            sceneBounds[0][i],\n            sceneBounds[1][i]\n        ];\n\n        axis.limitRange();\n\n        // Update plot bounds\n        scene.glplot.setBounds(i, {\n            min: axis.range[0] * dataScale[i],\n            max: axis.range[1] * dataScale[i]\n        });\n    }\n\n    /*\n     * Dynamically set the aspect ratio depending on the users aspect settings\n     */\n    var aspectRatio;\n    var aspectmode = fullSceneLayout.aspectmode;\n    if(aspectmode === 'cube') {\n        aspectRatio = [1, 1, 1];\n    } else if(aspectmode === 'manual') {\n        var userRatio = fullSceneLayout.aspectratio;\n        aspectRatio = [userRatio.x, userRatio.y, userRatio.z];\n    } else if(aspectmode === 'auto' || aspectmode === 'data') {\n        var axesScaleRatio = [1, 1, 1];\n        // Compute axis scale per category\n        for(i = 0; i < 3; ++i) {\n            axis = fullSceneLayout[axisProperties[i]];\n            axisType = axis.type;\n            var axisRatio = axisTypeRatios[axisType];\n            axesScaleRatio[i] = Math.pow(axisRatio.acc, 1.0 / axisRatio.count) / dataScale[i];\n        }\n\n        if(aspectmode === 'data') {\n            aspectRatio = axesScaleRatio;\n        } else { // i.e. 'auto' option\n            if(\n                Math.max.apply(null, axesScaleRatio) /\n                Math.min.apply(null, axesScaleRatio) <= 4\n            ) {\n                // USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n                aspectRatio = axesScaleRatio;\n            } else {\n                // USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n                aspectRatio = [1, 1, 1];\n            }\n        }\n    } else {\n        throw new Error('scene.js aspectRatio was not one of the enumerated types');\n    }\n\n    /*\n     * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n     * manipulates the aspectmode settings and the fullLayout is up-to-date.\n     */\n    fullSceneLayout.aspectratio.x = sceneLayout.aspectratio.x = aspectRatio[0];\n    fullSceneLayout.aspectratio.y = sceneLayout.aspectratio.y = aspectRatio[1];\n    fullSceneLayout.aspectratio.z = sceneLayout.aspectratio.z = aspectRatio[2];\n\n    /*\n     * Finally assign the computed aspecratio to the glplot module. This will have an effect\n     * on the next render cycle.\n     */\n    scene.glplot.setAspectratio(fullSceneLayout.aspectratio);\n\n    // save 'initial' aspectratio & aspectmode view settings for modebar buttons\n    if(!scene.viewInitial.aspectratio) {\n        scene.viewInitial.aspectratio = {\n            x: fullSceneLayout.aspectratio.x,\n            y: fullSceneLayout.aspectratio.y,\n            z: fullSceneLayout.aspectratio.z\n        };\n    }\n    if(!scene.viewInitial.aspectmode) {\n        scene.viewInitial.aspectmode = fullSceneLayout.aspectmode;\n    }\n\n    // Update frame position for multi plots\n    var domain = fullSceneLayout.domain || null;\n    var size = fullLayout._size || null;\n\n    if(domain && size) {\n        var containerStyle = scene.container.style;\n        containerStyle.position = 'absolute';\n        containerStyle.left = (size.l + domain.x[0] * size.w) + 'px';\n        containerStyle.top = (size.t + (1 - domain.y[1]) * size.h) + 'px';\n        containerStyle.width = (size.w * (domain.x[1] - domain.x[0])) + 'px';\n        containerStyle.height = (size.h * (domain.y[1] - domain.y[0])) + 'px';\n    }\n\n    // force redraw so that promise is returned when rendering is completed\n    scene.glplot.redraw();\n};\n\nproto.destroy = function() {\n    var scene = this;\n\n    if(!scene.glplot) return;\n    scene.camera.mouseListener.enabled = false;\n    scene.container.removeEventListener('wheel', scene.camera.wheelListener);\n    scene.camera = null;\n    scene.glplot.dispose();\n    scene.container.parentNode.removeChild(scene.container);\n    scene.glplot = null;\n};\n\n// getCameraArrays :: plotly_coords -> gl-plot3d_coords\n// inverse of getLayoutCamera\nfunction getCameraArrays(camera) {\n    return [\n        [camera.eye.x, camera.eye.y, camera.eye.z],\n        [camera.center.x, camera.center.y, camera.center.z],\n        [camera.up.x, camera.up.y, camera.up.z]\n    ];\n}\n\n// getLayoutCamera :: gl-plot3d_coords -> plotly_coords\n// inverse of getCameraArrays\nfunction getLayoutCamera(camera) {\n    return {\n        up: {x: camera.up[0], y: camera.up[1], z: camera.up[2]},\n        center: {x: camera.center[0], y: camera.center[1], z: camera.center[2]},\n        eye: {x: camera.eye[0], y: camera.eye[1], z: camera.eye[2]},\n        projection: {type: (camera._ortho === true) ? 'orthographic' : 'perspective'}\n    };\n}\n\n// get camera position in plotly coords from 'gl-plot3d' coords\nproto.getCamera = function() {\n    var scene = this;\n    scene.camera.view.recalcMatrix(scene.camera.view.lastT());\n    return getLayoutCamera(scene.camera);\n};\n\n// set gl-plot3d camera position and scene aspects with a set of plotly coords\nproto.setViewport = function(sceneLayout) {\n    var scene = this;\n    var cameraData = sceneLayout.camera;\n\n    scene.camera.lookAt.apply(this, getCameraArrays(cameraData));\n    scene.glplot.setAspectratio(sceneLayout.aspectratio);\n\n    var newOrtho = (cameraData.projection.type === 'orthographic');\n    var oldOrtho = scene.camera._ortho;\n\n    if(newOrtho !== oldOrtho) {\n        scene.glplot.redraw(); // TODO: figure out why we need to redraw here?\n        scene.glplot.clearRGBA();\n        scene.glplot.dispose();\n        scene.initializeGLPlot();\n    }\n};\n\nproto.isCameraChanged = function(layout) {\n    var scene = this;\n    var cameraData = scene.getCamera();\n    var cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n    var cameraDataLastSave = cameraNestedProp.get();\n\n    function same(x, y, i, j) {\n        var vectors = ['up', 'center', 'eye'];\n        var components = ['x', 'y', 'z'];\n        return y[vectors[i]] && (x[vectors[i]][components[j]] === y[vectors[i]][components[j]]);\n    }\n\n    var changed = false;\n    if(cameraDataLastSave === undefined) {\n        changed = true;\n    } else {\n        for(var i = 0; i < 3; i++) {\n            for(var j = 0; j < 3; j++) {\n                if(!same(cameraData, cameraDataLastSave, i, j)) {\n                    changed = true;\n                    break;\n                }\n            }\n        }\n\n        if(!cameraDataLastSave.projection || (\n            cameraData.projection &&\n            cameraData.projection.type !== cameraDataLastSave.projection.type)) {\n            changed = true;\n        }\n    }\n\n    return changed;\n};\n\nproto.isAspectChanged = function(layout) {\n    var scene = this;\n    var aspectData = scene.glplot.getAspectratio();\n    var aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n    var aspectDataLastSave = aspectNestedProp.get();\n\n    return (\n        aspectDataLastSave === undefined || (\n        aspectDataLastSave.x !== aspectData.x ||\n        aspectDataLastSave.y !== aspectData.y ||\n        aspectDataLastSave.z !== aspectData.z\n    ));\n};\n\n// save camera to user layout (i.e. gd.layout)\nproto.saveLayout = function(layout) {\n    var scene = this;\n    var fullLayout = scene.fullLayout;\n\n    var cameraData;\n    var cameraNestedProp;\n    var cameraDataLastSave;\n\n    var aspectData;\n    var aspectNestedProp;\n    var aspectDataLastSave;\n\n    var cameraChanged = scene.isCameraChanged(layout);\n    var aspectChanged = scene.isAspectChanged(layout);\n\n    var hasChanged = cameraChanged || aspectChanged;\n    if(hasChanged) {\n        var preGUI = {};\n        if(cameraChanged) {\n            cameraData = scene.getCamera();\n            cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n            cameraDataLastSave = cameraNestedProp.get();\n\n            preGUI[scene.id + '.camera'] = cameraDataLastSave;\n        }\n        if(aspectChanged) {\n            aspectData = scene.glplot.getAspectratio();\n            aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n            aspectDataLastSave = aspectNestedProp.get();\n\n            preGUI[scene.id + '.aspectratio'] = aspectDataLastSave;\n        }\n        Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, preGUI);\n\n        if(cameraChanged) {\n            cameraNestedProp.set(cameraData);\n\n            var cameraFullNP = Lib.nestedProperty(fullLayout, scene.id + '.camera');\n            cameraFullNP.set(cameraData);\n        }\n\n        if(aspectChanged) {\n            aspectNestedProp.set(aspectData);\n\n            var aspectFullNP = Lib.nestedProperty(fullLayout, scene.id + '.aspectratio');\n            aspectFullNP.set(aspectData);\n\n            scene.glplot.redraw();\n        }\n    }\n\n    return hasChanged;\n};\n\nproto.updateFx = function(dragmode, hovermode) {\n    var scene = this;\n    var camera = scene.camera;\n    if(camera) {\n        // rotate and orbital are synonymous\n        if(dragmode === 'orbit') {\n            camera.mode = 'orbit';\n            camera.keyBindingMode = 'rotate';\n        } else if(dragmode === 'turntable') {\n            camera.up = [0, 0, 1];\n            camera.mode = 'turntable';\n            camera.keyBindingMode = 'rotate';\n\n            // The setter for camera.mode animates the transition to z-up,\n            // but only if we *don't* explicitly set z-up earlier via the\n            // relayout. So push `up` back to layout & fullLayout manually now.\n            var gd = scene.graphDiv;\n            var fullLayout = gd._fullLayout;\n            var fullCamera = scene.fullSceneLayout.camera;\n            var x = fullCamera.up.x;\n            var y = fullCamera.up.y;\n            var z = fullCamera.up.z;\n            // only push `up` back to (full)layout if it's going to change\n            if(z / Math.sqrt(x * x + y * y + z * z) < 0.999) {\n                var attr = scene.id + '.camera.up';\n                var zUp = {x: 0, y: 0, z: 1};\n                var edits = {};\n                edits[attr] = zUp;\n                var layout = gd.layout;\n                Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, edits);\n                fullCamera.up = zUp;\n                Lib.nestedProperty(layout, attr).set(zUp);\n            }\n        } else {\n            // none rotation modes [pan or zoom]\n            camera.keyBindingMode = dragmode;\n        }\n    }\n\n    // to put dragmode and hovermode on the same grounds from relayout\n    scene.fullSceneLayout.hovermode = hovermode;\n};\n\nfunction flipPixels(pixels, w, h) {\n    for(var i = 0, q = h - 1; i < q; ++i, --q) {\n        for(var j = 0; j < w; ++j) {\n            for(var k = 0; k < 4; ++k) {\n                var a = 4 * (w * i + j) + k;\n                var b = 4 * (w * q + j) + k;\n                var tmp = pixels[a];\n                pixels[a] = pixels[b];\n                pixels[b] = tmp;\n            }\n        }\n    }\n}\n\nfunction correctRGB(pixels, w, h) {\n    for(var i = 0; i < h; ++i) {\n        for(var j = 0; j < w; ++j) {\n            var k = 4 * (w * i + j);\n\n            var a = pixels[k + 3]; // alpha\n            if(a > 0) {\n                var q = 255 / a;\n\n                for(var l = 0; l < 3; ++l) { // RGB\n                    pixels[k + l] = Math.min(q * pixels[k + l], 255);\n                }\n            }\n        }\n    }\n}\n\nproto.toImage = function(format) {\n    var scene = this;\n\n    if(!format) format = 'png';\n    if(scene.staticMode) scene.container.appendChild(STATIC_CANVAS);\n\n    // Force redraw\n    scene.glplot.redraw();\n\n    // Grab context and yank out pixels\n    var gl = scene.glplot.gl;\n    var w = gl.drawingBufferWidth;\n    var h = gl.drawingBufferHeight;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    var pixels = new Uint8Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    flipPixels(pixels, w, h);\n    correctRGB(pixels, w, h);\n\n    var canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n    var context = canvas.getContext('2d', {willReadFrequently: true});\n    var imageData = context.createImageData(w, h);\n    imageData.data.set(pixels);\n    context.putImageData(imageData, 0, 0);\n\n    var dataURL;\n\n    switch(format) {\n        case 'jpeg':\n            dataURL = canvas.toDataURL('image/jpeg');\n            break;\n        case 'webp':\n            dataURL = canvas.toDataURL('image/webp');\n            break;\n        default:\n            dataURL = canvas.toDataURL('image/png');\n    }\n\n    if(scene.staticMode) scene.container.removeChild(STATIC_CANVAS);\n\n    return dataURL;\n};\n\nproto.setConvert = function() {\n    var scene = this;\n    for(var i = 0; i < 3; i++) {\n        var ax = scene.fullSceneLayout[axisProperties[i]];\n        Axes.setConvert(ax, scene.fullLayout);\n        ax.setScale = Lib.noop;\n    }\n};\n\nproto.make4thDimension = function() {\n    var scene = this;\n    var gd = scene.graphDiv;\n    var fullLayout = gd._fullLayout;\n\n    // mock axis for hover formatting\n    scene._mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(scene._mockAxis, fullLayout);\n};\n\nmodule.exports = Scene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}