{"ast":null,"code":"'use strict';\n\nmodule.exports = function incrementNumeric(x, delta) {\n  if (!delta) return x;\n\n  // Note 1:\n  // 0.3 != 0.1 + 0.2 == 0.30000000000000004\n  // but 0.3 == (10 * 0.1 + 10 * 0.2) / 10\n  // Attempt to use integer steps to increment\n  var scale = 1 / Math.abs(delta);\n  var newX = scale > 1 ? (scale * x + scale * delta) / scale : x + delta;\n\n  // Note 2:\n  // now we may also consider rounding to cover few more edge cases\n  // e.g. 0.3 * 3 = 0.8999999999999999\n  var lenX1 = String(newX).length;\n  if (lenX1 > 16) {\n    var lenDt = String(delta).length;\n    var lenX0 = String(x).length;\n    if (lenX1 >= lenX0 + lenDt) {\n      // likely a rounding error!\n      var s = parseFloat(newX).toPrecision(12);\n      if (s.indexOf('e+') === -1) newX = +s;\n    }\n  }\n  return newX;\n};","map":{"version":3,"names":["module","exports","incrementNumeric","x","delta","scale","Math","abs","newX","lenX1","String","length","lenDt","lenX0","s","parseFloat","toPrecision","indexOf"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/lib/increment.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function incrementNumeric(x, delta) {\n    if(!delta) return x;\n\n    // Note 1:\n    // 0.3 != 0.1 + 0.2 == 0.30000000000000004\n    // but 0.3 == (10 * 0.1 + 10 * 0.2) / 10\n    // Attempt to use integer steps to increment\n    var scale = 1 / Math.abs(delta);\n    var newX = (scale > 1) ? (\n        scale * x +\n        scale * delta\n    ) / scale : x + delta;\n\n    // Note 2:\n    // now we may also consider rounding to cover few more edge cases\n    // e.g. 0.3 * 3 = 0.8999999999999999\n    var lenX1 = String(newX).length;\n    if(lenX1 > 16) {\n        var lenDt = String(delta).length;\n        var lenX0 = String(x).length;\n\n        if(lenX1 >= lenX0 + lenDt) { // likely a rounding error!\n            var s = parseFloat(newX).toPrecision(12);\n            if(s.indexOf('e+') === -1) newX = +s;\n        }\n    }\n\n    return newX;\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,gBAAgBA,CAACC,CAAC,EAAEC,KAAK,EAAE;EACjD,IAAG,CAACA,KAAK,EAAE,OAAOD,CAAC;;EAEnB;EACA;EACA;EACA;EACA,IAAIE,KAAK,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC;EAC/B,IAAII,IAAI,GAAIH,KAAK,GAAG,CAAC,GAAI,CACrBA,KAAK,GAAGF,CAAC,GACTE,KAAK,GAAGD,KAAK,IACbC,KAAK,GAAGF,CAAC,GAAGC,KAAK;;EAErB;EACA;EACA;EACA,IAAIK,KAAK,GAAGC,MAAM,CAACF,IAAI,CAAC,CAACG,MAAM;EAC/B,IAAGF,KAAK,GAAG,EAAE,EAAE;IACX,IAAIG,KAAK,GAAGF,MAAM,CAACN,KAAK,CAAC,CAACO,MAAM;IAChC,IAAIE,KAAK,GAAGH,MAAM,CAACP,CAAC,CAAC,CAACQ,MAAM;IAE5B,IAAGF,KAAK,IAAII,KAAK,GAAGD,KAAK,EAAE;MAAE;MACzB,IAAIE,CAAC,GAAGC,UAAU,CAACP,IAAI,CAAC,CAACQ,WAAW,CAAC,EAAE,CAAC;MACxC,IAAGF,CAAC,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAET,IAAI,GAAG,CAACM,CAAC;IACxC;EACJ;EAEA,OAAON,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}