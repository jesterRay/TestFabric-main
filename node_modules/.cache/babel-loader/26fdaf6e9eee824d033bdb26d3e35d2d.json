{"ast":null,"code":"// index.ts\nimport { point } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nfunction centroid(geojson) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let xSum = 0;\n  let ySum = 0;\n  let len = 0;\n  coordEach(geojson, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  }, true);\n  return point([xSum / len, ySum / len], options.properties);\n}\nvar turf_centroid_default = centroid;\nexport { centroid, turf_centroid_default as default };","map":{"version":3,"sources":["../../index.ts"],"names":[],"mappings":";AACA,SAAS,KAAA,QAAyB,eAAA;AAClC,SAAS,SAAA,QAAiB,YAAA;AAkB1B,SAAS,QAAA,CACP,OAAA,EAImB;EAAA,IAHnB,OAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAEI,CAAC,CAAA;EAEL,IAAI,IAAA,GAAO,CAAA;EACX,IAAI,IAAA,GAAO,CAAA;EACX,IAAI,GAAA,GAAM,CAAA;EACV,SAAA,CACE,OAAA,EACA,UAAU,KAAA,EAAO;IACf,IAAA,IAAQ,KAAA,CAAM,CAAC,CAAA;IACf,IAAA,IAAQ,KAAA,CAAM,CAAC,CAAA;IACf,GAAA,EAAA;EACF,CAAA,EACA,IACF,CAAA;EACA,OAAO,KAAA,CAAM,CAAC,IAAA,GAAO,GAAA,EAAK,IAAA,GAAO,GAAG,CAAA,EAAG,OAAA,CAAQ,UAAU,CAAA;AAC3D;AAGA,IAAO,qBAAA,GAAQ,QAAA","sourcesContent":["import { Feature, GeoJsonProperties, Point } from \"geojson\";\nimport { point, AllGeoJSON } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\n\n/**\n * Computes the centroid as the mean of all vertices within the object.\n *\n * @function\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input object\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid<P extends GeoJsonProperties = GeoJsonProperties>(\n  geojson: AllGeoJSON,\n  options: {\n    properties?: P;\n  } = {}\n): Feature<Point, P> {\n  let xSum = 0;\n  let ySum = 0;\n  let len = 0;\n  coordEach(\n    geojson,\n    function (coord) {\n      xSum += coord[0];\n      ySum += coord[1];\n      len++;\n    },\n    true\n  );\n  return point([xSum / len, ySum / len], options.properties);\n}\n\nexport { centroid };\nexport default centroid;\n"]},"metadata":{},"sourceType":"module"}