{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Registry = require('../../registry');\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar axisIds = require('../../plots/cartesian/axis_ids');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\nvar constants = require('./constants');\nvar getUpdateObject = require('./get_update_object');\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var selectors = fullLayout._infolayer.selectAll('.rangeselector').data(makeSelectorData(gd), selectorKeyFunc);\n  selectors.enter().append('g').classed('rangeselector', true);\n  selectors.exit().remove();\n  selectors.style({\n    cursor: 'pointer',\n    'pointer-events': 'all'\n  });\n  selectors.each(function (d) {\n    var selector = d3.select(this);\n    var axisLayout = d;\n    var selectorLayout = axisLayout.rangeselector;\n    var buttons = selector.selectAll('g.button').data(Lib.filterVisible(selectorLayout.buttons));\n    buttons.enter().append('g').classed('button', true);\n    buttons.exit().remove();\n    buttons.each(function (d) {\n      var button = d3.select(this);\n      var update = getUpdateObject(axisLayout, d);\n      d._isActive = isActive(axisLayout, d, update);\n      button.call(drawButtonRect, selectorLayout, d);\n      button.call(drawButtonText, selectorLayout, d, gd);\n      button.on('click', function () {\n        if (gd._dragged) return;\n        Registry.call('_guiRelayout', gd, update);\n      });\n      button.on('mouseover', function () {\n        d._isHovered = true;\n        button.call(drawButtonRect, selectorLayout, d);\n      });\n      button.on('mouseout', function () {\n        d._isHovered = false;\n        button.call(drawButtonRect, selectorLayout, d);\n      });\n    });\n    reposition(gd, buttons, selectorLayout, axisLayout._name, selector);\n  });\n};\nfunction makeSelectorData(gd) {\n  var axes = axisIds.list(gd, 'x', true);\n  var data = [];\n  for (var i = 0; i < axes.length; i++) {\n    var axis = axes[i];\n    if (axis.rangeselector && axis.rangeselector.visible) {\n      data.push(axis);\n    }\n  }\n  return data;\n}\nfunction selectorKeyFunc(d) {\n  return d._id;\n}\nfunction isActive(axisLayout, opts, update) {\n  if (opts.step === 'all') {\n    return axisLayout.autorange === true;\n  } else {\n    var keys = Object.keys(update);\n    return axisLayout.range[0] === update[keys[0]] && axisLayout.range[1] === update[keys[1]];\n  }\n}\nfunction drawButtonRect(button, selectorLayout, d) {\n  var rect = Lib.ensureSingle(button, 'rect', 'selector-rect', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  rect.attr({\n    rx: constants.rx,\n    ry: constants.ry\n  });\n  rect.call(Color.stroke, selectorLayout.bordercolor).call(Color.fill, getFillColor(selectorLayout, d)).style('stroke-width', selectorLayout.borderwidth + 'px');\n}\nfunction getFillColor(selectorLayout, d) {\n  return d._isActive || d._isHovered ? selectorLayout.activecolor : selectorLayout.bgcolor;\n}\nfunction drawButtonText(button, selectorLayout, d, gd) {\n  function textLayout(s) {\n    svgTextUtils.convertToTspans(s, gd);\n  }\n  var text = Lib.ensureSingle(button, 'text', 'selector-text', function (s) {\n    s.attr('text-anchor', 'middle');\n  });\n  text.call(Drawing.font, selectorLayout.font).text(getLabel(d, gd._fullLayout._meta)).call(textLayout);\n}\nfunction getLabel(opts, _meta) {\n  if (opts.label) {\n    return _meta ? Lib.templateString(opts.label, _meta) : opts.label;\n  }\n  if (opts.step === 'all') return 'all';\n  return opts.count + opts.step.charAt(0);\n}\nfunction reposition(gd, buttons, opts, axName, selector) {\n  var width = 0;\n  var height = 0;\n  var borderWidth = opts.borderwidth;\n  buttons.each(function () {\n    var button = d3.select(this);\n    var text = button.select('.selector-text');\n    var tHeight = opts.font.size * LINE_SPACING;\n    var hEff = Math.max(tHeight * svgTextUtils.lineCount(text), 16) + 3;\n    height = Math.max(height, hEff);\n  });\n  buttons.each(function () {\n    var button = d3.select(this);\n    var rect = button.select('.selector-rect');\n    var text = button.select('.selector-text');\n    var tWidth = text.node() && Drawing.bBox(text.node()).width;\n    var tHeight = opts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var wEff = Math.max(tWidth + 10, constants.minButtonWidth);\n\n    // TODO add MathJax support\n\n    // TODO add buttongap attribute\n\n    button.attr('transform', strTranslate(borderWidth + width, borderWidth));\n    rect.attr({\n      x: 0,\n      y: 0,\n      width: wEff,\n      height: height\n    });\n    svgTextUtils.positionText(text, wEff / 2, height / 2 - (tLines - 1) * tHeight / 2 + 3);\n    width += wEff + 5;\n  });\n  var graphSize = gd._fullLayout._size;\n  var lx = graphSize.l + graphSize.w * opts.x;\n  var ly = graphSize.t + graphSize.h * (1 - opts.y);\n  var xanchor = 'left';\n  if (Lib.isRightAnchor(opts)) {\n    lx -= width;\n    xanchor = 'right';\n  }\n  if (Lib.isCenterAnchor(opts)) {\n    lx -= width / 2;\n    xanchor = 'center';\n  }\n  var yanchor = 'top';\n  if (Lib.isBottomAnchor(opts)) {\n    ly -= height;\n    yanchor = 'bottom';\n  }\n  if (Lib.isMiddleAnchor(opts)) {\n    ly -= height / 2;\n    yanchor = 'middle';\n  }\n  width = Math.ceil(width);\n  height = Math.ceil(height);\n  lx = Math.round(lx);\n  ly = Math.round(ly);\n  Plots.autoMargin(gd, axName + '-range-selector', {\n    x: opts.x,\n    y: opts.y,\n    l: width * FROM_TL[xanchor],\n    r: width * FROM_BR[xanchor],\n    b: height * FROM_BR[yanchor],\n    t: height * FROM_TL[yanchor]\n  });\n  selector.attr('transform', strTranslate(lx, ly));\n}","map":{"version":3,"names":["d3","require","Registry","Plots","Color","Drawing","Lib","strTranslate","svgTextUtils","axisIds","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","constants","getUpdateObject","module","exports","draw","gd","fullLayout","_fullLayout","selectors","_infolayer","selectAll","data","makeSelectorData","selectorKeyFunc","enter","append","classed","exit","remove","style","cursor","each","d","selector","select","axisLayout","selectorLayout","rangeselector","buttons","filterVisible","button","update","_isActive","isActive","call","drawButtonRect","drawButtonText","on","_dragged","_isHovered","reposition","_name","axes","list","i","length","axis","visible","push","_id","opts","step","autorange","keys","Object","range","rect","ensureSingle","s","attr","rx","ry","stroke","bordercolor","fill","getFillColor","borderwidth","activecolor","bgcolor","textLayout","convertToTspans","text","font","getLabel","_meta","label","templateString","count","charAt","axName","width","height","borderWidth","tHeight","size","hEff","Math","max","lineCount","tWidth","node","bBox","tLines","wEff","minButtonWidth","x","y","positionText","graphSize","_size","lx","l","w","ly","t","h","xanchor","isRightAnchor","isCenterAnchor","yanchor","isBottomAnchor","isMiddleAnchor","ceil","round","autoMargin","r","b"],"sources":["E:/tog_workspace/TestFabric_main/TestFabric-main/node_modules/plotly.js/src/components/rangeselector/draw.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Registry = require('../../registry');\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar axisIds = require('../../plots/cartesian/axis_ids');\n\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar constants = require('./constants');\nvar getUpdateObject = require('./get_update_object');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n\n    var selectors = fullLayout._infolayer.selectAll('.rangeselector')\n        .data(makeSelectorData(gd), selectorKeyFunc);\n\n    selectors.enter().append('g')\n        .classed('rangeselector', true);\n\n    selectors.exit().remove();\n\n    selectors.style({\n        cursor: 'pointer',\n        'pointer-events': 'all'\n    });\n\n    selectors.each(function(d) {\n        var selector = d3.select(this);\n        var axisLayout = d;\n        var selectorLayout = axisLayout.rangeselector;\n\n        var buttons = selector.selectAll('g.button')\n            .data(Lib.filterVisible(selectorLayout.buttons));\n\n        buttons.enter().append('g')\n            .classed('button', true);\n\n        buttons.exit().remove();\n\n        buttons.each(function(d) {\n            var button = d3.select(this);\n            var update = getUpdateObject(axisLayout, d);\n\n            d._isActive = isActive(axisLayout, d, update);\n\n            button.call(drawButtonRect, selectorLayout, d);\n            button.call(drawButtonText, selectorLayout, d, gd);\n\n            button.on('click', function() {\n                if(gd._dragged) return;\n\n                Registry.call('_guiRelayout', gd, update);\n            });\n\n            button.on('mouseover', function() {\n                d._isHovered = true;\n                button.call(drawButtonRect, selectorLayout, d);\n            });\n\n            button.on('mouseout', function() {\n                d._isHovered = false;\n                button.call(drawButtonRect, selectorLayout, d);\n            });\n        });\n\n        reposition(gd, buttons, selectorLayout, axisLayout._name, selector);\n    });\n};\n\nfunction makeSelectorData(gd) {\n    var axes = axisIds.list(gd, 'x', true);\n    var data = [];\n\n    for(var i = 0; i < axes.length; i++) {\n        var axis = axes[i];\n\n        if(axis.rangeselector && axis.rangeselector.visible) {\n            data.push(axis);\n        }\n    }\n\n    return data;\n}\n\nfunction selectorKeyFunc(d) {\n    return d._id;\n}\n\nfunction isActive(axisLayout, opts, update) {\n    if(opts.step === 'all') {\n        return axisLayout.autorange === true;\n    } else {\n        var keys = Object.keys(update);\n\n        return (\n            axisLayout.range[0] === update[keys[0]] &&\n            axisLayout.range[1] === update[keys[1]]\n        );\n    }\n}\n\nfunction drawButtonRect(button, selectorLayout, d) {\n    var rect = Lib.ensureSingle(button, 'rect', 'selector-rect', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n\n    rect.attr({\n        rx: constants.rx,\n        ry: constants.ry\n    });\n\n    rect.call(Color.stroke, selectorLayout.bordercolor)\n        .call(Color.fill, getFillColor(selectorLayout, d))\n        .style('stroke-width', selectorLayout.borderwidth + 'px');\n}\n\nfunction getFillColor(selectorLayout, d) {\n    return (d._isActive || d._isHovered) ?\n        selectorLayout.activecolor :\n        selectorLayout.bgcolor;\n}\n\nfunction drawButtonText(button, selectorLayout, d, gd) {\n    function textLayout(s) {\n        svgTextUtils.convertToTspans(s, gd);\n    }\n\n    var text = Lib.ensureSingle(button, 'text', 'selector-text', function(s) {\n        s.attr('text-anchor', 'middle');\n    });\n\n    text.call(Drawing.font, selectorLayout.font)\n        .text(getLabel(d, gd._fullLayout._meta))\n        .call(textLayout);\n}\n\nfunction getLabel(opts, _meta) {\n    if(opts.label) {\n        return _meta ?\n            Lib.templateString(opts.label, _meta) :\n            opts.label;\n    }\n\n    if(opts.step === 'all') return 'all';\n\n    return opts.count + opts.step.charAt(0);\n}\n\nfunction reposition(gd, buttons, opts, axName, selector) {\n    var width = 0;\n    var height = 0;\n\n    var borderWidth = opts.borderwidth;\n\n    buttons.each(function() {\n        var button = d3.select(this);\n        var text = button.select('.selector-text');\n\n        var tHeight = opts.font.size * LINE_SPACING;\n        var hEff = Math.max(tHeight * svgTextUtils.lineCount(text), 16) + 3;\n\n        height = Math.max(height, hEff);\n    });\n\n    buttons.each(function() {\n        var button = d3.select(this);\n        var rect = button.select('.selector-rect');\n        var text = button.select('.selector-text');\n\n        var tWidth = text.node() && Drawing.bBox(text.node()).width;\n        var tHeight = opts.font.size * LINE_SPACING;\n        var tLines = svgTextUtils.lineCount(text);\n\n        var wEff = Math.max(tWidth + 10, constants.minButtonWidth);\n\n        // TODO add MathJax support\n\n        // TODO add buttongap attribute\n\n        button.attr('transform', strTranslate(borderWidth + width, borderWidth));\n\n        rect.attr({\n            x: 0,\n            y: 0,\n            width: wEff,\n            height: height\n        });\n\n        svgTextUtils.positionText(text, wEff / 2,\n            height / 2 - ((tLines - 1) * tHeight / 2) + 3);\n\n        width += wEff + 5;\n    });\n\n    var graphSize = gd._fullLayout._size;\n    var lx = graphSize.l + graphSize.w * opts.x;\n    var ly = graphSize.t + graphSize.h * (1 - opts.y);\n\n    var xanchor = 'left';\n    if(Lib.isRightAnchor(opts)) {\n        lx -= width;\n        xanchor = 'right';\n    }\n    if(Lib.isCenterAnchor(opts)) {\n        lx -= width / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(Lib.isBottomAnchor(opts)) {\n        ly -= height;\n        yanchor = 'bottom';\n    }\n    if(Lib.isMiddleAnchor(opts)) {\n        ly -= height / 2;\n        yanchor = 'middle';\n    }\n\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    lx = Math.round(lx);\n    ly = Math.round(ly);\n\n    Plots.autoMargin(gd, axName + '-range-selector', {\n        x: opts.x,\n        y: opts.y,\n        l: width * FROM_TL[xanchor],\n        r: width * FROM_BR[xanchor],\n        b: height * FROM_BR[yanchor],\n        t: height * FROM_TL[yanchor]\n    });\n\n    selector.attr('transform', strTranslate(lx, ly));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}